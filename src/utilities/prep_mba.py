import sysfrom os import listdirfrom os.path import isfile, joininputFolder = "../../dataset/original_mba_files/" outputFolder = "../../dataset/prepped_mba_files/" lokiOpDict = {"add": "(x + y)",              "sub": "(x - y)",              "xor": "(x ^ y)",              "and": "(x & y)",              "or": "(x | y)"              }headerStr = "#number;groundtruth;mba"delimiter = ";"def prep_loki(filename):    infile = open(inputFolder + filename, "r")    outfile = open(outputFolder + filename, "w")            # for each line in the input file:        # if it's a header line, skip, else write groundtruth + delimiter + mba    lines = infile.readlines()    infile.close()        outfile.write(headerStr + "\n")        gt_str = ""        if "xor" in filename:        gt_str = lokiOpDict["xor"]    else:            for k in lokiOpDict.keys():            if k in filename:                gt_str = lokiOpDict[k]                            if gt_str == "":        print("Error: couldn't parse Loki op for file: ", filename)        exit(1)            number = 1    for l in lines:        if "#" in l:            continue                outfile.write(str(number) + delimiter + gt_str + delimiter + l.rstrip() + "\n")        number += 1            outfile.close()        returndef prep_qsynth(filename):    infile = open(inputFolder + filename, "r")    outfile = open(outputFolder + filename, "w")            # for each line in the input file:        # if it's a header line, skip, else write groundtruth + delimiter + mba    lines = infile.readlines()    infile.close()        outfile.write(headerStr + "\n")        gt_str = ""            number = 1    for l in lines:        if "#" in l:            continue        l = l.rstrip()        components = l.split(",")                gt_str = components[1]        mba_str = components[0]                outfile.write(str(number) + delimiter + gt_str + delimiter + mba_str + "\n")        number += 1            outfile.close()        return            def prep_poly(filename):    infile = open(inputFolder + filename, "r")    outfile = open(outputFolder + filename, "w")            # for each line in the input file:        # if it's a header line, skip, else write groundtruth + delimiter + mba    lines = infile.readlines()    infile.close()        outfile.write(headerStr + "\n")        gt_str = ""            number = 1    for l in lines:        if "#" in l:            continue        l = l.rstrip()        components = l.split(",")                gt_str = components[1]        mba_str = components[0]                outfile.write(str(number) + delimiter + gt_str + delimiter + mba_str + "\n")        number += 1            outfile.close()            returnif __name__ == "__main__":    mypath = inputFolder    # get all files in folder       onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]        #print("debug: ")    #print(onlyfiles)            for f in onlyfiles:        if "qsynth" in f:            prep_qsynth(f)                                elif f[0] == "L":            prep_loki(f)                                elif "poly" in f:            prep_poly(f)                            