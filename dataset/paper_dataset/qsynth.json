{
    "name": "qsynth",
    "entries": [
        {
            "num": 1,
            "gt": {
                "expr": "((((d-c)^d)^(c|d)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((d & ~ c) - (~ d & c)) | d) - (((d & ~ c) - (~ d & c)) & d)) | (((c + d) + 1) + ((- c - 1) | (- d - 1)))) - (((((d & ~ c) - (~ d & c)) | d) - (((d & ~ c) - (~ d & c)) & d)) & (((c + d) + 1) + ((- c - 1) | (- d - 1))))",
                "attributes": {
                    "numOps": 45,
                    "nestedExprLevel": 25,
                    "numDAGs": 19,
                    "opsPercentages": {
                        "arithmetic": 46.666666666666664,
                        "mul": 0.0,
                        "bitwise": 53.333333333333336
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(c & d) + d + c + 1 ^ (~c & d) - (~d & c) ^ d",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 73.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((c - (c & d)) + d | ((~c & d) - (~d & c) | d) - ((~c & d) - (~d & c) & d)) - ((c - (c & d)) + d & ((~c & d) - (~d & c) | d) - ((~c & d) - (~d & c) & d))",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 13,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 22.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 31.428571428571427,
                            "mul": 0.0,
                            "bitwise": 68.57142857142857
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~c & d) - (~d & c) ^ ~d & c",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 82.22222222222221,
                        "opsPercentages": {
                            "arithmetic": 12.5,
                            "mul": 0.0,
                            "bitwise": 87.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d & (c ^ 0xffffffff)) - ((d ^ 0xffffffff) & c) | d) - ((d & (c ^ 0xffffffff)) - ((d ^ 0xffffffff) & c) & d) | c + d + 1 + (0xffffffff - c | 0xffffffff - d)) - (((d & (c ^ 0xffffffff)) - ((d ^ 0xffffffff) & c) | d) - ((d & (c ^ 0xffffffff)) - ((d ^ 0xffffffff) & c) & d) & c + d + 1 + (0xffffffff - c | 0xffffffff - d))",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 17,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 8.88888888888889,
                        "opsPercentages": {
                            "arithmetic": 41.46341463414634,
                            "mul": 0.0,
                            "bitwise": 58.536585365853654
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_default": {
                    "expr": "(((~c & d) - (~d & c) | d) - ((~c & d) - (~d & c) & d) | c + d + 1 + (0xffffffff - c | 0xffffffff - d)) - (((~c & d) - (~d & c) | d) - ((~c & d) - (~d & c) & d) & c + d + 1 + (0xffffffff - c | 0xffffffff - d))",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 12,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 8.88888888888889,
                        "opsPercentages": {
                            "arithmetic": 41.46341463414634,
                            "mul": 0.0,
                            "bitwise": 58.536585365853654
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~c & d) - (~d & c) ^ (c + d) - (c & d) ^ d",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 77.77777777777779,
                        "opsPercentages": {
                            "arithmetic": 30.0,
                            "mul": 0.0,
                            "bitwise": 70.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 2,
            "gt": {
                "expr": "((((a+d)&a)^(a+c)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(((((~ (((a ^ ~ d) + ((a | d) + (a | d))) + 1) | a) + (((a ^ ~ d) + ((a | d) + (a | d))) + 1)) + 1) - ((a ^ c) + ((a & c) + (a & c)))) - (((((~ (((a ^ ~ d) + ((a | d) + (a | d))) + 1) | a) + (((a ^ ~ d) + ((a | d) + (a | d))) + 1)) + 1) | ~ ((a ^ c) + ((a & c) + (a & c)))) + ((((~ (((a ^ ~ d) + ((a | d) + (a | d))) + 1) | a) + (((a ^ ~ d) + ((a | d) + (a | d))) + 1)) + 1) | ~ ((a ^ c) + ((a & c) + (a & c)))))) - 2",
                "attributes": {
                    "numOps": 77,
                    "nestedExprLevel": 48,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 44.15584415584416,
                        "mul": 0.0,
                        "bitwise": 55.84415584415584
                    },
                    "percentageDAGsCancel": 5.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((a | d) * 2 + ~(d ^ a) + (((d ^ a) + (a | d) * -2) - 1 | a)) - ((a & c) * 2 + (a ^ c))) + (~((a & c) * 2 + (a ^ c)) | (a | d) * 2 + ~(d ^ a) + (((d ^ a) + (a | d) * -2) - 1 | a) + 2) * -2",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 16,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 46.75324675324675,
                        "opsPercentages": {
                            "arithmetic": 39.02439024390244,
                            "mul": 17.073170731707318,
                            "bitwise": 43.90243902439025
                        },
                        "percentageDAGsCancel": 9.523809523809524
                    }
                },
                "msvc_O1": {
                    "expr": "~(a | d * 2 + 1 + ~d ^ a) | a + (((a | d - (~((a ^ c) + (a & c) * 2) | ~d ^ a + 2 + ~(a | d * 2 + 1 + ~d ^ a) | a + a | d * 2)) - (a & c)) * 2 - (a ^ c)) + ~d ^ a",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 9,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 48.05194805194805,
                        "opsPercentages": {
                            "arithmetic": 32.5,
                            "mul": 12.5,
                            "bitwise": 55.00000000000001
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "clang_O3": {
                    "expr": "((d | a) * 2 - (d ^ a) + (~(d | a) * 2 - (d ^ a) | a) + 1 - (c ^ a) + (c & a) * 2) + (~(c ^ a) + (c & a) * 2 | (d | a) * 2 - (d ^ a) + (~(d | a) * 2 - (d ^ a) | a) + 1) * -2 + -2",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 11,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 48.05194805194805,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 17.5,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((a ^ d ^ 0xffffffff) + (a | d) + (a | d) + 1 ^ 0xffffffff | a) + (a ^ d ^ 0xffffffff) + (a | d) + (a | d)) - ((a ^ c) + (a & c) + (a & c))) - ((((a ^ d ^ 0xffffffff) + (a | d) + (a | d) + 1 ^ 0xffffffff | a) + (a ^ d ^ 0xffffffff) + (a | d) + (a | d) + 2 | (a ^ c) + (a & c) + (a & c) ^ 0xffffffff) + (((a ^ d ^ 0xffffffff) + (a | d) + (a | d) + 1 ^ 0xffffffff | a) + (a ^ d ^ 0xffffffff) + (a | d) + (a | d) + 2 | (a ^ c) + (a & c) + (a & c) ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 23,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 6.493506493506493,
                        "opsPercentages": {
                            "arithmetic": 40.27777777777778,
                            "mul": 0.0,
                            "bitwise": 59.72222222222222
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((~((~d ^ a) + 1 + (a | d) + (a | d)) | a) + (~d ^ a) + (a | d) + (a | d)) - ((a ^ c) + (a & c) + (a & c))) - (((~((~d ^ a) + 1 + (a | d) + (a | d)) | a) + 2 + (~d ^ a) + (a | d) + (a | d) | ~((a ^ c) + (a & c) + (a & c))) + ((~((~d ^ a) + 1 + (a | d) + (a | d)) | a) + 2 + (~d ^ a) + (a | d) + (a | d) | ~((a ^ c) + (a & c) + (a & c))))",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 28,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 6.493506493506493,
                        "opsPercentages": {
                            "arithmetic": 40.27777777777778,
                            "mul": 0.0,
                            "bitwise": 59.72222222222222
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((((d ^ a) + (d | a) * -2) - 1 | a) + 1 + ((d | a) * 2 - (d ^ a)) - (a ^ c) + (a & c) * 2) + (~(a ^ c) + (a & c) * 2 | (((d ^ a) + (d | a) * -2) - 1 | a) + 1 + ((d | a) * 2 - (d ^ a))) * -2 + -2",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 15,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 45.45454545454545,
                        "opsPercentages": {
                            "arithmetic": 45.23809523809524,
                            "mul": 16.666666666666664,
                            "bitwise": 38.095238095238095
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 3,
            "gt": {
                "expr": "(((-(b^c))|((c|c)*b)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 20.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((~ ((b | c) - (b & c)) + 1) + (((((c + c) + 1) + ((- c - 1) | (- c - 1))) & b) * ((((c + c) + 1) + ((- c - 1) | (- c - 1))) | b) + ((((c + c) + 1) + ((- c - 1) | (- c - 1))) & ~ b) * (~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) & b))) + 1) + ((- (~ ((b | c) - (b & c)) + 1) - 1) | (- (((((c + c) + 1) + ((- c - 1) | (- c - 1))) & b) * ((((c + c) + 1) + ((- c - 1) | (- c - 1))) | b) + ((((c + c) + 1) + ((- c - 1) | (- c - 1))) & ~ b) * (~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) & b)) - 1))",
                "attributes": {
                    "numOps": 100,
                    "nestedExprLevel": 54,
                    "numDAGs": 28,
                    "opsPercentages": {
                        "arithmetic": 69.0,
                        "mul": 4.0,
                        "bitwise": 27.0
                    },
                    "percentageDAGsCancel": 7.142857142857142
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~((-c - 1 & b) * (c * 2 + 1 + ~c & ~b) + (~c + c * 2 + 1 & b) * (~c + c * 2 + 1 | b)) | (b ^ c) - 1) + (((~c + c * 2 + 1 & b) * (~c + c * 2 + 1 | b) + (-c - 1 & b) * (c * 2 + 1 + ~c & ~b)) - (b ^ c)) + 1",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 10,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 48.0,
                        "opsPercentages": {
                            "arithmetic": 42.30769230769231,
                            "mul": 19.230769230769234,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_O1": {
                    "expr": "(~c & b) * (~b & c) + 2 + ~(b | c) - (b & c) + (~(~c & b) * (~b & c) - (b & c) * (b | c) | (b | c) - (b & c) - 1) + (b & c) * (b | c)",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 8,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 69.0,
                        "opsPercentages": {
                            "arithmetic": 25.806451612903224,
                            "mul": 12.903225806451612,
                            "bitwise": 61.29032258064516
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_O3": {
                    "expr": "((~c & b) * (~b & c) + (c & b) * (c | b) - (c ^ b)) + (~(~c & b) * (~b & c) + (c & b) * (c | b) | (c ^ b) - 1) + 1",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 8,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 74.0,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 15.384615384615385,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "clang_default": {
                    "expr": "((b | c) - (b & c) ^ 0xffffffff) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) & b) * (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | b) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) & (b ^ 0xffffffff)) * ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff) & b) + 2 + (0xffffffff - (((b | c) - (b & c) ^ 0xffffffff) + 1) | 0xffffffff - ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) & b) * (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | b) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) & (b ^ 0xffffffff)) * ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff) & b)))",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 21,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 19.0,
                        "opsPercentages": {
                            "arithmetic": 51.85185185185185,
                            "mul": 14.814814814814813,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_default": {
                    "expr": "~((b | c) - (b & c)) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) & b) * (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | b) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) & ~b) * (~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) & b) + 2 + (0xffffffff - (~((b | c) - (b & c)) + 1) | 0xffffffff - ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) & b) * (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | b) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) & ~b) * (~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) & b)))",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 19,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 19.0,
                        "opsPercentages": {
                            "arithmetic": 51.85185185185185,
                            "mul": 14.814814814814813,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "gcc_O3": {
                    "expr": "((c ^ b) - 1 | ~(~b & c) * (-c - 1 & b) + (c & b) * (c | b)) + 1 + ((~b & c) * (-c - 1 & b) + (c & b) * (c | b) - (c ^ b))",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 8,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 72.0,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 14.285714285714285,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                }
            }
        },
        {
            "num": 4,
            "gt": {
                "expr": "((~(((b*d)^c)+((c+d)^d))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 16.666666666666664,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "- ((((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) - c) - ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | ~ c) << 1)) - 2) | ((((c - ~ d) - 1) | d) - (((c - ~ d) - 1) & d))) << 1) - ((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) - c) - ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | ~ c) << 1)) - 2) ^ ((((c - ~ d) - 1) | d) - (((c - ~ d) - 1) & d)))) - 1",
                "attributes": {
                    "numOps": 72,
                    "nestedExprLevel": 38,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 31.944444444444443,
                        "mul": 11.11111111111111,
                        "bitwise": 56.94444444444444
                    },
                    "percentageDAGsCancel": 3.8461538461538463
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((((~b & d) * (~d & b) + (b & d) * (b | d)) - c) + (~c | (b & d) * (b | d) + (~b & d) * (~d & b)) * -2) - 2 ^ (c - ~d) - 1 ^ d) + ((c - ~d) - 1 ^ d | ((((~b & d) * (~d & b) + (b & d) * (b | d)) - c) + (~c | (b & d) * (b | d) + (~b & d) * (~d & b)) * -2) - 2) * -2 + -1",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 19,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 9.722222222222223,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 16.923076923076923,
                            "bitwise": 52.307692307692314
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((c + d | d) - (c + d & d) ^ (~d & b) * (~b & d) + -2 + (((b | d) * (b & d) - (((b | d) * (b & d) + (~d & b) * (~b & d)) * 2 | ~c * 2)) - c)) - ((c + d * 2 | d * 2) + (c + d & d) * -2 | (~d & b) * (~b & d) + -2 + (((b | d) * (b & d) - (((b | d) * (b & d) + (~d & b) * (~b & d)) * 2 | ~c * 2)) - c) * 2)) + -1",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 22,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 30.555555555555557,
                            "mul": 22.22222222222222,
                            "bitwise": 47.22222222222222
                        },
                        "percentageDAGsCancel": 2.941176470588235
                    }
                },
                "clang_O3": {
                    "expr": "~(((((~d & b) * (~b & d) + (d | b) * (d & b) - c) + (~c | (~d & b) * (~b & d) + (d | b) * (d & b)) * -2) - 2 | d) * 2) + (d ^ (((~d & b) * (~b & d) + (d | b) * (d & b) - c) + (~c | (~d & b) * (~b & d) + (d | b) * (d & b)) * -2) - 2)",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 18,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 23.61111111111111,
                        "opsPercentages": {
                            "arithmetic": 23.636363636363637,
                            "mul": 20.0,
                            "bitwise": 56.36363636363636
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d)) - c) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | c ^ 0xffffffff) * -2) - 2 | ((c - (d ^ 0xffffffff)) - 1 | d) - ((c - (d ^ 0xffffffff)) - 1 & d)) * 2 - (((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d)) - c) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | c ^ 0xffffffff) * -2) - 2 ^ ((c - (d ^ 0xffffffff)) - 1 | d) - ((c - (d ^ 0xffffffff)) - 1 & d)))",
                    "attributes": {
                        "numOps": 74,
                        "nestedExprLevel": 33,
                        "numDAGs": 27,
                        "percentDecreaseByOps": -2.7777777777777777,
                        "opsPercentages": {
                            "arithmetic": 33.78378378378378,
                            "mul": 14.864864864864865,
                            "bitwise": 51.35135135135135
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((((((b & d) * (b | d) + (~d & b) * (~b & d)) - c) + ((b & d) * (b | d) + (~d & b) * (~b & d) | ~c) * -2) - 2 | ((c - ~d) - 1 | d) - ((c - ~d) - 1 & d)) * 2 - (((((b & d) * (b | d) + (~d & b) * (~b & d)) - c) + ((b & d) * (b | d) + (~d & b) * (~b & d) | ~c) * -2) - 2 ^ ((c - ~d) - 1 | d) - ((c - ~d) - 1 & d)))",
                    "attributes": {
                        "numOps": 74,
                        "nestedExprLevel": 25,
                        "numDAGs": 27,
                        "percentDecreaseByOps": -2.7777777777777777,
                        "opsPercentages": {
                            "arithmetic": 33.78378378378378,
                            "mul": 14.864864864864865,
                            "bitwise": 51.35135135135135
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "gcc_O3": {
                    "expr": "((((~b & d) * (~d & b) + (b & d) * (b | d) - c) + (~c | (~b & d) * (~d & b) + (b & d) * (b | d)) * -2) - 2 ^ d) + ((((~b & d) * (~d & b) + (b & d) * (b | d) - c) + (~c | (~b & d) * (~d & b) + (b & d) * (b | d)) * -2) - 2 | d) * -2 + -1",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 17,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 20.833333333333336,
                        "opsPercentages": {
                            "arithmetic": 28.07017543859649,
                            "mul": 19.298245614035086,
                            "bitwise": 52.63157894736842
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 5,
            "gt": {
                "expr": "((e+(c+(-(c-c)))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 100.0,
                        "mul": 0.0,
                        "bitwise": 0.0
                    },
                    "percentageDAGsCancel": 75.0
                }
            },
            "mba": {
                "expr": "((e | (((c ^ ~ (~ (((c ^ c) - ((~ c & c) << 1)) - 1))) + ((c | ~ (((c ^ c) - ((~ c & c) << 1)) - 1)) << 1)) + 1)) << 1) - (e ^ (((c ^ ~ (~ (((c ^ c) - ((~ c & c) << 1)) - 1))) + ((c | ~ (((c ^ c) - ((~ c & c) << 1)) - 1)) << 1)) + 1))",
                "attributes": {
                    "numOps": 44,
                    "nestedExprLevel": 29,
                    "numDAGs": 17,
                    "opsPercentages": {
                        "arithmetic": 29.545454545454547,
                        "mul": 0.0,
                        "bitwise": 70.45454545454545
                    },
                    "percentageDAGsCancel": 47.05882352941176
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c * 2 + ~c + 1 | e) * 2 - (c * 2 + ~c + 1 ^ e)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 2,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 72.72727272727273,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 25.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_O1": {
                    "expr": "((~c + c * 2) * 2 + 2 | e * 2) - (~c + c * 2 + 1 ^ e)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 70.45454545454545,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 30.76923076923077,
                            "bitwise": 30.76923076923077
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_O3": {
                    "expr": "(e | c) * 2 - (e ^ c)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 90.9090909090909,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(e | (c ^ ((c ^ 0xffffffff) & c) * -2 - 1) + (c | ((c ^ 0xffffffff) & c) * -2 - 1 ^ 0xffffffff) * 2 + 1) * 2 - (e ^ (c ^ ((c ^ 0xffffffff) & c) * -2 - 1) + (c | ((c ^ 0xffffffff) & c) * -2 - 1 ^ 0xffffffff) * 2 + 1)",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 12,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 18.181818181818183,
                        "opsPercentages": {
                            "arithmetic": 36.11111111111111,
                            "mul": 19.444444444444446,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "msvc_default": {
                    "expr": "((c ^ 0xffffffff) + 1 + c * 2 | e) * 2 - ((c ^ 0xffffffff) + 1 + c * 2 ^ e)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 72.72727272727273,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 25.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(e | c) * 2 - (c ^ e)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 90.9090909090909,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 6,
            "gt": {
                "expr": "(((-(d+(~b)))+d))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 0.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ (((d ^ ~ (- b - 1)) + ((d | (- b - 1)) + (d | (- b - 1)))) + 1) + 1) ^ d) + (((~ (((d ^ ~ (- b - 1)) + ((d | (- b - 1)) + (d | (- b - 1)))) + 1) + 1) & d) << 1)",
                "attributes": {
                    "numOps": 34,
                    "nestedExprLevel": 19,
                    "numDAGs": 14,
                    "opsPercentages": {
                        "arithmetic": 61.76470588235294,
                        "mul": 0.0,
                        "bitwise": 38.23529411764706
                    },
                    "percentageDAGsCancel": 7.142857142857142
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~((~b | d) * 2 + (d ^ b)) & d) * 2 + ~((~b | d) * 2 + (d ^ b) ^ d)",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 6,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 52.94117647058824,
                        "opsPercentages": {
                            "arithmetic": 18.75,
                            "mul": 18.75,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~((b ^ d) + 1 + (~b | d) * 2) * 2 + 2 & d * 2) + (~((b ^ d) + 1 + (~b | d) * 2) + 1 ^ d)",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 7,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 38.23529411764706,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 19.047619047619047,
                            "bitwise": 47.61904761904761
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_O3": {
                    "expr": "(~((d ^ b) + (~b | d) * 2) ^ d) + (~((d ^ b) + (~b | d) * 2) & d) * 2",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 7,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 52.94117647058824,
                        "opsPercentages": {
                            "arithmetic": 18.75,
                            "mul": 18.75,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d ^ 0xffffffff - b ^ 0xffffffff) + (d | 0xffffffff - b) + (d | 0xffffffff - b) + 1 ^ 0xffffffff) + 1 ^ d) + (((d ^ 0xffffffff - b ^ 0xffffffff) + (d | 0xffffffff - b) + (d | 0xffffffff - b) + 1 ^ 0xffffffff) + 1 & d) * 2",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 8,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 17.647058823529413,
                        "opsPercentages": {
                            "arithmetic": 53.57142857142857,
                            "mul": 3.571428571428571,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~((~(0xffffffff - b) ^ d) + 1 + (0xffffffff - b | d) + (0xffffffff - b | d)) + 1 ^ d) + (~((~(0xffffffff - b) ^ d) + 1 + (0xffffffff - b | d) + (0xffffffff - b | d)) + 1 & d) * 2",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 10,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 17.647058823529413,
                        "opsPercentages": {
                            "arithmetic": 53.57142857142857,
                            "mul": 3.571428571428571,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~((b ^ d) + (~b | d) * 2 ^ d) + (~(b ^ d) + (~b | d) * 2 & d) * 2",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 5,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 52.94117647058824,
                        "opsPercentages": {
                            "arithmetic": 18.75,
                            "mul": 18.75,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 7,
            "gt": {
                "expr": "((((-d)-(e^e))+((e*e)&(-(-e)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 62.5,
                        "mul": 12.5,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((((~ d + 1) & ~ ((e | e) - (e & e))) - (~ (~ d + 1) & ((e | e) - (e & e)))) - ~ ((~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) | (~ (~ (e - 1)) + 1)) - ~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) - 1",
                "attributes": {
                    "numOps": 44,
                    "nestedExprLevel": 19,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 27.27272727272727,
                        "mul": 9.090909090909092,
                        "bitwise": 63.63636363636363
                    },
                    "percentageDAGsCancel": 34.61538461538461
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-~(e * e & e) - d) + -1",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 84.0909090909091,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 14.285714285714285,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_O1": {
                    "expr": "~d + 2 + (~(e * e) | e) + e * e",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 25.0,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(e * e & e) - d",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 93.18181818181817,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 33.33333333333333,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(d ^ 0xffffffff) - ((e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff | e) - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 9,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 52.27272727272727,
                        "opsPercentages": {
                            "arithmetic": 19.047619047619047,
                            "mul": 19.047619047619047,
                            "bitwise": 61.904761904761905
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "msvc_default": {
                    "expr": "~d - ~((~(e * e) | e) - ~(e * e))",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 79.54545454545455,
                        "opsPercentages": {
                            "arithmetic": 22.22222222222222,
                            "mul": 22.22222222222222,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(e * e & e) - d",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 93.18181818181817,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 33.33333333333333,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 8,
            "gt": {
                "expr": "((((~c)*e)-((c-c)&(c+(e^e)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 14.285714285714285,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 57.14285714285714
                }
            },
            "mba": {
                "expr": "(((((- c - 1) & e) * ((- c - 1) | e) + ((- c - 1) & ~ e) * (~ (- c - 1) & e)) & ~ ((~ ((c & ~ c) - (~ c & c)) | ((c | ((e | e) - (e & e))) + (c & ((e | e) - (e & e))))) - ~ ((c & ~ c) - (~ c & c)))) + ((((- c - 1) & e) * ((- c - 1) | e) + ((- c - 1) & ~ e) * (~ (- c - 1) & e)) & ~ ((~ ((c & ~ c) - (~ c & c)) | ((c | ((e | e) - (e & e))) + (c & ((e | e) - (e & e))))) - ~ ((c & ~ c) - (~ c & c))))) - ((((- c - 1) & e) * ((- c - 1) | e) + ((- c - 1) & ~ e) * (~ (- c - 1) & e)) ^ ((~ ((c & ~ c) - (~ c & c)) | ((c | ((e | e) - (e & e))) + (c & ((e | e) - (e & e))))) - ~ ((c & ~ c) - (~ c & c))))",
                "attributes": {
                    "numOps": 127,
                    "nestedExprLevel": 59,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 37.00787401574803,
                        "mul": 4.724409448818897,
                        "bitwise": 58.26771653543307
                    },
                    "percentageDAGsCancel": 37.93103448275862
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c & e) * ~(c | e) + (~c & e) * (~c | e)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 92.1259842519685,
                        "opsPercentages": {
                            "arithmetic": 10.0,
                            "mul": 20.0,
                            "bitwise": 70.0
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "(~e & ~c) * (c & e) + (~c | e) * (~c & e)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 91.33858267716536,
                        "opsPercentages": {
                            "arithmetic": 9.090909090909092,
                            "mul": 18.181818181818183,
                            "bitwise": 72.72727272727273
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_O3": {
                    "expr": "(e & c) * (~e & ~c) + (~c | e) * (~c & e)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 91.33858267716536,
                        "opsPercentages": {
                            "arithmetic": 9.090909090909092,
                            "mul": 18.181818181818183,
                            "bitwise": 72.72727272727273
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_default": {
                    "expr": "(((0xffffffff - c & e) * (0xffffffff - c | e) + (0xffffffff - c & (e ^ 0xffffffff)) * ((0xffffffff - c ^ 0xffffffff) & e) & (((c & (c ^ 0xffffffff)) - ((c ^ 0xffffffff) & c) ^ 0xffffffff | c) - ((c & (c ^ 0xffffffff)) - ((c ^ 0xffffffff) & c) ^ 0xffffffff) ^ 0xffffffff)) + ((0xffffffff - c & e) * (0xffffffff - c | e) + (0xffffffff - c & (e ^ 0xffffffff)) * ((0xffffffff - c ^ 0xffffffff) & e) & (((c & (c ^ 0xffffffff)) - ((c ^ 0xffffffff) & c) ^ 0xffffffff | c ) - ((c & (c ^ 0xffffffff)) - ((c ^ 0xffffffff) & c) ^ 0xffffffff) ^ 0xffffffff))) - ((0xffffffff - c & e) * (0xffffffff - c | e) + (0xffffffff - c & (e ^ 0xffffffff)) * ((0xffffffff - c ^ 0xffffffff) & e) ^ ((c & (c ^ 0xffffffff)) - ((c ^ 0xffffffff) & c) ^ 0xffffffff | c) - ((c & (c ^ 0xffffffff)) - ((c ^ 0xffffffff) & c) ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 88,
                        "nestedExprLevel": 35,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 30.708661417322837,
                        "opsPercentages": {
                            "arithmetic": 29.545454545454547,
                            "mul": 6.8181818181818175,
                            "bitwise": 63.63636363636363
                        },
                        "percentageDAGsCancel": 22.727272727272727
                    }
                },
                "msvc_default": {
                    "expr": "((0xffffffff - c & e) * (0xffffffff - c | e) + (0xffffffff - c & ~e) * (~(0xffffffff - c) & e) + (0xffffffff - c & e) * (0xffffffff - c | e) + (0xffffffff - c & ~e) * (~(0xffffffff - c) & e)) - ((0xffffffff - c & e) * (0xffffffff - c | e) + (0xffffffff - c & ~e) * (~(0xffffffff - c) & e))",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 11,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 67.71653543307087,
                        "opsPercentages": {
                            "arithmetic": 41.46341463414634,
                            "mul": 14.634146341463413,
                            "bitwise": 43.90243902439025
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(e | c) * (c & e) + (~c | e) * (e & ~c)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 92.1259842519685,
                        "opsPercentages": {
                            "arithmetic": 10.0,
                            "mul": 20.0,
                            "bitwise": 70.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 9,
            "gt": {
                "expr": "(((a&(-(c+(-c))))|((-(d&a))&(~(d|d)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "((((~ a | (~ ((c - ~ (~ c + 1)) - 1) + 1)) - ~ a) + ((~ ((((~ d | a) + d) + 1) - 1) | (((d + d) + 1) + ((- d - 1) | (- d - 1)))) - (((d + d) + 1) + ((- d - 1) | (- d - 1))))) + 1) + ((- ((~ a | (~ ((c - ~ (~ c + 1)) - 1) + 1)) - ~ a) - 1) | (- ((~ ((((~ d | a) + d) + 1) - 1) | (((d + d) + 1) + ((- d - 1) | (- d - 1)))) - (((d + d) + 1) + ((- d - 1) | (- d - 1)))) - 1))",
                "attributes": {
                    "numOps": 78,
                    "nestedExprLevel": 42,
                    "numDAGs": 32,
                    "opsPercentages": {
                        "arithmetic": 67.94871794871796,
                        "mul": 0.0,
                        "bitwise": 32.05128205128205
                    },
                    "percentageDAGsCancel": 21.875
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-d - 1 & ~(d + (~d | a))",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 91.02564102564102,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 0.0,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_O1": {
                    "expr": "a + 1 + (((~((~d | a) + d) | d) + ~a) - d)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 6,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 87.17948717948718,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((~d | a) + d | d)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 93.58974358974359,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 0.0,
                            "bitwise": 80.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a ^ 0xffffffff | ((c - ((c ^ 0xffffffff) + 1 ^ 0xffffffff)) - 1 ^ 0xffffffff) + 1) - (a ^ 0xffffffff)) + (((d ^ 0xffffffff | a) + d ^ 0xffffffff | d * 2 + 1 + (0xffffffff - d | 0xffffffff - d)) - (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d))) + 1 + (0xffffffff - ((a ^ 0xffffffff | ((c - ((c ^ 0xffffffff) + 1 ^ 0xffffffff)) - 1 ^ 0xffffffff) + 1) - (a ^ 0xffffffff)) | 0xffffffff - (((d ^ 0xffffffff | a) + d ^ 0xffffffff | d * 2 + 1 + (0xffffffff - d | 0xffffffff - d)) - (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d))))",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 23,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 17.94871794871795,
                        "opsPercentages": {
                            "arithmetic": 54.6875,
                            "mul": 6.25,
                            "bitwise": 39.0625
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "msvc_default": {
                    "expr": "((~a | ~((c - ~(~c + 1)) - 1) + 1) - ~a) + ((~((~d | a) + d) | d * 2 + 1 + (0xffffffff - d | 0xffffffff - d)) - (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d))) + 1 + (0xffffffff - ((~a | ~((c - ~(~c + 1)) - 1) + 1) - ~a) | 0xffffffff - ((~((~d | a) + d) | d * 2 + 1 + (0xffffffff - d | 0xffffffff - d)) - (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d))))",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 21,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 17.94871794871795,
                        "opsPercentages": {
                            "arithmetic": 54.6875,
                            "mul": 6.25,
                            "bitwise": 39.0625
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "gcc_O3": {
                    "expr": "~((~d | a) + d) & -d - 1",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 91.02564102564102,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 0.0,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 10,
            "gt": {
                "expr": "((d*((b*d)-(((d^d)^b)|d))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 16.666666666666664,
                        "mul": 33.33333333333333,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "(d & ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ((((((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) + d) + 1) + ((- (((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) - 1) | (- d - 1)))) - ((~ ((b & d) * (b | d) + (b & ~ d) * (~ b & d)) & ((((((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) + d) + 1) + ((- (((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) - 1) | (- d - 1)))) + (~ ((b & d) * (b | d) + (b & ~ d) * (~ b & d)) & ((((((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) + d) + 1) + ((- (((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) - 1) | (- d - 1))))))) * (d | ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ((((((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) + d) + 1) + ((- (((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) - 1) | (- d - 1)))) - ((~ ((b & d) * (b | d) + (b & ~ d) * (~ b & d)) & ((((((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) + d) + 1) + ((- (((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) - 1) | (- d - 1)))) + (~ ((b & d) * (b | d) + (b & ~ d) * (~ b & d)) & ((((((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) + d) + 1) + ((- (((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) - 1) | (- d - 1))))))) + (d & ~ ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ((((((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) + d) + 1) + ((- (((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) - 1) | (- d - 1)))) - ((~ ((b & d) * (b | d) + (b & ~ d) * (~ b & d)) & ((((((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) + d) + 1) + ((- (((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) - 1) | (- d - 1)))) + (~ ((b & d) * (b | d) + (b & ~ d) * (~ b & d)) & ((((((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) + d) + 1) + ((- (((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) - 1) | (- d - 1))))))) * (~ d & ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ((((((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) + d) + 1) + ((- (((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) - 1) | (- d - 1)))) - ((~ ((b & d) * (b | d) + (b & ~ d) * (~ b & d)) & ((((((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) + d) + 1) + ((- (((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) - 1) | (- d - 1)))) + (~ ((b & d) * (b | d) + (b & ~ d) * (~ b & d)) & ((((((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) + d) + 1) + ((- (((((d - d) - ((d | ~ d) << 1)) - 2) | b) - ((((d - d) - ((d | ~ d) << 1)) - 2) & b)) - 1) | (- d - 1)))))))",
                "attributes": {
                    "numOps": 601,
                    "nestedExprLevel": 349,
                    "numDAGs": 38,
                    "opsPercentages": {
                        "arithmetic": 45.4242928452579,
                        "mul": 4.326123128119801,
                        "bitwise": 50.249584026622294
                    },
                    "percentageDAGsCancel": 15.789473684210526
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((b & d) * (b | d) + (~b & d) * (~d & b) ^ ~(b & d) + d + b + 1) + (~(b & d) + d + b + 1 & ~((~b & d) * (~d & b) + (b & d) * (b | d))) * -2 & ~d) * ((~(b & d) + d + b + 1 & ~((~b & d) * (~d & b) + (b & d) * (b | d))) * 2 + ((b & d) * (b | d) + (~b & d) * (~d & b) ^ (b & d) - (d + b + 1)) & d) + (((b & d) * (b | d) + (~b & d) * (~d & b) ^ ~(b & d) + d + b + 1) + (~(b & d) + d + b + 1 & ~((~b & d) * (~d & b) + (b & d) * (b | d))) * -2 & d) * (((b & d) * (b | d) + (~b & d) * (~d & b) ^ ~(b & d) + d + b + 1) + (~(b & d) + d + b + 1 & ~((~b & d) * (~d & b) + (b & d) * (b | d))) * -2 | d)",
                    "attributes": {
                        "numOps": 142,
                        "nestedExprLevel": 34,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 76.37271214642263,
                        "opsPercentages": {
                            "arithmetic": 28.169014084507044,
                            "mul": 15.492957746478872,
                            "bitwise": 56.33802816901409
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_O1": {
                    "expr": "(~(d + 1 + (~b | ~d) + b ^ (b | d) * (b & d) + (~b & d) * (~d & b)) + (~(b | d) * (b & d) + (~b & d) * (~d & b) & d + 1 + (~b | ~d) + b) * -2 & d) * ((d + 1 + (~b | ~d) + b ^ (b | d) * (b & d) + (~b & d) * (~d & b)) + (~(b | d) * (b & d) + (~b & d) * (~d & b) & d + 1 + (~b | ~d) + b) * -2 & ~d) + ((d + 1 + (~b | ~d) + b ^ (b | d) * (b & d) + (~b & d) * (~d & b)) + (~(b | d) * (b & d) + (~b & d) * (~d & b) & d + 1 + (~b | ~d) + b) * -2 | d) * ((d + 1 + (~b | ~d) + b ^ (b | d) * (b & d) + (~b & d) * (~d & b)) + (~(b | d) * (b & d) + (~b & d) * (~d & b) & d + 1 + (~b | ~d) + b) * -2 & d)",
                    "attributes": {
                        "numOps": 153,
                        "nestedExprLevel": 30,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 74.5424292845258,
                        "opsPercentages": {
                            "arithmetic": 26.797385620915033,
                            "mul": 14.37908496732026,
                            "bitwise": 58.82352941176471
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "clang_O3": {
                    "expr": "(((~b & d) * (~d & b) + (d & b) * d | b ^ d | b) + (~(~b & d) * (~d & b) + (d & b) * d | b & d | b) * -2 & ~d) * (~((~b & d) * (~d & b) + (d & b) * d | b ^ d | b) + (~(~b & d) * (~d & b) + (d & b) * d | b & d | b) * -2 & d) + (((~b & d) * (~d & b) + (d & b) * d | b ^ d | b) + (~(~b & d) * (~d & b) + (d & b) * d | b & d | b) * -2 | d) * (((~b & d) * (~d & b) + (d & b) * d | b ^ d | b) + (~(~b & d) * (~d & b) + (d & b) * d | b & d | b) * -2 & d)",
                    "attributes": {
                        "numOps": 113,
                        "nestedExprLevel": 22,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 81.19800332778702,
                        "opsPercentages": {
                            "arithmetic": 15.04424778761062,
                            "mul": 19.469026548672566,
                            "bitwise": 65.48672566371681
                        },
                        "percentageDAGsCancel": 10.344827586206897
                    }
                },
                "clang_default": {
                    "expr": "(d & ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) + d + 1 + (0xffffffff - (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) | 0xffffffff - d)) - ((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ 0xffffffff) & (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) + d + 1 + (0xffffffff - (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) | 0xffffffff - d)) + (((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ 0xffffffff) & (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) + d + 1 + (0xffffffff - (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) | 0xffffffff - d)))) * (d | ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) + d + 1 + (0xffffffff - (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) | 0xffffffff - d)) - ((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ 0xffffffff) & (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) + d + 1 + (0xffffffff - (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) | 0xffffffff - d)) + (((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ 0xffffffff) & (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) + d + 1 + (0xffffffff - (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) | 0xffffffff - d)))) + (d & (((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) + d + 1 + (0xffffffff - (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) | 0xffffffff - d)) - ((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ 0xffffffff) & (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) + d + 1 + (0xffffffff - (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) | 0xffffffff - d)) + (((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ 0xffffffff) & (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) + d + 1 + (0xffffffff - (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) | 0xffffffff - d))) ^ 0xffffffff)) * ((d ^ 0xffffffff) & ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) + d + 1 + (0xffffffff - (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) | 0xffffffff - d)) - ((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ 0xffffffff) & (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) + d + 1 + (0xffffffff - (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) | 0xffffffff - d)) + (((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ 0xffffffff) & (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) + d + 1 + (0xffffffff - (((d | d ^ 0xffffffff) * -2 - 2 | b) - ((d | d ^ 0xffffffff) * -2 - 2 & b)) | 0xffffffff - d))))",
                    "attributes": {
                        "numOps": 529,
                        "nestedExprLevel": 151,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 11.980033277870216,
                        "opsPercentages": {
                            "arithmetic": 37.99621928166352,
                            "mul": 13.988657844990549,
                            "bitwise": 48.01512287334593
                        },
                        "percentageDAGsCancel": 8.571428571428571
                    }
                },
                "msvc_default": {
                    "expr": "(((b & d) * (b | d) + (~d & b) * (~b & d) ^ b + d + 1 + (0xffffffff - b | 0xffffffff - d)) - ((~((b & d) * (b | d) + (~d & b) * (~b & d)) & b + d + 1 + (0xffffffff - b | 0xffffffff - d)) + (~((b & d) * (b | d) + (~d & b) * (~b & d) ) & b + d + 1 + (0xffffffff - b | 0xffffffff - d))) & d) * (((b & d) * (b | d) + (~d & b) * (~b & d) ^ b + d + 1 + (0xffffffff - b | 0xffffffff - d)) - ((~((b & d) * (b | d) + (~d & b) * (~b & d)) & b + d + 1 + (0xffffffff - b | 0xffffffff - d)) + (~((b & d) * (b | d) + (~d & b) * (~b & d)) & b + d + 1 + (0xffffffff - b | 0xffffffff - d))) | d) + (~(((b & d) * (b | d) + (~d & b) * (~b & d) ^ b + d + 1 + (0xffffffff - b | 0xffffffff - d)) - ((~((b & d) * (b | d) + (~d & b) * (~b & d)) & b + d + 1 + (0xffffffff - b | 0xffffffff - d)) + (~((b & d) * (b | d) + (~d & b) * (~b & d)) & b + d + 1 + (0xffffffff - b | 0xffffffff - d)))) & d) * (~d & ((b & d) * (b | d) + (~d & b) * (~b & d) ^ b + d + 1 + (0xffffffff - b | 0xffffffff - d)) - ((~((b & d) * (b | d) + (~d & b) * (~b & d) ) & b + d + 1 + (0xffffffff - b | 0xffffffff - d)) + (~((b & d) * (b | d) + (~d & b) * (~b & d)) & b + d + 1 + (0xffffffff - b | 0xffffffff - d))))",
                    "attributes": {
                        "numOps": 217,
                        "nestedExprLevel": 55,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 63.89351081530782,
                        "opsPercentages": {
                            "arithmetic": 37.327188940092164,
                            "mul": 11.981566820276496,
                            "bitwise": 50.69124423963134
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "gcc_O3": {
                    "expr": "((b & d - b + 1 + d ^ (~b & d) * (~d & b) + (b | d) * b & d) + ~(~b & d) * (~d & b) + (b | d) * b & d & ~b & d + b + 1 + d * 2 & d) * (~d & (~b & d + b + 1 + d ^ (~b & d) * (~d & b) + (b | d) * b & d) + ~(~b & d) * (~d & b) + (b | d) * b & d & ~b & d + b + 1 + d * -2) + ((~b & d + b + 1 + d ^ (~b & d) * (~d & b) + (b | d) * b & d) + ~(~b & d) * (~d & b) + (b | d) * b & d & ~b & d + b + 1 + d * -2 & d) * ((~b & d + b + 1 + d ^ (~b & d) * (~d & b) + (b | d) * b & d) + ~(~b & d) * (~d & b) + (b | d) * b & d & ~b & d + b + 1 + d * -2 | d)",
                    "attributes": {
                        "numOps": 142,
                        "nestedExprLevel": 21,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 76.37271214642263,
                        "opsPercentages": {
                            "arithmetic": 28.169014084507044,
                            "mul": 15.492957746478872,
                            "bitwise": 56.33802816901409
                        },
                        "percentageDAGsCancel": 17.391304347826086
                    }
                }
            }
        },
        {
            "num": 11,
            "gt": {
                "expr": "(((-d)+(((b|b)&d)|(b*b))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 16.666666666666664,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "((~ d + 1) - ~ ((((~ ((b & ~ b) + b) | d) - ~ ((b & ~ b) + b)) & ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((b & b) * (b | b) + (b & ~ b) * (~ b & b)))) - 1",
                "attributes": {
                    "numOps": 36,
                    "nestedExprLevel": 14,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 11.11111111111111,
                        "bitwise": 63.888888888888886
                    },
                    "percentageDAGsCancel": 30.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-~(b * b + (d & b & ~(b * b))) - d) + -1",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 5,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 69.44444444444444,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 18.181818181818183,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((~b | d) + b + 1 & ~(b * b)) - d) + b * b",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 72.22222222222221,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 20.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_O3": {
                    "expr": "(b * b - d) + (~(b * b) & b & d)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 80.55555555555556,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 28.57142857142857,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(d ^ 0xffffffff) - ((((b & (b ^ 0xffffffff)) + b ^ 0xffffffff | d) - ((b & (b ^ 0xffffffff)) + b ^ 0xffffffff) & (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff)) + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 13,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 16.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 23.333333333333332,
                            "mul": 13.333333333333334,
                            "bitwise": 63.33333333333333
                        },
                        "percentageDAGsCancel": 23.52941176470588
                    }
                },
                "msvc_default": {
                    "expr": "~d - ~(((~b | d) - ~b & ~(b * b)) + b * b)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 16.666666666666664,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(b * b + (b & d & ~(b * b))) - d",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 4,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 80.55555555555556,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 28.57142857142857,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                }
            }
        },
        {
            "num": 12,
            "gt": {
                "expr": "(((((d*d)-(d|e))*((e-e)*d))-(d&(d|(-e)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 30.0,
                        "bitwise": 30.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "(((((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) ^ (((d + e) + 1) + ((- d - 1) | (- e - 1)))) - ((~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & (((d + e) + 1) + ((- d - 1) | (- e - 1)))) + (~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & (((d + e) + 1) + ((- d - 1) | (- e - 1)))))) & (((((e & ~ e) << 1) - (e ^ e)) & d) * ((((e & ~ e) << 1) - (e ^ e)) | d) + ((((e & ~ e) << 1) - (e ^ e)) & ~ d) * (~ (((e & ~ e) << 1) - (e ^ e)) & d))) * (((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) ^ (((d + e) + 1) + ((- d - 1) | (- e - 1)))) - ((~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & (((d + e) + 1) + ((- d - 1) | (- e - 1)))) + (~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & (((d + e) + 1) + ((- d - 1) | (- e - 1)))))) | (((((e & ~ e) << 1) - (e ^ e)) & d) * ((((e & ~ e) << 1) - (e ^ e)) | d) + ((((e & ~ e) << 1) - (e ^ e)) & ~ d) * (~ (((e & ~ e) << 1) - (e ^ e)) & d))) + (((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) ^ (((d + e) + 1) + ((- d - 1) | (- e - 1)))) - ((~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & (((d + e) + 1) + ((- d - 1) | (- e - 1)))) + (~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & (((d + e) + 1) + ((- d - 1) | (- e - 1)))))) & ~ (((((e & ~ e) << 1) - (e ^ e)) & d) * ((((e & ~ e) << 1) - (e ^ e)) | d) + ((((e & ~ e) << 1) - (e ^ e)) & ~ d) * (~ (((e & ~ e) << 1) - (e ^ e)) & d))) * (~ ((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) ^ (((d + e) + 1) + ((- d - 1) | (- e - 1)))) - ((~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & (((d + e) + 1) + ((- d - 1) | (- e - 1)))) + (~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & (((d + e) + 1) + ((- d - 1) | (- e - 1)))))) & (((((e & ~ e) << 1) - (e ^ e)) & d) * ((((e & ~ e) << 1) - (e ^ e)) | d) + ((((e & ~ e) << 1) - (e ^ e)) & ~ d) * (~ (((e & ~ e) << 1) - (e ^ e)) & d)))) + ~ ((~ d | (((d + (~ e + 1)) + 1) + ((- d - 1) | (- (~ e + 1) - 1)))) - ~ d)) + 1",
                "attributes": {
                    "numOps": 376,
                    "nestedExprLevel": 187,
                    "numDAGs": 55,
                    "opsPercentages": {
                        "arithmetic": 36.43617021276596,
                        "mul": 9.042553191489363,
                        "bitwise": 54.52127659574468
                    },
                    "percentageDAGsCancel": 41.81818181818181
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-((e - 1 | ~d) + (d - e) + 1 & d)",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 97.87234042553192,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 0.0,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(((e - 1 | ~d) + d + ~e + 2 | ~d) + d)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 97.07446808510637,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 0.0,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-((d - e) + (e - 1 | ~d) + 1 & d)",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 97.87234042553192,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 0.0,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_default": {
                    "expr": "((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ d + e + 1 + (0xffffffff - d | 0xffffffff - e)) - (((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff) & d + e + 1 + (0xffffffff - d | 0xffffffff - e)) + ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff) & d + e + 1 + (0xffffffff - d | 0xffffffff - e))) & ((e & (e ^ 0xffffffff)) * 2 & d) * ((e & (e ^ 0xffffffff)) * 2 | d) + ((e & (e ^ 0xffffffff)) * 2 & (d ^ 0xffffffff)) * (((e & (e ^ 0xffffffff)) * 2 ^ 0xffffffff) & d)) * ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ d + e + 1 + (0xffffffff - d | 0xffffffff - e)) - (((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff) & d + e + 1 + (0xffffffff - d | 0xffffffff - e)) + ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff) & d + e + 1 + (0xffffffff - d | 0xffffffff - e))) | ((e & (e ^ 0xffffffff)) * 2 & d) * ((e & (e ^ 0xffffffff)) * 2 | d) + ((e & (e ^ 0xffffffff)) * 2 & (d ^ 0xffffffff)) * (((e & (e ^ 0xffffffff)) * 2 ^ 0xffffffff) & d)) + ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ d + e + 1 + (0xffffffff - d | 0xffffffff - e)) - (((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff) & d + e + 1 + (0xffffffff - d | 0xffffffff - e)) + ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff) & d + e + 1 + (0xffffffff - d | 0xffffffff - e))) & (((e & (e ^ 0xffffffff)) * 2 & d) * ((e & (e ^ 0xffffffff)) * 2 | d) + ((e & (e ^ 0xffffffff)) * 2 & (d ^ 0xffffffff)) * (((e & (e ^ 0xffffffff)) * 2 ^ 0xffffffff) & d) ^ 0xffffffff)) * (((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ d + e + 1 + (0xffffffff - d | 0xffffffff - e)) - (((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff) & d + e + 1 + (0xffffffff - d | 0xffffffff - e)) + ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff) & d + e + 1 + (0xffffffff - d | 0xffffffff - e))) ^ 0xffffffff) & ((e & (e ^ 0xffffffff)) * 2 & d) * ((e & (e ^ 0xffffffff)) * 2 | d) + ((e & (e ^ 0xffffffff)) * 2 & (d ^ 0xffffffff)) * (((e & (e ^ 0xffffffff)) * 2 ^ 0xffffffff) & d)) + ((d ^ 0xffffffff | d + (e ^ 0xffffffff) + 2 + (0xffffffff - d | 0xffffffff - ((e ^ 0xffffffff) + 1))) - (d ^ 0xffffffff) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 293,
                        "nestedExprLevel": 112,
                        "numDAGs": 48,
                        "percentDecreaseByOps": 22.074468085106382,
                        "opsPercentages": {
                            "arithmetic": 32.081911262798634,
                            "mul": 17.064846416382252,
                            "bitwise": 50.85324232081911
                        },
                        "percentageDAGsCancel": 35.41666666666667
                    }
                },
                "msvc_default": {
                    "expr": "~((~d | d + ~e + 2 + (0xffffffff - d | 0xffffffff - (~e + 1))) - ~d) + 1",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 5,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 96.01063829787235,
                        "opsPercentages": {
                            "arithmetic": 53.333333333333336,
                            "mul": 0.0,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "gcc_O3": {
                    "expr": "-((~d | e - 1) + 1 + (d - e) & d)",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 97.87234042553192,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 0.0,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 12.5
                    }
                }
            }
        },
        {
            "num": 13,
            "gt": {
                "expr": "((((~(a+(b*b)))*(b|b))&((b*b)^(b+b))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 22.22222222222222,
                        "mul": 33.33333333333333,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "(~ (((- (((a ^ ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((a | ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) << 1)) + 1) - 1) & ((b & ~ b) + b)) * ((- (((a ^ ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((a | ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) << 1)) + 1) - 1) | ((b & ~ b) + b)) + ((- (((a ^ ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((a | ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) << 1)) + 1) - 1) & ~ ((b & ~ b) + b)) * (~ (- (((a ^ ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((a | ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) << 1)) + 1) - 1) & ((b & ~ b) + b))) | (((((b & b) * (b | b) + (b & ~ b) * (~ b & b)) - ((b | b) + (b & b))) - ((((b & b) * (b | b) + (b & ~ b) * (~ b & b)) | ~ ((b | b) + (b & b))) + (((b & b) * (b | b) + (b & ~ b) * (~ b & b)) | ~ ((b | b) + (b & b))))) - 2)) - ~ (((- (((a ^ ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((a | ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) << 1)) + 1) - 1) & ((b & ~ b) + b)) * ((- (((a ^ ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((a | ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) << 1)) + 1) - 1) | ((b & ~ b) + b)) + ((- (((a ^ ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((a | ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) << 1)) + 1) - 1) & ~ ((b & ~ b) + b)) * (~ (- (((a ^ ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((a | ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) << 1)) + 1) - 1) & ((b & ~ b) + b)))",
                "attributes": {
                    "numOps": 298,
                    "nestedExprLevel": 138,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 23.154362416107382,
                        "mul": 14.093959731543624,
                        "bitwise": 62.751677852349
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b * b | a) * 2 + ~(b * b ^ a) + 1 & b) * (((b * b ^ a) + (b * b | a) * -2) - 1 & ~b) + (((b * b ^ a) + (b * b | a) * -2) - 1 & b) * (((b * b ^ a) + (b * b | a) * -2) - 1 | b) & (b * b + b * -2 + (~(b * 2) | b * b) * -2) - 2",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 15,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 82.21476510067114,
                        "opsPercentages": {
                            "arithmetic": 32.075471698113205,
                            "mul": 35.84905660377358,
                            "bitwise": 32.075471698113205
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(-2 - (b * b * 2 | a * 2)) - (~b * b ^ a) & b) * (~b & (-2 - (b * b * 2 | a * 2)) - (~b * b ^ a)) + 1 + ((b + -2) * b - ((~(b * 2) | b * b) * 2 + 2) | ~(((-2 - (b * b * 2 | a * 2)) - (~b * b ^ a) | b) * ((-2 - (b * b * 2 | a * 2)) - (~b * b ^ a) & b) + (~(-2 - (b * b * 2 | a * 2)) - (~b * b ^ a) & b) * (~b & (-2 - (b * b * 2 | a * 2)) - (~b * b ^ a)))) + ((-2 - (b * b * 2 | a * 2)) - (~b * b ^ a) | b) * ((-2 - (b * b * 2 | a * 2)) - (~b * b ^ a) & b)",
                    "attributes": {
                        "numOps": 112,
                        "nestedExprLevel": 29,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 62.41610738255034,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 35.714285714285715,
                            "bitwise": 35.714285714285715
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(b * b + b * -2 + (~(b * 2) | b * b) * -2) - 2 & (-(b * b ^ a) + (a | b * b) * -2 & b) * ((b * b ^ a) + (a | b * b) * -2 - 1 & ~b) + ((b * b ^ a) + (a | b * b) * -2 - 1 | b) * ((b * b ^ a) + (a | b * b) * -2 - 1 & b)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 11,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 82.21476510067114,
                        "opsPercentages": {
                            "arithmetic": 33.9622641509434,
                            "mul": 35.84905660377358,
                            "bitwise": 30.18867924528302
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "clang_default": {
                    "expr": "((0xffffffff - ((a ^ b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) + (a | b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) * 2 + 1) & (b & (b ^ 0xffffffff)) + b) * (0xffffffff - ((a ^ b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) + (a | b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) * 2 + 1) | (b & (b ^ 0xffffffff)) + b) + (0xffffffff - ((a ^ b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) + (a | b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) * 2 + 1) & ((b & (b ^ 0xffffffff)) + b ^ 0xffffffff)) * ((0xffffffff - ((a ^ b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) + (a | b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) * 2 + 1) ^ 0xffffffff) & (b & (b ^ 0xffffffff)) + b) ^ 0xffffffff | ((b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) + b * -2) - ((b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) | b * 2 ^ 0xffffffff) + (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) | b * 2 ^ 0xffffffff))) - 2) - ((0xffffffff - ((a ^ b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) + (a | b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) * 2 + 1) & (b & (b ^ 0xffffffff)) + b) * (0xffffffff - ((a ^ b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) + (a | b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) * 2 + 1) | (b & (b ^ 0xffffffff)) + b) + (0xffffffff - ((a ^ b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) + (a | b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) * 2 + 1) & ((b & (b ^ 0xffffffff)) + b ^ 0xffffffff)) * ((0xffffffff - ((a ^ b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) + (a | b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) * 2 + 1) ^ 0xffffffff) & (b & (b ^ 0xffffffff)) + b) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 247,
                        "nestedExprLevel": 91,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 17.114093959731544,
                        "opsPercentages": {
                            "arithmetic": 23.88663967611336,
                            "mul": 21.45748987854251,
                            "bitwise": 54.655870445344135
                        },
                        "percentageDAGsCancel": 11.428571428571429
                    }
                },
                "msvc_default": {
                    "expr": "(~((0xffffffff - ((~(b * b) ^ a) + 1 + (b * b | a) * 2) & b) * (0xffffffff - ((~(b * b) ^ a) + 1 + (b * b | a) * 2) | b ) + (0xffffffff - ((~(b * b) ^ a) + 1 + (b * b | a) * 2) & ~b) * (~(0xffffffff - ((~(b * b) ^ a) + 1 + (b * b | a) * 2)) & b)) | ((b * b + b * -2) - ((b * b | ~(b * 2)) + (b * b | ~(b * 2)))) - 2) - ~((0xffffffff - ((~(b * b) ^ a) + 1 + (b * b | a) * 2) & b) * (0xffffffff - ((~(b * b) ^ a) + 1 + (b * b | a) * 2) | b) + (0xffffffff - ((~(b * b) ^ a) + 1 + (b * b | a) * 2) & ~b) * (~(0xffffffff - ((~(b * b) ^ a) + 1 + (b * b | a) * 2)) & b))",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 42,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 63.42281879194631,
                        "opsPercentages": {
                            "arithmetic": 29.357798165137616,
                            "mul": 31.19266055045872,
                            "bitwise": 39.44954128440367
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((a | b * b) * 2 - (b * b ^ a) & b) * (~b & ((b * b ^ a) + (a | b * b) * -2) - 1) + (((b * b ^ a) + (a | b * b) * -2) - 1 & b) * (((b * b ^ a) + (a | b * b) * -2) - 1 | b) & (b * b + b * -2 + (~(b * 2) | b * b) * -2) - 2",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 15,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 82.88590604026845,
                        "opsPercentages": {
                            "arithmetic": 31.372549019607842,
                            "mul": 37.254901960784316,
                            "bitwise": 31.372549019607842
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 14,
            "gt": {
                "expr": "((((d+d)^a)+(((d&d)-a)+(a|a))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 0.0,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 57.14285714285714
                }
            },
            "mba": {
                "expr": "(((((d | d) + (d & d)) | a) - (((d | d) + (d & d)) & a)) - ~ ((((((((~ d | d) + d) + 1) ^ a) - ((~ (((~ d | d) + d) + 1) & a) << 1)) ^ ~ (((a + a) + 1) + ((- a - 1) | (- a - 1)))) + (((((((~ d | d) + d) + 1) ^ a) - ((~ (((~ d | d) + d) + 1) & a) << 1)) | (((a + a) + 1) + ((- a - 1) | (- a - 1)))) << 1)) + 1)) - 1",
                "attributes": {
                    "numOps": 60,
                    "nestedExprLevel": 38,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 51.66666666666667,
                        "mul": 0.0,
                        "bitwise": 48.333333333333336
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((d * 2 ^ a) - (-2 - ((~a + a * 2 + 1 | (d ^ a) + (~d & a) * -2) * 2 + ((d ^ a) + (~d & a) * -2 ^ -a - 1)))) + -1",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 8,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 51.66666666666667,
                        "opsPercentages": {
                            "arithmetic": 48.275862068965516,
                            "mul": 17.24137931034483,
                            "bitwise": 34.48275862068966
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_O1": {
                    "expr": "(d * 2 | a) + 1 + ((((a * 2 ^ d * 2) + (~d & a) * -4 | a * 2) + ((a ^ d) + (~d & a) * -2 ^ ~a)) - (d * 2 & a))",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 8,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 56.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 26.923076923076923,
                            "bitwise": 42.30769230769231
                        },
                        "percentageDAGsCancel": 9.523809523809524
                    }
                },
                "clang_O3": {
                    "expr": "((d * 2 ^ a) - ((d ^ a) + (~d & a) * -2 ^ a)) + ((d ^ a) + (~d & a) * -2 | a) * 2",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 6,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 68.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 31.57894736842105,
                            "mul": 21.052631578947366,
                            "bitwise": 47.368421052631575
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d * 2 | a) - (d * 2 & a)) - ((((d ^ 0xffffffff | d) + d + 1 ^ a) + (((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff) & a) * -2 ^ a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) ^ 0xffffffff) + (((d ^ 0xffffffff | d) + d + 1 ^ a) + (((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff) & a) * -2 | a * 2 + 1 + (0xffffffff - a | 0xffffffff - a)) * 2 + 1 ^ 0xffffffff)) + -1",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 15,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 8.333333333333332,
                        "opsPercentages": {
                            "arithmetic": 47.27272727272727,
                            "mul": 12.727272727272727,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((d * 2 | a) - (d * 2 & a)) - ~(((d ^ a) + (~d & a) * -2 ^ ~(a * 2 + 1 + (0xffffffff - a | 0xffffffff - a))) + 1 + ((d ^ a) + (~d & a) * -2 | a * 2 + 1 + (0xffffffff - a | 0xffffffff - a)) * 2)) + -1",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 11,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 35.0,
                        "opsPercentages": {
                            "arithmetic": 46.15384615384615,
                            "mul": 17.94871794871795,
                            "bitwise": 35.8974358974359
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "gcc_O3": {
                    "expr": "(d * 2 ^ a) + 1 + (-a - 1 ^ (d ^ a) + (~d & a) * -2) + (a | (d ^ a) + (~d & a) * -2) * 2",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 5,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 63.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 40.909090909090914,
                            "mul": 18.181818181818183,
                            "bitwise": 40.909090909090914
                        },
                        "percentageDAGsCancel": 12.5
                    }
                }
            }
        },
        {
            "num": 15,
            "gt": {
                "expr": "(((b|(e|b))+(b|b)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "((((b + (((e + b) + 1) + ((- e - 1) | (- b - 1)))) + 1) + ((- b - 1) | (- (((e + b) + 1) + ((- e - 1) | (- b - 1))) - 1))) ^ ((b & ~ b) + b)) + (((((b + (((e + b) + 1) + ((- e - 1) | (- b - 1)))) + 1) + ((- b - 1) | (- (((e + b) + 1) + ((- e - 1) | (- b - 1))) - 1))) & ((b & ~ b) + b)) << 1)",
                "attributes": {
                    "numOps": 58,
                    "nestedExprLevel": 33,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 77.58620689655173,
                        "mul": 0.0,
                        "bitwise": 22.413793103448278
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((e & b) - (b + e + 1) | ~b) + b * 2 + e + ~(e & b) + 2 & b) * 2 + (((e & b) - (b + e + 1) | ~b) + b * 2 + e + ~(e & b) + 2 ^ b)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 8,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 48.275862068965516,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 10.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_O1": {
                    "expr": "(((-1 - e) * 2 | b * -2 - 2) + (((-2 - ~e | ~b) - b) - e * 2 | b * -2 - 2) + (e + 2 + b * 2) * 2 & b * 2) + (e + 2 + (((-2 - ~e | ~b) - b) - e | ~b) + ~e | ~b + b * 2 ^ b)",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 10,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 20.689655172413794,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 17.391304347826086,
                            "bitwise": 32.608695652173914
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(b + b + e + 1 + (~e | ~b) + 1 + (~b + e + 1 + (~e | ~b) | ~b) ^ b) + (b + b + e + 1 + (~e | ~b) + 1 + (~b + e + 1 + (~e | ~b) | ~b) & b) * 2",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 6,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 31.03448275862069,
                        "opsPercentages": {
                            "arithmetic": 47.5,
                            "mul": 2.5,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(e + b * 2 + (0xffffffff - e | 0xffffffff - b) + 2 + (0xffffffff - b | 0xffffffff - (e + b + 1 + (0xffffffff - e | 0xffffffff - b))) ^ (b & (b ^ 0xffffffff)) + b) + (e + b * 2 + (0xffffffff - e | 0xffffffff - b) + 2 + (0xffffffff - b | 0xffffffff - (e + b + 1 + (0xffffffff - e | 0xffffffff - b))) & (b & (b ^ 0xffffffff)) + b) * 2",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 10,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 24.137931034482758,
                        "opsPercentages": {
                            "arithmetic": 65.9090909090909,
                            "mul": 6.8181818181818175,
                            "bitwise": 27.27272727272727
                        },
                        "percentageDAGsCancel": 15.0
                    }
                },
                "msvc_default": {
                    "expr": "((0xffffffff - e | 0xffffffff - b) + b * 2 + e + 2 + (0xffffffff - b | 0xffffffff - (e + b + 1 + (0xffffffff - e | 0xffffffff - b))) ^ b) + ((0xffffffff - e | 0xffffffff - b) + b * 2 + e + 2 + (0xffffffff - b | 0xffffffff - (e + b + 1 + (0xffffffff - e | 0xffffffff - b))) & b) * 2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 8,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 34.48275862068966,
                        "opsPercentages": {
                            "arithmetic": 71.05263157894737,
                            "mul": 7.894736842105263,
                            "bitwise": 21.052631578947366
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "gcc_O3": {
                    "expr": "(((e & b) - b + 1 + e | ~b) + (b + 1 + e - (e & b)) + b ^ b) + (((e & b) - b + 1 + e | ~b) + (b + 1 + e - (e & b)) + b & b) * 2",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 8,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 51.724137931034484,
                        "opsPercentages": {
                            "arithmetic": 60.71428571428571,
                            "mul": 3.571428571428571,
                            "bitwise": 35.714285714285715
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                }
            }
        },
        {
            "num": 16,
            "gt": {
                "expr": "(((~((e*a)^d))&((~(a+d))*(e|e))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 12.5,
                        "mul": 25.0,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "((~ ((((e & a) * (e | a) + (e & ~ a) * (~ e & a)) & d) + ~ (((e & a) * (e | a) + (e & ~ a) * (~ e & a)) | d)) | (((- (((a ^ ~ d) + ((a | d) << 1)) + 1) - 1) & (((e + e) + 1) + ((- e - 1) | (- e - 1)))) * ((- (((a ^ ~ d) + ((a | d) << 1)) + 1) - 1) | (((e + e) + 1) + ((- e - 1) | (- e - 1)))) + ((- (((a ^ ~ d) + ((a | d) << 1)) + 1) - 1) & ~ (((e + e) + 1) + ((- e - 1) | (- e - 1)))) * (~ (- (((a ^ ~ d) + ((a | d) << 1)) + 1) - 1) & (((e + e) + 1) + ((- e - 1) | (- e - 1)))))) + ((((e & a) * (e | a) + (e & ~ a) * (~ e & a)) & d) + ~ (((e & a) * (e | a) + (e & ~ a) * (~ e & a)) | d))) + 1",
                "attributes": {
                    "numOps": 121,
                    "nestedExprLevel": 58,
                    "numDAGs": 40,
                    "opsPercentages": {
                        "arithmetic": 43.80165289256198,
                        "mul": 8.264462809917356,
                        "bitwise": 47.93388429752066
                    },
                    "percentageDAGsCancel": 5.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((~e & a) * (~a & e) + (e & a) * (e | a) | d) + ((~e & a) * (~a & e) + (e & a) * (e | a) & d) + ((~e & a) * (~a & e) + (e & a) * (e | a) ^ d | (~e + e * 2 + 1 & (a | d) * 2 + ~(d ^ a) + 1) * (((d ^ a) + (a | d) * -2) - 1 & -e - 1) + (((d ^ a) + (a | d) * -2) - 1 & ~e + e * 2 + 1) * (~e + e * 2 + 1 | ((d ^ a) + (a | d) * -2) - 1)) + 1",
                    "attributes": {
                        "numOps": 80,
                        "nestedExprLevel": 21,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 33.88429752066116,
                        "opsPercentages": {
                            "arithmetic": 32.5,
                            "mul": 18.75,
                            "bitwise": 48.75
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                },
                "msvc_O1": {
                    "expr": "~((~a & e) * (~e & a) + (a | e) * (a & e) | d) + 1 + ((~(-2 - (~d ^ a)) + (a | d) * -2 & e) * (~e & (-2 - (~d ^ a)) + (a | d) * -2) + ((-2 - (~d ^ a)) + (a | d) * -2 | e) * ((-2 - (~d ^ a)) + (a | d) * -2 & e) | ~((~a & e) * (~e & a) + (a | e) * (a & e) & d + ~((~a & e) * (~e & a) + (a | e) * (a & e) | d))) + (~a & e) * (~e & a) + (a | e) * (a & e) & d",
                    "attributes": {
                        "numOps": 89,
                        "nestedExprLevel": 25,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 26.446280991735538,
                        "opsPercentages": {
                            "arithmetic": 28.08988764044944,
                            "mul": 15.730337078651685,
                            "bitwise": 56.17977528089888
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_O3": {
                    "expr": "~((~e & a) * (~a & e) + (e | a) * (e & a) ^ d) & (-(d ^ a) + (d | a) * -2 & e) * ((d ^ a) + (d | a) * -2 - 1 & ~e) + ((d ^ a) + (d | a) * -2 - 1 | e) * ((d ^ a) + (d | a) * -2 - 1 & e)",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 12,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 63.63636363636363,
                        "opsPercentages": {
                            "arithmetic": 31.818181818181817,
                            "mul": 18.181818181818183,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) & d) + (((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) | d) ^ 0xffffffff) ^ 0xffffffff | (0xffffffff - ((a ^ d ^ 0xffffffff) + (a | d) * 2 + 1) & e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) * (0xffffffff - ((a ^ d ^ 0xffffffff) + (a | d) * 2 + 1) | e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) + (0xffffffff - ((a ^ d ^ 0xffffffff) + (a | d) * 2 + 1) & (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ 0xffffffff)) * ((0xffffffff - ((a ^ d ^ 0xffffffff) + (a | d) * 2 + 1) ^ 0xffffffff) & e * 2 + 1 + (0xffffffff - e | 0xffffffff - e))) + ((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) & d) + (((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) | d) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 35,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 9.917355371900827,
                        "opsPercentages": {
                            "arithmetic": 33.94495412844037,
                            "mul": 16.51376146788991,
                            "bitwise": 49.54128440366973
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                },
                "msvc_default": {
                    "expr": "(~(((e & a) * (e | a) + (~a & e) * (~e & a) & d) + ~((e & a) * (e | a) + (~a & e) * (~e & a) | d)) | (0xffffffff - ((~d ^ a) + 1 + (a | d) * 2) & e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) * (0xffffffff - ((~d ^ a) + 1 + (a | d) * 2) | e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) + (0xffffffff - ((~d ^ a) + 1 + (a | d) * 2) & ~(e * 2 + 1 + (0xffffffff - e | 0xffffffff - e))) * (~(0xffffffff - ((~d ^ a) + 1 + (a | d) * 2)) & e * 2 + 1 + (0xffffffff - e | 0xffffffff - e))) + 1 + ((e & a) * (e | a) + (~a & e) * (~e & a) & d) + ~((e & a) * (e | a) + (~a & e) * (~e & a) | d)",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 29,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 9.917355371900827,
                        "opsPercentages": {
                            "arithmetic": 33.94495412844037,
                            "mul": 16.51376146788991,
                            "bitwise": 49.54128440366973
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                },
                "gcc_O3": {
                    "expr": "((~a & e) * (~e & a) + (e & a) * (e | a) & d) + ((((a | d) * 2 - (d ^ a) & ~e + e * 2 + 1) * (e - e * 2 + 1 & ((d ^ a) + (a | d) * -2) - 1) + (((d ^ a) + (a | d) * -2) - 1 & ~e + e * 2 + 1) * (((d ^ a) + (a | d) * -2) - 1 | ~e + e * 2 + 1) | d ^ (~a & e) * (~e & a) + (e & a) * (e | a)) - (d | (~a & e) * (~e & a) + (e & a) * (e | a)))",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 22,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 36.36363636363637,
                        "opsPercentages": {
                            "arithmetic": 31.16883116883117,
                            "mul": 20.77922077922078,
                            "bitwise": 48.05194805194805
                        },
                        "percentageDAGsCancel": 2.857142857142857
                    }
                }
            }
        },
        {
            "num": 17,
            "gt": {
                "expr": "((((~e)^d)&(d&(~(c-(d|e))))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 14.285714285714285,
                        "mul": 0.0,
                        "bitwise": 85.71428571428571
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "(~ ((((- e - 1) - d) - (((- e - 1) | ~ d) << 1)) - 2) | ((d | ((c + ~ (((d + e) + 1) + ((- d - 1) | (- e - 1)))) + 1)) - ((c + ~ (((d + e) + 1) + ((- d - 1) | (- e - 1)))) + 1))) - ~ ((((- e - 1) - d) - (((- e - 1) | ~ d) << 1)) - 2)",
                "attributes": {
                    "numOps": 48,
                    "nestedExprLevel": 27,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 70.83333333333334,
                        "mul": 0.0,
                        "bitwise": 29.166666666666668
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(e & d) * -2 - (e + d)) - 3 & -(((d & e) - (e + d + 1)) + c) - 2 & d",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 6,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 6.25,
                            "bitwise": 31.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((((((((c - ~(d & e)) - d) - e) - 1 | d) - c) + ~(d & e) + 1 + d + e | ~(((-3 - (-1 - e) * 2 | ~d * 2) - d) - e)) - (-1 - e) * 2 | ~d * 2) - d) - e) + -2",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 15,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 22.916666666666664,
                        "opsPercentages": {
                            "arithmetic": 59.45945945945946,
                            "mul": 10.81081081081081,
                            "bitwise": 29.72972972972973
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(d - c) + e + ~d | ~e & d & ((~e - d) + ~d | ~e * -2) - 2",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 3,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 64.58333333333334,
                        "opsPercentages": {
                            "arithmetic": 41.17647058823529,
                            "mul": 5.88235294117647,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_default": {
                    "expr": "(((-d - e) + (0xffffffff - e | d ^ 0xffffffff) * -2) - 3 ^ 0xffffffff | (d | c + (d + e + 1 + (0xffffffff - d | 0xffffffff - e) ^ 0xffffffff) + 1) - (c + (d + e + 1 + (0xffffffff - d | 0xffffffff - e) ^ 0xffffffff) + 1)) - (((-d - e) + (0xffffffff - e | d ^ 0xffffffff) * -2) - 3 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 11,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 12.5,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 4.761904761904762,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(((-d - e) + (0xffffffff - e | ~d) * -2) - 3) | (c + 1 + ~(d + e + 1 + (0xffffffff - d | 0xffffffff - e)) | d) - (c + 1 + ~(d + e + 1 + (0xffffffff - d | 0xffffffff - e)))) - ~(((-d - e) + (0xffffffff - e | ~d) * -2) - 3)",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 12,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 12.5,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 4.761904761904762,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "gcc_O3": {
                    "expr": "-(c + ((d & e) - (d + e + 1))) - 2 & -(d + e + ~(d & e) * 2) - 3 & d",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 6.25,
                            "bitwise": 31.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 18,
            "gt": {
                "expr": "((-(~(((a+d)+b)+(d^(a&b))))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 0.0,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((((a | d) + (a & d)) | b) << 1) - (((a | d) + (a & d)) ^ b)) - ~ ((d | (((~ a | b) + a) + 1)) - (d & (((~ a | b) + a) + 1)))) - 1) + 1",
                "attributes": {
                    "numOps": 25,
                    "nestedExprLevel": 19,
                    "numDAGs": 18,
                    "opsPercentages": {
                        "arithmetic": 44.0,
                        "mul": 0.0,
                        "bitwise": 56.00000000000001
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((d + a | b) * 2 - (d + a ^ b)) - (-((~a | b) + a) - 2 ^ d)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 48.0,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 7.6923076923076925,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(a + 1 + (~a | b) | d) + 1 + ((((a | d) + (a & d) * 2 | b * 2) - (a + 1 + (~a | b) & d)) - ((a | d) + (a & d) ^ b))",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 4.0,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 8.333333333333332,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "clang_O3": {
                    "expr": "(d + a | b) * 2 - ((-((~a | b) + a) - 2 ^ d) + (d + a ^ b))",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 5,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 48.0,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 7.6923076923076925,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((a | d) + (a & d) | b) * 2 - ((a | d) + (a & d) ^ b)) - ((d | (a ^ 0xffffffff | b) + a + 1) - (d & (a ^ 0xffffffff | b) + a + 1) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 10,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 8.0,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 4.3478260869565215,
                            "bitwise": 56.52173913043478
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "msvc_default": {
                    "expr": "(((a | d) + (a & d) | b) * 2 - ((a | d) + (a & d) ^ b)) - ~(((~a | b) + 1 + a | d) - ((~a | b) + 1 + a & d))",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 10,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 8.0,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 4.3478260869565215,
                            "bitwise": 56.52173913043478
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((d + a | b) * 2 - (d + a ^ b)) - (-((~a | b) + a) - 2 ^ d)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 48.0,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 7.6923076923076925,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 19,
            "gt": {
                "expr": "(((((b+(-b))|b)|(b*b))|((d^b)-b)))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 12.5,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((((((((((b | (~ b + 1)) + (b & (~ b + 1))) + b) + 1) + ((- ((b | (~ b + 1)) + (b & (~ b + 1))) - 1) | (- b - 1))) + ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + 1) + ((- (((((b | (~ b + 1)) + (b & (~ b + 1))) + b) + 1) + ((- ((b | (~ b + 1)) + (b & (~ b + 1))) - 1) | (- b - 1))) - 1) | (- ((b & b) * (b | b) + (b & ~ b) * (~ b & b)) - 1))) + ((((d | b) - (d & b)) & ~ b) - (~ ((d | b) - (d & b)) & b))) + 1) + ((- ((((((((b | (~ b + 1)) + (b & (~ b + 1))) + b) + 1) + ((- ((b | (~ b + 1)) + (b & (~ b + 1))) - 1) | (- b - 1))) + ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + 1) + ((- (((((b | (~ b + 1)) + (b & (~ b + 1))) + b) + 1) + ((- ((b | (~ b + 1)) + (b & (~ b + 1))) - 1) | (- b - 1))) - 1) | (- ((b & b) * (b | b) + (b & ~ b) * (~ b & b)) - 1))) - 1) | (- ((((d | b) - (d & b)) & ~ b) - (~ ((d | b) - (d & b)) & b)) - 1))",
                "attributes": {
                    "numOps": 170,
                    "nestedExprLevel": 92,
                    "numDAGs": 43,
                    "opsPercentages": {
                        "arithmetic": 48.8235294117647,
                        "mul": 4.705882352941177,
                        "bitwise": 46.470588235294116
                    },
                    "percentageDAGsCancel": 23.25581395348837
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~(d ^ b) & b) - ((d ^ b) & ~b)) - 1 | (b * b & b) - (b + b * b + 1)) + b + b * b + ~(b * b & b) + (((d ^ b) & ~b) - (~(d ^ b) & b)) + 2",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 11,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 81.76470588235294,
                        "opsPercentages": {
                            "arithmetic": 35.483870967741936,
                            "mul": 12.903225806451612,
                            "bitwise": 51.61290322580645
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "msvc_O1": {
                    "expr": "~b + 1 | b + 3 + (((((((~b * b - (((-2 - ~~b + 1 | b - ~b + 1 & b | ~b) - ~b + 1 & b) - ~b + 1 | b) - b | ~(b * b)) - ~~b + 1 | b - ~b + 1 & b | ~b) - ~b + 1 & b) - ~b + 1 | b) - 3 | (~(b | d) - (b & d) & b - (b | d) - (b & d) & ~b) - 1) + (b + 1) * b) - ~(b | d) - (b & d) & b) + (b | d) - (b & d) & ~b + (((-2 - ~~b + 1 | b - ~b + 1 & b | ~b) - ~b + 1 & b) - ~b + 1 | b) - b | ~(b * b) + ~~b + 1 | b - ~b + 1 & b | ~b + ~b + 1 & b",
                    "attributes": {
                        "numOps": 120,
                        "nestedExprLevel": 19,
                        "numDAGs": 66,
                        "percentDecreaseByOps": 29.411764705882355,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 3.3333333333333335,
                            "bitwise": 55.00000000000001
                        },
                        "percentageDAGsCancel": 3.0303030303030303
                    }
                },
                "clang_O3": {
                    "expr": "(~b & d) - (d & b) | b * b | b",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 95.88235294117648,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 14.285714285714285,
                            "bitwise": 71.42857142857143
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(b | (b ^ 0xffffffff) + 1) + (b & (b ^ 0xffffffff) + 1) + b + (0xffffffff - ((b | (b ^ 0xffffffff) + 1) + (b & (b ^ 0xffffffff) + 1)) | 0xffffffff - b) + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) + (0xffffffff - ((b | (b ^ 0xffffffff) + 1) + (b & (b ^ 0xffffffff) + 1) + b + 1 + (0xffffffff - ((b | (b ^ 0xffffffff) + 1) + (b & (b ^ 0xffffffff) + 1)) | 0xffffffff - b)) | 0xffffffff - (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b))) + (((d | b) - (d & b) & (b ^ 0xffffffff)) - (((d | b) - (d & b) ^ 0xffffffff) & b)) + 3 + (0xffffffff - ((b | (b ^ 0xffffffff) + 1) + (b & (b ^ 0xffffffff) + 1) + b + (0xffffffff - ((b | (b ^ 0xffffffff) + 1) + (b & (b ^ 0xffffffff) + 1)) | 0xffffffff - b) + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) + 2 + (0xffffffff - ((b | (b ^ 0xffffffff) + 1) + (b & (b ^ 0xffffffff) + 1) + b + 1 + (0xffffffff - ((b | (b ^ 0xffffffff) + 1) + (b & (b ^ 0xffffffff) + 1)) | 0xffffffff - b)) | 0xffffffff - (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b))) ) | 0xffffffff - (((d | b) - (d & b) & (b ^ 0xffffffff)) - (((d | b) - (d & b) ^ 0xffffffff) & b)))",
                    "attributes": {
                        "numOps": 145,
                        "nestedExprLevel": 53,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 14.705882352941178,
                        "opsPercentages": {
                            "arithmetic": 45.51724137931035,
                            "mul": 5.517241379310345,
                            "bitwise": 48.96551724137931
                        },
                        "percentageDAGsCancel": 13.157894736842104
                    }
                },
                "msvc_default": {
                    "expr": "(~b + 1 & b) + (~b + 1 | b) + b + (0xffffffff - ((~b + 1 | b) + (~b + 1 & b)) | 0xffffffff - b) + b * b + (0xffffffff - ((~b + 1 & b) + (~b + 1 | b) + b + 1 + (0xffffffff - ((~b + 1 | b) + (~b + 1 & b)) | 0xffffffff - b)) | 0xffffffff - b * b) + (((d | b) - (d & b) & ~b) - (~((d | b) - (d & b)) & b)) + 3 + (0xffffffff - ((~b + 1 & b) + (~b + 1 | b) + b + (0xffffffff - ((~b + 1 | b) + (~b + 1 & b)) | 0xffffffff - b) + b * b + 2 + (0xffffffff - ((~b + 1 & b) + (~b + 1 | b) + b + 1 + (0xffffffff - ((~b + 1 | b) + (~b + 1 & b)) | 0xffffffff - b)) | 0xffffffff - b * b)) | 0xffffffff - (((d | b) - (d & b) & ~b) - (~((d | b) - (d & b)) & b)))",
                    "attributes": {
                        "numOps": 121,
                        "nestedExprLevel": 35,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 28.823529411764703,
                        "opsPercentages": {
                            "arithmetic": 51.2396694214876,
                            "mul": 3.3057851239669422,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 14.705882352941178
                    }
                },
                "gcc_O3": {
                    "expr": "(~b & (d ^ b) - b) + (b * b + 1 + b - b * b & b) + ((b - ~b & (d ^ b)) - 1 | b * b & b - b * b + 1 + b)",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 6,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 85.88235294117646,
                        "opsPercentages": {
                            "arithmetic": 45.83333333333333,
                            "mul": 16.666666666666664,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 20,
            "gt": {
                "expr": "(((a|a)^(-(e*(e-b)))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((((a + a) + 1) + ((- a - 1) | (- a - 1))) - ~ (((e & ((e ^ b) - ((~ e & b) << 1))) * (e | ((e ^ b) - ((~ e & b) << 1))) + (e & ~ ((e ^ b) - ((~ e & b) << 1))) * (~ e & ((e ^ b) - ((~ e & b) << 1)))) - 1)) - (((((a + a) + 1) + ((- a - 1) | (- a - 1))) | ~ (~ (((e & ((e ^ b) - ((~ e & b) << 1))) * (e | ((e ^ b) - ((~ e & b) << 1))) + (e & ~ ((e ^ b) - ((~ e & b) << 1))) * (~ e & ((e ^ b) - ((~ e & b) << 1)))) - 1))) << 1)) - 2",
                "attributes": {
                    "numOps": 84,
                    "nestedExprLevel": 43,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 34.523809523809526,
                        "mul": 4.761904761904762,
                        "bitwise": 60.71428571428571
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "a * 2 + ~a + ((e ^ b) + (~e & b) * -2 & ~e) * ((~e & b) * 2 + ~(e ^ b) & e) + ((e ^ b) + (~e & b) * -2 & e) * ((e ^ b) + (~e & b) * -2 | e) + ((((e ^ b) + (~e & b) * -2 & ~e) * ((~e & b) * 2 + ~(e ^ b) & e) + ((e ^ b) + (~e & b) * -2 & e) * ((e ^ b) + (~e & b) * -2 | e)) - 1 | a * 2 + 1 + ~a) * -2 + -1",
                    "attributes": {
                        "numOps": 79,
                        "nestedExprLevel": 19,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 5.952380952380952,
                        "opsPercentages": {
                            "arithmetic": 31.645569620253166,
                            "mul": 18.9873417721519,
                            "bitwise": 49.36708860759494
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                },
                "msvc_O1": {
                    "expr": "a + -2 + (((b ^ e) + (~e & b) * -2 | e) * ((b ^ e) + (~e & b) * -2 & e) - ((((b ^ e) + (~e & b) * -2 | e) * ((b ^ e) + (~e & b) * -2 & e) + (~(b ^ e) + (~e & b) * -2 & e) * ((b ^ e) + (~e & b) * -2 & ~e)) * 2 - 2 | a * 2)) + (~(b ^ e) + (~e & b) * -2 & e) * ((b ^ e) + (~e & b) * -2 & ~e)",
                    "attributes": {
                        "numOps": 74,
                        "nestedExprLevel": 20,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 11.904761904761903,
                        "opsPercentages": {
                            "arithmetic": 31.08108108108108,
                            "mul": 18.91891891891892,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "clang_O3": {
                    "expr": "((e ^ b) + (b & ~e) * -2 | e) * ((e ^ b) + (b & ~e) * -2 & e) + ((e ^ b) + (b & ~e) * -2 & ~e) * (~(e ^ b) + (b & ~e) * -2 & e) + a + ((((e ^ b) + (b & ~e) * -2 | e) * ((e ^ b) + (b & ~e) * -2 & e) + ((e ^ b) + (b & ~e) * -2 & ~e) * (~(e ^ b) + (b & ~e) * -2 & e)) - 1 | a) * -2 + -2",
                    "attributes": {
                        "numOps": 74,
                        "nestedExprLevel": 19,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 11.904761904761903,
                        "opsPercentages": {
                            "arithmetic": 32.432432432432435,
                            "mul": 17.56756756756757,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a * 2 + (0xffffffff - a | 0xffffffff - a)) - (((e & (e ^ b) + ((e ^ 0xffffffff) & b) * -2) * (e | (e ^ b) + ((e ^ 0xffffffff) & b) * -2) + (e & ((e ^ b) + ((e ^ 0xffffffff) & b) * -2 ^ 0xffffffff)) * ((e ^ 0xffffffff) & (e ^ b) + ((e ^ 0xffffffff) & b) * -2)) - 1 ^ 0xffffffff)) + (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) | ((e & (e ^ b) + ((e ^ 0xffffffff) & b) * -2) * (e | (e ^ b) + ((e ^ 0xffffffff) & b) * -2) + (e & ((e ^ b) + ((e ^ 0xffffffff) & b) * -2 ^ 0xffffffff)) * ((e ^ 0xffffffff) & (e ^ b) + ((e ^ 0xffffffff) & b) * -2)) - 1 ) * -2 + -1",
                    "attributes": {
                        "numOps": 87,
                        "nestedExprLevel": 28,
                        "numDAGs": 28,
                        "percentDecreaseByOps": -3.571428571428571,
                        "opsPercentages": {
                            "arithmetic": 36.7816091954023,
                            "mul": 17.24137931034483,
                            "bitwise": 45.97701149425287
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "msvc_default": {
                    "expr": "((a * 2 + (0xffffffff - a | 0xffffffff - a)) - ~(((e ^ b) + (~e & b) * -2 & e) * ((e ^ b) + (~e & b) * -2 | e) + -1 + (~((e ^ b) + (~e & b) * -2) & e) * (~e & (e ^ b) + (~e & b) * -2))) + (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) | ((e ^ b) + (~e & b) * -2 & e) * ((e ^ b) + (~e & b) * -2 | e) + -1 + (~((e ^ b) + (~e & b) * -2) & e) * (~e & (e ^ b) + (~e & b) * -2)) * -2 + -1",
                    "attributes": {
                        "numOps": 89,
                        "nestedExprLevel": 23,
                        "numDAGs": 28,
                        "percentDecreaseByOps": -5.952380952380952,
                        "opsPercentages": {
                            "arithmetic": 38.20224719101123,
                            "mul": 16.853932584269664,
                            "bitwise": 44.9438202247191
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "a + (~(e ^ b) + b & ~e * 2 & e) * (~e & (e ^ b) + b & ~e * -2) + ((e ^ b) + b & ~e * -2 & e) * ((e ^ b) + b & ~e * -2 | e) + ((~(e ^ b) + b & ~e * 2 & e) * (~e & (e ^ b) + b & ~e * -2) + ((e ^ b) + b & ~e * -2 & e) * ((e ^ b) + b & ~e * -2 | e) - 1 | a) * -2 + -2",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 11,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 14.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 30.555555555555557,
                            "mul": 18.055555555555554,
                            "bitwise": 51.388888888888886
                        },
                        "percentageDAGsCancel": 8.0
                    }
                }
            }
        },
        {
            "num": 21,
            "gt": {
                "expr": "(((a^(-(a&c)))|(-(a^a))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "((((a | (~ ((~ a | c) - ~ a) + 1)) - (a & (~ ((~ a | c) - ~ a) + 1))) + (~ (((a - a) - ((a | ~ a) + (a | ~ a))) - 2) + 1)) + 1) + ((- ((a | (~ ((~ a | c) - ~ a) + 1)) - (a & (~ ((~ a | c) - ~ a) + 1))) - 1) | (- (~ (((a - a) - ((a | ~ a) + (a | ~ a))) - 2) + 1) - 1))",
                "attributes": {
                    "numOps": 58,
                    "nestedExprLevel": 30,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 46.55172413793103,
                        "mul": 0.0,
                        "bitwise": 53.44827586206896
                    },
                    "percentageDAGsCancel": 17.391304347826086
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(c & a) ^ a",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 94.82758620689656,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~((~a | c) + a) | a) - (~((~a | c) + a) & a)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 6,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 81.03448275862068,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 0.0,
                            "bitwise": 72.72727272727273
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-(c & a) ^ a",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 94.82758620689656,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a | ((a ^ 0xffffffff | c) - (a ^ 0xffffffff) ^ 0xffffffff) + 1) - (a & ((a ^ 0xffffffff | c) - (a ^ 0xffffffff) ^ 0xffffffff) + 1)) + (0xfffffffe - ((a | a ^ 0xffffffff) + (a | a ^ 0xffffffff)) ^ 0xffffffff) + 2 + (0xffffffff - ((a | ((a ^ 0xffffffff | c) - (a ^ 0xffffffff) ^ 0xffffffff) + 1) - (a & ((a ^ 0xffffffff | c) - (a ^ 0xffffffff) ^ 0xffffffff) + 1)) | 0xffffffff - ((0xfffffffe - ((a | a ^ 0xffffffff) + (a | a ^ 0xffffffff)) ^ 0xffffffff) + 1))",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 23,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 12.068965517241379,
                        "opsPercentages": {
                            "arithmetic": 39.21568627450981,
                            "mul": 0.0,
                            "bitwise": 60.78431372549019
                        },
                        "percentageDAGsCancel": 15.789473684210526
                    }
                },
                "msvc_default": {
                    "expr": "(~((~a | c) - ~a) + 1 | a) - (~((~a | c) - ~a) + 1 & a)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 74.13793103448276,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-(c & a) ^ a",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 94.82758620689656,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 22,
            "gt": {
                "expr": "((((d&c)+(-(c*a)))^(-((d-(~c))-(-c)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 10.0,
                        "bitwise": 30.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "((((((~ d | c) - ~ d) ^ ~ (~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) + 1)) + ((((~ d | c) - ~ d) | (~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) + 1)) << 1)) + 1) | (~ ((((d + ~ (- c - 1)) + 1) & ~ (~ (c - 1))) - (~ ((d + ~ (- c - 1)) + 1) & ~ (c - 1))) + 1)) - ((((((~ d | c) - ~ d) ^ ~ (~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) + 1)) + ((((~ d | c) - ~ d) | (~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) + 1)) << 1)) + 1) & (~ ((((d + ~ (- c - 1)) + 1) & ~ (~ (c - 1))) - (~ ((d + ~ (- c - 1)) + 1) & ~ (c - 1))) + 1))",
                "attributes": {
                    "numOps": 117,
                    "nestedExprLevel": 53,
                    "numDAGs": 37,
                    "opsPercentages": {
                        "arithmetic": 35.04273504273504,
                        "mul": 6.837606837606838,
                        "bitwise": 58.119658119658126
                    },
                    "percentageDAGsCancel": 2.7027027027027026
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-c & -(c + d) - 2) + ~(c - 1 & c + d + 1) + 1 ^ (-((~c & a) * (~a & c) + (c & a) * (c | a)) | c & d) * 2 + (c & d ^ ((~c & a) * (~a & c) + (c & a) * (c | a)) - 1) + 1",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 11,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 65.8119658119658,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 12.5,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((~d | c) + d * 2 + 2 | ~((~c & a) * (~a & c) + (a | c) * (a & c)) * 2 + 2) + (~(~((~c & a) * (~a & c) + (a | c) * (a & c)) + 1) ^ (~d | c) + d + 1) + 1 | ~(d + 1 + c | c - 1) - (d + 1 + c & c - 1)) - (((~d | c) + d * 2 + 2 | ~((~c & a) * (~a & c) + (a | c) * (a & c)) * 2 + 2) + (~(~((~c & a) * (~a & c) + (a | c) * (a & c)) + 1) ^ (~d | c) + d + 1) + 1 & ~(d + 1 + c | c - 1) - (d + 1 + c & c - 1))",
                    "attributes": {
                        "numOps": 97,
                        "nestedExprLevel": 24,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 17.094017094017094,
                        "opsPercentages": {
                            "arithmetic": 36.08247422680412,
                            "mul": 12.371134020618557,
                            "bitwise": 51.546391752577314
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-((((c | a) * (c & a) + (~c & a) * (~a & c)) - 1 ^ d & c) + (-((c | a) * (c & a) + (~c & a) * (~a & c)) | d & c) * 2) - 2 ^ d + c * 2",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 10,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 73.50427350427351,
                        "opsPercentages": {
                            "arithmetic": 25.806451612903224,
                            "mul": 19.35483870967742,
                            "bitwise": 54.83870967741935
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d ^ 0xffffffff | c) - (d ^ 0xffffffff) ^ ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) + 1 ^ 0xffffffff) + ((d ^ 0xffffffff | c) - (d ^ 0xffffffff) | ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) + 1) * 2 + 1 | ((d + (0xffffffff - c ^ 0xffffffff) + 1 & c - 1) - ((d + (0xffffffff - c ^ 0xffffffff) + 1 ^ 0xffffffff) & (c - 1 ^ 0xffffffff)) ^ 0xffffffff) + 1) - (((d ^ 0xffffffff | c) - (d ^ 0xffffffff) ^ ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) + 1 ^ 0xffffffff) + ((d ^ 0xffffffff | c) - (d ^ 0xffffffff) | ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) + 1) * 2 + 1 & ((d + (0xffffffff - c ^ 0xffffffff) + 1 & c - 1) - ((d + (0xffffffff - c ^ 0xffffffff) + 1 ^ 0xffffffff) & (c - 1 ^ 0xffffffff)) ^ 0xffffffff) + 1)",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 37,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 6.837606837606838,
                        "opsPercentages": {
                            "arithmetic": 33.94495412844037,
                            "mul": 9.174311926605505,
                            "bitwise": 56.88073394495413
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "msvc_default": {
                    "expr": "(((~d | c) - ~d ^ ~(~((c & a) * (c | a) + (~a & c) * (~c & a)) + 1)) + 1 + ((~d | c) - ~d | ~((c & a) * (c | a) + (~a & c) * (~c & a)) + 1) * 2 | ~((d + 1 + ~(0xffffffff - c) & c - 1) - (~(d + 1 + ~(0xffffffff - c)) & ~(c - 1))) + 1) - (((~d | c) - ~d ^ ~(~((c & a) * (c | a) + (~a & c) * (~c & a)) + 1)) + 1 + ((~d | c) - ~d | ~((c & a) * (c | a) + (~a & c) * (~c & a)) + 1) * 2 & ~((d + 1 + ~(0xffffffff - c) & c - 1) - (~(d + 1 + ~(0xffffffff - c)) & ~(c - 1))) + 1)",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 31,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 6.837606837606838,
                        "opsPercentages": {
                            "arithmetic": 33.94495412844037,
                            "mul": 9.174311926605505,
                            "bitwise": 56.88073394495413
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(-(d + c) - 2 & -c) - (d + c + 1 & c - 1) ^ ((~c & a) * (~a & c) + (a | c) * (c & a) - 1 ^ d & c) + 1 + (-(~c & a) * (~a & c) + (a | c) * (c & a) | d & c) * 2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 9,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 67.52136752136752,
                        "opsPercentages": {
                            "arithmetic": 36.84210526315789,
                            "mul": 13.157894736842104,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                }
            }
        },
        {
            "num": 23,
            "gt": {
                "expr": "((((((e&e)^c)-e)|(a|(a&e)))^(a+((e|c)|e))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "((((((((((((~ e | e) + e) + 1) | c) - ((((~ e | e) + e) + 1) & c)) + ~ e) + 1) + (((a + (((~ a | e) + a) + 1)) + 1) + ((- a - 1) | (- (((~ a | e) + a) + 1) - 1)))) + 1) + ((- (((((((~ e | e) + e) + 1) | c) - ((((~ e | e) + e) + 1) & c)) + ~ e) + 1) - 1) | (- (((a + (((~ a | e) + a) + 1)) + 1) + ((- a - 1) | (- (((~ a | e) + a) + 1) - 1))) - 1))) - (((a | ((((e & ~ c) + c) & ~ e) + e)) + (a | ((((e & ~ c) + c) & ~ e) + e))) - (a ^ ((((e & ~ c) + c) & ~ e) + e)))) - ((((((((((((~ e | e) + e) + 1) | c) - ((((~ e | e) + e) + 1) & c)) + ~ e) + 1) + (((a + (((~ a | e) + a) + 1)) + 1) + ((- a - 1) | (- (((~ a | e) + a) + 1) - 1)))) + 1) + ((- (((((((~ e | e) + e) + 1) | c) - ((((~ e | e) + e) + 1) & c)) + ~ e) + 1) - 1) | (- (((a + (((~ a | e) + a) + 1)) + 1) + ((- a - 1) | (- (((~ a | e) + a) + 1) - 1))) - 1))) | ~ (((a | ((((e & ~ c) + c) & ~ e) + e)) + (a | ((((e & ~ c) + c) & ~ e) + e))) - (a ^ ((((e & ~ c) + c) & ~ e) + e)))) << 1)) - 2",
                "attributes": {
                    "numOps": 188,
                    "nestedExprLevel": 118,
                    "numDAGs": 44,
                    "opsPercentages": {
                        "arithmetic": 55.85106382978723,
                        "mul": 0.0,
                        "bitwise": 44.148936170212764
                    },
                    "percentageDAGsCancel": 6.8181818181818175
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((-((~a | e) + a) - 2 | ~a) + a * 2 + (~a | e) + ~e + (e ^ c) + (~((-((~a | e) + a) - 2 | ~a) + a * 2 + (~a | e) + 2) | (e - (e ^ c)) - 1)) - ((e + ((~c & e) + c & ~e) | a) * 2 - (e + ((~c & e) + c & ~e) ^ a))) + ((e + ((~c & e) + c & ~e) ^ a) + ~((e + ((~c & e) + c & ~e) | a) * 2) | (-((~a | e) + a) - 2 | ~a) + a * 2 + (~a | e) + ~e + (e ^ c) + 4 + (~((-((~a | e) + a) - 2 | ~a) + a * 2 + (~a | e) + 2) | (e - (e ^ c)) - 1)) * -2 + 2",
                    "attributes": {
                        "numOps": 110,
                        "nestedExprLevel": 33,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 41.48936170212766,
                        "opsPercentages": {
                            "arithmetic": 42.72727272727273,
                            "mul": 6.363636363636363,
                            "bitwise": 50.90909090909091
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_O1": {
                    "expr": "(((((c & e - c | e) + -1 + e | ((a * -2 + -3) - (-2 - ~a | e) - a | ~a) - ~a | e) - (((e * 2 & c * 2) + ((e - c | e) + -1) * 2 | ((a * -2 + -3) - (-2 - ~a | e) - a | ~a) - ~a | e * 2) + (a * -2 - 2 | (-2 - ~a | e) - a * 2) + ((a * 2 - c & e) + ~a | e + ~e) * 2 + 8 + (e * 2 | c * 2) | ~(((~c & e) + c & ~e) + e | a * 2 - ((~c & e) + c & ~e) + e ^ a) * 2)) + (a - ((~c & e) + c & ~e) + e | a) * 2 + 2) - c & e) + ((~c & e) + c & ~e) + e ^ a + (-2 - ~a | e) - a | ~a + c | e + ~a | e + ~e",
                    "attributes": {
                        "numOps": 130,
                        "nestedExprLevel": 22,
                        "numDAGs": 75,
                        "percentDecreaseByOps": 30.851063829787233,
                        "opsPercentages": {
                            "arithmetic": 44.61538461538462,
                            "mul": 11.538461538461538,
                            "bitwise": 43.84615384615385
                        },
                        "percentageDAGsCancel": 2.666666666666667
                    }
                },
                "clang_O3": {
                    "expr": "((-(~a | e) + a - 2 | ~a) + (~a | e) + a + a + 2 | (e ^ c) - e - (e | a) * 2 - (e ^ a)) + (~(e | a) * 2 - (e ^ a) | (-(~a | e) + a - 2 | ~a) + (~a | e) + a + a + 2 | (e ^ c) - e) * -2 + -2",
                    "attributes": {
                        "numOps": 48,
                        "nestedExprLevel": 10,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 74.46808510638297,
                        "opsPercentages": {
                            "arithmetic": 47.91666666666667,
                            "mul": 6.25,
                            "bitwise": 45.83333333333333
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "clang_default": {
                    "expr": "(((((e ^ 0xffffffff | e) + e + 1 | c) - ((e ^ 0xffffffff | e) + e + 1 & c)) + (e ^ 0xffffffff) + (a ^ 0xffffffff | e) + a * 2 + (0xffffffff - a | 0xffffffff - ((a ^ 0xffffffff | e) + a + 1)) + (0xffffffff - ((((e ^ 0xffffffff | e) + e + 1 | c) - ((e ^ 0xffffffff | e) + e + 1 & c)) + (e ^ 0xffffffff) + 1) | 0xffffffff - ((a ^ 0xffffffff | e) + a * 2 + 2 + (0xffffffff - a | 0xffffffff - ((a ^ 0xffffffff | e) + a + 1))))) - (((a | ((e & (c ^ 0xffffffff)) + c & (e ^ 0xffffffff)) + e ) + (a | ((e & (c ^ 0xffffffff)) + c & (e ^ 0xffffffff)) + e)) - (a ^ ((e & (c ^ 0xffffffff)) + c & (e ^ 0xffffffff)) + e)) ) + ((((e ^ 0xffffffff | e) + e + 1 | c) - ((e ^ 0xffffffff | e) + e + 1 & c)) + (e ^ 0xffffffff) + (a ^ 0xffffffff | e) + a * 2 + (0xffffffff - a | 0xffffffff - ((a ^ 0xffffffff | e) + a + 1)) + 4 + (0xffffffff - ((((e ^ 0xffffffff | e) + e + 1 | c) - ((e ^ 0xffffffff | e) + e + 1 & c)) + (e ^ 0xffffffff) + 1) | 0xffffffff - ((a ^ 0xffffffff | e) + a * 2 + 2 + (0xffffffff - a | 0xffffffff - ((a ^ 0xffffffff | e) + a + 1) ))) | ((a | ((e & (c ^ 0xffffffff)) + c & (e ^ 0xffffffff)) + e) + (a | ((e & (c ^ 0xffffffff)) + c & (e ^ 0xffffffff)) + e)) - (a ^ ((e & (c ^ 0xffffffff)) + c & (e ^ 0xffffffff)) + e) ^ 0xffffffff) * -2 + 2",
                    "attributes": {
                        "numOps": 168,
                        "nestedExprLevel": 61,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 10.638297872340425,
                        "opsPercentages": {
                            "arithmetic": 48.214285714285715,
                            "mul": 2.976190476190476,
                            "bitwise": 48.80952380952381
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((((e | c) - (e & c)) + ~e + (~a | e) + a * 2 + (0xffffffff - a | 0xffffffff - ((~a | e) + 1 + a)) + (0xffffffff - (((e | c) - (e & c)) + 1 + ~e) | 0xffffffff - ((~a | e) + a * 2 + 2 + (0xffffffff - a | 0xffffffff - ((~a | e) + 1 + a))))) - (((((~c & e) + c & ~e) + e | a) + (((~c & e) + c & ~e) + e | a)) - (((~c & e) + c & ~e) + e ^ a))) + (((e | c) - (e & c)) + ~e + (~a | e) + a * 2 + (0xffffffff - a | 0xffffffff - ((~a | e) + 1 + a)) + 4 + (0xffffffff - (((e | c) - (e & c)) + 1 + ~e) | 0xffffffff - ((~a | e) + a * 2 + 2 + (0xffffffff - a | 0xffffffff - ((~a | e) + 1 + a)))) | ~(((((~c & e) + c & ~e) + e | a) + (((~c & e) + c & ~e) + e | a)) - (((~c & e) + c & ~e) + e ^ a))) * -2 + 2",
                    "attributes": {
                        "numOps": 136,
                        "nestedExprLevel": 43,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 27.659574468085108,
                        "opsPercentages": {
                            "arithmetic": 47.794117647058826,
                            "mul": 3.6764705882352944,
                            "bitwise": 48.529411764705884
                        },
                        "percentageDAGsCancel": 6.976744186046512
                    }
                },
                "gcc_O3": {
                    "expr": "((~(~a | e) + a + 2 + a + (-(~a | e) + a - 2 | ~a) | (e - (e ^ c)) - 1) + (~a | e) + a + 2 + a + (-(~a | e) + a - 2 | ~a) + 1 + ((e ^ c) - e) - ((e | a) * 2 - e ^ a)) + (~(e | a) * 2 + e ^ a | (~(~a | e) + a + 2 + a + (-(~a | e) + a - 2 | ~a) | (e - (e ^ c)) - 1) + (~a | e) + a + 2 + a + (-(~a | e) + a - 2 | ~a) + 1 + ((e ^ c) - e)) * -2 + -2",
                    "attributes": {
                        "numOps": 88,
                        "nestedExprLevel": 17,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 53.191489361702125,
                        "opsPercentages": {
                            "arithmetic": 53.40909090909091,
                            "mul": 3.4090909090909087,
                            "bitwise": 43.18181818181818
                        },
                        "percentageDAGsCancel": 2.7027027027027026
                    }
                }
            }
        },
        {
            "num": 24,
            "gt": {
                "expr": "((((d|d)^c)-(-(c|(-(d+(a-d)))))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 62.5,
                        "mul": 0.0,
                        "bitwise": 37.5
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((((((d + d) + 1) + ((- d - 1) | (- d - 1))) | c) - ((((d + d) + 1) + ((- d - 1) | (- d - 1))) & c)) + ~ (~ ((((c + (~ ((d | (((a & ~ d) << 1) - (a ^ d))) + (d & (((a & ~ d) << 1) - (a ^ d)))) + 1)) + 1) + ((- c - 1) | (- (~ ((d | (((a & ~ d) << 1) - (a ^ d))) + (d & (((a & ~ d) << 1) - (a ^ d)))) + 1) - 1))) - 1))) + 1",
                "attributes": {
                    "numOps": 62,
                    "nestedExprLevel": 40,
                    "numDAGs": 32,
                    "opsPercentages": {
                        "arithmetic": 53.2258064516129,
                        "mul": 0.0,
                        "bitwise": 46.774193548387096
                    },
                    "percentageDAGsCancel": 15.625
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((d + ((~d & a) * 2 - (a ^ d))) - 1 | ~c) + (c - (((~d & a) * 2 - (a ^ d)) + d)) + (~d + d * 2 + 1 ^ c) + 1",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 10,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 61.29032258064516,
                        "opsPercentages": {
                            "arithmetic": 45.83333333333333,
                            "mul": 12.5,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 22.22222222222222
                    }
                },
                "msvc_O1": {
                    "expr": "(c | d) + c + ((((~d & a) * 2 - (a ^ d) | d) + ((~d & a) * 2 - (a ^ d) & d) - 1 | ~c) - (c & d)) + ~((~d & a) * 2 - (a ^ d) | d) + ((~d & a) * 2 - (a ^ d) & d) + 2",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 11,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 40.32258064516129,
                        "opsPercentages": {
                            "arithmetic": 32.432432432432435,
                            "mul": 10.81081081081081,
                            "bitwise": 56.75675675675676
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "clang_O3": {
                    "expr": "(d ^ c) + (((a ^ d) - d) + (~d & a) * -2 | c)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 83.87096774193549,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 10.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | c) - (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & c)) + c + ((d | (a & (d ^ 0xffffffff)) * 2 - (a ^ d)) + (d & (a & (d ^ 0xffffffff)) * 2 - (a ^ d)) ^ 0xffffffff) + (0xffffffff - c | 0xffffffff - (((d | (a & (d ^ 0xffffffff)) * 2 - (a ^ d)) + (d & (a & (d ^ 0xffffffff)) * 2 - (a ^ d)) ^ 0xffffffff) + 1) ) + 2",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 20,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 17.741935483870968,
                        "opsPercentages": {
                            "arithmetic": 43.13725490196079,
                            "mul": 11.76470588235294,
                            "bitwise": 45.09803921568628
                        },
                        "percentageDAGsCancel": 8.0
                    }
                },
                "msvc_default": {
                    "expr": "((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | c) - (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & c)) + c + 2 + ~(((~d & a) * 2 - (a ^ d) | d) + ((~d & a) * 2 - (a ^ d) & d)) + (0xffffffff - c | 0xffffffff - (~(((~d & a) * 2 - (a ^ d) | d) + ((~d & a) * 2 - (a ^ d) & d)) + 1))",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 16,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 17.741935483870968,
                        "opsPercentages": {
                            "arithmetic": 43.13725490196079,
                            "mul": 11.76470588235294,
                            "bitwise": 45.09803921568628
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~c | (d + (~d & a) * 2) - (a ^ d) - 1) + (c - (d + (~d & a) * 2) - (a ^ d)) + 1 + (~d + 1 + d * 2 ^ c)",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 8,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 61.29032258064516,
                        "opsPercentages": {
                            "arithmetic": 45.83333333333333,
                            "mul": 12.5,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                }
            }
        },
        {
            "num": 25,
            "gt": {
                "expr": "(((((c+c)|d)+(d|d))|(~(c|(c|d)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(((((((((c | c) + (c & c)) + d) + 1) + ((- ((c | c) + (c & c)) - 1) | (- d - 1))) - ~ ((d & ~ d) + d)) - 1) + (- ((c & ~ (((c + d) + 1) + ((- c - 1) | (- d - 1)))) + (((c + d) + 1) + ((- c - 1) | (- d - 1)))) - 1)) + 1) + ((- (((((((c | c) + (c & c)) + d) + 1) + ((- ((c | c) + (c & c)) - 1) | (- d - 1))) - ~ ((d & ~ d) + d)) - 1) - 1) | (- (- ((c & ~ (((c + d) + 1) + ((- c - 1) | (- d - 1)))) + (((c + d) + 1) + ((- c - 1) | (- d - 1)))) - 1) - 1))",
                "attributes": {
                    "numOps": 90,
                    "nestedExprLevel": 52,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 72.22222222222221,
                        "mul": 0.0,
                        "bitwise": 27.77777777777778
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(c & d) + d + c + 1 + ((c & d) - (d + c + 1) & c) | ~d - ((~d | c * -2 - 1) + d + c * 2 + 1)) + ~(~(c & d) + d + c + 1 + ((c & d) - (d + c + 1) & c)) + ((d + c * 2 + (~d | c * -2 - 1)) - ~d) + 1",
                    "attributes": {
                        "numOps": 48,
                        "nestedExprLevel": 11,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 46.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 58.333333333333336,
                            "mul": 8.333333333333332,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "msvc_O1": {
                    "expr": "c + ((((((~d - ~(c * 2) | ~d) + c * -2) - d) - 1 | ~c | ~d + 1 + ~(d + 1 + c + ~c | ~d) & c + c + d) - ~(d + 1 + c + ~c | ~d) & c) - ~c | ~d) + ~(c * 2) | ~d + d",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 9,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 47.77777777777778,
                        "opsPercentages": {
                            "arithmetic": 42.5531914893617,
                            "mul": 6.382978723404255,
                            "bitwise": 51.06382978723404
                        },
                        "percentageDAGsCancel": 6.451612903225806
                    }
                },
                "clang_O3": {
                    "expr": "(~(~(c * 2) | ~d) + c * 2 + d * 2 + 1 | d + c + ~c | ~d + (~(~c | ~d + d + c + 1) & c) + 1) + ((~(c * 2) | ~d) + c * 2 + d * 2 + 1 - d + c + ~c | ~d + (~(~c | ~d + d + c + 1) & c) + 1)",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 8,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 42.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 42.30769230769231,
                            "mul": 11.538461538461538,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_default": {
                    "expr": "((c + (c * -2 - 1 | 0xffffffff - d)) - ((d & (d ^ 0xffffffff)) + d ^ 0xffffffff)) + ((-1 - (0xffffffff - c | 0xffffffff - d)) - (c & (c + d + 1 + (0xffffffff - c | 0xffffffff - d) ^ 0xffffffff ))) + (0xffffffff - ((c * 2 + d + (c * -2 - 1 | 0xffffffff - d)) - ((d & (d ^ 0xffffffff)) + d ^ 0xffffffff)) | 0xffffffff - (-1 - ((c & (c + d + 1 + (0xffffffff - c | 0xffffffff - d) ^ 0xffffffff)) + c + d + 1 + (0xffffffff - c | 0xffffffff - d))))",
                    "attributes": {
                        "numOps": 60,
                        "nestedExprLevel": 19,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 33.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 5.0,
                            "bitwise": 28.333333333333332
                        },
                        "percentageDAGsCancel": 11.428571428571429
                    }
                },
                "msvc_default": {
                    "expr": "((c + (c * -2 - 1 | 0xffffffff - d)) - ~d) + ((-1 - (0xffffffff - c | 0xffffffff - d)) - (~(c + d + 1 + (0xffffffff - c | 0xffffffff - d)) & c)) + (0xffffffff - ((c * 2 + d + (c * -2 - 1 | 0xffffffff - d)) - ~d) | 0xffffffff - (-1 - ((~(c + d + 1 + (0xffffffff - c | 0xffffffff - d)) & c) + c + d + 1 + (0xffffffff - c | 0xffffffff - d))) )",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 15,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 40.0,
                        "opsPercentages": {
                            "arithmetic": 70.37037037037037,
                            "mul": 5.555555555555555,
                            "bitwise": 24.074074074074073
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "gcc_O3": {
                    "expr": "((d + c * 2 + d - (c * 2 & d)) - ((c & d) - (c * 2 + d - c) + 1 & c) + ~(c & d) + (c * 2 + d - c) + 1) + (~d - c * 2 + d - (c * 2 & d) | ((c & d) - (c * 2 + d - c) + 1 & c) + ~(c & d) + (c * 2 + d - c) + 1)",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 10,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 48.888888888888886,
                        "opsPercentages": {
                            "arithmetic": 56.52173913043478,
                            "mul": 17.391304347826086,
                            "bitwise": 26.08695652173913
                        },
                        "percentageDAGsCancel": 4.0
                    }
                }
            }
        },
        {
            "num": 26,
            "gt": {
                "expr": "((((~(a*d))*(d+a))-(~((c+c)-((d-a)^d)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 20.0,
                        "bitwise": 30.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((- ((a & d) * (a | d) + (a & ~ d) * (~ a & d)) - 1) & (((d ^ ~ a) + ((d | a) << 1)) + 1)) * ((- ((a & d) * (a | d) + (a & ~ d) * (~ a & d)) - 1) | (((d ^ ~ a) + ((d | a) << 1)) + 1)) + ((- ((a & d) * (a | d) + (a & ~ d) * (~ a & d)) - 1) & ~ (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (~ (- ((a & d) * (a | d) + (a & ~ d) * (~ a & d)) - 1) & (((d ^ ~ a) + ((d | a) << 1)) + 1))) ^ (~ ((c ^ c) + ((c & c) + (c & c))) + (((((d & ~ a) - (~ d & a)) - d) - ((((d & ~ a) - (~ d & a)) | ~ d) << 1)) - 2))) - ((~ (((- ((a & d) * (a | d) + (a & ~ d) * (~ a & d)) - 1) & (((d ^ ~ a) + ((d | a) << 1)) + 1)) * ((- ((a & d) * (a | d) + (a & ~ d) * (~ a & d)) - 1) | (((d ^ ~ a) + ((d | a) << 1)) + 1)) + ((- ((a & d) * (a | d) + (a & ~ d) * (~ a & d)) - 1) & ~ (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (~ (- ((a & d) * (a | d) + (a & ~ d) * (~ a & d)) - 1) & (((d ^ ~ a) + ((d | a) << 1)) + 1))) & (~ ((c ^ c) + ((c & c) + (c & c))) + (((((d & ~ a) - (~ d & a)) - d) - ((((d & ~ a) - (~ d & a)) | ~ d) << 1)) - 2))) << 1)",
                "attributes": {
                    "numOps": 205,
                    "nestedExprLevel": 96,
                    "numDAGs": 44,
                    "opsPercentages": {
                        "arithmetic": 28.780487804878046,
                        "mul": 9.75609756097561,
                        "bitwise": 61.46341463414634
                    },
                    "percentageDAGsCancel": 6.8181818181818175
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~((~a & d) * (~d & a) + (a & d) * (a | d)) & (d | a) * 2 + ~(a ^ d) + 1) * ((d | a) * 2 + ~(a ^ d) + 1 | ~((~a & d) * (~d & a) + (a & d) * (a | d))) + ((d | a) * 2 + ~(a ^ d) + 1 & (a & d) * (a | d) + (~a & d) * (~d & a)) * (~((~a & d) * (~d & a) + (a & d) * (a | d)) & ((a ^ d) + (d | a) * -2) - 1) ^ (((~a & d) - (~d & a)) - d) + (~d | (~a & d) - (~d & a)) * -2 + -2 + ~(c * 2)) + ((((~a & d) - (~d & a)) - d) + (~d | (~a & d) - (~d & a)) * -2 + -2 + ~(c * 2) & ~(((d | a) * 2 + ~(a ^ d) + 1 & (a & d) * (a | d) + (~a & d) * (~d & a)) * (~((~a & d) * (~d & a) + (a & d) * (a | d)) & ((a ^ d) + (d | a) * -2) - 1) + (~((~a & d) * (~d & a) + (a & d) * (a | d)) & (d | a) * 2 + ~(a ^ d) + 1) * ((d | a) * 2 + ~(a ^ d) + 1 | ~((~a & d) * (~d & a) + (a & d) * (a | d))))) * -2",
                    "attributes": {
                        "numOps": 188,
                        "nestedExprLevel": 54,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 8.292682926829269,
                        "opsPercentages": {
                            "arithmetic": 24.46808510638298,
                            "mul": 17.5531914893617,
                            "bitwise": 57.97872340425532
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((((~(c * 2) - ((~a & d - ~d & a) * 2 | ~d * 2)) - ~d & a) - d) + (~a & d - 2) ^ (~(~a & d * ~d & a) - (a & d) * (a | d) & (~a ^ d) + (a | d) * 2 + 1) * ((~a ^ d) + (a | d) * 2 + 1 | ~(~a & d * ~d & a) - (a & d) * (a | d)) + (~~(~a & d * ~d & a) - (a & d) * (a | d) & (~a ^ d) + (a | d) * 2 + 1) * (~(~a ^ d) + (a | d) * 2 + 1 & ~(~a & d * ~d & a) - (a & d) * (a | d))) - (~(~(~a & d * ~d & a) - (a & d) * (a | d) & (~a ^ d) + (a | d) * 2 + 1) * ((~a ^ d) + (a | d) * 2 + 1 | ~(~a & d * ~d & a) - (a & d) * (a | d)) + (~~(~a & d * ~d & a) - (a & d) * (a | d) & (~a ^ d) + (a | d) * 2 + 1) * (~(~a ^ d) + (a | d) * 2 + 1 & ~(~a & d * ~d & a) - (a & d) * (a | d)) * 2 & (((~(c * 2) - ((~a & d - ~d & a) * 2 | ~d * 2)) - ~d & a) - d) + (~a & d - 2) * 2)",
                    "attributes": {
                        "numOps": 192,
                        "nestedExprLevel": 37,
                        "numDAGs": 50,
                        "percentDecreaseByOps": 6.341463414634147,
                        "opsPercentages": {
                            "arithmetic": 20.3125,
                            "mul": 18.75,
                            "bitwise": 60.9375
                        },
                        "percentageDAGsCancel": 12.0
                    }
                },
                "clang_O3": {
                    "expr": "((~d & a * ~a & d + (d & a) * d | a & ~a ^ d + d | a * 2 + 1) * (-(~a ^ d + d | a * 2) - 2 & ~~d & a * ~a & d + (d & a) * d | a) + (~a ^ d + d | a * 2 + 1 | ~~d & a * ~a & d + (d & a) * d | a) * (~a ^ d + d | a * 2 + 1 & ~~d & a * ~a & d + (d & a) * d | a) ^ ((~(c * 2) - d) + ~a & d - ~d & a + (~d | ~a & d - ~d & a) * -2) - 2) + (~(~d & a * ~a & d + (d & a) * d | a & ~a ^ d + d | a * 2 + 1) * (-(~a ^ d + d | a * 2) - 2 & ~~d & a * ~a & d + (d & a) * d | a) + (~a ^ d + d | a * 2 + 1 | ~~d & a * ~a & d + (d & a) * d | a) * (~a ^ d + d | a * 2 + 1 & ~~d & a * ~a & d + (d & a) * d | a) & ((~(c * 2) - d) + ~a & d - ~d & a + (~d | ~a & d - ~d & a) * -2) - 2) * -2",
                    "attributes": {
                        "numOps": 188,
                        "nestedExprLevel": 19,
                        "numDAGs": 58,
                        "percentDecreaseByOps": 8.292682926829269,
                        "opsPercentages": {
                            "arithmetic": 23.404255319148938,
                            "mul": 17.5531914893617,
                            "bitwise": 59.04255319148937
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                },
                "clang_default": {
                    "expr": "((0xffffffff - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) * (0xffffffff - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) | (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) + (0xffffffff - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) & ((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ 0xffffffff)) * ((0xffffffff - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) ^ 0xffffffff) & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) ^ (c * 2 ^ 0xffffffff) + (((d & (a ^ 0xffffffff)) - ((d ^ 0xffffffff) & a)) - d) + ((d & (a ^ 0xffffffff)) - ((d ^ 0xffffffff) & a) | d ^ 0xffffffff) * -2 + -2) + (((0xffffffff - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) * (0xffffffff - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) | (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) + (0xffffffff - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) & ((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ 0xffffffff)) * ((0xffffffff - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) ^ 0xffffffff) & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) ^ 0xffffffff) & (c * 2 ^ 0xffffffff) + (((d & (a ^ 0xffffffff)) - ((d ^ 0xffffffff) & a)) - d) + ((d & (a ^ 0xffffffff)) - ((d ^ 0xffffffff) & a) | d ^ 0xffffffff) * -2 + -2) * -2",
                    "attributes": {
                        "numOps": 194,
                        "nestedExprLevel": 73,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 5.365853658536586,
                        "opsPercentages": {
                            "arithmetic": 26.804123711340207,
                            "mul": 17.010309278350515,
                            "bitwise": 56.18556701030928
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "msvc_default": {
                    "expr": "((0xffffffff - ((a & d) * (a | d) + (~d & a) * (~a & d)) & (~a ^ d) + 1 + (d | a) * 2) * (0xffffffff - ((a & d) * (a | d) + (~d & a) * (~a & d)) | (~a ^ d) + 1 + (d | a) * 2) + (0xffffffff - ((a & d) * (a | d) + (~d & a) * (~a & d)) & ~((~a ^ d) + 1 + (d | a) * 2)) * (~(0xffffffff - ((a & d) * (a | d) + (~d & a) * (~a & d) )) & (~a ^ d) + 1 + (d | a) * 2) ^ (~(c * 2) - 2) + (((~a & d) - (~d & a)) - d) + ((~a & d) - (~d & a) | ~d) * -2) + (~((0xffffffff - ((a & d) * (a | d) + (~d & a) * (~a & d)) & (~a ^ d) + 1 + (d | a) * 2) * (0xffffffff - ((a & d) * (a | d) + (~d & a) * (~a & d)) | (~a ^ d) + 1 + (d | a) * 2) + (0xffffffff - ((a & d) * (a | d) + (~d & a) * (~a & d) ) & ~((~a ^ d) + 1 + (d | a) * 2)) * (~(0xffffffff - ((a & d) * (a | d) + (~d & a) * (~a & d))) & (~a ^ d) + 1 + (d | a) * 2)) & (~(c * 2) - 2) + (((~a & d) - (~d & a)) - d) + ((~a & d) - (~d & a) | ~d) * -2) * -2",
                    "attributes": {
                        "numOps": 192,
                        "nestedExprLevel": 60,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 6.341463414634147,
                        "opsPercentages": {
                            "arithmetic": 26.041666666666668,
                            "mul": 17.1875,
                            "bitwise": 56.770833333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((((a ^ d) + a | d * -2) - 1 & ~(a & d) * a | d + ~d & a * (~a & d)) * ((a & d) * a | d + ~d & a * (~a & d) & a | d * 2 - (a ^ d)) + (~(a & d) * a | d + ~d & a * (~a & d) & a | d * 2 - (a ^ d)) * (~(a & d) * a | d + ~d & a * (~a & d) | a | d * 2 - (a ^ d)) ^ ((~a & d) - ~d & a - d) + (~d | (~a & d) - ~d & a) * -2 + -2 + ~(c * 2)) + (~(((a ^ d) + a | d * -2) - 1 & ~(a & d) * a | d + ~d & a * (~a & d)) * ((a & d) * a | d + ~d & a * (~a & d) & a | d * 2 - (a ^ d)) + (~(a & d) * a | d + ~d & a * (~a & d) & a | d * 2 - (a ^ d)) * (~(a & d) * a | d + ~d & a * (~a & d) | a | d * 2 - (a ^ d)) & ((~a & d) - ~d & a - d) + (~d | (~a & d) - ~d & a) * -2 + -2 + ~(c * 2)) * -2",
                    "attributes": {
                        "numOps": 176,
                        "nestedExprLevel": 27,
                        "numDAGs": 49,
                        "percentDecreaseByOps": 14.146341463414632,
                        "opsPercentages": {
                            "arithmetic": 22.727272727272727,
                            "mul": 18.75,
                            "bitwise": 58.52272727272727
                        },
                        "percentageDAGsCancel": 4.081632653061225
                    }
                }
            }
        },
        {
            "num": 27,
            "gt": {
                "expr": "((((e-(e|(~e)))-d)*(((b-b)|b)-(b+(-d)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 10.0,
                        "bitwise": 30.0
                    },
                    "percentageDAGsCancel": 30.0
                }
            },
            "mba": {
                "expr": "(((((e & ~ ((e & ~ (- e - 1)) + (- e - 1))) - (~ e & ((e & ~ (- e - 1)) + (- e - 1)))) ^ d) - ((~ ((e & ~ ((e & ~ (- e - 1)) + (- e - 1))) - (~ e & ((e & ~ (- e - 1)) + (- e - 1)))) & d) + (~ ((e & ~ ((e & ~ (- e - 1)) + (- e - 1))) - (~ e & ((e & ~ (- e - 1)) + (- e - 1)))) & d))) & ((((((((b & ~ b) - (~ b & b)) + b) + 1) + ((- ((b & ~ b) - (~ b & b)) - 1) | (- b - 1))) & ~ ((b - ~ (~ (d - 1))) - 1)) + ((((((b & ~ b) - (~ b & b)) + b) + 1) + ((- ((b & ~ b) - (~ b & b)) - 1) | (- b - 1))) & ~ ((b - ~ (~ (d - 1))) - 1))) - ((((((b & ~ b) - (~ b & b)) + b) + 1) + ((- ((b & ~ b) - (~ b & b)) - 1) | (- b - 1))) ^ ((b - ~ (~ (d - 1))) - 1)))) * (((((e & ~ ((e & ~ (- e - 1)) + (- e - 1))) - (~ e & ((e & ~ (- e - 1)) + (- e - 1)))) ^ d) - ((~ ((e & ~ ((e & ~ (- e - 1)) + (- e - 1))) - (~ e & ((e & ~ (- e - 1)) + (- e - 1)))) & d) + (~ ((e & ~ ((e & ~ (- e - 1)) + (- e - 1))) - (~ e & ((e & ~ (- e - 1)) + (- e - 1)))) & d))) | ((((((((b & ~ b) - (~ b & b)) + b) + 1) + ((- ((b & ~ b) - (~ b & b)) - 1) | (- b - 1))) & ~ ((b - ~ (~ (d - 1))) - 1)) + ((((((b & ~ b) - (~ b & b)) + b) + 1) + ((- ((b & ~ b) - (~ b & b)) - 1) | (- b - 1))) & ~ ((b - ~ (~ (d - 1))) - 1))) - ((((((b & ~ b) - (~ b & b)) + b) + 1) + ((- ((b & ~ b) - (~ b & b)) - 1) | (- b - 1))) ^ ((b - ~ (~ (d - 1))) - 1)))) + (((((e & ~ ((e & ~ (- e - 1)) + (- e - 1))) - (~ e & ((e & ~ (- e - 1)) + (- e - 1)))) ^ d) - ((~ ((e & ~ ((e & ~ (- e - 1)) + (- e - 1))) - (~ e & ((e & ~ (- e - 1)) + (- e - 1)))) & d) + (~ ((e & ~ ((e & ~ (- e - 1)) + (- e - 1))) - (~ e & ((e & ~ (- e - 1)) + (- e - 1)))) & d))) & ~ ((((((((b & ~ b) - (~ b & b)) + b) + 1) + ((- ((b & ~ b) - (~ b & b)) - 1) | (- b - 1))) & ~ ((b - ~ (~ (d - 1))) - 1)) + ((((((b & ~ b) - (~ b & b)) + b) + 1) + ((- ((b & ~ b) - (~ b & b)) - 1) | (- b - 1))) & ~ ((b - ~ (~ (d - 1))) - 1))) - ((((((b & ~ b) - (~ b & b)) + b) + 1) + ((- ((b & ~ b) - (~ b & b)) - 1) | (- b - 1))) ^ ((b - ~ (~ (d - 1))) - 1)))) * (~ ((((e & ~ ((e & ~ (- e - 1)) + (- e - 1))) - (~ e & ((e & ~ (- e - 1)) + (- e - 1)))) ^ d) - ((~ ((e & ~ ((e & ~ (- e - 1)) + (- e - 1))) - (~ e & ((e & ~ (- e - 1)) + (- e - 1)))) & d) + (~ ((e & ~ ((e & ~ (- e - 1)) + (- e - 1))) - (~ e & ((e & ~ (- e - 1)) + (- e - 1)))) & d))) & ((((((((b & ~ b) - (~ b & b)) + b) + 1) + ((- ((b & ~ b) - (~ b & b)) - 1) | (- b - 1))) & ~ ((b - ~ (~ (d - 1))) - 1)) + ((((((b & ~ b) - (~ b & b)) + b) + 1) + ((- ((b & ~ b) - (~ b & b)) - 1) | (- b - 1))) & ~ ((b - ~ (~ (d - 1))) - 1))) - ((((((b & ~ b) - (~ b & b)) + b) + 1) + ((- ((b & ~ b) - (~ b & b)) - 1) | (- b - 1))) ^ ((b - ~ (~ (d - 1))) - 1))))",
                "attributes": {
                    "numOps": 569,
                    "nestedExprLevel": 298,
                    "numDAGs": 46,
                    "opsPercentages": {
                        "arithmetic": 51.493848857644984,
                        "mul": 0.35149384885764495,
                        "bitwise": 48.154657293497365
                    },
                    "percentageDAGsCancel": 28.26086956521739
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((-e - 2 ^ d) + (-e - 2 & d) * 2 & (d + ~b & b) * 2 - ((b - (d - 1)) - 1 ^ b)) * ((e + 1 ^ d) + (-e - 2 & d) * -2 & ((b - (d - 1)) - 1 ^ b) + ~((d + ~b & b) * 2)) + ((e + 1 ^ d) + (-e - 2 & d) * -2 & (d + ~b & b) * 2 - ((b - (d - 1)) - 1 ^ b)) * ((e + 1 ^ d) + (-e - 2 & d) * -2 | (d + ~b & b) * 2 - ((b - (d - 1)) - 1 ^ b))",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 19,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 86.64323374340948,
                        "opsPercentages": {
                            "arithmetic": 53.94736842105263,
                            "mul": 13.157894736842104,
                            "bitwise": 32.89473684210527
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                },
                "msvc_O1": {
                    "expr": "(~(e + 1 ^ d) + (~(e + 1) & d) * -2 & (~(b - d) & b) * 2 - (b - d ^ b)) * (~(~(b - d) & b) * 2 - (b - d ^ b) & (e + 1 ^ d) + (~(e + 1) & d) * -2) + ((~(b - d) & b) * 2 - (b - d ^ b) | (e + 1 ^ d) + (~(e + 1) & d) * -2) * ((~(b - d) & b) * 2 - (b - d ^ b) & (e + 1 ^ d) + (~(e + 1) & d) * -2)",
                    "attributes": {
                        "numOps": 69,
                        "nestedExprLevel": 18,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 87.87346221441125,
                        "opsPercentages": {
                            "arithmetic": 42.028985507246375,
                            "mul": 14.492753623188406,
                            "bitwise": 43.47826086956522
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(e + 1 ^ d) + (-e - 2 & d) * -2 & (~(b - d) & b) * 2 - (b - d ^ b)) * (~(~(b - d) & b) * 2 - (b - d ^ b) & (e + 1 ^ d) + (-e - 2 & d) * -2) + ((e + 1 ^ d) + (-e - 2 & d) * -2 | (~(b - d) & b) * 2 - (b - d ^ b)) * ((e + 1 ^ d) + (-e - 2 & d) * -2 & (~(b - d) & b) * 2 - (b - d ^ b))",
                    "attributes": {
                        "numOps": 69,
                        "nestedExprLevel": 17,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 87.87346221441125,
                        "opsPercentages": {
                            "arithmetic": 47.82608695652174,
                            "mul": 14.492753623188406,
                            "bitwise": 37.68115942028986
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "clang_default": {
                    "expr": "(((e & ((e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e) ^ 0xffffffff)) - ((e ^ 0xffffffff) & (e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e)) ^ d) - ((((e & ((e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e) ^ 0xffffffff)) - ((e ^ 0xffffffff) & (e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e)) ^ 0xffffffff) & d) + (((e & ((e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e) ^ 0xffffffff)) - ((e ^ 0xffffffff) & (e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e)) ^ 0xffffffff) & d)) & ((((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + b + 1 + (0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) | 0xffffffff - b) & ((b - (d - 1)) - 1 ^ 0xffffffff)) + (((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + b + 1 + (0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) | 0xffffffff - b) & ((b - (d - 1)) - 1 ^ 0xffffffff))) - (((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + b + 1 + (0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) | 0xffffffff - b) ^ (b - (d - 1)) - 1)) * (((e & ((e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e) ^ 0xffffffff)) - ((e ^ 0xffffffff) & (e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e)) ^ d) - ((((e & ((e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e) ^ 0xffffffff)) - ((e ^ 0xffffffff) & (e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e)) ^ 0xffffffff) & d) + (((e & ((e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e) ^ 0xffffffff)) - ((e ^ 0xffffffff) & (e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e)) ^ 0xffffffff) & d)) | ((((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + b + 1 + (0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) | 0xffffffff - b) & ((b - (d - 1)) - 1 ^ 0xffffffff)) + (((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + b + 1 + (0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) | 0xffffffff - b) & ((b - (d - 1)) - 1 ^ 0xffffffff))) - (((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + b + 1 + (0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) | 0xffffffff - b) ^ (b - (d - 1)) - 1)) + (((e & ((e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e) ^ 0xffffffff)) - ((e ^ 0xffffffff) & (e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e)) ^ d) - ((((e & ((e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e) ^ 0xffffffff)) - ((e ^ 0xffffffff) & (e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e)) ^ 0xffffffff) & d) + (((e & ((e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e) ^ 0xffffffff)) - ((e ^ 0xffffffff) & (e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e)) ^ 0xffffffff) & d)) & (((((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + b + 1 + (0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) | 0xffffffff - b) & ((b - (d - 1)) - 1 ^ 0xffffffff)) + (((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + b + 1 + (0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) | 0xffffffff - b) & ((b - (d - 1)) - 1 ^ 0xffffffff))) - (((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + b + 1 + (0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) | 0xffffffff - b) ^ (b - (d - 1)) - 1) ^ 0xffffffff)) * ((((e & ((e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e) ^ 0xffffffff)) - ((e ^ 0xffffffff) & (e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e)) ^ d) - ((((e & ((e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e) ^ 0xffffffff)) - ((e ^ 0xffffffff) & (e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e)) ^ 0xffffffff) & d) + (((e & ((e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e) ^ 0xffffffff)) - ((e ^ 0xffffffff) & (e & (0xffffffff - e ^ 0xffffffff)) + (-1 - e)) ^ 0xffffffff) & d)) ^ 0xffffffff) & ((((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + b + 1 + (0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) | 0xffffffff - b) & ((b - (d - 1)) - 1 ^ 0xffffffff)) + (((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + b + 1 + (0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) | 0xffffffff - b) & ((b - (d - 1)) - 1 ^ 0xffffffff))) - (((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + b + 1 + (0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) | 0xffffffff - b) ^ (b - (d - 1)) - 1))",
                    "attributes": {
                        "numOps": 497,
                        "nestedExprLevel": 236,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 12.65377855887522,
                        "opsPercentages": {
                            "arithmetic": 49.29577464788733,
                            "mul": 0.4024144869215292,
                            "bitwise": 50.30181086519114
                        },
                        "percentageDAGsCancel": 16.27906976744186
                    }
                },
                "msvc_default": {
                    "expr": "(((~(((~(0xffffffff - e) & e) - 1) - e) & e) - (~e & ((~(0xffffffff - e) & e) - 1) - e) ^ d) - ((~((~(((~(0xffffffff - e) & e) - 1) - e) & e) - (~e & ((~(0xffffffff - e) & e) - 1) - e)) & d) + (~((~(((~(0xffffffff - e) & e) - 1) - e) & e) - (~e & ((~(0xffffffff - e) & e) - 1) - e)) & d)) & ~(((b & ~((b - (d + -1)) - 1)) + (b & ~((b - (d + -1)) - 1))) - (b ^ (b - (d + -1)) - 1))) * (~(((~(((~(0xffffffff - e) & e) - 1) - e) & e) - (~e & ((~(0xffffffff - e) & e) - 1) - e) ^ d) - ((~((~(((~(0xffffffff - e) & e) - 1) - e) & e) - (~e & ((~(0xffffffff - e) & e) - 1) - e)) & d) + (~((~(((~(0xffffffff - e) & e) - 1) - e) & e) - (~e & ((~(0xffffffff - e) & e) - 1) - e)) & d))) & ((b & ~((b - (d + -1)) - 1)) + (b & ~((b - (d + -1)) - 1))) - (b ^ (b - (d + -1)) - 1)) + (((~(((~(0xffffffff - e) & e) - 1) - e) & e) - (~e & ((~(0xffffffff - e) & e) - 1) - e) ^ d) - ((~((~(((~(0xffffffff - e) & e) - 1) - e) & e) - (~e & ((~(0xffffffff - e) & e) - 1) - e)) & d) + (~((~(((~(0xffffffff - e) & e) - 1) - e) & e) - (~e & ((~(0xffffffff - e) & e) - 1) - e)) & d)) & ((b & ~((b - (d + -1)) - 1)) + (b & ~((b - (d + -1)) - 1))) - (b ^ (b - (d + -1)) - 1)) * (((~(((~(0xffffffff - e) & e) - 1) - e) & e) - (~e & ((~(0xffffffff - e) & e) - 1) - e) ^ d) - ((~((~(((~(0xffffffff - e) & e) - 1) - e) & e) - (~e & ((~(0xffffffff - e) & e) - 1) - e)) & d) + (~((~(((~(0xffffffff - e) & e) - 1) - e) & e) - (~e & ((~(0xffffffff - e) & e) - 1) - e)) & d)) | ((b & ~((b - (d + -1)) - 1)) + (b & ~((b - (d + -1)) - 1))) - (b ^ (b - (d + -1)) - 1))",
                    "attributes": {
                        "numOps": 293,
                        "nestedExprLevel": 152,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 48.50615114235501,
                        "opsPercentages": {
                            "arithmetic": 50.85324232081911,
                            "mul": 0.6825938566552902,
                            "bitwise": 48.4641638225256
                        },
                        "percentageDAGsCancel": 12.121212121212121
                    }
                },
                "gcc_O3": {
                    "expr": "(~((d - 1) - b & b) * 2 + b & (e + 1 ^ d) + -e - 2 & d * -2) * ((-e - 2 ^ d) + -e - 2 & d * 2 & ((d - 1) - b & b) * 2 - b) + ((e + 1 ^ d) + -e - 2 & d * -2 | ((d - 1) - b & b) * 2 - b) * ((e + 1 ^ d) + -e - 2 & d * -2 & ((d - 1) - b & b) * 2 - b)",
                    "attributes": {
                        "numOps": 60,
                        "nestedExprLevel": 11,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 89.45518453427064,
                        "opsPercentages": {
                            "arithmetic": 55.00000000000001,
                            "mul": 16.666666666666664,
                            "bitwise": 28.333333333333332
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                }
            }
        },
        {
            "num": 28,
            "gt": {
                "expr": "((~(-(~((b+b)+((-a)*e))))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 14.285714285714285,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(- (((((b | b) << 1) - (b ^ b)) ^ ((~ (a - 1) & e) * (~ (a - 1) | e) + (~ (a - 1) & ~ e) * (~ (~ (a - 1)) & e))) + (((((b | b) << 1) - (b ^ b)) & ((~ (a - 1) & e) * (~ (a - 1) | e) + (~ (a - 1) & ~ e) * (~ (~ (a - 1)) & e))) + ((((b | b) << 1) - (b ^ b)) & ((~ (a - 1) & e) * (~ (a - 1) | e) + (~ (a - 1) & ~ e) * (~ (~ (a - 1)) & e))))) - 1) - 1",
                "attributes": {
                    "numOps": 71,
                    "nestedExprLevel": 35,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 32.3943661971831,
                        "mul": 8.450704225352112,
                        "bitwise": 59.154929577464785
                    },
                    "percentageDAGsCancel": 9.090909090909092
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-2 - ((b * 2 ^ (a - 1 & e) * (-a & ~e) + (-a & e) * (-a | e)) + ((a - 1 & e) * (-a & ~e) + (-a & e) * (-a | e) & b * 2) * 2)",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 8,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 54.929577464788736,
                        "opsPercentages": {
                            "arithmetic": 40.625,
                            "mul": 21.875,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "-(((~a - 1 | e) * (~a - 1 & e) + ~(a - 1 | e) * (a - 1 & e) & b * 2) * 2 + 2) - ((~a - 1 | e) * (~a - 1 & e) + ~(a - 1 | e) * (a - 1 & e) ^ b * 2)",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 8,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 49.29577464788733,
                        "opsPercentages": {
                            "arithmetic": 36.11111111111111,
                            "mul": 19.444444444444446,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "clang_O3": {
                    "expr": "-2 - (((~e & -a) * (a - 1 & e) + (-a | e) * (-a & e) ^ b * 2) + ((~e & -a) * (a - 1 & e) + (-a | e) * (-a & e) & b * 2) * 2)",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 8,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 54.929577464788736,
                        "opsPercentages": {
                            "arithmetic": 40.625,
                            "mul": 21.875,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-2 - ((b * 2 ^ ((a - 1 ^ 0xffffffff) & e) * (a - 1 ^ 0xffffffff | e) + ((a - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) * (a - 1 & e)) + (b * 2 & ((a - 1 ^ 0xffffffff) & e) * (a - 1 ^ 0xffffffff | e) + ((a - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) * (a - 1 & e)) + (b * 2 & ((a - 1 ^ 0xffffffff) & e) * (a - 1 ^ 0xffffffff | e) + ((a - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) * (a - 1 & e)))",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 18,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 22.535211267605636,
                        "opsPercentages": {
                            "arithmetic": 34.54545454545455,
                            "mul": 16.363636363636363,
                            "bitwise": 49.09090909090909
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_default": {
                    "expr": "-2 - ((b * 2 ^ (~(a - 1) & e) * (~(a - 1) | e) + (~(a - 1) & ~e) * (a - 1 & e)) + (b * 2 & (~(a - 1) & e) * (~(a - 1) | e) + (~(a - 1) & ~e) * (a - 1 & e)) + (b * 2 & (~(a - 1) & e) * (~(a - 1) | e) + (~(a - 1) & ~e) * (a - 1 & e)))",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 17,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 22.535211267605636,
                        "opsPercentages": {
                            "arithmetic": 34.54545454545455,
                            "mul": 16.363636363636363,
                            "bitwise": 49.09090909090909
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-2 - ((b * 2 ^ (~e & -a) * (a - 1 & e) + (-a | e) * (-a & e)) + (b * 2 & (~e & -a) * (a - 1 & e) + (-a | e) * (-a & e)) * 2)",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 8,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 54.929577464788736,
                        "opsPercentages": {
                            "arithmetic": 40.625,
                            "mul": 21.875,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 29,
            "gt": {
                "expr": "((e|(~(-(~((~c)-d))))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 8,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(e & ~ (((d - (- c - 1)) - 1) - 1)) + (((d - (- c - 1)) - 1) - 1)",
                "attributes": {
                    "numOps": 13,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 84.61538461538461,
                        "mul": 0.0,
                        "bitwise": 15.384615384615385
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(d - ~c) + -2 + (~c + ~d + 2 & e)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 2,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 23.076923076923077,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((-(c + d) & e) - 1) + c + d",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 4,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 53.84615384615385,
                        "opsPercentages": {
                            "arithmetic": 83.33333333333334,
                            "mul": 0.0,
                            "bitwise": 16.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(-(c + d) & e) + c + d + -1",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 46.15384615384615,
                        "opsPercentages": {
                            "arithmetic": 85.71428571428571,
                            "mul": 0.0,
                            "bitwise": 14.285714285714285
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(e & ((d - (-1 - c)) - 2 ^ 0xffffffff)) + (d - (-1 - c)) + -2",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 6,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 7.6923076923076925,
                        "opsPercentages": {
                            "arithmetic": 83.33333333333334,
                            "mul": 0.0,
                            "bitwise": 16.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~((d - (-1 - c)) - 2) & e) - 2) + (d - (-1 - c))",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 7,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 15.384615384615385,
                        "opsPercentages": {
                            "arithmetic": 81.81818181818183,
                            "mul": 0.0,
                            "bitwise": 18.181818181818183
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~c + 2 + ~d & e) - 2) + (d - ~c)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 30.76923076923077,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 0.0,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 30,
            "gt": {
                "expr": "((-((d*a)^(a-a))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 25.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "~ ((((((d & a) * (d | a) + (d & ~ a) * (~ d & a)) - ((a & ~ a) - (~ a & a))) - ((((d & a) * (d | a) + (d & ~ a) * (~ d & a)) | ~ ((a & ~ a) - (~ a & a))) + (((d & a) * (d | a) + (d & ~ a) * (~ d & a)) | ~ ((a & ~ a) - (~ a & a))))) - 2) - 1)",
                "attributes": {
                    "numOps": 52,
                    "nestedExprLevel": 23,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 21.153846153846153,
                        "mul": 11.538461538461538,
                        "bitwise": 67.3076923076923
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-((~d & a) * (~a & d) + (d & a) * (d | a))",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 80.76923076923077,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "-((~d & a) * (~a & d) + (a | d) * (a & d))",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 80.76923076923077,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_O3": {
                    "expr": "-((~d & a) * (~a & d) + (d | a) * (d & a))",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 80.76923076923077,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a)) - ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a))) - (((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) | (a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) ^ 0xffffffff) + ((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) | (a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) ^ 0xffffffff))) - 3 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 24,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 1.9230769230769231,
                        "opsPercentages": {
                            "arithmetic": 19.607843137254903,
                            "mul": 11.76470588235294,
                            "bitwise": 68.62745098039215
                        },
                        "percentageDAGsCancel": 26.31578947368421
                    }
                },
                "msvc_default": {
                    "expr": "~(((d & a) * (d | a) + (~a & d) * (~d & a)) - 1)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 78.84615384615384,
                        "opsPercentages": {
                            "arithmetic": 18.181818181818183,
                            "mul": 18.181818181818183,
                            "bitwise": 63.63636363636363
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "gcc_O3": {
                    "expr": "-((~a & d) * (~d & a) + (d | a) * (d & a))",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 80.76923076923077,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                }
            }
        },
        {
            "num": 31,
            "gt": {
                "expr": "(((c|b)^(~((-(c|c))*((b^b)^a)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 12.5,
                        "mul": 12.5,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "((((c & ~ b) + b) - (- (((~ ((c & ~ c) + c) + 1) & ((((b | b) - (b & b)) | a) - (((b | b) - (b & b)) & a))) * ((~ ((c & ~ c) + c) + 1) | ((((b | b) - (b & b)) | a) - (((b | b) - (b & b)) & a))) + ((~ ((c & ~ c) + c) + 1) & ~ ((((b | b) - (b & b)) | a) - (((b | b) - (b & b)) & a))) * (~ (~ ((c & ~ c) + c) + 1) & ((((b | b) - (b & b)) | a) - (((b | b) - (b & b)) & a)))) - 1)) - ((((c & ~ b) + b) | ~ (- (((~ ((c & ~ c) + c) + 1) & ((((b | b) - (b & b)) | a) - (((b | b) - (b & b)) & a))) * ((~ ((c & ~ c) + c) + 1) | ((((b | b) - (b & b)) | a) - (((b | b) - (b & b)) & a))) + ((~ ((c & ~ c) + c) + 1) & ~ ((((b | b) - (b & b)) | a) - (((b | b) - (b & b)) & a))) * (~ (~ ((c & ~ c) + c) + 1) & ((((b | b) - (b & b)) | a) - (((b | b) - (b & b)) & a)))) - 1)) + (((c & ~ b) + b) | ~ (- (((~ ((c & ~ c) + c) + 1) & ((((b | b) - (b & b)) | a) - (((b | b) - (b & b)) & a))) * ((~ ((c & ~ c) + c) + 1) | ((((b | b) - (b & b)) | a) - (((b | b) - (b & b)) & a))) + ((~ ((c & ~ c) + c) + 1) & ~ ((((b | b) - (b & b)) | a) - (((b | b) - (b & b)) & a))) * (~ (~ ((c & ~ c) + c) + 1) & ((((b | b) - (b & b)) | a) - (((b | b) - (b & b)) & a)))) - 1)))) - 2",
                "attributes": {
                    "numOps": 218,
                    "nestedExprLevel": 135,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 34.862385321100916,
                        "mul": 2.7522935779816518,
                        "bitwise": 62.38532110091744
                    },
                    "percentageDAGsCancel": 25.806451612903224
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~b & c) + b) - ~((c - 1 & a) * (-c & ~a) + (-c & a) * (-c | a))) + ((c - 1 & a) * (-c & ~a) + (-c & a) * (-c | a) | (~b & c) + b) * -2 + -2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 10,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 82.56880733944955,
                        "opsPercentages": {
                            "arithmetic": 44.73684210526316,
                            "mul": 13.157894736842104,
                            "bitwise": 42.10526315789473
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "b + -1 + (-c | a) * (-c & a) + (~(~(~a & -c) * (~-c & a) - (-c | a) * (-c & a)) | (~b & c) + b) * -2 + (~a & -c) * (~-c & a) + (~b & c)",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 8,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 81.19266055045871,
                        "opsPercentages": {
                            "arithmetic": 41.46341463414634,
                            "mul": 12.195121951219512,
                            "bitwise": 46.34146341463415
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "clang_O3": {
                    "expr": "~(((c - 1 & a) * (~a & -c) + (-c | a) * (-c & a) | b) * 2) + (c - 1 & a) * (~a & -c) + (-c | a) * (-c & a) + b",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 86.69724770642202,
                        "opsPercentages": {
                            "arithmetic": 41.37931034482759,
                            "mul": 17.24137931034483,
                            "bitwise": 41.37931034482759
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "clang_default": {
                    "expr": "((((c & (b ^ 0xffffffff)) + b) - (-1 - ((((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1 & a) * (((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1 | a) + (((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * ((((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1 ^ 0xffffffff) & a)))) - (((c & (b ^ 0xffffffff)) + b | 0xffffffff - ((((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1 & a) * (((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1 | a) + (((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * ((((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1 ^ 0xffffffff) & a)) ^ 0xffffffff) + ((c & (b ^ 0xffffffff)) + b | 0xffffffff - ((((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1 & a) * (((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1 | a) + (((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * ((((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1 ^ 0xffffffff) & a)) ^ 0xffffffff))) + -2",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 57,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 35.77981651376147,
                            "mul": 5.5045871559633035,
                            "bitwise": 58.71559633027523
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "msvc_default": {
                    "expr": "((((~b & c) + b) - (-1 - ((~c + 1 & a) * (~c + 1 | a) + (~c + 1 & ~a) * (~(~c + 1) & a)))) - (((~b & c) + b | ~(0xffffffff - ((~c + 1 & a) * (~c + 1 | a) + (~c + 1 & ~a) * (~(~c + 1) & a)))) + ((~b & c) + b | ~(0xffffffff - ((~c + 1 & a) * (~c + 1 | a) + (~c + 1 & ~a) * (~(~c + 1) & a)))))) + -2",
                    "attributes": {
                        "numOps": 73,
                        "nestedExprLevel": 20,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 66.5137614678899,
                        "opsPercentages": {
                            "arithmetic": 36.986301369863014,
                            "mul": 8.21917808219178,
                            "bitwise": 54.794520547945204
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "gcc_O3": {
                    "expr": "(b - ~(~a & -c) * (c - 1 & a) + (-c | a) * (-c & a)) + (b | (~a & -c) * (c - 1 & a) + (-c | a) * (-c & a)) * -2 + -2",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 7,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 85.3211009174312,
                        "opsPercentages": {
                            "arithmetic": 46.875,
                            "mul": 15.625,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                }
            }
        },
        {
            "num": 32,
            "gt": {
                "expr": "(((d&d)|((d*a)|a)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 25.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((((~ d | d) + d) + 1) & ~ ((((d & a) * (d | a) + (d & ~ a) * (~ d & a)) & ~ a) + a)) + ((((d & a) * (d | a) + (d & ~ a) * (~ d & a)) & ~ a) + a)",
                "attributes": {
                    "numOps": 31,
                    "nestedExprLevel": 14,
                    "numDAGs": 17,
                    "opsPercentages": {
                        "arithmetic": 22.58064516129032,
                        "mul": 12.903225806451612,
                        "bitwise": 64.51612903225806
                    },
                    "percentageDAGsCancel": 17.647058823529413
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "a + ((d & a) * (d | a) + (~d & a) * (~a & d) & ~a) + (~(a + ((d & a) * (d | a) + (~d & a) * (~a & d) & ~a)) & d)",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 9,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 12.903225806451612,
                        "opsPercentages": {
                            "arithmetic": 18.51851851851852,
                            "mul": 14.814814814814813,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~((~d & a) * (~a & d) + (a | d) * (a & d) & ~a + a) & d) + (~d & a) * (~a & d) + (a | d) * (a & d) & ~a + a",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 7,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 12.903225806451612,
                        "opsPercentages": {
                            "arithmetic": 18.51851851851852,
                            "mul": 14.814814814814813,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "clang_O3": {
                    "expr": "(~a & d) + a",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 90.32258064516128,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((d ^ 0xffffffff | d) + d + 1 & (((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) & (a ^ 0xffffffff)) + a ^ 0xffffffff)) + ((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) & (a ^ 0xffffffff)) + a",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 13,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 22.58064516129032,
                            "mul": 12.903225806451612,
                            "bitwise": 64.51612903225806
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "msvc_default": {
                    "expr": "((d & a) * (d | a) + (~a & d) * (~d & a) & ~a) + (d & ~(((d & a) * (d | a) + (~a & d) * (~d & a) & ~a) + a)) + a",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 9,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 12.903225806451612,
                        "opsPercentages": {
                            "arithmetic": 18.51851851851852,
                            "mul": 14.814814814814813,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~a & d) + a",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 90.32258064516128,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 33.33333333333333
                    }
                }
            }
        },
        {
            "num": 33,
            "gt": {
                "expr": "((((-(~c))|d)^(((-d)+d)|((c+c)-(c|c)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "((((((c + 1) + d) + 1) + ((- (c + 1) - 1) | (- d - 1))) - (((((((~ d + 1) ^ ~ d) + (((~ d + 1) | d) << 1)) + 1) + ((((c - ~ c) - 1) ^ (((c + c) + 1) + ((- c - 1) | (- c - 1)))) - ((~ ((c - ~ c) - 1) & (((c + c) + 1) + ((- c - 1) | (- c - 1)))) << 1))) + 1) + ((- ((((~ d + 1) ^ ~ d) + (((~ d + 1) | d) << 1)) + 1) - 1) | (- ((((c - ~ c) - 1) ^ (((c + c) + 1) + ((- c - 1) | (- c - 1)))) - ((~ ((c - ~ c) - 1) & (((c + c) + 1) + ((- c - 1) | (- c - 1)))) << 1)) - 1)))) - ((((((c + 1) + d) + 1) + ((- (c + 1) - 1) | (- d - 1))) | ~ (((((((~ d + 1) ^ ~ d) + (((~ d + 1) | d) << 1)) + 1) + ((((c - ~ c) - 1) ^ (((c + c) + 1) + ((- c - 1) | (- c - 1)))) - ((~ ((c - ~ c) - 1) & (((c + c) + 1) + ((- c - 1) | (- c - 1)))) << 1))) + 1) + ((- ((((~ d + 1) ^ ~ d) + (((~ d + 1) | d) << 1)) + 1) - 1) | (- ((((c - ~ c) - 1) ^ (((c + c) + 1) + ((- c - 1) | (- c - 1)))) - ((~ ((c - ~ c) - 1) & (((c + c) + 1) + ((- c - 1) | (- c - 1)))) << 1)) - 1)))) + (((((c + 1) + d) + 1) + ((- (c + 1) - 1) | (- d - 1))) | ~ (((((((~ d + 1) ^ ~ d) + (((~ d + 1) | d) << 1)) + 1) + ((((c - ~ c) - 1) ^ (((c + c) + 1) + ((- c - 1) | (- c - 1)))) - ((~ ((c - ~ c) - 1) & (((c + c) + 1) + ((- c - 1) | (- c - 1)))) << 1))) + 1) + ((- ((((~ d + 1) ^ ~ d) + (((~ d + 1) | d) << 1)) + 1) - 1) | (- ((((c - ~ c) - 1) ^ (((c + c) + 1) + ((- c - 1) | (- c - 1)))) - ((~ ((c - ~ c) - 1) & (((c + c) + 1) + ((- c - 1) | (- c - 1)))) << 1)) - 1)))))) - 2",
                "attributes": {
                    "numOps": 284,
                    "nestedExprLevel": 156,
                    "numDAGs": 44,
                    "opsPercentages": {
                        "arithmetic": 66.90140845070422,
                        "mul": 0.0,
                        "bitwise": 33.098591549295776
                    },
                    "percentageDAGsCancel": 13.636363636363635
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((d + c + (~d | -c - 2)) - ((((~c + c * 2 + 1 & ~c * 2 + 1) * 2 - ((c - ~c) - 1 ^ ~c + c * 2 + 1)) - 1 | -((-d | d) * 2 + (d - 1 ^ d)) - 2) + ((c - ~c) - 1 ^ ~c + c * 2 + 1) + (~c + c * 2 + 1 & ~c * 2 + 1) * -2 + (-d | d) * 2 + (d - 1 ^ d) + 2)) + (~((((~c + c * 2 + 1 & ~c * 2 + 1) * 2 - ((c - ~c) - 1 ^ ~c + c * 2 + 1)) - 1 | -((-d | d) * 2 + (d - 1 ^ d)) - 2) + ((c - ~c) - 1 ^ ~c + c * 2 + 1) + (~c + c * 2 + 1 & ~c * 2 + 1) * -2 + (-d | d) * 2 + (d - 1 ^ d) + 2) | d + c + 2 + (~d | -c - 2)) * -2",
                    "attributes": {
                        "numOps": 131,
                        "nestedExprLevel": 23,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 53.87323943661971,
                        "opsPercentages": {
                            "arithmetic": 53.43511450381679,
                            "mul": 16.030534351145036,
                            "bitwise": 30.53435114503817
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "msvc_O1": {
                    "expr": "~c * 2 * 2 & c * 2 + (((((-c - 2 | ~d - ((~(~d * 2 + 2 | d * 2 + 2 + ((~c * 2 * 2 & c * 2 - c * 2 ^ c) - 1 | (-2 - ~d + 1 ^ ~d) - ~d * 2 + 2 | d * 2 - ~c * 2 * 2 & c * 2) + c * 2 ^ c + ~d + 1 ^ ~d) | c + -c - 2 | ~d + d + 2) * 2 + 2)) - (~c * 2 * 2 & c * 2 - c * 2 ^ c) - 1 | (-2 - ~d + 1 ^ ~d) - ~d * 2 + 2 | d * 2) - c * 2 ^ c) - ~d + 1 ^ ~d) - ~d * 2 + 2 | d * 2) + c + d",
                    "attributes": {
                        "numOps": 104,
                        "nestedExprLevel": 12,
                        "numDAGs": 59,
                        "percentDecreaseByOps": 63.38028169014085,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 24.03846153846154,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 10.16949152542373
                    }
                },
                "clang_O3": {
                    "expr": "((~d | -c - 2) + c + d + 2 - (c * 2 ^ c) + (~(c * 2) & c) * -2 | (-d | d) * 2 - (-d ^ d)) + (~(c * 2 ^ c) + (~(c * 2) & c) * -2 | (-d | d) * 2 - (-d ^ d) | (~d | -c - 2) + c + d + 2) * -2 + -2",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 9,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 81.69014084507043,
                        "opsPercentages": {
                            "arithmetic": 48.07692307692308,
                            "mul": 17.307692307692307,
                            "bitwise": 34.61538461538461
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "clang_default": {
                    "expr": "((c + d + (0xffffffff - (c + 1) | 0xffffffff - d)) - (((d ^ 0xffffffff) + 1 ^ d ^ 0xffffffff) + ((d ^ 0xffffffff) + 1 | d) * 2 + ((c - (c ^ 0xffffffff)) - 1 ^ c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (((c - (c ^ 0xffffffff)) - 1 ^ 0xffffffff) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) * -2 + 2 + (0xffffffff - (((d ^ 0xffffffff) + 1 ^ d ^ 0xffffffff) + ((d ^ 0xffffffff) + 1 | d) * 2 + 1) | 0xffffffff - (((c - (c ^ 0xffffffff)) - 1 ^ c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (((c - (c ^ 0xffffffff)) - 1 ^ 0xffffffff) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) * -2)))) - ((c + d + 2 + (0xffffffff - (c + 1) | 0xffffffff - d) | ((d ^ 0xffffffff) + 1 ^ d ^ 0xffffffff) + ((d ^ 0xffffffff) + 1 | d) * 2 + ((c - (c ^ 0xffffffff)) - 1 ^ c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (((c - (c ^ 0xffffffff)) - 1 ^ 0xffffffff) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) * -2 + 2 + (0xffffffff - (((d ^ 0xffffffff) + 1 ^ d ^ 0xffffffff) + ((d ^ 0xffffffff) + 1 | d) * 2 + 1) | 0xffffffff - (((c - (c ^ 0xffffffff)) - 1 ^ c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (((c - (c ^ 0xffffffff)) - 1 ^ 0xffffffff) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) * -2)) ^ 0xffffffff) + (c + d + 2 + (0xffffffff - (c + 1) | 0xffffffff - d) | ((d ^ 0xffffffff) + 1 ^ d ^ 0xffffffff) + ((d ^ 0xffffffff) + 1 | d) * 2 + ((c - (c ^ 0xffffffff)) - 1 ^ c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (((c - (c ^ 0xffffffff)) - 1 ^ 0xffffffff) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) * -2 + 2 + (0xffffffff - (((d ^ 0xffffffff) + 1 ^ d ^ 0xffffffff) + ((d ^ 0xffffffff) + 1 | d) * 2 + 1) | 0xffffffff - (((c - (c ^ 0xffffffff)) - 1 ^ c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (((c - (c ^ 0xffffffff)) - 1 ^ 0xffffffff) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) * -2)) ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 246,
                        "nestedExprLevel": 73,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 13.380281690140844,
                        "opsPercentages": {
                            "arithmetic": 56.91056910569105,
                            "mul": 9.75609756097561,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 2.380952380952381
                    }
                },
                "msvc_default": {
                    "expr": "((c + d + (0xffffffff - (c + 1) | 0xffffffff - d)) - ((~d + 1 ^ ~d) + (~d + 1 | d) * 2 + ((c - ~c) - 1 ^ c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (~((c - ~c) - 1) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) * -2 + 2 + (0xffffffff - ((~d + 1 ^ ~d) + 1 + (~d + 1 | d) * 2) | 0xffffffff - (((c - ~c) - 1 ^ c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (~((c - ~c) - 1) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) * -2)))) - ((c + d + 2 + (0xffffffff - (c + 1) | 0xffffffff - d) | ~((~d + 1 ^ ~d) + (~d + 1 | d) * 2 + ((c - ~c) - 1 ^ c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (~((c - ~c) - 1) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) * -2 + 2 + (0xffffffff - ((~d + 1 ^ ~d) + 1 + (~d + 1 | d) * 2) | 0xffffffff - (((c - ~c) - 1 ^ c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (~((c - ~c) - 1) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) * -2)))) + (c + d + 2 + (0xffffffff - (c + 1) | 0xffffffff - d) | ~((~d + 1 ^ ~d) + (~d + 1 | d) * 2 + ((c - ~c) - 1 ^ c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (~((c - ~c) - 1) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) * -2 + 2 + (0xffffffff - ((~d + 1 ^ ~d) + 1 + (~d + 1 | d) * 2) | 0xffffffff - (((c - ~c) - 1 ^ c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (~((c - ~c) - 1) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) * -2)))))",
                    "attributes": {
                        "numOps": 246,
                        "nestedExprLevel": 57,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 13.380281690140844,
                        "opsPercentages": {
                            "arithmetic": 56.91056910569105,
                            "mul": 9.75609756097561,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 2.380952380952381
                    }
                },
                "gcc_O3": {
                    "expr": "(c + 2 + d + (-c - 2 | ~d) - (d ^ d - 1) + (-d | d) * 2 + 2 + c * 2 ^ c + c * -2 + ((c * 2 - c * 2 ^ c) - 1 | -(d ^ d - 1) + (-d | d) * 2 - 2)) + (~(d ^ d - 1) + (-d | d) * 2 + 2 + c * 2 ^ c + c * -2 + ((c * 2 - c * 2 ^ c) - 1 | -(d ^ d - 1) + (-d | d) * 2 - 2) | c + 2 + d + (-c - 2 | ~d)) * -2 + -2",
                    "attributes": {
                        "numOps": 78,
                        "nestedExprLevel": 10,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 72.53521126760563,
                        "opsPercentages": {
                            "arithmetic": 57.692307692307686,
                            "mul": 16.666666666666664,
                            "bitwise": 25.64102564102564
                        },
                        "percentageDAGsCancel": 7.894736842105263
                    }
                }
            }
        },
        {
            "num": 34,
            "gt": {
                "expr": "((((a-d)*(a^b))*((a*(a^b))^((~b)*(d-b)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 40.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((a & ~ d) + (a & ~ d)) - (a ^ d)) & (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) * ((((a & ~ d) + (a & ~ d)) - (a ^ d)) | (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) + ((((a & ~ d) + (a & ~ d)) - (a ^ d)) & ~ (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) * (~ (((a & ~ d) + (a & ~ d)) - (a ^ d)) & (((a - b) - ((a | ~ b) + (a | ~ b))) - 2))) & ((((a & (((a - b) - ((a | ~ b) << 1)) - 2)) * (a | (((a - b) - ((a | ~ b) << 1)) - 2)) + (a & ~ (((a - b) - ((a | ~ b) << 1)) - 2)) * (~ a & (((a - b) - ((a | ~ b) << 1)) - 2))) | (((- b - 1) & ((d + ~ b) + 1)) * ((- b - 1) | ((d + ~ b) + 1)) + ((- b - 1) & ~ ((d + ~ b) + 1)) * (~ (- b - 1) & ((d + ~ b) + 1)))) - (((a & (((a - b) - ((a | ~ b) << 1)) - 2)) * (a | (((a - b) - ((a | ~ b) << 1)) - 2)) + (a & ~ (((a - b) - ((a | ~ b) << 1)) - 2)) * (~ a & (((a - b) - ((a | ~ b) << 1)) - 2))) & (((- b - 1) & ((d + ~ b) + 1)) * ((- b - 1) | ((d + ~ b) + 1)) + ((- b - 1) & ~ ((d + ~ b) + 1)) * (~ (- b - 1) & ((d + ~ b) + 1)))))) * ((((((a & ~ d) + (a & ~ d)) - (a ^ d)) & (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) * ((((a & ~ d) + (a & ~ d)) - (a ^ d)) | (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) + ((((a & ~ d) + (a & ~ d)) - (a ^ d)) & ~ (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) * (~ (((a & ~ d) + (a & ~ d)) - (a ^ d)) & (((a - b) - ((a | ~ b) + (a | ~ b))) - 2))) | ((((a & (((a - b) - ((a | ~ b) << 1)) - 2)) * (a | (((a - b) - ((a | ~ b) << 1)) - 2)) + (a & ~ (((a - b) - ((a | ~ b) << 1)) - 2)) * (~ a & (((a - b) - ((a | ~ b) << 1)) - 2))) | (((- b - 1) & ((d + ~ b) + 1)) * ((- b - 1) | ((d + ~ b) + 1)) + ((- b - 1) & ~ ((d + ~ b) + 1)) * (~ (- b - 1) & ((d + ~ b) + 1)))) - (((a & (((a - b) - ((a | ~ b) << 1)) - 2)) * (a | (((a - b) - ((a | ~ b) << 1)) - 2)) + (a & ~ (((a - b) - ((a | ~ b) << 1)) - 2)) * (~ a & (((a - b) - ((a | ~ b) << 1)) - 2))) & (((- b - 1) & ((d + ~ b) + 1)) * ((- b - 1) | ((d + ~ b) + 1)) + ((- b - 1) & ~ ((d + ~ b) + 1)) * (~ (- b - 1) & ((d + ~ b) + 1)))))) + ((((((a & ~ d) + (a & ~ d)) - (a ^ d)) & (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) * ((((a & ~ d) + (a & ~ d)) - (a ^ d)) | (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) + ((((a & ~ d) + (a & ~ d)) - (a ^ d)) & ~ (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) * (~ (((a & ~ d) + (a & ~ d)) - (a ^ d)) & (((a - b) - ((a | ~ b) + (a | ~ b))) - 2))) & ~ ((((a & (((a - b) - ((a | ~ b) << 1)) - 2)) * (a | (((a - b) - ((a | ~ b) << 1)) - 2)) + (a & ~ (((a - b) - ((a | ~ b) << 1)) - 2)) * (~ a & (((a - b) - ((a | ~ b) << 1)) - 2))) | (((- b - 1) & ((d + ~ b) + 1)) * ((- b - 1) | ((d + ~ b) + 1)) + ((- b - 1) & ~ ((d + ~ b) + 1)) * (~ (- b - 1) & ((d + ~ b) + 1)))) - (((a & (((a - b) - ((a | ~ b) << 1)) - 2)) * (a | (((a - b) - ((a | ~ b) << 1)) - 2)) + (a & ~ (((a - b) - ((a | ~ b) << 1)) - 2)) * (~ a & (((a - b) - ((a | ~ b) << 1)) - 2))) & (((- b - 1) & ((d + ~ b) + 1)) * ((- b - 1) | ((d + ~ b) + 1)) + ((- b - 1) & ~ ((d + ~ b) + 1)) * (~ (- b - 1) & ((d + ~ b) + 1)))))) * (~ (((((a & ~ d) + (a & ~ d)) - (a ^ d)) & (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) * ((((a & ~ d) + (a & ~ d)) - (a ^ d)) | (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) + ((((a & ~ d) + (a & ~ d)) - (a ^ d)) & ~ (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) * (~ (((a & ~ d) + (a & ~ d)) - (a ^ d)) & (((a - b) - ((a | ~ b) + (a | ~ b))) - 2))) & ((((a & (((a - b) - ((a | ~ b) << 1)) - 2)) * (a | (((a - b) - ((a | ~ b) << 1)) - 2)) + (a & ~ (((a - b) - ((a | ~ b) << 1)) - 2)) * (~ a & (((a - b) - ((a | ~ b) << 1)) - 2))) | (((- b - 1) & ((d + ~ b) + 1)) * ((- b - 1) | ((d + ~ b) + 1)) + ((- b - 1) & ~ ((d + ~ b) + 1)) * (~ (- b - 1) & ((d + ~ b) + 1)))) - (((a & (((a - b) - ((a | ~ b) << 1)) - 2)) * (a | (((a - b) - ((a | ~ b) << 1)) - 2)) + (a & ~ (((a - b) - ((a | ~ b) << 1)) - 2)) * (~ a & (((a - b) - ((a | ~ b) << 1)) - 2))) & (((- b - 1) & ((d + ~ b) + 1)) * ((- b - 1) | ((d + ~ b) + 1)) + ((- b - 1) & ~ ((d + ~ b) + 1)) * (~ (- b - 1) & ((d + ~ b) + 1))))))",
                "attributes": {
                    "numOps": 793,
                    "nestedExprLevel": 358,
                    "numDAGs": 57,
                    "opsPercentages": {
                        "arithmetic": 43.505674653215635,
                        "mul": 5.296343001261034,
                        "bitwise": 51.19798234552333
                    },
                    "percentageDAGsCancel": 5.263157894736842
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((d + ~b + 1 & b) * (~b & (b - d) - 1) + (~b & d + ~b + 1) * (d + ~b + 1 | ~b) ^ (((a - b) + (~b | a) * -2) - 2 & a) * (((a - b) + (~b | a) * -2) - 2 | a) + (((a - b) + (~b | a) * -2) - 2 & ~a) * ((~b | a) * 2 + ~a + b + 2 & a)) & ~((((a - b) + (~b | a) * -2) - 2 & ~((~d & a) * 2) + (a ^ d)) * ((~d & a) * 2 - (a ^ d) & (~b | a) * 2 + ~a + b + 2) + ((~d & a) * 2 - (a ^ d) & ((a - b) + (~b | a) * -2) - 2) * (((a - b) + (~b | a) * -2) - 2 | (~d & a) * 2 - (a ^ d)))) * (((~d & a) * 2 - (a ^ d) & ((a - b) + (~b | a) * -2) - 2) * (((a - b) + (~b | a) * -2) - 2 | (~d & a) * 2 - (a ^ d)) + (((a - b) + (~b | a) * -2) - 2 & ~((~d & a) * 2) + (a ^ d)) * ((~d & a) * 2 - (a ^ d) & (~b | a) * 2 + ~a + b + 2) & ~((d + ~b + 1 & b) * (~b & (b - d) - 1) + (~b & d + ~b + 1) * (d + ~b + 1 | ~b) ^ (((a - b) + (~b | a) * -2) - 2 & a) * (((a - b) + (~b | a) * -2) - 2 | a) + (((a - b) + (~b | a) * -2) - 2 & ~a) * ((~b | a) * 2 + ~a + b + 2 & a))) + (((~d & a) * 2 - (a ^ d) & ((a - b) + (~b | a) * -2) - 2) * (((a - b) + (~b | a) * -2) - 2 | (~d & a) * 2 - (a ^ d)) + (((a - b) + (~b | a) * -2) - 2 & ~((~d & a) * 2) + (a ^ d)) * ((~d & a) * 2 - (a ^ d) & (~b | a) * 2 + ~a + b + 2) & ((d + ~b + 1 & b) * (~b & (b - d) - 1) + (~b & d + ~b + 1) * (d + ~b + 1 | ~b) ^ (((a - b) + (~b | a) * -2) - 2 & a) * (((a - b) + (~b | a) * -2) - 2 | a) + (((a - b) + (~b | a) * -2) - 2 & ~a) * ((~b | a) * 2 + ~a + b + 2 & a))) * ((d + ~b + 1 & b) * (~b & (b - d) - 1) + (~b & d + ~b + 1) * (d + ~b + 1 | ~b) ^ (((a - b) + (~b | a) * -2) - 2 & a) * (((a - b) + (~b | a) * -2) - 2 | a) + (((a - b) + (~b | a) * -2) - 2 & ~a) * ((~b | a) * 2 + ~a + b + 2 & a) | ((~d & a) * 2 - (a ^ d) & ((a - b) + (~b | a) * -2) - 2) * (((a - b) + (~b | a) * -2) - 2 | (~d & a) * 2 - (a ^ d)) + (((a - b) + (~b | a) * -2) - 2 & ~((~d & a) * 2) + (a ^ d)) * ((~d & a) * 2 - (a ^ d) & (~b | a) * 2 + ~a + b + 2))",
                    "attributes": {
                        "numOps": 465,
                        "nestedExprLevel": 118,
                        "numDAGs": 55,
                        "percentDecreaseByOps": 41.36191677175284,
                        "opsPercentages": {
                            "arithmetic": 38.924731182795696,
                            "mul": 15.913978494623656,
                            "bitwise": 45.16129032258064
                        },
                        "percentageDAGsCancel": 3.6363636363636362
                    }
                },
                "msvc_O1": {
                    "expr": "(~((~b | d + 1 + ~b) * (~b & d + 1 + ~b) + (~d + 1 + ~b & ~b) * (d + 1 + ~b & b) | (a & ((a + (~b | a) * -2) - b) - 2) * (((a + (~b | a) * -2) - b) - 2 | a) + (~a & ((a + (~b | a) * -2) - b) - 2) * (~((a + (~b | a) * -2) - b) - 2 & a)) - ((~b | d + 1 + ~b) * (~b & d + 1 + ~b) + (~d + 1 + ~b & ~b) * (d + 1 + ~b & b) & (a & ((a + (~b | a) * -2) - b) - 2) * (((a + (~b | a) * -2) - b) - 2 | a) + (~a & ((a + (~b | a) * -2) - b) - 2) * (~((a + (~b | a) * -2) - b) - 2 & a)) & ((~d & a) * 2 - (a ^ d) & (a - ((~b | a) * 2 + 2)) - b) * ((a - ((~b | a) * 2 + 2)) - b | (~d & a) * 2 - (a ^ d)) + (~(~d & a) * 2 - (a ^ d) & (a - ((~b | a) * 2 + 2)) - b) * (~(a - ((~b | a) * 2 + 2)) - b & (~d & a) * 2 - (a ^ d))) * (~((~d & a) * 2 - (a ^ d) & (a - ((~b | a) * 2 + 2)) - b) * ((a - ((~b | a) * 2 + 2)) - b | (~d & a) * 2 - (a ^ d)) + (~(~d & a) * 2 - (a ^ d) & (a - ((~b | a) * 2 + 2)) - b) * (~(a - ((~b | a) * 2 + 2)) - b & (~d & a) * 2 - (a ^ d)) & ((~b | d + 1 + ~b) * (~b & d + 1 + ~b) + (~d + 1 + ~b & ~b) * (d + 1 + ~b & b) | (a & ((a + (~b | a) * -2) - b) - 2) * (((a + (~b | a) * -2) - b) - 2 | a) + (~a & ((a + (~b | a) * -2) - b) - 2) * (~((a + (~b | a) * -2) - b) - 2 & a)) - ((~b | d + 1 + ~b) * (~b & d + 1 + ~b) + (~d + 1 + ~b & ~b) * (d + 1 + ~b & b) & (a & ((a + (~b | a) * -2) - b) - 2) * (((a + (~b | a) * -2) - b) - 2 | a) + (~a & ((a + (~b | a) * -2) - b) - 2) * (~((a + (~b | a) * -2) - b) - 2 & a))) + (((~d & a) * 2 - (a ^ d) & (a - ((~b | a) * 2 + 2)) - b) * ((a - ((~b | a) * 2 + 2)) - b | (~d & a) * 2 - (a ^ d)) + (~(~d & a) * 2 - (a ^ d) & (a - ((~b | a) * 2 + 2)) - b) * (~(a - ((~b | a) * 2 + 2)) - b & (~d & a) * 2 - (a ^ d)) | ((~b | d + 1 + ~b) * (~b & d + 1 + ~b) + (~d + 1 + ~b & ~b) * (d + 1 + ~b & b) | (a & ((a + (~b | a) * -2) - b) - 2) * (((a + (~b | a) * -2) - b) - 2 | a) + (~a & ((a + (~b | a) * -2) - b) - 2) * (~((a + (~b | a) * -2) - b) - 2 & a)) - ((~b | d + 1 + ~b) * (~b & d + 1 + ~b) + (~d + 1 + ~b & ~b) * (d + 1 + ~b & b) & (a & ((a + (~b | a) * -2) - b) - 2) * (((a + (~b | a) * -2) - b) - 2 | a) + (~a & ((a + (~b | a) * -2) - b) - 2) * (~((a + (~b | a) * -2) - b) - 2 & a))) * (((~d & a) * 2 - (a ^ d) & (a - ((~b | a) * 2 + 2)) - b) * ((a - ((~b | a) * 2 + 2)) - b | (~d & a) * 2 - (a ^ d)) + (~(~d & a) * 2 - (a ^ d) & (a - ((~b | a) * 2 + 2)) - b) * (~(a - ((~b | a) * 2 + 2)) - b & (~d & a) * 2 - (a ^ d)) & ((~b | d + 1 + ~b) * (~b & d + 1 + ~b) + (~d + 1 + ~b & ~b) * (d + 1 + ~b & b) | (a & ((a + (~b | a) * -2) - b) - 2) * (((a + (~b | a) * -2) - b) - 2 | a) + (~a & ((a + (~b | a) * -2) - b) - 2) * (~((a + (~b | a) * -2) - b) - 2 & a)) - ((~b | d + 1 + ~b) * (~b & d + 1 + ~b) + (~d + 1 + ~b & ~b) * (d + 1 + ~b & b) & (a & ((a + (~b | a) * -2) - b) - 2) * (((a + (~b | a) * -2) - b) - 2 | a) + (~a & ((a + (~b | a) * -2) - b) - 2) * (~((a + (~b | a) * -2) - b) - 2 & a)))",
                    "attributes": {
                        "numOps": 713,
                        "nestedExprLevel": 190,
                        "numDAGs": 64,
                        "percentDecreaseByOps": 10.08827238335435,
                        "opsPercentages": {
                            "arithmetic": 39.410939691444604,
                            "mul": 14.866760168302944,
                            "bitwise": 45.72230014025245
                        },
                        "percentageDAGsCancel": 1.5625
                    }
                },
                "clang_O3": {
                    "expr": "(~(~(~d & a) * 2 - (d ^ a) & (a - b) + (~b | a) * -2 - 2) * ((~d & a) * 2 - (d ^ a) & 1 - (a - b) + (~b | a) * -2) + ((~d & a) * 2 - (d ^ a) | (a - b) + (~b | a) * -2 - 2) * ((~d & a) * 2 - (d ^ a) & (a - b) + (~b | a) * -2 - 2) & (d & b) * (~d & ~b) + (d | ~b) * (d & ~b) ^ ((a - b) + (~b | a) * -2 - 2 & ~a) * (1 - (a - b) + (~b | a) * -2 & a) + ((a - b) + (~b | a) * -2 - 2 | a) * ((a - b) + (~b | a) * -2 - 2 & a)) * (~(d & b) * (~d & ~b) + (d | ~b) * (d & ~b) ^ ((a - b) + (~b | a) * -2 - 2 & ~a) * (1 - (a - b) + (~b | a) * -2 & a) + ((a - b) + (~b | a) * -2 - 2 | a) * ((a - b) + (~b | a) * -2 - 2 & a) & (~(~d & a) * 2 - (d ^ a) & (a - b) + (~b | a) * -2 - 2) * ((~d & a) * 2 - (d ^ a) & 1 - (a - b) + (~b | a) * -2) + ((~d & a) * 2 - (d ^ a) | (a - b) + (~b | a) * -2 - 2) * ((~d & a) * 2 - (d ^ a) & (a - b) + (~b | a) * -2 - 2)) + ((~(~d & a) * 2 - (d ^ a) & (a - b) + (~b | a) * -2 - 2) * ((~d & a) * 2 - (d ^ a) & 1 - (a - b) + (~b | a) * -2) + ((~d & a) * 2 - (d ^ a) | (a - b) + (~b | a) * -2 - 2) * ((~d & a) * 2 - (d ^ a) & (a - b) + (~b | a) * -2 - 2) | (d & b) * (~d & ~b) + (d | ~b) * (d & ~b) ^ ((a - b) + (~b | a) * -2 - 2 & ~a) * (1 - (a - b) + (~b | a) * -2 & a) + ((a - b) + (~b | a) * -2 - 2 | a) * ((a - b) + (~b | a) * -2 - 2 & a)) * ((~(~d & a) * 2 - (d ^ a) & (a - b) + (~b | a) * -2 - 2) * ((~d & a) * 2 - (d ^ a) & 1 - (a - b) + (~b | a) * -2) + ((~d & a) * 2 - (d ^ a) | (a - b) + (~b | a) * -2 - 2) * ((~d & a) * 2 - (d ^ a) & (a - b) + (~b | a) * -2 - 2) & (d & b) * (~d & ~b) + (d | ~b) * (d & ~b) ^ ((a - b) + (~b | a) * -2 - 2 & ~a) * (1 - (a - b) + (~b | a) * -2 & a) + ((a - b) + (~b | a) * -2 - 2 | a) * ((a - b) + (~b | a) * -2 - 2 & a))",
                    "attributes": {
                        "numOps": 425,
                        "nestedExprLevel": 93,
                        "numDAGs": 56,
                        "percentDecreaseByOps": 46.406052963430014,
                        "opsPercentages": {
                            "arithmetic": 36.94117647058823,
                            "mul": 17.41176470588235,
                            "bitwise": 45.64705882352941
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_default": {
                    "expr": "((((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) & ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) * (((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) | ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) + (((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) & (((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2 ^ 0xffffffff)) * ((((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) ^ 0xffffffff) & ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) & ((a & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) * (a | ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) + (a & (((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * ((a ^ 0xffffffff) & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) | (0xffffffff - b & d + (b ^ 0xffffffff) + 1) * (0xffffffff - b | d + (b ^ 0xffffffff) + 1) + (0xffffffff - b & (d + (b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & d + (b ^ 0xffffffff) + 1)) - ((a & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) * (a | ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) + (a & (((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * ((a ^ 0xffffffff) & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) & (0xffffffff - b & d + (b ^ 0xffffffff) + 1) * (0xffffffff - b | d + (b ^ 0xffffffff) + 1) + (0xffffffff - b & (d + (b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & d + (b ^ 0xffffffff) + 1))) * ((((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) & ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) * (((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) | ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) + (((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) & (((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2 ^ 0xffffffff)) * ((((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) ^ 0xffffffff) & ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) | ((a & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) * (a | ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) + (a & (((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * ((a ^ 0xffffffff) & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) | (0xffffffff - b & d + (b ^ 0xffffffff) + 1) * (0xffffffff - b | d + (b ^ 0xffffffff) + 1) + (0xffffffff - b & (d + (b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & d + (b ^ 0xffffffff) + 1)) - ((a & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) * (a | ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) + (a & (((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * ((a ^ 0xffffffff) & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) & (0xffffffff - b & d + (b ^ 0xffffffff) + 1) * (0xffffffff - b | d + (b ^ 0xffffffff) + 1) + (0xffffffff - b & (d + (b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & d + (b ^ 0xffffffff) + 1))) + ((((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) & ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) * (((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) | ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) + (((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) & (((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2 ^ 0xffffffff)) * ((((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) ^ 0xffffffff) & ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) & (((a & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) * (a | ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) + (a & (((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * ((a ^ 0xffffffff) & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) | (0xffffffff - b & d + (b ^ 0xffffffff) + 1) * (0xffffffff - b | d + (b ^ 0xffffffff) + 1) + (0xffffffff - b & (d + (b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & d + (b ^ 0xffffffff) + 1)) - ((a & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) * (a | ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) + (a & (((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * ((a ^ 0xffffffff) & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) & (0xffffffff - b & d + (b ^ 0xffffffff) + 1) * (0xffffffff - b | d + (b ^ 0xffffffff) + 1) + (0xffffffff - b & (d + (b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & d + (b ^ 0xffffffff) + 1)) ^ 0xffffffff)) * (((((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) & ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) * (((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) | ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) + (((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) & (((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2 ^ 0xffffffff)) * ((((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d) ^ 0xffffffff) & ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) ^ 0xffffffff) & ((a & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) * (a | ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) + (a & (((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * ((a ^ 0xffffffff) & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) | (0xffffffff - b & d + (b ^ 0xffffffff) + 1) * (0xffffffff - b | d + (b ^ 0xffffffff) + 1) + (0xffffffff - b & (d + (b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & d + (b ^ 0xffffffff) + 1)) - ((a & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) * (a | ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) + (a & (((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * ((a ^ 0xffffffff) & ((a - b) + (a | b ^ 0xffffffff) * -2) - 2) & (0xffffffff - b & d + (b ^ 0xffffffff) + 1) * (0xffffffff - b | d + (b ^ 0xffffffff) + 1) + (0xffffffff - b & (d + (b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & d + (b ^ 0xffffffff) + 1)))",
                    "attributes": {
                        "numOps": 793,
                        "nestedExprLevel": 303,
                        "numDAGs": 57,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 43.505674653215635,
                            "mul": 9.331651954602775,
                            "bitwise": 47.16267339218159
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_default": {
                    "expr": "((((~d & a) + (~d & a)) - (a ^ d) & ((a - b) - ((~b | a) + (~b | a))) - 2) * (((~d & a) + (~d & a)) - (a ^ d) | ((a - b) - ((~b | a) + (~b | a))) - 2) + (((~d & a) + (~d & a)) - (a ^ d) & ~(((a - b) - ((~b | a) + (~b | a))) - 2)) * (~(((~d & a) + (~d & a)) - (a ^ d)) & ((a - b) - ((~b | a) + (~b | a))) - 2) & ~(((((a - b) + (~b | a) * -2) - 2 & a) * (((a - b) + (~b | a) * -2) - 2 | a) + (~(((a - b) + (~b | a) * -2) - 2) & a) * (~a & ((a - b) + (~b | a) * -2) - 2) | (0xffffffff - b & d + 1 + ~b) * (0xffffffff - b | d + 1 + ~b) + (0xffffffff - b & ~(d + 1 + ~b)) * (~(0xffffffff - b) & d + 1 + ~b)) - ((((a - b) + (~b | a) * -2) - 2 & a) * (((a - b) + (~b | a) * -2) - 2 | a) + (~(((a - b) + (~b | a) * -2) - 2) & a) * (~a & ((a - b) + (~b | a) * -2) - 2) & (0xffffffff - b & d + 1 + ~b) * (0xffffffff - b | d + 1 + ~b) + (0xffffffff - b & ~(d + 1 + ~b)) * (~(0xffffffff - b) & d + 1 + ~b)))) * (~((((~d & a) + (~d & a)) - (a ^ d) & ((a - b) - ((~b | a) + (~b | a))) - 2) * (((~d & a) + (~d & a)) - (a ^ d) | ((a - b) - ((~b | a) + (~b | a))) - 2) + (((~d & a) + (~d & a)) - (a ^ d) & ~(((a - b) - ((~b | a) + (~b | a))) - 2)) * (~(((~d & a) + (~d & a)) - (a ^ d)) & ((a - b) - ((~b | a) + (~b | a))) - 2)) & ((((a - b) + (~b | a) * -2) - 2 & a) * (((a - b) + (~b | a) * -2) - 2 | a) + (~(((a - b) + (~b | a) * -2) - 2) & a) * (~a & ((a - b) + (~b | a) * -2) - 2) | (0xffffffff - b & d + 1 + ~b) * (0xffffffff - b | d + 1 + ~b) + (0xffffffff - b & ~(d + 1 + ~b)) * (~(0xffffffff - b) & d + 1 + ~b)) - ((((a - b) + (~b | a) * -2) - 2 & a) * (((a - b) + (~b | a) * -2) - 2 | a) + (~(((a - b) + (~b | a) * -2) - 2) & a) * (~a & ((a - b) + (~b | a) * -2) - 2) & (0xffffffff - b & d + 1 + ~b) * (0xffffffff - b | d + 1 + ~b) + (0xffffffff - b & ~(d + 1 + ~b)) * (~(0xffffffff - b) & d + 1 + ~b))) + ((((~d & a) + (~d & a)) - (a ^ d) & ((a - b) - ((~b | a) + (~b | a))) - 2) * (((~d & a) + (~d & a)) - (a ^ d) | ((a - b) - ((~b | a) + (~b | a))) - 2) + (((~d & a) + (~d & a)) - (a ^ d) & ~(((a - b) - ((~b | a) + (~b | a))) - 2)) * (~(((~d & a) + (~d & a)) - (a ^ d)) & ((a - b) - ((~b | a) + (~b | a))) - 2) & ((((a - b) + (~b | a) * -2) - 2 & a) * (((a - b) + (~b | a) * -2) - 2 | a) + (~(((a - b) + (~b | a) * -2) - 2) & a) * (~a & ((a - b) + (~b | a) * -2) - 2) | (0xffffffff - b & d + 1 + ~b) * (0xffffffff - b | d + 1 + ~b) + (0xffffffff - b & ~(d + 1 + ~b)) * (~(0xffffffff - b) & d + 1 + ~b)) - ((((a - b) + (~b | a) * -2) - 2 & a) * (((a - b) + (~b | a) * -2) - 2 | a) + (~(((a - b) + (~b | a) * -2) - 2) & a) * (~a & ((a - b) + (~b | a) * -2) - 2) & (0xffffffff - b & d + 1 + ~b) * (0xffffffff - b | d + 1 + ~b) + (0xffffffff - b & ~(d + 1 + ~b)) * (~(0xffffffff - b) & d + 1 + ~b))) * ((((~d & a) + (~d & a)) - (a ^ d) & ((a - b) - ((~b | a) + (~b | a))) - 2) * (((~d & a) + (~d & a)) - (a ^ d) | ((a - b) - ((~b | a) + (~b | a))) - 2) + (((~d & a) + (~d & a)) - (a ^ d) & ~(((a - b) - ((~b | a) + (~b | a))) - 2)) * (~(((~d & a) + (~d & a)) - (a ^ d)) & ((a - b) - ((~b | a) + (~b | a))) - 2) | ((((a - b) + (~b | a) * -2) - 2 & a) * (((a - b) + (~b | a) * -2) - 2 | a) + (~(((a - b) + (~b | a) * -2) - 2) & a) * (~a & ((a - b) + (~b | a) * -2) - 2) | (0xffffffff - b & d + 1 + ~b) * (0xffffffff - b | d + 1 + ~b) + (0xffffffff - b & ~(d + 1 + ~b)) * (~(0xffffffff - b) & d + 1 + ~b)) - ((((a - b) + (~b | a) * -2) - 2 & a) * (((a - b) + (~b | a) * -2) - 2 | a) + (~(((a - b) + (~b | a) * -2) - 2) & a) * (~a & ((a - b) + (~b | a) * -2) - 2) & (0xffffffff - b & d + 1 + ~b) * (0xffffffff - b | d + 1 + ~b) + (0xffffffff - b & ~(d + 1 + ~b)) * (~(0xffffffff - b) & d + 1 + ~b)))",
                    "attributes": {
                        "numOps": 793,
                        "nestedExprLevel": 248,
                        "numDAGs": 57,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 43.505674653215635,
                            "mul": 9.331651954602775,
                            "bitwise": 47.16267339218159
                        },
                        "percentageDAGsCancel": 1.7543859649122806
                    }
                },
                "gcc_O3": {
                    "expr": "(~((~b | a) * 2 + 2 + ~a + b & a) * (~a & ((a - b) + (~b | a) * -2) - 2) + (((a - b) + (~b | a) * -2) - 2 | a) * (((a - b) + (~b | a) * -2) - 2 & a) ^ ((b - d) - 1 & ~b) * (b & ~b + 1 + d) + (~b & ~b + 1 + d) * (~b | ~b + 1 + d) & (~(~d & a) * 2 + (d ^ a) & ((a - b) + (~b | a) * -2) - 2) * ((~b | a) * 2 + 2 + ~a + b & (~d & a) * 2 - (d ^ a)) + ((~d & a) * 2 - (d ^ a) | ((a - b) + (~b | a) * -2) - 2) * ((~d & a) * 2 - (d ^ a) & ((a - b) + (~b | a) * -2) - 2)) * (~(~(~d & a) * 2 + (d ^ a) & ((a - b) + (~b | a) * -2) - 2) * ((~b | a) * 2 + 2 + ~a + b & (~d & a) * 2 - (d ^ a)) + ((~d & a) * 2 - (d ^ a) | ((a - b) + (~b | a) * -2) - 2) * ((~d & a) * 2 - (d ^ a) & ((a - b) + (~b | a) * -2) - 2) & ((~b | a) * 2 + 2 + ~a + b & a) * (~a & ((a - b) + (~b | a) * -2) - 2) + (((a - b) + (~b | a) * -2) - 2 | a) * (((a - b) + (~b | a) * -2) - 2 & a) ^ ((b - d) - 1 & ~b) * (b & ~b + 1 + d) + (~b & ~b + 1 + d) * (~b | ~b + 1 + d)) + ((~(~d & a) * 2 + (d ^ a) & ((a - b) + (~b | a) * -2) - 2) * ((~b | a) * 2 + 2 + ~a + b & (~d & a) * 2 - (d ^ a)) + ((~d & a) * 2 - (d ^ a) | ((a - b) + (~b | a) * -2) - 2) * ((~d & a) * 2 - (d ^ a) & ((a - b) + (~b | a) * -2) - 2) & ((~b | a) * 2 + 2 + ~a + b & a) * (~a & ((a - b) + (~b | a) * -2) - 2) + (((a - b) + (~b | a) * -2) - 2 | a) * (((a - b) + (~b | a) * -2) - 2 & a) ^ ((b - d) - 1 & ~b) * (b & ~b + 1 + d) + (~b & ~b + 1 + d) * (~b | ~b + 1 + d)) * ((~(~d & a) * 2 + (d ^ a) & ((a - b) + (~b | a) * -2) - 2) * ((~b | a) * 2 + 2 + ~a + b & (~d & a) * 2 - (d ^ a)) + ((~d & a) * 2 - (d ^ a) | ((a - b) + (~b | a) * -2) - 2) * ((~d & a) * 2 - (d ^ a) & ((a - b) + (~b | a) * -2) - 2) | ((~b | a) * 2 + 2 + ~a + b & a) * (~a & ((a - b) + (~b | a) * -2) - 2) + (((a - b) + (~b | a) * -2) - 2 | a) * (((a - b) + (~b | a) * -2) - 2 & a) ^ ((b - d) - 1 & ~b) * (b & ~b + 1 + d) + (~b & ~b + 1 + d) * (~b | ~b + 1 + d))",
                    "attributes": {
                        "numOps": 465,
                        "nestedExprLevel": 113,
                        "numDAGs": 62,
                        "percentDecreaseByOps": 41.36191677175284,
                        "opsPercentages": {
                            "arithmetic": 38.924731182795696,
                            "mul": 15.913978494623656,
                            "bitwise": 45.16129032258064
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                }
            }
        },
        {
            "num": 35,
            "gt": {
                "expr": "((((e-e)&(e-d))-d))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 0.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "(((~ ((e + ~ e) + 1) | (((e & ~ d) + (e & ~ d)) - (e ^ d))) - ~ ((e + ~ e) + 1)) ^ d) - ((~ ((~ ((e + ~ e) + 1) | (((e & ~ d) + (e & ~ d)) - (e ^ d))) - ~ ((e + ~ e) + 1)) & d) << 1)",
                "attributes": {
                    "numOps": 39,
                    "nestedExprLevel": 19,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 38.46153846153847,
                        "mul": 0.0,
                        "bitwise": 61.53846153846154
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-d",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 97.43589743589743,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "-d",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 97.43589743589743,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-d",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 97.43589743589743,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e + (e ^ 0xffffffff) + 1 ^ 0xffffffff | ((e & (d ^ 0xffffffff)) + (e & (d ^ 0xffffffff))) - (e ^ d)) - (e + (e ^ 0xffffffff) + 1 ^ 0xffffffff) ^ d) + (((e + (e ^ 0xffffffff) + 1 ^ 0xffffffff | ((e & (d ^ 0xffffffff)) + (e & (d ^ 0xffffffff))) - (e ^ d)) - (e + (e ^ 0xffffffff) + 1 ^ 0xffffffff) ^ 0xffffffff) & d) * -2",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 17,
                        "numDAGs": 17,
                        "percentDecreaseByOps": -2.564102564102564,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 2.5,
                            "bitwise": 57.49999999999999
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "msvc_default": {
                    "expr": "((~(e + 1 + ~e) | ((~d & e) + (~d & e)) - (e ^ d)) - ~(e + 1 + ~e) ^ d) + (~((~(e + 1 + ~e) | ((~d & e) + (~d & e)) - (e ^ d)) - ~(e + 1 + ~e)) & d) * -2",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 12,
                        "numDAGs": 17,
                        "percentDecreaseByOps": -2.564102564102564,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 2.5,
                            "bitwise": 57.49999999999999
                        },
                        "percentageDAGsCancel": 23.52941176470588
                    }
                },
                "gcc_O3": {
                    "expr": "-d",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 97.43589743589743,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 36,
            "gt": {
                "expr": "((b^(-(~(a|a)))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(b | (((a & ~ a) + a) + 1)) - (b & (((a & ~ a) + a) + 1))",
                "attributes": {
                    "numOps": 11,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 45.45454545454545,
                        "mul": 0.0,
                        "bitwise": 54.54545454545454
                    },
                    "percentageDAGsCancel": 28.57142857142857
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "a + 1 ^ b",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(a + 1 | b) - (a + 1 & b)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 54.54545454545454,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "clang_O3": {
                    "expr": "a + 1 ^ b",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(b | (a & (a ^ 0xffffffff)) + a + 1) - (b & (a & (a ^ 0xffffffff)) + a + 1)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 6,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 0.0,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 28.57142857142857
                    }
                },
                "msvc_default": {
                    "expr": "(a + 1 | b) - (a + 1 & b)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 54.54545454545454,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "a + 1 ^ b",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 37,
            "gt": {
                "expr": "(((-(~a))*(~(e*d))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 40.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((a + 1) & (- ((e & d) * (e | d) + (e & ~ d) * (~ e & d)) - 1)) * ((a + 1) | (- ((e & d) * (e | d) + (e & ~ d) * (~ e & d)) - 1)) + ((a + 1) & ~ (- ((e & d) * (e | d) + (e & ~ d) * (~ e & d)) - 1)) * (~ (a + 1) & (- ((e & d) * (e | d) + (e & ~ d) * (~ e & d)) - 1))",
                "attributes": {
                    "numOps": 57,
                    "nestedExprLevel": 21,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 29.82456140350877,
                        "mul": 17.543859649122805,
                        "bitwise": 52.63157894736842
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~((~e & d) * (~d & e) + (e & d) * (e | d)) & -a - 2) * (a + 1 & (~e & d) * (~d & e) + (e & d) * (e | d)) + (a + 1 & ~((~e & d) * (~d & e) + (e & d) * (e | d))) * (~((~e & d) * (~d & e) + (e & d) * (e | d)) | a + 1)",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 16,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 10.526315789473683,
                        "opsPercentages": {
                            "arithmetic": 19.607843137254903,
                            "mul": 19.607843137254903,
                            "bitwise": 60.78431372549019
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "msvc_O1": {
                    "expr": "(a + 1 & ~((~e & d) * (~d & e)) - (d | e) * (d & e)) * (~((~e & d) * (~d & e)) - (d | e) * (d & e) | a + 1) + (~a + 1 & ~((~e & d) * (~d & e)) - (d | e) * (d & e)) * (~~((~e & d) * (~d & e)) - (d | e) * (d & e) & a + 1)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 17,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 7.017543859649122,
                        "opsPercentages": {
                            "arithmetic": 16.9811320754717,
                            "mul": 18.867924528301888,
                            "bitwise": 64.15094339622641
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "clang_O3": {
                    "expr": "(-a - 2 & ~(~e & d) * (~d & e) + (e | d) * (e & d)) * ((~e & d) * (~d & e) + (e | d) * (e & d) & a + 1) + (a + 1 | ~(~e & d) * (~d & e) + (e | d) * (e & d)) * (a + 1 & ~(~e & d) * (~d & e) + (e | d) * (e & d))",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 13,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 10.526315789473683,
                        "opsPercentages": {
                            "arithmetic": 19.607843137254903,
                            "mul": 19.607843137254903,
                            "bitwise": 60.78431372549019
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "clang_default": {
                    "expr": "(a + 1 & 0xffffffff - ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d))) * (a + 1 | 0xffffffff - ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d))) + (a + 1 & (0xffffffff - ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d)) ^ 0xffffffff)) * ((a + 1 ^ 0xffffffff) & 0xffffffff - ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d)))",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 23,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 7.017543859649122,
                        "opsPercentages": {
                            "arithmetic": 24.528301886792452,
                            "mul": 18.867924528301888,
                            "bitwise": 56.60377358490566
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "msvc_default": {
                    "expr": "(a + 1 & 0xffffffff - ((e & d) * (e | d) + (~d & e) * (~e & d))) * (a + 1 | 0xffffffff - ((e & d) * (e | d) + (~d & e) * (~e & d)) ) + (a + 1 & ~(0xffffffff - ((e & d) * (e | d) + (~d & e) * (~e & d)))) * (~(a + 1) & 0xffffffff - ((e & d) * (e | d) + (~d & e) * (~e & d)))",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 18,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 7.017543859649122,
                        "opsPercentages": {
                            "arithmetic": 24.528301886792452,
                            "mul": 18.867924528301888,
                            "bitwise": 56.60377358490566
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(-a - 2 & ~(~d & e) * (~e & d) + (e | d) * (e & d)) * ((~d & e) * (~e & d) + (e | d) * (e & d) & a + 1) + (a + 1 & ~(~d & e) * (~e & d) + (e | d) * (e & d)) * (a + 1 | ~(~d & e) * (~e & d) + (e | d) * (e & d))",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 13,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 10.526315789473683,
                        "opsPercentages": {
                            "arithmetic": 19.607843137254903,
                            "mul": 19.607843137254903,
                            "bitwise": 60.78431372549019
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                }
            }
        },
        {
            "num": 38,
            "gt": {
                "expr": "((((a*a)^(-(d&a)))|((d+a)^(d-d))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 7,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 12.5,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "(((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) | ~ ((((~ d | a) + d) + 1) - 1)) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ ((((~ d | a) + d) + 1) - 1))) & ~ (((((d - ~ a) - 1) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - ((((d - ~ a) - 1) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) << 1)) - 2)) + (((((d - ~ a) - 1) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - ((((d - ~ a) - 1) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) << 1)) - 2)",
                "attributes": {
                    "numOps": 88,
                    "nestedExprLevel": 43,
                    "numDAGs": 32,
                    "opsPercentages": {
                        "arithmetic": 36.36363636363637,
                        "mul": 4.545454545454546,
                        "bitwise": 59.09090909090909
                    },
                    "percentageDAGsCancel": 28.125
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(d - ~a) + -1 + (~(a * a ^ (~d | a) + d) & ~a + ~d + 1)",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 4,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 43.75,
                            "mul": 6.25,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~((~d | a) + d) | a * a) - (~((~d | a) + d) & a * a) & ~(a + d)) + a + d",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 7,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 79.54545454545455,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 11.11111111111111,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((~d | a) + d ^ a * a | d + a) + d + a",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 88.63636363636364,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 10.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) | (d ^ 0xffffffff | a) + d ^ 0xffffffff) - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & ((d ^ 0xffffffff | a) + d ^ 0xffffffff)) & (((d - (a ^ 0xffffffff)) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d) + ((d - (a ^ 0xffffffff)) - 1 | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) * -2) - 3 ^ 0xffffffff)) + (d - (a ^ 0xffffffff)) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d) + ((d - (a ^ 0xffffffff)) - 1 | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) * -2 + -3",
                    "attributes": {
                        "numOps": 75,
                        "nestedExprLevel": 29,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 14.772727272727273,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 8.0,
                            "bitwise": 56.00000000000001
                        },
                        "percentageDAGsCancel": 17.647058823529413
                    }
                },
                "msvc_default": {
                    "expr": "((a * a | ~((~d | a) + d)) - (a * a & ~((~d | a) + d)) & ~((d - ~a) - 1)) + (d - ~a) + -1",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 8,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 73.86363636363636,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 8.695652173913043,
                            "bitwise": 52.17391304347826
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~((~d | a) + d ^ a * a) & ~d - a) + a + d",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 87.5,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 9.090909090909092,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 39,
            "gt": {
                "expr": "(((~(c*d))-(((d|d)|(~d))^(c|c))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 12.5,
                        "mul": 12.5,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((- ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) - 1) + ~ (((((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (- d - 1)) + (- d - 1)) | ((c & ~ c) + c)) - ((((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (- d - 1)) + (- d - 1)) & ((c & ~ c) + c)))) + 1",
                "attributes": {
                    "numOps": 53,
                    "nestedExprLevel": 26,
                    "numDAGs": 28,
                    "opsPercentages": {
                        "arithmetic": 60.37735849056604,
                        "mul": 3.7735849056603774,
                        "bitwise": 35.84905660377358
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-d - 1 & d ^ c) + ~((~c & d) * (~d & c) + (c & d) * (c | d)) + 1",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 4,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 69.81132075471697,
                        "opsPercentages": {
                            "arithmetic": 31.25,
                            "mul": 12.5,
                            "bitwise": 56.25
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_O1": {
                    "expr": "(c - (~d & c) * (~c & d)) - (c | d) * (c & d)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 81.13207547169812,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "c - ((~c & d) * (~d & c) + (d | c) * (d & c))",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 81.13207547169812,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_default": {
                    "expr": "(((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & (0xffffffff - d ^ 0xffffffff)) + (-1 - d) | (c & (c ^ 0xffffffff)) + c) - ((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & (0xffffffff - d ^ 0xffffffff)) + (-1 - d) & (c & (c ^ 0xffffffff)) + c) ^ 0xffffffff) - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d))",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 15,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 16.9811320754717,
                        "opsPercentages": {
                            "arithmetic": 47.72727272727273,
                            "mul": 9.090909090909092,
                            "bitwise": 43.18181818181818
                        },
                        "percentageDAGsCancel": 23.076923076923077
                    }
                },
                "msvc_default": {
                    "expr": "~((((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ~(0xffffffff - d)) - 1) - d | c) - (((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ~(0xffffffff - d)) - 1) - d & c)) - ((c & d) * (c | d) + (~d & c) * (~c & d))",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 13,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 32.075471698113205,
                        "opsPercentages": {
                            "arithmetic": 47.22222222222222,
                            "mul": 11.11111111111111,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 13.043478260869565
                    }
                },
                "gcc_O3": {
                    "expr": "(-d - 1 & d ^ c) - ((~d & c) * (~c & d) + (c & d) * (c | d))",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 73.58490566037736,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 14.285714285714285,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 21.428571428571427
                    }
                }
            }
        },
        {
            "num": 40,
            "gt": {
                "expr": "(((c-(a&c))-((c&(a+a))*c)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 16.666666666666664,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((c ^ (((~ a | c) + a) + 1)) - ((~ c & (((~ a | c) + a) + 1)) << 1)) + ~ (((((~ c | (((a | a) + (a | a)) - (a ^ a))) + c) + 1) & c) * ((((~ c | (((a | a) + (a | a)) - (a ^ a))) + c) + 1) | c) + ((((~ c | (((a | a) + (a | a)) - (a ^ a))) + c) + 1) & ~ c) * (~ (((~ c | (((a | a) + (a | a)) - (a ^ a))) + c) + 1) & c))) + 1",
                "attributes": {
                    "numOps": 61,
                    "nestedExprLevel": 40,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 39.34426229508197,
                        "mul": 3.278688524590164,
                        "bitwise": 57.377049180327866
                    },
                    "percentageDAGsCancel": 25.925925925925924
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((-((~c | a * 2) + c) - 2 & c) * (c + (~c | a * 2) + 1 & ~c) + (c + (~c | a * 2) + 1 & c) * (c + (~c | a * 2) + 1 | c)) + (a + (~a | c) + 1 ^ c) + (a + (~a | c) + 1 & ~c) * -2 + 1",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 10,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 24.59016393442623,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 15.217391304347828,
                            "bitwise": 45.65217391304348
                        },
                        "percentageDAGsCancel": 22.22222222222222
                    }
                },
                "msvc_O1": {
                    "expr": "((~a | c) + a + 1 ^ c) + 1 + (~((~c + 1 + (a * 2 | ~c) & c) * (c + 1 + (a * 2 | ~c) & ~c) + (c + 1 + (a * 2 | ~c) | c) * (c + 1 + (a * 2 | ~c) & c)) - ((~a | c) + a * 2 + 2 & ~c * 2))",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 10,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 24.59016393442623,
                        "opsPercentages": {
                            "arithmetic": 34.78260869565217,
                            "mul": 17.391304347826086,
                            "bitwise": 47.82608695652174
                        },
                        "percentageDAGsCancel": 14.814814814814813
                    }
                },
                "clang_O3": {
                    "expr": "((a + (~a | c) + 1 ^ c) + (a + (~a | c) + 1 & ~c) * -2) - ((-(a * 2 | ~c + c) - 2 & c) * (~c & a * 2 | ~c + c + 1) + (a * 2 | ~c + c + 1 | c) * (a * 2 | ~c + c + 1 & c))",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 8,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 27.86885245901639,
                        "opsPercentages": {
                            "arithmetic": 38.63636363636363,
                            "mul": 15.909090909090908,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 18.51851851851852
                    }
                },
                "clang_default": {
                    "expr": "(c ^ (a ^ 0xffffffff | c) + a + 1) + ((c ^ 0xffffffff) & (a ^ 0xffffffff | c) + a + 1) * -2 + (((c ^ 0xffffffff | a * 2) + c + 1 & c) * ((c ^ 0xffffffff | a * 2) + c + 1 | c) + ((c ^ 0xffffffff | a * 2) + c + 1 & (c ^ 0xffffffff)) * (((c ^ 0xffffffff | a * 2) + c + 1 ^ 0xffffffff) & c) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 12,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 24.59016393442623,
                        "opsPercentages": {
                            "arithmetic": 36.95652173913043,
                            "mul": 15.217391304347828,
                            "bitwise": 47.82608695652174
                        },
                        "percentageDAGsCancel": 16.0
                    }
                },
                "msvc_default": {
                    "expr": "((~a | c) + 1 + a ^ c) + (~c & (~a | c) + 1 + a) * -2 + 1 + ~(((~c | a * 2) + 1 + c & c) * ((~c | a * 2) + 1 + c | c) + ((~c | a * 2) + 1 + c & ~c) * (~((~c | a * 2) + 1 + c) & c))",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 10,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 24.59016393442623,
                        "opsPercentages": {
                            "arithmetic": 36.95652173913043,
                            "mul": 15.217391304347828,
                            "bitwise": 47.82608695652174
                        },
                        "percentageDAGsCancel": 32.0
                    }
                },
                "gcc_O3": {
                    "expr": "((c ^ a + 1 + (~a | c)) + (a + 1 + (~a | c) & ~c) * -2) - ((-(a * 2 | ~c) + c - 2 & c) * (~c & (a * 2 | ~c) + c + 1) + ((a * 2 | ~c) + c + 1 | c) * ((a * 2 | ~c) + c + 1 & c))",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 10,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 27.86885245901639,
                        "opsPercentages": {
                            "arithmetic": 38.63636363636363,
                            "mul": 15.909090909090908,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 20.0
                    }
                }
            }
        },
        {
            "num": 41,
            "gt": {
                "expr": "(((((~(c*d))&(-c))^d)-((e-d)|c)))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 12.5,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((~ (- ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) - 1) | ~ (c - 1)) + (- ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) - 1)) + 1) | d) - ((((~ (- ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) - 1) | ~ (c - 1)) + (- ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) - 1)) + 1) & d)) & ~ (((((e ^ d) - ((~ e & d) << 1)) + c) + 1) + ((- ((e ^ d) - ((~ e & d) << 1)) - 1) | (- c - 1)))) - (~ (((((~ (- ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) - 1) | ~ (c - 1)) + (- ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) - 1)) + 1) | d) - ((((~ (- ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) - 1) | ~ (c - 1)) + (- ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) - 1)) + 1) & d)) & (((((e ^ d) - ((~ e & d) << 1)) + c) + 1) + ((- ((e ^ d) - ((~ e & d) << 1)) - 1) | (- c - 1))))",
                "attributes": {
                    "numOps": 159,
                    "nestedExprLevel": 73,
                    "numDAGs": 38,
                    "opsPercentages": {
                        "arithmetic": 35.84905660377358,
                        "mul": 10.062893081761008,
                        "bitwise": 54.088050314465406
                    },
                    "percentageDAGsCancel": 5.263157894736842
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~((~c & d) * (~d & c) + (c & d) * (c | d)) + ((c & d) * (c | d) + (~c & d) * (~d & c) | -c) + 1 ^ d) & ~((~c | ((~e & d) * 2 - (e ^ d)) - 1) + c + (e ^ d) + (~e & d) * -2 + 1)) - (((((c & d) * (c | d) + (~c & d) * (~d & c)) - ((c & d) * (c | d) + (~c & d) * (~d & c) | -c)) - 1 ^ d) & (~c | ((~e & d) * 2 - (e ^ d)) - 1) + c + (e ^ d) + (~e & d) * -2 + 1)",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 27,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 46.540880503144656,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 14.117647058823529,
                            "bitwise": 56.470588235294116
                        },
                        "percentageDAGsCancel": 13.88888888888889
                    }
                },
                "msvc_O1": {
                    "expr": "(~c + 1 + (((~e & d) * 2 - (d ^ e)) - 1 | ~c) + (~e & d) * -2 + (d ^ e) & ((~(~(~d & c) * (~c & d) - (c | d) * (c & d) & c - 1) - (c | d) * (c & d)) - (~d & c) * (~c & d) | d) - ((~(~(~d & c) * (~c & d) - (c | d) * (c & d) & c - 1) - (c | d) * (c & d)) - (~d & c) * (~c & d) & d)) - (~((~(~(~d & c) * (~c & d) - (c | d) * (c & d) & c - 1) - (c | d) * (c & d)) - (~d & c) * (~c & d) | d) - ((~(~(~d & c) * (~c & d) - (c | d) * (c & d) & c - 1) - (c | d) * (c & d)) - (~d & c) * (~c & d) & d) & c + 1 + (((~e & d) * 2 - (d ^ e)) - 1 | ~c) + (~e & d) * -2 + (d ^ e))",
                    "attributes": {
                        "numOps": 137,
                        "nestedExprLevel": 39,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 13.836477987421384,
                        "opsPercentages": {
                            "arithmetic": 24.087591240875913,
                            "mul": 14.5985401459854,
                            "bitwise": 61.31386861313869
                        },
                        "percentageDAGsCancel": 9.75609756097561
                    }
                },
                "clang_O3": {
                    "expr": "(~(e ^ d) + (~e & d) * -2 | c & d) - (~d & (e ^ d) + (~e & d) * -2 | c)",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 5,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 88.0503144654088,
                        "opsPercentages": {
                            "arithmetic": 26.31578947368421,
                            "mul": 10.526315789473683,
                            "bitwise": 63.1578947368421
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_default": {
                    "expr": "(((0xffffffff - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) ^ 0xffffffff | c - 1 ^ 0xffffffff) - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) | d) - ((0xffffffff - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) ^ 0xffffffff | c - 1 ^ 0xffffffff) - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) & d) & ((e ^ d) + ((e ^ 0xffffffff) & d) * -2 + c + 1 + (0xffffffff - ((e ^ d) + ((e ^ 0xffffffff) & d) * -2) | 0xffffffff - c) ^ 0xffffffff)) - ((((0xffffffff - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) ^ 0xffffffff | c - 1 ^ 0xffffffff) - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) | d) - ((0xffffffff - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) ^ 0xffffffff | c - 1 ^ 0xffffffff) - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) & d) ^ 0xffffffff) & (e ^ d) + ((e ^ 0xffffffff) & d) * -2 + c + 1 + (0xffffffff - ((e ^ d) + ((e ^ 0xffffffff) & d) * -2) | 0xffffffff - c))",
                    "attributes": {
                        "numOps": 143,
                        "nestedExprLevel": 55,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 10.062893081761008,
                        "opsPercentages": {
                            "arithmetic": 28.671328671328673,
                            "mul": 13.986013986013987,
                            "bitwise": 57.34265734265735
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "msvc_default": {
                    "expr": "(((~(0xffffffff - ((c & d) * (c | d) + (~d & c) * (~c & d))) | ~(c - 1)) - ((c & d) * (c | d) + (~d & c) * (~c & d)) | d) - ((~(0xffffffff - ((c & d) * (c | d) + (~d & c) * (~c & d))) | ~(c - 1)) - ((c & d) * (c | d) + (~d & c) * (~c & d)) & d) & ~((e ^ d) + (~e & d) * -2 + c + 1 + (0xffffffff - ((e ^ d) + (~e & d) * -2) | 0xffffffff - c)) ) - (~(((~(0xffffffff - ((c & d) * (c | d) + (~d & c) * (~c & d))) | ~(c - 1)) - ((c & d) * (c | d) + (~d & c) * (~c & d)) | d) - ((~(0xffffffff - ((c & d) * (c | d) + (~d & c) * (~c & d))) | ~(c - 1)) - ((c & d) * (c | d) + (~d & c) * (~c & d)) & d)) & (e ^ d) + (~e & d) * -2 + c + 1 + (0xffffffff - ((e ^ d) + (~e & d) * -2) | 0xffffffff - c))",
                    "attributes": {
                        "numOps": 143,
                        "nestedExprLevel": 49,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 10.062893081761008,
                        "opsPercentages": {
                            "arithmetic": 28.671328671328673,
                            "mul": 13.986013986013987,
                            "bitwise": 57.34265734265735
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((-c | (~d & c) * (~c & d) + (c & d) * (c | d)) - (~d & c) * (~c & d) + (c & d) * (c | d) ^ d) & ~c + 1 + (d ^ e) + (~e & d) * -2 + (((~e & d) * 2 - (d ^ e)) - 1 | ~c)) - ((((~d & c) * (~c & d) + (c & d) * (c | d) - (-c | (~d & c) * (~c & d) + (c & d) * (c | d))) - 1 ^ d) & c + 1 + (d ^ e) + (~e & d) * -2 + (((~e & d) * 2 - (d ^ e)) - 1 | ~c))",
                    "attributes": {
                        "numOps": 83,
                        "nestedExprLevel": 24,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 47.79874213836478,
                        "opsPercentages": {
                            "arithmetic": 28.915662650602407,
                            "mul": 14.457831325301203,
                            "bitwise": 56.62650602409639
                        },
                        "percentageDAGsCancel": 2.7027027027027026
                    }
                }
            }
        },
        {
            "num": 42,
            "gt": {
                "expr": "((-(a^(a|(-a)))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (((a - ((a & ~ (~ a + 1)) + (~ a + 1))) - ((a | ~ ((a & ~ (~ a + 1)) + (~ a + 1))) + (a | ~ ((a & ~ (~ a + 1)) + (~ a + 1))))) - 2) + 1",
                "attributes": {
                    "numOps": 31,
                    "nestedExprLevel": 16,
                    "numDAGs": 13,
                    "opsPercentages": {
                        "arithmetic": 45.16129032258064,
                        "mul": 0.0,
                        "bitwise": 54.83870967741935
                    },
                    "percentageDAGsCancel": 7.6923076923076925
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a + ~(a - 1 & a) | a) * 2 + ~a + ((a - 1 & a) - a) + 3",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 58.06451612903226,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 7.6923076923076925,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 18.181818181818183
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~a + 1 + ~(~a + 1) & a) | a) * 2 + a * -2 + 2 + ~(~a + 1) & a",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 4,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 38.70967741935484,
                        "opsPercentages": {
                            "arithmetic": 42.10526315789473,
                            "mul": 10.526315789473683,
                            "bitwise": 47.368421052631575
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_O3": {
                    "expr": "a - 1 & a + a * -2 + (~(a - 1 & a - a) | a) * 2 + 2",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 58.06451612903226,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 15.384615384615385,
                            "bitwise": 30.76923076923077
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "clang_default": {
                    "expr": "(((a - ((a & ((a ^ 0xffffffff) + 1 ^ 0xffffffff)) + (a ^ 0xffffffff) + 1)) - ((a | (a & ((a ^ 0xffffffff) + 1 ^ 0xffffffff)) + (a ^ 0xffffffff) + 1 ^ 0xffffffff) + (a | (a & ((a ^ 0xffffffff) + 1 ^ 0xffffffff)) + (a ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 17,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 45.16129032258064,
                            "mul": 0.0,
                            "bitwise": 54.83870967741935
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "msvc_default": {
                    "expr": "~(((a - ((~(~a + 1) & a) + 1 + ~a)) - ((~((~(~a + 1) & a) + 1 + ~a) | a) + (~((~(~a + 1) & a) + 1 + ~a) | a))) - 2) + 1",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 14,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 45.16129032258064,
                            "mul": 0.0,
                            "bitwise": 54.83870967741935
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "gcc_O3": {
                    "expr": "(a - 1 & a - a) + ~a + 3 + (~a - 1 & a + a | a) * 2",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 2,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 58.06451612903226,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 7.6923076923076925,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                }
            }
        },
        {
            "num": 43,
            "gt": {
                "expr": "(((c*((-e)-(c-e)))*(((~d)*c)|(c^c))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 33.33333333333333,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "(((c & (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1)))) * (c | (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1)))) + (c & ~ (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1)))) * (~ c & (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1))))) & ((((((- d - 1) & c) * ((- d - 1) | c) + ((- d - 1) & ~ c) * (~ (- d - 1) & c)) + ((c | c) - (c & c))) + 1) + ((- (((- d - 1) & c) * ((- d - 1) | c) + ((- d - 1) & ~ c) * (~ (- d - 1) & c)) - 1) | (- ((c | c) - (c & c)) - 1)))) * (((c & (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1)))) * (c | (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1)))) + (c & ~ (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1)))) * (~ c & (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1))))) | ((((((- d - 1) & c) * ((- d - 1) | c) + ((- d - 1) & ~ c) * (~ (- d - 1) & c)) + ((c | c) - (c & c))) + 1) + ((- (((- d - 1) & c) * ((- d - 1) | c) + ((- d - 1) & ~ c) * (~ (- d - 1) & c)) - 1) | (- ((c | c) - (c & c)) - 1)))) + (((c & (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1)))) * (c | (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1)))) + (c & ~ (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1)))) * (~ c & (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1))))) & ~ ((((((- d - 1) & c) * ((- d - 1) | c) + ((- d - 1) & ~ c) * (~ (- d - 1) & c)) + ((c | c) - (c & c))) + 1) + ((- (((- d - 1) & c) * ((- d - 1) | c) + ((- d - 1) & ~ c) * (~ (- d - 1) & c)) - 1) | (- ((c | c) - (c & c)) - 1)))) * (~ ((c & (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1)))) * (c | (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1)))) + (c & ~ (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1)))) * (~ c & (((~ (e - 1) & ~ ((c + ~ e) + 1)) + (~ (e - 1) & ~ ((c + ~ e) + 1))) - (~ (e - 1) ^ ((c + ~ e) + 1))))) & ((((((- d - 1) & c) * ((- d - 1) | c) + ((- d - 1) & ~ c) * (~ (- d - 1) & c)) + ((c | c) - (c & c))) + 1) + ((- (((- d - 1) & c) * ((- d - 1) | c) + ((- d - 1) & ~ c) * (~ (- d - 1) & c)) - 1) | (- ((c | c) - (c & c)) - 1))))",
                "attributes": {
                    "numOps": 589,
                    "nestedExprLevel": 233,
                    "numDAGs": 49,
                    "opsPercentages": {
                        "arithmetic": 49.06621392190153,
                        "mul": 4.4142614601018675,
                        "bitwise": 46.5195246179966
                    },
                    "percentageDAGsCancel": 10.204081632653061
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((d & c) * ~(d | c) + (~d & c) * (~d | c) & ~((((e - c) - 1 & -e) * 2 - (-e ^ c + ~e + 1) & ~c) * ((c + ~e + 1 ^ -e) + ~(((e - c) - 1 & -e) * 2) & c) + (((e - c) - 1 & -e) * 2 - (-e ^ c + ~e + 1) & c) * (((e - c) - 1 & -e) * 2 - (-e ^ c + ~e + 1) | c))) * ((((e - c) - 1 & -e) * 2 - (-e ^ c + ~e + 1) & c) * (((e - c) - 1 & -e) * 2 - (-e ^ c + ~e + 1) | c ) + (((e - c) - 1 & -e) * 2 - (-e ^ c + ~e + 1) & ~c) * ((c + ~e + 1 ^ -e) + ~(((e - c) - 1 & -e) * 2) & c) & ~((d & c) * ~(d | c) + (~d & c) * (~d | c))) + ((((e - c) - 1 & -e) * 2 - (-e ^ c + ~e + 1) & c) * (((e - c) - 1 & -e) * 2 - (-e ^ c + ~e + 1) | c ) + (((e - c) - 1 & -e) * 2 - (-e ^ c + ~e + 1) & ~c) * ((c + ~e + 1 ^ -e) + ~(((e - c) - 1 & -e) * 2) & c) & (d & c) * ~(d | c) + (~d & c) * (~d | c)) * ((d & c) * ~(d | c) + (~d & c) * (~d | c) | (((e - c) - 1 & -e) * 2 - (-e ^ c + ~e + 1) & c) * (((e - c) - 1 & -e) * 2 - (-e ^ c + ~e + 1) | c) + (((e - c) - 1 & -e) * 2 - (-e ^ c + ~e + 1) & ~c) * ((c + ~e + 1 ^ -e) + ~(((e - c) - 1 & -e) * 2) & c))",
                    "attributes": {
                        "numOps": 261,
                        "nestedExprLevel": 64,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 55.68760611205433,
                        "opsPercentages": {
                            "arithmetic": 46.36015325670498,
                            "mul": 13.026819923371647,
                            "bitwise": 40.61302681992337
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~(~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) & c) * ((~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) & ~c) + ((~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) | c) * ((~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) & c) & (~d & c) * (~d | c) + (~d & ~c) * (c & d)) * (~(~d & c) * (~d | c) + (~d & ~c) * (c & d) & (~(~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) & c) * ((~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) & ~c) + ((~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) | c) * ((~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) & c)) + ((~(~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) & c) * ((~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) & ~c) + ((~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) | c) * ((~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) & c) | (~d & c) * (~d | c) + (~d & ~c) * (c & d)) * ((~(~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) & c) * ((~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) & ~c) + ((~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) | c) * ((~(c - e) & ~(e - 1)) * 2 - (~(e - 1) ^ c - e) & c) & (~d & c) * (~d | c) + (~d & ~c) * (c & d))",
                    "attributes": {
                        "numOps": 265,
                        "nestedExprLevel": 78,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 55.00848896434635,
                        "opsPercentages": {
                            "arithmetic": 33.58490566037736,
                            "mul": 12.830188679245284,
                            "bitwise": 53.58490566037736
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "clang_O3": {
                    "expr": "(~((~(c - e) & -e) * 2 - (-e ^ c - e) & ~c) * (~(~(c - e) & -e) * 2 - (-e ^ c - e) & c) + ((~(c - e) & -e) * 2 - (-e ^ c - e) | c) * ((~(c - e) & -e) * 2 - (-e ^ c - e) & c) & (d & c) * (~d & ~c) + (~d | c) * (~d & c)) * (~(d & c) * (~d & ~c) + (~d | c) * (~d & c) & ((~(c - e) & -e) * 2 - (-e ^ c - e) & ~c) * (~(~(c - e) & -e) * 2 - (-e ^ c - e) & c) + ((~(c - e) & -e) * 2 - (-e ^ c - e) | c) * ((~(c - e) & -e) * 2 - (-e ^ c - e) & c)) + (((~(c - e) & -e) * 2 - (-e ^ c - e) & ~c) * (~(~(c - e) & -e) * 2 - (-e ^ c - e) & c) + ((~(c - e) & -e) * 2 - (-e ^ c - e) | c) * ((~(c - e) & -e) * 2 - (-e ^ c - e) & c) | (d & c) * (~d & ~c) + (~d | c) * (~d & c)) * (((~(c - e) & -e) * 2 - (-e ^ c - e) & ~c) * (~(~(c - e) & -e) * 2 - (-e ^ c - e) & c) + ((~(c - e) & -e) * 2 - (-e ^ c - e) | c) * ((~(c - e) & -e) * 2 - (-e ^ c - e) & c) & (d & c) * (~d & ~c) + (~d | c) * (~d & c))",
                    "attributes": {
                        "numOps": 233,
                        "nestedExprLevel": 61,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 60.441426146010194,
                        "opsPercentages": {
                            "arithmetic": 38.197424892703864,
                            "mul": 14.592274678111588,
                            "bitwise": 47.21030042918455
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((c & (((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff) )) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1)) * (c | (((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff) )) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1)) + (c & ((((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff))) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1) ^ 0xffffffff)) * ((c ^ 0xffffffff) & (((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff))) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1)) & (0xffffffff - d & c) * (0xffffffff - d | c) + (0xffffffff - d & (c ^ 0xffffffff)) * ((0xffffffff - d ^ 0xffffffff) & c)) * ((c & (((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff) )) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1)) * (c | (((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff) )) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1)) + (c & ((((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff))) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1) ^ 0xffffffff)) * ((c ^ 0xffffffff) & (((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff))) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1)) | (0xffffffff - d & c) * (0xffffffff - d | c) + (0xffffffff - d & (c ^ 0xffffffff)) * ((0xffffffff - d ^ 0xffffffff) & c)) + ((c & (((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff) )) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1)) * (c | (((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff) )) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1)) + (c & ((((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff))) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1) ^ 0xffffffff)) * ((c ^ 0xffffffff) & (((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff))) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1)) & ((0xffffffff - d & c) * (0xffffffff - d | c) + (0xffffffff - d & (c ^ 0xffffffff)) * ((0xffffffff - d ^ 0xffffffff) & c) ^ 0xffffffff)) * (((c & (((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff))) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1)) * (c | (((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff))) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1)) + (c & ((((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff))) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1) ^ 0xffffffff) ) * ((c ^ 0xffffffff) & (((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff))) - (e - 1 ^ 0xffffffff ^ c + (e ^ 0xffffffff) + 1)) ^ 0xffffffff) & (0xffffffff - d & c) * (0xffffffff - d | c) + (0xffffffff - d & (c ^ 0xffffffff)) * ((0xffffffff - d ^ 0xffffffff) & c))",
                    "attributes": {
                        "numOps": 449,
                        "nestedExprLevel": 136,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 23.769100169779286,
                        "opsPercentages": {
                            "arithmetic": 44.766146993318486,
                            "mul": 4.008908685968819,
                            "bitwise": 51.224944320712694
                        },
                        "percentageDAGsCancel": 5.405405405405405
                    }
                },
                "msvc_default": {
                    "expr": "((((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e) & c) * (((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e) | c) + (~(((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e)) & c) * (~c & ((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e)) & (0xffffffff - d & c) * (0xffffffff - d | c) + (0xffffffff - d & ~c) * (~(0xffffffff - d) & c)) * ((((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e) & c) * (((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e) | c) + (~(((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e)) & c) * (~c & ((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e)) | (0xffffffff - d & c) * (0xffffffff - d | c) + (0xffffffff - d & ~c) * (~(0xffffffff - d) & c)) + ((((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e) & c) * (((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e) | c) + (~(((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e)) & c) * (~c & ((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e)) & ~((0xffffffff - d & c) * (0xffffffff - d | c) + (0xffffffff - d & ~c) * (~(0xffffffff - d) & c))) * (~((((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e) & c) * (((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e) | c) + (~(((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e)) & c) * (~c & ((~(e - 1) & ~(c + 1 + ~e)) + (~(e - 1) & ~(c + 1 + ~e))) - (~(e - 1) ^ c + 1 + ~e))) & (0xffffffff - d & c) * (0xffffffff - d | c) + (0xffffffff - d & ~c) * (~(0xffffffff - d) & c))",
                    "attributes": {
                        "numOps": 449,
                        "nestedExprLevel": 135,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 23.769100169779286,
                        "opsPercentages": {
                            "arithmetic": 44.766146993318486,
                            "mul": 4.008908685968819,
                            "bitwise": 51.224944320712694
                        },
                        "percentageDAGsCancel": 10.81081081081081
                    }
                },
                "gcc_O3": {
                    "expr": "(~~(c | d) * (d & c) + (~d & c) * (~d | c) & (c - e ^ -e + ~((e - c) - 1 & -e) * 2 & c) * (~c & ((e - c) - 1 & -e) * 2 - c - e ^ -e) + (((e - c) - 1 & -e) * 2 - c - e ^ -e & c) * (((e - c) - 1 & -e) * 2 - c - e ^ -e | c)) * (~(c - e ^ -e + ~((e - c) - 1 & -e) * 2 & c) * (~c & ((e - c) - 1 & -e) * 2 - c - e ^ -e) + (((e - c) - 1 & -e) * 2 - c - e ^ -e & c) * (((e - c) - 1 & -e) * 2 - c - e ^ -e | c) & ~(c | d) * (d & c) + (~d & c) * (~d | c)) + ((c - e ^ -e + ~((e - c) - 1 & -e) * 2 & c) * (~c & ((e - c) - 1 & -e) * 2 - c - e ^ -e) + (((e - c) - 1 & -e) * 2 - c - e ^ -e & c) * (((e - c) - 1 & -e) * 2 - c - e ^ -e | c) | ~(c | d) * (d & c) + (~d & c) * (~d | c)) * ((c - e ^ -e + ~((e - c) - 1 & -e) * 2 & c) * (~c & ((e - c) - 1 & -e) * 2 - c - e ^ -e) + (((e - c) - 1 & -e) * 2 - c - e ^ -e & c) * (((e - c) - 1 & -e) * 2 - c - e ^ -e | c) & ~(c | d) * (d & c) + (~d & c) * (~d | c))",
                    "attributes": {
                        "numOps": 229,
                        "nestedExprLevel": 46,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 61.120543293718164,
                        "opsPercentages": {
                            "arithmetic": 45.851528384279476,
                            "mul": 14.847161572052403,
                            "bitwise": 39.30131004366812
                        },
                        "percentageDAGsCancel": 4.444444444444445
                    }
                }
            }
        },
        {
            "num": 44,
            "gt": {
                "expr": "((-(-((e^e)-(-c)))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 80.0,
                        "mul": 0.0,
                        "bitwise": 20.0
                    },
                    "percentageDAGsCancel": 60.0
                }
            },
            "mba": {
                "expr": "~ ((~ (((((e - e) - ((e | ~ e) + (e | ~ e))) - 2) ^ (~ c + 1)) - ((~ (((e - e) - ((e | ~ e) + (e | ~ e))) - 2) & (~ c + 1)) + (~ (((e - e) - ((e | ~ e) + (e | ~ e))) - 2) & (~ c + 1)))) + 1) - 1)",
                "attributes": {
                    "numOps": 41,
                    "nestedExprLevel": 21,
                    "numDAGs": 17,
                    "opsPercentages": {
                        "arithmetic": 46.34146341463415,
                        "mul": 0.0,
                        "bitwise": 53.65853658536586
                    },
                    "percentageDAGsCancel": 23.52941176470588
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "c",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "c",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "c",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xfffffffe - ((e | e ^ 0xffffffff) + (e | e ^ 0xffffffff)) ^ (c ^ 0xffffffff) + 1) - (((0xfffffffe - ((e | e ^ 0xffffffff) + (e | e ^ 0xffffffff)) ^ 0xffffffff) & (c ^ 0xffffffff) + 1) + ((0xfffffffe - ((e | e ^ 0xffffffff) + (e | e ^ 0xffffffff)) ^ 0xffffffff) & (c ^ 0xffffffff) + 1))",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 14,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 24.390243902439025,
                        "opsPercentages": {
                            "arithmetic": 35.483870967741936,
                            "mul": 0.0,
                            "bitwise": 64.51612903225806
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~c + 1) - (~c + ~c + 2)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 82.92682926829268,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "gcc_O3": {
                    "expr": "c",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 45,
            "gt": {
                "expr": "((((b&a)-a)-((b|(b|e))|(e&(e*e)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 12.5,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((~ b | a) - ~ b) ^ a) - ((~ ((~ b | a) - ~ b) & a) << 1)) ^ ((((((b + ((b & ~ e) + e)) + 1) + ((- b - 1) | (- ((b & ~ e) + e) - 1))) + (((~ e | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + e) + 1)) + 1) + ((- (((b + ((b & ~ e) + e)) + 1) + ((- b - 1) | (- ((b & ~ e) + e) - 1))) - 1) | (- (((~ e | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + e) + 1) - 1)))) - ((~ ((((~ b | a) - ~ b) ^ a) - ((~ ((~ b | a) - ~ b) & a) << 1)) & ((((((b + ((b & ~ e) + e)) + 1) + ((- b - 1) | (- ((b & ~ e) + e) - 1))) + (((~ e | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + e) + 1)) + 1) + ((- (((b + ((b & ~ e) + e)) + 1) + ((- b - 1) | (- ((b & ~ e) + e) - 1))) - 1) | (- (((~ e | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + e) + 1) - 1)))) + (~ ((((~ b | a) - ~ b) ^ a) - ((~ ((~ b | a) - ~ b) & a) << 1)) & ((((((b + ((b & ~ e) + e)) + 1) + ((- b - 1) | (- ((b & ~ e) + e) - 1))) + (((~ e | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + e) + 1)) + 1) + ((- (((b + ((b & ~ e) + e)) + 1) + ((- b - 1) | (- ((b & ~ e) + e) - 1))) - 1) | (- (((~ e | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + e) + 1) - 1)))))",
                "attributes": {
                    "numOps": 232,
                    "nestedExprLevel": 119,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 44.827586206896555,
                        "mul": 5.172413793103448,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 11.904761904761903
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~b & a) + (~b & a) * -2 ^ (-((~e | e * e) + e) - 2 | (e + (~e & b) & b) - (b + (~e & b) + e + 1)) + e * 2 + (~e | e * e) + b + (~e & b) + ~(e + (~e & b) & b) + 3) + ((-((~e | e * e) + e) - 2 | (e + (~e & b) & b) - (b + (~e & b) + e + 1)) + e * 2 + (~e | e * e) + b + (~e & b) + ~(e + (~e & b) & b) + 3 & (~a | b) + (~b & a) * 2) * -2",
                    "attributes": {
                        "numOps": 86,
                        "nestedExprLevel": 18,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 62.93103448275862,
                        "opsPercentages": {
                            "arithmetic": 40.69767441860465,
                            "mul": 10.465116279069768,
                            "bitwise": 48.837209302325576
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "msvc_O1": {
                    "expr": "((b + 1 + (~b | a) ^ a) + (~b + 1 + (~b | a) & a) * -2 ^ b + 3 + ((((-2 - ~~e & b - e | ~b) - ~e & b) - b) - e | (-2 - e * e | ~e) - e) + e * e | ~e + e * 2 + ~~e & b - e | ~b + ~e & b) + (~(b + 1 + (~b | a) ^ a) + (~b + 1 + (~b | a) & a) * -2 & b + 3 + ((((-2 - ~~e & b - e | ~b) - ~e & b) - b) - e | (-2 - e * e | ~e) - e) + e * e | ~e + e * 2 + ~~e & b - e | ~b + ~e & b) * -2",
                    "attributes": {
                        "numOps": 110,
                        "nestedExprLevel": 15,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 52.58620689655172,
                        "opsPercentages": {
                            "arithmetic": 41.81818181818181,
                            "mul": 8.181818181818182,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_O3": {
                    "expr": "(-(~b & a) ^ (-(e * e | ~e) + e - 2 | ~(~e & b) + e | b) + (e * e | ~e) + e + (~e & b) + e | b + 2) + ((~b & a) - 1 & (-(e * e | ~e) + e - 2 | ~(~e & b) + e | b) + (e * e | ~e) + e + (~e & b) + e | b + 2) * -2",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 9,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 75.43103448275862,
                        "opsPercentages": {
                            "arithmetic": 38.59649122807017,
                            "mul": 8.771929824561402,
                            "bitwise": 52.63157894736842
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b ^ 0xffffffff | a) - (b ^ 0xffffffff) ^ a) + (((b ^ 0xffffffff | a) - (b ^ 0xffffffff) ^ 0xffffffff) & a) * -2 ^ b + (b & (e ^ 0xffffffff)) + e * 2 + (0xffffffff - b | 0xffffffff - ((b & (e ^ 0xffffffff)) + e)) + (e ^ 0xffffffff | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ) + 3 + (0xffffffff - (b + (b & (e ^ 0xffffffff)) + e + 1 + (0xffffffff - b | 0xffffffff - ((b & (e ^ 0xffffffff)) + e)) ) | 0xffffffff - ((e ^ 0xffffffff | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + e + 1))) - (((((b ^ 0xffffffff | a) - (b ^ 0xffffffff) ^ a) + (((b ^ 0xffffffff | a) - (b ^ 0xffffffff) ^ 0xffffffff) & a) * -2 ^ 0xffffffff) & b + (b & (e ^ 0xffffffff)) + e * 2 + (0xffffffff - b | 0xffffffff - ((b & (e ^ 0xffffffff)) + e)) + (e ^ 0xffffffff | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + 3 + (0xffffffff - (b + (b & (e ^ 0xffffffff)) + e + 1 + (0xffffffff - b | 0xffffffff - ((b & (e ^ 0xffffffff)) + e))) | 0xffffffff - ((e ^ 0xffffffff | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + e + 1))) + ((((b ^ 0xffffffff | a) - (b ^ 0xffffffff) ^ a) + (((b ^ 0xffffffff | a) - (b ^ 0xffffffff) ^ 0xffffffff) & a) * -2 ^ 0xffffffff) & b + (b & (e ^ 0xffffffff)) + e * 2 + (0xffffffff - b | 0xffffffff - ((b & (e ^ 0xffffffff)) + e)) + (e ^ 0xffffffff | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + 3 + (0xffffffff - (b + (b & (e ^ 0xffffffff)) + e + 1 + (0xffffffff - b | 0xffffffff - ((b & (e ^ 0xffffffff)) + e))) | 0xffffffff - ((e ^ 0xffffffff | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + e + 1)) ))",
                    "attributes": {
                        "numOps": 199,
                        "nestedExprLevel": 74,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 14.224137931034484,
                        "opsPercentages": {
                            "arithmetic": 40.20100502512563,
                            "mul": 9.045226130653267,
                            "bitwise": 50.753768844221106
                        },
                        "percentageDAGsCancel": 7.317073170731707
                    }
                },
                "msvc_default": {
                    "expr": "(((~b | a) - ~b ^ a) + (~((~b | a) - ~b) & a) * -2 ^ (~e | e * e) + (~e & b) + e * 2 + b + (0xffffffff - b | 0xffffffff - ((~e & b) + e)) + 3 + (0xffffffff - ((~e & b) + e + b + 1 + (0xffffffff - b | 0xffffffff - ((~e & b) + e))) | 0xffffffff - ((~e | e * e) + 1 + e))) - ((~(((~b | a) - ~b ^ a) + (~((~b | a) - ~b) & a) * -2) & (~e | e * e) + (~e & b) + e * 2 + b + (0xffffffff - b | 0xffffffff - ((~e & b) + e)) + 3 + (0xffffffff - ((~e & b) + e + b + 1 + (0xffffffff - b | 0xffffffff - ((~e & b) + e))) | 0xffffffff - ((~e | e * e) + 1 + e))) + (~(((~b | a) - ~b ^ a) + (~((~b | a) - ~b) & a) * -2) & (~e | e * e) + (~e & b) + e * 2 + b + (0xffffffff - b | 0xffffffff - ((~e & b) + e)) + 3 + (0xffffffff - ((~e & b) + e + b + 1 + (0xffffffff - b | 0xffffffff - ((~e & b) + e))) | 0xffffffff - ((~e | e * e) + 1 + e))))",
                    "attributes": {
                        "numOps": 163,
                        "nestedExprLevel": 41,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 29.74137931034483,
                        "opsPercentages": {
                            "arithmetic": 45.39877300613497,
                            "mul": 7.361963190184049,
                            "bitwise": 47.239263803680984
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(-(~b & a) ^ (e * e | ~e) + e + 1 + ((~e & b) + e + 1 + b - (~e & b) + e & b) + ((~e & b) + e & b - (~e & b) + e + 1 + b | -(e * e | ~e) + e - 2)) + ((~a | b) + (~b & a) * 2 & (e * e | ~e) + e + 1 + ((~e & b) + e + 1 + b - (~e & b) + e & b) + ((~e & b) + e & b - (~e & b) + e + 1 + b | -(e * e | ~e) + e - 2)) * -2",
                    "attributes": {
                        "numOps": 82,
                        "nestedExprLevel": 14,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 64.65517241379311,
                        "opsPercentages": {
                            "arithmetic": 46.34146341463415,
                            "mul": 7.317073170731707,
                            "bitwise": 46.34146341463415
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 46,
            "gt": {
                "expr": "((d+((-(e*d))-(a^a))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 20.0,
                        "bitwise": 20.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(d ^ ((~ (((e & d) * (e | d) + (e & ~ d) * (~ e & d)) - 1) + ~ (((a - a) - ((a | ~ a) + (a | ~ a))) - 2)) + 1)) + ((d & ((~ (((e & d) * (e | d) + (e & ~ d) * (~ e & d)) - 1) + ~ (((a - a) - ((a | ~ a) + (a | ~ a))) - 2)) + 1)) << 1)",
                "attributes": {
                    "numOps": 48,
                    "nestedExprLevel": 24,
                    "numDAGs": 24,
                    "opsPercentages": {
                        "arithmetic": 35.41666666666667,
                        "mul": 8.333333333333332,
                        "bitwise": 56.25
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-((~e & d) * (~d & e) + (e & d) * (e | d)) & d) * 2 + (-((~e & d) * (~d & e) + (e & d) * (e | d)) ^ d)",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 9,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 20.833333333333336,
                            "mul": 20.833333333333336,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~((e & d) * (d | e) + -1 + (~e & d) * (~d & e)) * 2 & d * 2) + (~((e & d) * (d | e) + -1 + (~e & d) * (~d & e)) ^ d)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 9,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 39.58333333333333,
                        "opsPercentages": {
                            "arithmetic": 24.137931034482758,
                            "mul": 20.689655172413794,
                            "bitwise": 55.172413793103445
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(-((~e & d) * (~d & e) + (e | d) * (e & d)) ^ d) + (-((~e & d) * (~d & e) + (e | d) * (e & d)) & d) * 2",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 9,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 20.833333333333336,
                            "mul": 20.833333333333336,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(d ^ (((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d)) - 1 ^ 0xffffffff) + (0xfffffffe - ((a | a ^ 0xffffffff) + (a | a ^ 0xffffffff)) ^ 0xffffffff) + 1) + (d & (((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d)) - 1 ^ 0xffffffff) + (0xfffffffe - ((a | a ^ 0xffffffff) + (a | a ^ 0xffffffff)) ^ 0xffffffff) + 1) * 2",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 19,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 8.333333333333332,
                        "opsPercentages": {
                            "arithmetic": 29.545454545454547,
                            "mul": 11.363636363636363,
                            "bitwise": 59.09090909090909
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~((e & d) * (e | d) + -1 + (~d & e) * (~e & d)) ^ d) + (~((e & d) * (e | d) + -1 + (~d & e) * (~e & d)) & d) * 2",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 9,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 41.66666666666667,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 17.857142857142858,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "gcc_O3": {
                    "expr": "(-((~d & e) * (~e & d) + (e | d) * (e & d)) ^ d) + (-((~d & e) * (~e & d) + (e | d) * (e & d)) & d) * 2",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 9,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 20.833333333333336,
                            "mul": 20.833333333333336,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 47,
            "gt": {
                "expr": "((((d+b)*d)&(-(((b&b)|c)+(d|b)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 12.5,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "(~ (((((d ^ ~ b) + ((d | b) + (d | b))) + 1) & d) * ((((d ^ ~ b) + ((d | b) + (d | b))) + 1) | d) + ((((d ^ ~ b) + ((d | b) + (d | b))) + 1) & ~ d) * (~ (((d ^ ~ b) + ((d | b) + (d | b))) + 1) & d)) | (~ ((((((~ b | b) - ~ b) & ~ c) + c) | ((d & ~ b) + b)) + (((((~ b | b) - ~ b) & ~ c) + c) & ((d & ~ b) + b))) + 1)) - ~ (((((d ^ ~ b) + ((d | b) + (d | b))) + 1) & d) * ((((d ^ ~ b) + ((d | b) + (d | b))) + 1) | d) + ((((d ^ ~ b) + ((d | b) + (d | b))) + 1) & ~ d) * (~ (((d ^ ~ b) + ((d | b) + (d | b))) + 1) & d))",
                "attributes": {
                    "numOps": 103,
                    "nestedExprLevel": 56,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 33.980582524271846,
                        "mul": 3.8834951456310676,
                        "bitwise": 62.13592233009708
                    },
                    "percentageDAGsCancel": 6.666666666666667
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((b ^ d) + (d | b) * -2) - 1 & d) * ((d | b) * 2 + ~(b ^ d) + 1 & ~d) + ((d | b) * 2 + ~(b ^ d) + 1 & d) * ((d | b) * 2 + ~(b ^ d) + 1 | d) & -(b + (~b & d) + (~c & b) + c)",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 12,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 60.19417475728155,
                        "opsPercentages": {
                            "arithmetic": 34.146341463414636,
                            "mul": 14.634146341463413,
                            "bitwise": 51.21951219512195
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~d & (b | d) * 2 + 1 + (~b ^ d)) * (~(b | d) * 2 + 1 + (~b ^ d) & d) + 1 + (-(((~b & d) + b | c + (~c & b)) + ((~b & d) + b & c + (~c & b))) | ~(((b | d) * 2 + 1 + (~b ^ d) | d) * ((b | d) * 2 + 1 + (~b ^ d) & d) + (~d & (b | d) * 2 + 1 + (~b ^ d)) * (~(b | d) * 2 + 1 + (~b ^ d) & d))) + ((b | d) * 2 + 1 + (~b ^ d) | d) * ((b | d) * 2 + 1 + (~b ^ d) & d)",
                    "attributes": {
                        "numOps": 86,
                        "nestedExprLevel": 24,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 16.50485436893204,
                        "opsPercentages": {
                            "arithmetic": 30.23255813953488,
                            "mul": 13.953488372093023,
                            "bitwise": 55.81395348837209
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-((~b & d) + b + (~c & b) + c) & (-(~b ^ d + (d | b) * 2) - 2 & d) * (~d & ~b ^ d + (d | b) * 2 + 1) + (~b ^ d + (d | b) * 2 + 1 | d) * (~b ^ d + (d | b) * 2 + 1 & d)",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 9,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 59.22330097087378,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 14.285714285714285,
                            "bitwise": 52.38095238095239
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "clang_default": {
                    "expr": "(((d ^ b ^ 0xffffffff) + (d | b) + (d | b) + 1 & d) * ((d ^ b ^ 0xffffffff) + (d | b) + (d | b) + 1 | d ) + ((d ^ b ^ 0xffffffff) + (d | b) + (d | b) + 1 & (d ^ 0xffffffff)) * (((d ^ b ^ 0xffffffff) + (d | b) + (d | b) + 1 ^ 0xffffffff) & d) ^ 0xffffffff | ((((b ^ 0xffffffff | b) - (b ^ 0xffffffff) & (c ^ 0xffffffff)) + c | (d & (b ^ 0xffffffff)) + b) + (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) & (c ^ 0xffffffff)) + c & (d & (b ^ 0xffffffff)) + b) ^ 0xffffffff) + 1) - (((d ^ b ^ 0xffffffff) + (d | b) + (d | b) + 1 & d) * ((d ^ b ^ 0xffffffff) + (d | b) + (d | b) + 1 | d ) + ((d ^ b ^ 0xffffffff) + (d | b) + (d | b) + 1 & (d ^ 0xffffffff)) * (((d ^ b ^ 0xffffffff) + (d | b) + (d | b) + 1 ^ 0xffffffff) & d) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 103,
                        "nestedExprLevel": 33,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 33.980582524271846,
                            "mul": 3.8834951456310676,
                            "bitwise": 62.13592233009708
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "msvc_default": {
                    "expr": "(~(((~b ^ d) + 1 + (d | b) + (d | b) & d) * ((~b ^ d) + 1 + (d | b) + (d | b) | d) + ((~b ^ d) + 1 + (d | b) + (d | b) & ~d) * (~((~b ^ d) + 1 + (d | b) + (d | b)) & d)) | ~(((-~b - 1 & ~c) + c | (~b & d) + b) + ((-~b - 1 & ~c) + c & (~b & d) + b)) + 1) - ~(((~b ^ d) + 1 + (d | b) + (d | b) & d) * ((~b ^ d) + 1 + (d | b) + (d | b) | d) + ((~b ^ d) + 1 + (d | b) + (d | b) & ~d) * (~((~b ^ d) + 1 + (d | b) + (d | b)) & d))",
                    "attributes": {
                        "numOps": 101,
                        "nestedExprLevel": 28,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 1.9417475728155338,
                        "opsPercentages": {
                            "arithmetic": 36.633663366336634,
                            "mul": 3.9603960396039604,
                            "bitwise": 59.4059405940594
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "gcc_O3": {
                    "expr": "(((b ^ d) + (b | d) * -2) - 1 & d) * (~d & (b | d) * 2 - (b ^ d)) + ((b | d) * 2 - (b ^ d) | d) * ((b | d) * 2 - (b ^ d) & d) & -(c + (~c & b) + b + (d & ~b))",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 12,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 66.01941747572816,
                        "opsPercentages": {
                            "arithmetic": 31.428571428571427,
                            "mul": 17.142857142857142,
                            "bitwise": 51.42857142857142
                        },
                        "percentageDAGsCancel": 4.0
                    }
                }
            }
        },
        {
            "num": 48,
            "gt": {
                "expr": "(((d&((-a)+d))|(-(e*a))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 16.666666666666664,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((~ d | ((~ (a - 1) ^ d) + ((~ (a - 1) & d) + (~ (a - 1) & d)))) - ~ d) & ~ (~ (((e & a) * (e | a) + (e & ~ a) * (~ e & a)) - 1))) + ~ (((e & a) * (e | a) + (e & ~ a) * (~ e & a)) - 1)",
                "attributes": {
                    "numOps": 40,
                    "nestedExprLevel": 18,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 27.500000000000004,
                        "mul": 10.0,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 17.391304347826086
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((-a & d) * 2 + (-a ^ d) & d & ((~e & a) * (~a & e) + (e & a) * (e | a)) - 1) - ((e & a) * (e | a) + (~e & a) * (~a & e))",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 9,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 30.0,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 17.857142857142858,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 21.052631578947366
                    }
                },
                "msvc_O1": {
                    "expr": "(d + 1 + ((~(a - 1) ^ d) + (~(a - 1) & d) * 2 | ~d) & (~e & a) * (~a & e) + (a | e) * (a & e) + -1) + ~(~e & a) * (~a & e) + (a | e) * (a & e) + -1",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 10,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 7.5,
                        "opsPercentages": {
                            "arithmetic": 32.432432432432435,
                            "mul": 13.513513513513514,
                            "bitwise": 54.054054054054056
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_O3": {
                    "expr": "(((e | a) * (e & a) + (~e & a) * (~a & e)) - 1 & (-a ^ d) + (-a & d) * 2 & d) - ((e | a) * (e & a) + (~e & a) * (~a & e))",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 30.0,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 17.857142857142858,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "clang_default": {
                    "expr": "((d ^ 0xffffffff | (a - 1 ^ 0xffffffff ^ d) + ((a - 1 ^ 0xffffffff) & d) + ((a - 1 ^ 0xffffffff) & d)) - (d ^ 0xffffffff) & ((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a)) - 1) + (((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a)) - 1 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 16,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 5.0,
                        "opsPercentages": {
                            "arithmetic": 28.947368421052634,
                            "mul": 10.526315789473683,
                            "bitwise": 60.526315789473685
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~d | (~(a - 1) ^ d) + (~(a - 1) & d) + (~(a - 1) & d)) - ~d & (e & a) * (e | a) + -1 + (~a & e) * (~e & a)) + ~((e & a) * (e | a) + -1 + (~a & e) * (~e & a))",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 11,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 32.5,
                            "mul": 10.0,
                            "bitwise": 57.49999999999999
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "gcc_O3": {
                    "expr": "((-a ^ d) + (d & -a) * 2 & d & (~a & e) * (~e & a) + (a | e) * (a & e) - 1) - (~a & e) * (~e & a) + (a | e) * (a & e)",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 7,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 30.0,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 17.857142857142858,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                }
            }
        },
        {
            "num": 49,
            "gt": {
                "expr": "(((((c&e)^d)-e)*(((c+c)|(d+d))-((c+e)|d))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 10.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "((((((((~ c | e) - ~ c) | d) - (((~ c | e) - ~ c) & d)) & ~ e) + (((((~ c | e) - ~ c) | d) - (((~ c | e) - ~ c) & d)) & ~ e)) - (((((~ c | e) - ~ c) | d) - (((~ c | e) - ~ c) & d)) ^ e)) & (((((((c ^ ~ c) + ((c | c) + (c | c))) + 1) & ~ ((d | d) + (d & d))) + ((d | d) + (d & d))) & ~ ((((c - ~ e) - 1) & ~ d) + d)) - (~ (((((c ^ ~ c) + ((c | c) + (c | c))) + 1) & ~ ((d | d) + (d & d))) + ((d | d) + (d & d))) & ((((c - ~ e) - 1) & ~ d) + d)))) * ((((((((~ c | e) - ~ c) | d) - (((~ c | e) - ~ c) & d)) & ~ e) + (((((~ c | e) - ~ c) | d) - (((~ c | e) - ~ c) & d)) & ~ e)) - (((((~ c | e) - ~ c) | d) - (((~ c | e) - ~ c) & d)) ^ e)) | (((((((c ^ ~ c) + ((c | c) + (c | c))) + 1) & ~ ((d | d) + (d & d))) + ((d | d) + (d & d))) & ~ ((((c - ~ e) - 1) & ~ d) + d)) - (~ (((((c ^ ~ c) + ((c | c) + (c | c))) + 1) & ~ ((d | d) + (d & d))) + ((d | d) + (d & d))) & ((((c - ~ e) - 1) & ~ d) + d)))) + ((((((((~ c | e) - ~ c) | d) - (((~ c | e) - ~ c) & d)) & ~ e) + (((((~ c | e) - ~ c) | d) - (((~ c | e) - ~ c) & d)) & ~ e)) - (((((~ c | e) - ~ c) | d) - (((~ c | e) - ~ c) & d)) ^ e)) & ~ (((((((c ^ ~ c) + ((c | c) + (c | c))) + 1) & ~ ((d | d) + (d & d))) + ((d | d) + (d & d))) & ~ ((((c - ~ e) - 1) & ~ d) + d)) - (~ (((((c ^ ~ c) + ((c | c) + (c | c))) + 1) & ~ ((d | d) + (d & d))) + ((d | d) + (d & d))) & ((((c - ~ e) - 1) & ~ d) + d)))) * (~ (((((((~ c | e) - ~ c) | d) - (((~ c | e) - ~ c) & d)) & ~ e) + (((((~ c | e) - ~ c) | d) - (((~ c | e) - ~ c) & d)) & ~ e)) - (((((~ c | e) - ~ c) | d) - (((~ c | e) - ~ c) & d)) ^ e)) & (((((((c ^ ~ c) + ((c | c) + (c | c))) + 1) & ~ ((d | d) + (d & d))) + ((d | d) + (d & d))) & ~ ((((c - ~ e) - 1) & ~ d) + d)) - (~ (((((c ^ ~ c) + ((c | c) + (c | c))) + 1) & ~ ((d | d) + (d & d))) + ((d | d) + (d & d))) & ((((c - ~ e) - 1) & ~ d) + d))))",
                "attributes": {
                    "numOps": 365,
                    "nestedExprLevel": 202,
                    "numDAGs": 41,
                    "opsPercentages": {
                        "arithmetic": 33.15068493150685,
                        "mul": 0.547945205479452,
                        "bitwise": 66.3013698630137
                    },
                    "percentageDAGsCancel": 14.634146341463413
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((c * 2 & ~(d * 2)) + d * 2 & ~(d + ((c - ~e) - 1 & ~d))) - (~(d * 2 + (c * 2 & ~(d * 2))) & d + ((c - ~e) - 1 & ~d)) & ~((~e & (e & c ^ d)) * 2) + (e & c ^ d ^ e)) * ((~e & (e & c ^ d)) * 2 - (e & c ^ d ^ e) & (d + ((c - ~e) - 1 & ~d) & ~(d * 2 + (c * 2 & ~(d * 2)))) + (((c - ~e) - 1 & ~d) + d | ~(d * 2 + (c * 2 & ~(d * 2))))) + ((~e & (e & c ^ d)) * 2 - (e & c ^ d ^ e) & ((c * 2 & ~(d * 2)) + d * 2 & ~(d + ((c - ~e) - 1 & ~d))) - (~(d * 2 + (c * 2 & ~(d * 2))) & d + ((c - ~e) - 1 & ~d))) * (((c * 2 & ~(d * 2)) + d * 2 & ~(d + ((c - ~e) - 1 & ~d))) - (~(d * 2 + (c * 2 & ~(d * 2))) & d + ((c - ~e) - 1 & ~d)) | (~e & (e & c ^ d)) * 2 - (e & c ^ d ^ e))",
                    "attributes": {
                        "numOps": 160,
                        "nestedExprLevel": 46,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 56.16438356164384,
                        "opsPercentages": {
                            "arithmetic": 25.624999999999996,
                            "mul": 18.75,
                            "bitwise": 55.625
                        },
                        "percentageDAGsCancel": 2.7777777777777777
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~e & ((~c | e) + c + 1 | d) - ((~c | e) + c + 1 & d)) * 2 - (((~c | e) + c + 1 | d) - ((~c | e) + c + 1 & d) ^ e) & (~(~d & c + e) + d & d * 2 + (c * 2 & ~(d * 2))) - (~d * 2 + (c * 2 & ~(d * 2)) & (~d & c + e) + d)) * (~(~(~d & c + e) + d & d * 2 + (c * 2 & ~(d * 2))) - (~d * 2 + (c * 2 & ~(d * 2)) & (~d & c + e) + d) & (~e & ((~c | e) + c + 1 | d) - ((~c | e) + c + 1 & d)) * 2 - (((~c | e) + c + 1 | d) - ((~c | e) + c + 1 & d) ^ e)) + ((~e & ((~c | e) + c + 1 | d) - ((~c | e) + c + 1 & d)) * 2 - (((~c | e) + c + 1 | d) - ((~c | e) + c + 1 & d) ^ e) | (~(~d & c + e) + d & d * 2 + (c * 2 & ~(d * 2))) - (~d * 2 + (c * 2 & ~(d * 2)) & (~d & c + e) + d)) * ((~e & ((~c | e) + c + 1 | d) - ((~c | e) + c + 1 & d)) * 2 - (((~c | e) + c + 1 | d) - ((~c | e) + c + 1 & d) ^ e) & (~(~d & c + e) + d & d * 2 + (c * 2 & ~(d * 2))) - (~d * 2 + (c * 2 & ~(d * 2)) & (~d & c + e) + d))",
                    "attributes": {
                        "numOps": 217,
                        "nestedExprLevel": 49,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 40.54794520547945,
                        "opsPercentages": {
                            "arithmetic": 33.6405529953917,
                            "mul": 13.82488479262673,
                            "bitwise": 52.53456221198156
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(~e & d) * 2 - (e ^ d ^ e & c) & (~d & (~(d * 2) & c * 2) + d * 2) - (~(~(d * 2) & c * 2) + d * 2 & d)) * (~(~d & (~(d * 2) & c * 2) + d * 2) - (~(~(d * 2) & c * 2) + d * 2 & d) & (~e & d) * 2 - (e ^ d ^ e & c)) + ((~d & (~(d * 2) & c * 2) + d * 2) - (~(~(d * 2) & c * 2) + d * 2 & d) | (~e & d) * 2 - (e ^ d ^ e & c)) * ((~d & (~(d * 2) & c * 2) + d * 2) - (~(~(d * 2) & c * 2) + d * 2 & d) & (~e & d) * 2 - (e ^ d ^ e & c))",
                    "attributes": {
                        "numOps": 105,
                        "nestedExprLevel": 26,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 71.23287671232876,
                        "opsPercentages": {
                            "arithmetic": 16.19047619047619,
                            "mul": 28.57142857142857,
                            "bitwise": 55.23809523809524
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "clang_default": {
                    "expr": "(((((c ^ 0xffffffff | e) - (c ^ 0xffffffff) | d) - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff) & d) & (e ^ 0xffffffff)) + (((c ^ 0xffffffff | e) - (c ^ 0xffffffff) | d) - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff) & d) & (e ^ 0xffffffff))) - (((c ^ 0xffffffff | e) - (c ^ 0xffffffff) | d) - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff) & d) ^ e) & (((c ^ c ^ 0xffffffff) + c * 2 + 1 & (d * 2 ^ 0xffffffff)) + d * 2 & (((c - (e ^ 0xffffffff)) - 1 & (d ^ 0xffffffff)) + d ^ 0xffffffff)) - ((((c ^ c ^ 0xffffffff) + c * 2 + 1 & (d * 2 ^ 0xffffffff)) + d * 2 ^ 0xffffffff) & ((c - (e ^ 0xffffffff)) - 1 & (d ^ 0xffffffff)) + d)) * (((((c ^ 0xffffffff | e) - (c ^ 0xffffffff) | d) - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff) & d) & (e ^ 0xffffffff)) + (((c ^ 0xffffffff | e) - (c ^ 0xffffffff) | d) - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff) & d) & (e ^ 0xffffffff))) - (((c ^ 0xffffffff | e) - (c ^ 0xffffffff) | d) - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff) & d) ^ e) | (((c ^ c ^ 0xffffffff) + c * 2 + 1 & (d * 2 ^ 0xffffffff)) + d * 2 & (((c - (e ^ 0xffffffff)) - 1 & (d ^ 0xffffffff)) + d ^ 0xffffffff)) - ((((c ^ c ^ 0xffffffff) + c * 2 + 1 & (d * 2 ^ 0xffffffff)) + d * 2 ^ 0xffffffff) & ((c - (e ^ 0xffffffff)) - 1 & (d ^ 0xffffffff)) + d)) + (((((c ^ 0xffffffff | e) - (c ^ 0xffffffff) | d) - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff) & d) & (e ^ 0xffffffff)) + (((c ^ 0xffffffff | e) - (c ^ 0xffffffff) | d) - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff) & d) & (e ^ 0xffffffff))) - (((c ^ 0xffffffff | e) - (c ^ 0xffffffff) | d) - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff) & d) ^ e) & ((((c ^ c ^ 0xffffffff) + c * 2 + 1 & (d * 2 ^ 0xffffffff)) + d * 2 & (((c - (e ^ 0xffffffff)) - 1 & (d ^ 0xffffffff)) + d ^ 0xffffffff)) - ((((c ^ c ^ 0xffffffff) + c * 2 + 1 & (d * 2 ^ 0xffffffff)) + d * 2 ^ 0xffffffff) & ((c - (e ^ 0xffffffff)) - 1 & (d ^ 0xffffffff)) + d) ^ 0xffffffff )) * ((((((c ^ 0xffffffff | e) - (c ^ 0xffffffff) | d) - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff) & d) & (e ^ 0xffffffff)) + (((c ^ 0xffffffff | e) - (c ^ 0xffffffff) | d) - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff) & d) & (e ^ 0xffffffff))) - (((c ^ 0xffffffff | e) - (c ^ 0xffffffff) | d) - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff) & d) ^ e) ^ 0xffffffff) & (((c ^ c ^ 0xffffffff) + c * 2 + 1 & (d * 2 ^ 0xffffffff)) + d * 2 & (((c - (e ^ 0xffffffff)) - 1 & (d ^ 0xffffffff)) + d ^ 0xffffffff)) - ((((c ^ c ^ 0xffffffff) + c * 2 + 1 & (d * 2 ^ 0xffffffff)) + d * 2 ^ 0xffffffff) & ((c - (e ^ 0xffffffff)) - 1 & (d ^ 0xffffffff)) + d))",
                    "attributes": {
                        "numOps": 317,
                        "nestedExprLevel": 127,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 13.150684931506849,
                        "opsPercentages": {
                            "arithmetic": 30.5993690851735,
                            "mul": 8.201892744479496,
                            "bitwise": 61.198738170347
                        },
                        "percentageDAGsCancel": 10.256410256410255
                    }
                },
                "msvc_default": {
                    "expr": "(((((~c | e) - ~c | d) - ((~c | e) - ~c & d) & ~e) + (((~c | e) - ~c | d) - ((~c | e) - ~c & d) & ~e)) - (((~c | e) - ~c | d) - ((~c | e) - ~c & d) ^ e) & ((c * 2 & ~(d * 2)) + d * 2 & ~(((c - ~e) - 1 & ~d) + d)) - (~((c * 2 & ~(d * 2)) + d * 2) & ((c - ~e) - 1 & ~d) + d)) * (((((~c | e) - ~c | d) - ((~c | e) - ~c & d) & ~e) + (((~c | e) - ~c | d) - ((~c | e) - ~c & d) & ~e)) - (((~c | e) - ~c | d) - ((~c | e) - ~c & d) ^ e) | ((c * 2 & ~(d * 2)) + d * 2 & ~(((c - ~e) - 1 & ~d) + d)) - (~((c * 2 & ~(d * 2)) + d * 2) & ((c - ~e) - 1 & ~d) + d)) + (((((~c | e) - ~c | d) - ((~c | e) - ~c & d) & ~e) + (((~c | e) - ~c | d) - ((~c | e) - ~c & d) & ~e)) - (((~c | e) - ~c | d) - ((~c | e) - ~c & d) ^ e) & ~(((c * 2 & ~(d * 2)) + d * 2 & ~(((c - ~e) - 1 & ~d) + d)) - (~((c * 2 & ~(d * 2)) + d * 2) & ((c - ~e) - 1 & ~d) + d))) * (~(((((~c | e) - ~c | d) - ((~c | e) - ~c & d) & ~e) + (((~c | e) - ~c | d) - ((~c | e) - ~c & d) & ~e)) - (((~c | e) - ~c | d) - ((~c | e) - ~c & d) ^ e)) & ((c * 2 & ~(d * 2)) + d * 2 & ~(((c - ~e) - 1 & ~d) + d)) - (~((c * 2 & ~(d * 2)) + d * 2) & ((c - ~e) - 1 & ~d) + d))",
                    "attributes": {
                        "numOps": 285,
                        "nestedExprLevel": 80,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 21.91780821917808,
                        "opsPercentages": {
                            "arithmetic": 28.421052631578945,
                            "mul": 9.12280701754386,
                            "bitwise": 62.4561403508772
                        },
                        "percentageDAGsCancel": 8.571428571428571
                    }
                },
                "gcc_O3": {
                    "expr": "(~(e & c ^ d & ~e) * 2 + e & c ^ d ^ e & (~d & (c * 2 & ~(d * 2)) + d * 2) - (d & ~(c * 2 & ~(d * 2)) + d * 2)) * (d + ~(c * 2 & ~(d * 2)) + d * 2 & (e & c ^ d & ~e) * 2 - e & c ^ d ^ e) + ((e & c ^ d & ~e) * 2 - e & c ^ d ^ e & (~d & (c * 2 & ~(d * 2)) + d * 2) - (d & ~(c * 2 & ~(d * 2)) + d * 2)) * ((e & c ^ d & ~e) * 2 - e & c ^ d ^ e | (~d & (c * 2 & ~(d * 2)) + d * 2) - (d & ~(c * 2 & ~(d * 2)) + d * 2))",
                    "attributes": {
                        "numOps": 103,
                        "nestedExprLevel": 20,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 71.78082191780823,
                        "opsPercentages": {
                            "arithmetic": 15.53398058252427,
                            "mul": 26.21359223300971,
                            "bitwise": 58.252427184466015
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                }
            }
        },
        {
            "num": 50,
            "gt": {
                "expr": "((-(-((((~c)|d)-(b+b))+d))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 71.42857142857143,
                        "mul": 0.0,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (~ (((((((((- c - 1) + d) + 1) + ((- (- c - 1) - 1) | (- d - 1))) + ~ (((b ^ ~ b) + ((b | b) + (b | b))) + 1)) + 1) ^ d) + ((((((((- c - 1) + d) + 1) + ((- (- c - 1) - 1) | (- d - 1))) + ~ (((b ^ ~ b) + ((b | b) + (b | b))) + 1)) + 1) & d) << 1)) - 1) - 1)",
                "attributes": {
                    "numOps": 52,
                    "nestedExprLevel": 31,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 67.3076923076923,
                        "mul": 0.0,
                        "bitwise": 32.69230769230769
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(b * 2) + d + ~c + (~d | c) + 2 & d) * 2 + (~(b * 2) + d + ~c + (~d | c) + 2 ^ d)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 5,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 57.692307692307686,
                        "opsPercentages": {
                            "arithmetic": 40.909090909090914,
                            "mul": 13.636363636363635,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((-1 - d) * 2 | c * 2) + 2 + ((~(b * 2) - c) + d) * 2 & d * 2) + (((~d | c) - c) + ~(b * 2) + 1 + d ^ d)",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 8,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 53.84615384615385,
                        "opsPercentages": {
                            "arithmetic": 45.83333333333333,
                            "mul": 25.0,
                            "bitwise": 29.166666666666668
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((d - (c + b * 2)) + (~d | c) ^ d) + ((d - (c + b * 2)) + (~d | c) & d) * 2",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 7,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 69.23076923076923,
                        "opsPercentages": {
                            "arithmetic": 43.75,
                            "mul": 18.75,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((d - c) + (0xffffffff - (-1 - c) | 0xffffffff - d) + ((b ^ b ^ 0xffffffff) + b * 2 + 1 ^ 0xffffffff) + 1 ^ d) + ((d - c) + (0xffffffff - (-1 - c) | 0xffffffff - d) + ((b ^ b ^ 0xffffffff) + b * 2 + 1 ^ 0xffffffff) + 1 & d) * 2) - 1 ^ 0xffffffff) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 10,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 26.923076923076923,
                        "opsPercentages": {
                            "arithmetic": 60.526315789473685,
                            "mul": 7.894736842105263,
                            "bitwise": 31.57894736842105
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "msvc_default": {
                    "expr": "~(~((((d - c) + (0xffffffff - (-1 - c) | 0xffffffff - d) + 1 + ~(b * 2) ^ d) - 1) + ((d - c) + (0xffffffff - (-1 - c) | 0xffffffff - d) + 1 + ~(b * 2) & d) * 2) - 1)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 10,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 42.30769230769231,
                        "opsPercentages": {
                            "arithmetic": 63.33333333333333,
                            "mul": 10.0,
                            "bitwise": 26.666666666666668
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((d - c) + (~d | c) + b * -2 ^ d) + ((d - c) + (~d | c) + b * -2 & d) * 2",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 65.38461538461539,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 51,
            "gt": {
                "expr": "(((~(d-a))+((a|c)*d)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((a - d) - 1) - ~ (((((a + c) + 1) + ((- a - 1) | (- c - 1))) & d) * ((((a + c) + 1) + ((- a - 1) | (- c - 1))) | d) + ((((a + c) + 1) + ((- a - 1) | (- c - 1))) & ~ d) * (~ (((a + c) + 1) + ((- a - 1) | (- c - 1))) & d))) - 1",
                "attributes": {
                    "numOps": 46,
                    "nestedExprLevel": 24,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 71.73913043478261,
                        "mul": 4.3478260869565215,
                        "bitwise": 23.91304347826087
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((a - d) - ~(((a & c) - (c + a + 1) & d) * (c + a + 1 + ~(a & c) & ~d) + (~(a & c) + c + a + 1 & d) * (~(a & c) + c + a + 1 | d))) + -2",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 9,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 30.434782608695656,
                        "opsPercentages": {
                            "arithmetic": 53.125,
                            "mul": 6.25,
                            "bitwise": 40.625
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_O1": {
                    "expr": "a + -1 + (((~d & (a - (a & c)) + c) * (~(a - (a & c)) + c & d) + ((a - (a & c)) + c | d) * ((a - (a & c)) + c & d)) - d)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 12,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 45.65217391304348,
                        "opsPercentages": {
                            "arithmetic": 52.0,
                            "mul": 8.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~d + a + (d & ~c) * (c & ~d) + (c | d) * (c & d)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 73.91304347826086,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 16.666666666666664,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a - d) - ((a + c + 1 + (0xffffffff - a | 0xffffffff - c) & d) * (a + c + 1 + (0xffffffff - a | 0xffffffff - c) | d) + (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & (d ^ 0xffffffff)) * ((a + c + 1 + (0xffffffff - a | 0xffffffff - c) ^ 0xffffffff) & d) ^ 0xffffffff)) + -2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 10,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 17.391304347826086,
                        "opsPercentages": {
                            "arithmetic": 65.78947368421053,
                            "mul": 5.263157894736842,
                            "bitwise": 28.947368421052634
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "msvc_default": {
                    "expr": "((a - d) - ~((a + c + 1 + (0xffffffff - a | 0xffffffff - c) & d) * (a + c + 1 + (0xffffffff - a | 0xffffffff - c) | d) + (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & ~d) * (~(a + c + 1 + (0xffffffff - a | 0xffffffff - c)) & d))) + -2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 9,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 17.391304347826086,
                        "opsPercentages": {
                            "arithmetic": 65.78947368421053,
                            "mul": 5.263157894736842,
                            "bitwise": 28.947368421052634
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(a - d) + -1 + (~d & ~(c & a) + a + 1 + c) * ((c & a) - a + 1 + c & d) + (~(c & a) + a + 1 + c | d) * (~(c & a) + a + 1 + c & d)",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 6,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 32.608695652173914,
                        "opsPercentages": {
                            "arithmetic": 54.83870967741935,
                            "mul": 6.451612903225806,
                            "bitwise": 38.70967741935484
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 52,
            "gt": {
                "expr": "(((b-c)^((c|c)^(c+b))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 5,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "((((b + ~ c) + 1) - (((((c & ~ c) + c) - (((c | b) << 1) - (c ^ b))) - ((((c & ~ c) + c) | ~ (((c | b) << 1) - (c ^ b))) << 1)) - 2)) - ((((b + ~ c) + 1) | ~ (((((c & ~ c) + c) - (((c | b) << 1) - (c ^ b))) - ((((c & ~ c) + c) | ~ (((c | b) << 1) - (c ^ b))) << 1)) - 2)) + (((b + ~ c) + 1) | ~ (((((c & ~ c) + c) - (((c | b) << 1) - (c ^ b))) - ((((c & ~ c) + c) | ~ (((c | b) << 1) - (c ^ b))) << 1)) - 2)))) - 2",
                "attributes": {
                    "numOps": 77,
                    "nestedExprLevel": 48,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 40.25974025974026,
                        "mul": 0.0,
                        "bitwise": 59.74025974025974
                    },
                    "percentageDAGsCancel": 9.523809523809524
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b + ~c) - ((c - ((c | b) * 2 - (c ^ b))) + ((c ^ b) + ~((c | b) * 2) | c) * -2 + -2)) + (((c ^ b) + ~((c | b) * 2) | c) * 2 + ((c | b) * 2 - (c ^ b)) + ~c + 2 | b + ~c + 1) * -2 + -1",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 13,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 44.15584415584416,
                        "opsPercentages": {
                            "arithmetic": 46.51162790697674,
                            "mul": 16.27906976744186,
                            "bitwise": 37.2093023255814
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "msvc_O1": {
                    "expr": "(b - c) + (((b | c - (((b | c * 2 - b ^ c) - c) + 1 + ~(b | c * 2 - b ^ c) * 2 | c * 2 | b - c)) * 2 - b ^ c) - c) + ~(b | c * 2 - b ^ c) * 2 | c * 2",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 8,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 55.84415584415584,
                        "opsPercentages": {
                            "arithmetic": 38.23529411764706,
                            "mul": 23.52941176470588,
                            "bitwise": 38.23529411764706
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((b - c) - (c - (c | b) * 2 - (b ^ c)) + (~(c | b) * 2 - (b ^ c) | c) * -2) + (1 - (c - (c | b) * 2 - (b ^ c)) + (~(c | b) * 2 - (b ^ c) | c) * -2 | b - c) * -2",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 11,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 53.246753246753244,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 19.444444444444446,
                            "bitwise": 36.11111111111111
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b + (c ^ 0xffffffff)) - ((((c & (c ^ 0xffffffff)) + c) - ((c | b) * 2 - (c ^ b))) + ((c & (c ^ 0xffffffff)) + c | (c | b) * 2 - (c ^ b) ^ 0xffffffff) * -2 + -2)) - ((b + (c ^ 0xffffffff) + 1 | ((((c & (c ^ 0xffffffff)) + c) - ((c | b) * 2 - (c ^ b))) + ((c & (c ^ 0xffffffff)) + c | (c | b) * 2 - (c ^ b) ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) + (b + (c ^ 0xffffffff) + 1 | ((((c & (c ^ 0xffffffff)) + c) - ((c | b) * 2 - (c ^ b)) ) + ((c & (c ^ 0xffffffff)) + c | (c | b) * 2 - (c ^ b) ^ 0xffffffff) * -2) - 2 ^ 0xffffffff))) + -1",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 35,
                        "numDAGs": 24,
                        "percentDecreaseByOps": -5.194805194805195,
                        "opsPercentages": {
                            "arithmetic": 43.20987654320987,
                            "mul": 11.11111111111111,
                            "bitwise": 45.67901234567901
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_default": {
                    "expr": "(((b + ~c) - ((c - ((c | b) * 2 - (c ^ b))) + (c | ~((c | b) * 2 - (c ^ b))) * -2 + -2)) - ((b + 1 + ~c | ~(((c - ((c | b) * 2 - (c ^ b))) + (c | ~((c | b) * 2 - (c ^ b))) * -2) - 2)) + (b + 1 + ~c | ~(((c - ((c | b) * 2 - (c ^ b))) + (c | ~((c | b) * 2 - (c ^ b))) * -2) - 2)))) + -1",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 29,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 18.181818181818183,
                        "opsPercentages": {
                            "arithmetic": 46.03174603174603,
                            "mul": 14.285714285714285,
                            "bitwise": 39.682539682539684
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((b - c) - ((c - (c | b) * 2 - (b ^ c)) + ~(c | b) * 2 + (b ^ c) | c * -2)) + (~(c | b) * 2 + (b ^ c) | c * 2 + 2 + ~c + (c | b) * 2 - (b ^ c) | b - c) * -2",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 9,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 53.246753246753244,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 19.444444444444446,
                            "bitwise": 38.88888888888889
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 53,
            "gt": {
                "expr": "(((c|((b+(c|b))*b))|((~a)&(~(b&b)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 11.11111111111111,
                        "mul": 11.11111111111111,
                        "bitwise": 77.77777777777779
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "((((c & ~ ((((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) & b) * (((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) | b) + (((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) & ~ b) * (~ ((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) & b))) + ((((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) & b) * (((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) | b) + (((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) & ~ b) * (~ ((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) & b))) + (((- a - 1) | ((~ b | b) - ~ b)) - ((~ b | b) - ~ b))) + 1) + ((- ((c & ~ ((((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) & b) * (((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) | b) + (((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) & ~ b) * (~ ((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) & b))) + ((((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) & b) * (((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) | b) + (((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) & ~ b) * (~ ((b - ~ (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - 1) & b))) - 1) | (- (((- a - 1) | ((~ b | b) - ~ b)) - ((~ b | b) - ~ b)) - 1))",
                "attributes": {
                    "numOps": 250,
                    "nestedExprLevel": 135,
                    "numDAGs": 37,
                    "opsPercentages": {
                        "arithmetic": 66.8,
                        "mul": 3.2,
                        "bitwise": 30.0
                    },
                    "percentageDAGsCancel": 2.7027027027027026
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a | b | ~((((c & b) - (b + c + 1)) + ~b + 1 & b) * ((b * 2 + c) - (c & b) & ~b) + ((b * 2 + c) - (c & b) & b) * ((b * 2 + c) - (c & b) | b) + (~((((c & b) - (b + c + 1)) + ~b + 1 & b) * ((b * 2 + c) - (c & b) & ~b) + ((b * 2 + c) - (c & b) & b) * ((b * 2 + c) - (c & b) | b)) & c))) + ~(a | b) + (~((((c & b) - (b + c + 1)) + ~b + 1 & b) * ((b * 2 + c) - (c & b) & ~b) + ((b * 2 + c) - (c & b) & b) * ((b * 2 + c) - (c & b) | b)) & c) + (((c & b) - (b + c + 1)) + ~b + 1 & b) * ((b * 2 + c) - (c & b) & ~b) + ((b * 2 + c) - (c & b) & b) * ((b * 2 + c) - (c & b) | b) + 1",
                    "attributes": {
                        "numOps": 122,
                        "nestedExprLevel": 43,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 51.2,
                        "opsPercentages": {
                            "arithmetic": 43.44262295081967,
                            "mul": 16.39344262295082,
                            "bitwise": 40.16393442622951
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                },
                "msvc_O1": {
                    "expr": "~b + 2 + ((~~(((b * 2 - (b & c)) + c | b) * ((b * 2 - (b & c)) + c & b) + (~(b * 2 - (b & c)) + c & b) * (~b & (b * 2 - (b & c)) + c)) & c - ((b * 2 - (b & c)) + c | b) * ((b * 2 - (b & c)) + c & b)) - (~(b * 2 - (b & c)) + c & b) * (~b & (b * 2 - (b & c)) + c) | ~(~a | b) + b) + (~a | b) + ~(((b * 2 - (b & c)) + c | b) * ((b * 2 - (b & c)) + c & b) + (~(b * 2 - (b & c)) + c & b) * (~b & (b * 2 - (b & c)) + c)) & c + ((b * 2 - (b & c)) + c | b) * ((b * 2 - (b & c)) + c & b) + (~(b * 2 - (b & c)) + c & b) * (~b & (b * 2 - (b & c)) + c)",
                    "attributes": {
                        "numOps": 119,
                        "nestedExprLevel": 39,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 52.400000000000006,
                        "opsPercentages": {
                            "arithmetic": 36.134453781512605,
                            "mul": 20.168067226890756,
                            "bitwise": 43.69747899159664
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "clang_O3": {
                    "expr": "(~(~(~(c | b) + b & b) * (~b & (c | b) + b) + ((c | b) + b | b) * ((c | b) + b & b) & c) + (~(c | b) + b & b) * (~b & (c | b) + b) + ((c | b) + b | b) * ((c | b) + b & b) | a | b) + ((~(~(c | b) + b & b) * (~b & (c | b) + b) + ((c | b) + b | b) * ((c | b) + b & b) & c) + (~(c | b) + b & b) * (~b & (c | b) + b) + ((c | b) + b | b) * ((c | b) + b & b) - (a | b))",
                    "attributes": {
                        "numOps": 80,
                        "nestedExprLevel": 22,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 68.0,
                        "opsPercentages": {
                            "arithmetic": 30.0,
                            "mul": 10.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "clang_default": {
                    "expr": "(c & (((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff)) - 1 & b) * ((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff)) - 1 | b) + ((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff)) - 1 & (b ^ 0xffffffff)) * (((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff)) - 1 ^ 0xffffffff) & b) ^ 0xffffffff)) + ((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff) ) - 1 & b) * ((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff) ) - 1 | b) + ((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff) ) - 1 & (b ^ 0xffffffff)) * (((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff )) - 1 ^ 0xffffffff) & b) + ((0xffffffff - a | (b ^ 0xffffffff | b) - (b ^ 0xffffffff)) - ((b ^ 0xffffffff | b) - (b ^ 0xffffffff))) + 1 + (0xffffffff - ((c & (((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff)) - 1 & b) * ((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff)) - 1 | b) + ((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff)) - 1 & (b ^ 0xffffffff)) * (((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff)) - 1 ^ 0xffffffff) & b) ^ 0xffffffff)) + ((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff )) - 1 & b) * ((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff )) - 1 | b) + ((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff )) - 1 & (b ^ 0xffffffff)) * (((b - (c + b + 1 + (0xffffffff - c | 0xffffffff - b) ^ 0xffffffff)) - 1 ^ 0xffffffff) & b)) | 0xffffffff - ((0xffffffff - a | (b ^ 0xffffffff | b) - (b ^ 0xffffffff)) - ((b ^ 0xffffffff | b) - (b ^ 0xffffffff))))",
                    "attributes": {
                        "numOps": 214,
                        "nestedExprLevel": 73,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 14.399999999999999,
                        "opsPercentages": {
                            "arithmetic": 61.21495327102804,
                            "mul": 3.7383177570093453,
                            "bitwise": 35.046728971962615
                        },
                        "percentageDAGsCancel": 3.0303030303030303
                    }
                },
                "msvc_default": {
                    "expr": "(~(((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1 & b) * ((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1 | b) + ((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1 & ~b) * (~((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1) & b)) & c) + ((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1 & b) * ((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1 | b) + ((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1 & ~b) * (~((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1) & b) + ((0xffffffff - a | -~b - 1) - (-1 - ~b)) + 1 + (0xffffffff - ((~(((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b)) ) - 1 & b) * ((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b)) ) - 1 | b) + ((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1 & ~b) * (~((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1) & b)) & c) + ((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1 & b) * ((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1 | b) + ((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1 & ~b) * (~((b - ~(c + b + 1 + (0xffffffff - c | 0xffffffff - b))) - 1) & b)) | 0xffffffff - ((0xffffffff - a | -~b - 1) - (-1 - ~b)))",
                    "attributes": {
                        "numOps": 210,
                        "nestedExprLevel": 63,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 16.0,
                        "opsPercentages": {
                            "arithmetic": 64.28571428571429,
                            "mul": 3.8095238095238098,
                            "bitwise": 31.9047619047619
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "gcc_O3": {
                    "expr": "((~((c & b) - (b + 1 + c) - b & b) * (~b & (b - (c & b) - (b + 1 + c)) - 1) + ((b - (c & b) - (b + 1 + c)) - 1 | b) * ((b - (c & b) - (b + 1 + c)) - 1 & b) & c) + ((c & b) - (b + 1 + c) - b & b) * (~b & (b - (c & b) - (b + 1 + c)) - 1) + ((b - (c & b) - (b + 1 + c)) - 1 | b) * ((b - (c & b) - (b + 1 + c)) - 1 & b) - (b | a)) + (~(~((c & b) - (b + 1 + c) - b & b) * (~b & (b - (c & b) - (b + 1 + c)) - 1) + ((b - (c & b) - (b + 1 + c)) - 1 | b) * ((b - (c & b) - (b + 1 + c)) - 1 & b) & c) + ((c & b) - (b + 1 + c) - b & b) * (~b & (b - (c & b) - (b + 1 + c)) - 1) + ((b - (c & b) - (b + 1 + c)) - 1 | b) * ((b - (c & b) - (b + 1 + c)) - 1 & b) | b | a)",
                    "attributes": {
                        "numOps": 136,
                        "nestedExprLevel": 49,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 45.6,
                        "opsPercentages": {
                            "arithmetic": 61.76470588235294,
                            "mul": 5.88235294117647,
                            "bitwise": 32.35294117647059
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                }
            }
        },
        {
            "num": 54,
            "gt": {
                "expr": "((~(~((((e|a)|a)-(d+a))^(((e^d)-a)^e)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 11,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 0.0,
                        "bitwise": 70.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "- (((((((((((e + a) + 1) + ((- e - 1) | (- a - 1))) + a) + 1) + ((- (((e + a) + 1) + ((- e - 1) | (- a - 1))) - 1) | (- a - 1))) & ~ ((d - ~ a) - 1)) - (~ ((((((e + a) + 1) + ((- e - 1) | (- a - 1))) + a) + 1) + ((- (((e + a) + 1) + ((- e - 1) | (- a - 1))) - 1) | (- a - 1))) & ((d - ~ a) - 1))) & (((((((e - d) - ((e | ~ d) << 1)) - 2) & ~ a) - (~ (((e - d) - ((e | ~ d) << 1)) - 2) & a)) | e) - ((((((e - d) - ((e | ~ d) << 1)) - 2) & ~ a) - (~ (((e - d) - ((e | ~ d) << 1)) - 2) & a)) & e))) - (((((((((e + a) + 1) + ((- e - 1) | (- a - 1))) + a) + 1) + ((- (((e + a) + 1) + ((- e - 1) | (- a - 1))) - 1) | (- a - 1))) & ~ ((d - ~ a) - 1)) - (~ ((((((e + a) + 1) + ((- e - 1) | (- a - 1))) + a) + 1) + ((- (((e + a) + 1) + ((- e - 1) | (- a - 1))) - 1) | (- a - 1))) & ((d - ~ a) - 1))) | (((((((e - d) - ((e | ~ d) << 1)) - 2) & ~ a) - (~ (((e - d) - ((e | ~ d) << 1)) - 2) & a)) | e) - ((((((e - d) - ((e | ~ d) << 1)) - 2) & ~ a) - (~ (((e - d) - ((e | ~ d) << 1)) - 2) & a)) & e)))) - 1) - 1",
                "attributes": {
                    "numOps": 198,
                    "nestedExprLevel": 110,
                    "numDAGs": 41,
                    "opsPercentages": {
                        "arithmetic": 64.64646464646465,
                        "mul": 0.0,
                        "bitwise": 35.35353535353536
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((e - d) + (~d | e) * -2) - 2 & ~a) - ((~d | e) * 2 + ~e + d + 2 & a) ^ e ^ (a * 2 + e + ~(e & a) + 2 + (~a | (e & a) - (a + e + 1)) & ~a + ~d + 1) - ((d - ~a) - 1 & ~((~a | (e & a) - (a + e + 1)) + a * 2 + e + ~(e & a) + 2))",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 13,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 71.21212121212122,
                        "opsPercentages": {
                            "arithmetic": 47.368421052631575,
                            "mul": 7.017543859649122,
                            "bitwise": 45.614035087719294
                        },
                        "percentageDAGsCancel": 2.4390243902439024
                    }
                },
                "msvc_O1": {
                    "expr": "((~(d + a) & (((-2 - (~e | ~a)) - a) - e | ~a) + (~e | ~a) + a * 2 + e + 2) - (~(((-2 - (~e | ~a)) - a) - e | ~a) + (~e | ~a) + a * 2 + e + 2 & d + a) | ((~a & ((e + (~d | e) * -2) - d) - 2) - (~((e + (~d | e) * -2) - d) - 2 & a) | e) - ((~a & ((e + (~d | e) * -2) - d) - 2) - (~((e + (~d | e) * -2) - d) - 2 & a) & e)) - ((~(d + a) & (((-2 - (~e | ~a)) - a) - e | ~a) + (~e | ~a) + a * 2 + e + 2) - (~(((-2 - (~e | ~a)) - a) - e | ~a) + (~e | ~a) + a * 2 + e + 2 & d + a) & ((~a & ((e + (~d | e) * -2) - d) - 2) - (~((e + (~d | e) * -2) - d) - 2 & a) | e) - ((~a & ((e + (~d | e) * -2) - d) - 2) - (~((e + (~d | e) * -2) - d) - 2 & a) & e))",
                    "attributes": {
                        "numOps": 167,
                        "nestedExprLevel": 52,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 15.656565656565657,
                        "opsPercentages": {
                            "arithmetic": 46.10778443113773,
                            "mul": 7.18562874251497,
                            "bitwise": 46.706586826347305
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "clang_O3": {
                    "expr": "((e - d) + (~d | e) * -2 - 2 & ~a) - (1 - (e - d) + (~d | e) * -2 & a) ^ e ^ (~(d + a) & a + a + e + 1 + (~e | ~a) + 1 + (~a + e + 1 + (~e | ~a) | ~a)) - (~a + a + e + 1 + (~e | ~a) + 1 + (~a + e + 1 + (~e | ~a) | ~a) & d + a)",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 11,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 68.18181818181817,
                        "opsPercentages": {
                            "arithmetic": 47.61904761904761,
                            "mul": 3.1746031746031744,
                            "bitwise": 49.2063492063492
                        },
                        "percentageDAGsCancel": 2.631578947368421
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((((e + a * 2 + (0xffffffff - e | 0xffffffff - a) + 2 + (0xffffffff - (e + a + 1 + (0xffffffff - e | 0xffffffff - a)) | 0xffffffff - a) & ((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) - ((e + a * 2 + (0xffffffff - e | 0xffffffff - a) + 2 + (0xffffffff - (e + a + 1 + (0xffffffff - e | 0xffffffff - a)) | 0xffffffff - a) ^ 0xffffffff) & (d - (a ^ 0xffffffff)) - 1) & ((((e - d) + (e | d ^ 0xffffffff) * -2) - 2 & (a ^ 0xffffffff)) - ((((e - d) + (e | d ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & a) | e) - ((((e - d) + (e | d ^ 0xffffffff) * -2) - 2 & (a ^ 0xffffffff)) - ((((e - d) + (e | d ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & a) & e)) - ((e + a * 2 + (0xffffffff - e | 0xffffffff - a) + 2 + (0xffffffff - (e + a + 1 + (0xffffffff - e | 0xffffffff - a)) | 0xffffffff - a) & ((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) - ((e + a * 2 + (0xffffffff - e | 0xffffffff - a) + 2 + (0xffffffff - (e + a + 1 + (0xffffffff - e | 0xffffffff - a)) | 0xffffffff - a) ^ 0xffffffff) & (d - (a ^ 0xffffffff)) - 1) | ((((e - d) + (e | d ^ 0xffffffff) * -2) - 2 & (a ^ 0xffffffff)) - ((((e - d) + (e | d ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & a) | e) - ((((e - d) + (e | d ^ 0xffffffff) * -2) - 2 & (a ^ 0xffffffff)) - ((((e - d) + (e | d ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & a) & e))) + -1)",
                    "attributes": {
                        "numOps": 179,
                        "nestedExprLevel": 57,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 9.595959595959595,
                        "opsPercentages": {
                            "arithmetic": 58.659217877094974,
                            "mul": 6.70391061452514,
                            "bitwise": 34.63687150837989
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (((((0xffffffff - e | 0xffffffff - a) + e + a * 2 + 2 + (0xffffffff - (e + a + 1 + (0xffffffff - e | 0xffffffff - a)) | 0xffffffff - a) & ~((d - ~a) - 1)) - (~((0xffffffff - e | 0xffffffff - a) + e + a * 2 + 2 + (0xffffffff - (e + a + 1 + (0xffffffff - e | 0xffffffff - a)) | 0xffffffff - a)) & (d - ~a) - 1) & ((((e - d) + (~d | e) * -2) - 2 & ~a) - (~(((e - d) + (~d | e) * -2) - 2) & a) | e) - ((((e - d) + (~d | e) * -2) - 2 & ~a) - (~(((e - d) + (~d | e) * -2) - 2) & a) & e)) - (((0xffffffff - e | 0xffffffff - a) + e + a * 2 + 2 + (0xffffffff - (e + a + 1 + (0xffffffff - e | 0xffffffff - a)) | 0xffffffff - a) & ~((d - ~a) - 1)) - (~((0xffffffff - e | 0xffffffff - a) + e + a * 2 + 2 + (0xffffffff - (e + a + 1 + (0xffffffff - e | 0xffffffff - a)) | 0xffffffff - a)) & (d - ~a) - 1) | ((((e - d) + (~d | e) * -2) - 2 & ~a) - (~(((e - d) + (~d | e) * -2) - 2) & a) | e) - ((((e - d) + (~d | e) * -2) - 2 & ~a) - (~(((e - d) + (~d | e) * -2) - 2) & a) & e))) + -1)",
                    "attributes": {
                        "numOps": 179,
                        "nestedExprLevel": 55,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 9.595959595959595,
                        "opsPercentages": {
                            "arithmetic": 58.659217877094974,
                            "mul": 6.70391061452514,
                            "bitwise": 34.63687150837989
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((e - d) + ~d | e * -2) - 2 & ~a) - (a & ~d | e * 2 + 2 + ~e + d) ^ e ^ (~a + 1 + ~d & (a + 1 + e - (e & a)) + a + ((e & a) - a + 1 + e | ~a)) - ((d - ~a) - 1 & ~(a + 1 + e - (e & a)) + a + ((e & a) - a + 1 + e | ~a))",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 11,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 72.22222222222221,
                        "opsPercentages": {
                            "arithmetic": 52.72727272727272,
                            "mul": 3.6363636363636362,
                            "bitwise": 43.63636363636363
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 55,
            "gt": {
                "expr": "(((e-(e+(b+b)))|((e^(b|a))-((~e)^a))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 0.0,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((e & ~ ((e | ((b ^ b) + ((b & b) + (b & b)))) + (e & ((b ^ b) + ((b & b) + (b & b)))))) - (~ e & ((e | ((b ^ b) + ((b & b) + (b & b)))) + (e & ((b ^ b) + ((b & b) + (b & b))))))) & ~ ((((e | ((b & ~ a) + a)) - (e & ((b & ~ a) + a))) & ~ (((- e - 1) | a) - ((- e - 1) & a))) - (~ ((e | ((b & ~ a) + a)) - (e & ((b & ~ a) + a))) & (((- e - 1) | a) - ((- e - 1) & a))))) + ((((e | ((b & ~ a) + a)) - (e & ((b & ~ a) + a))) & ~ (((- e - 1) | a) - ((- e - 1) & a))) - (~ ((e | ((b & ~ a) + a)) - (e & ((b & ~ a) + a))) & (((- e - 1) | a) - ((- e - 1) & a))))",
                "attributes": {
                    "numOps": 108,
                    "nestedExprLevel": 62,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 42.592592592592595,
                        "mul": 0.0,
                        "bitwise": 57.407407407407405
                    },
                    "percentageDAGsCancel": 9.67741935483871
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((a + (~a & b) ^ e) & (e ^ a)) - ~(e ^ a | a + (~a & b) ^ e)) + ((~(e + b * 2) & e) - (e + b * 2 & ~e) & ~(e ^ a | a + (~a & b) ^ e) + ~((e ^ a) & (a + (~a & b) ^ e)))",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 13,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 62.96296296296296,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 5.0,
                            "bitwise": 70.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((~(b * 2 & e) + (b * 2 | e) & e) - ((b * 2 & e) + (b * 2 | e) & ~e) & ~(~(~e | a) - (~e & a) & ((~a & b) + a | e) - ((~a & b) + a & e) - ~((~a & b) + a | e) - ((~a & b) + a & e) & (~e | a) - (~e & a))) - ~((~a & b) + a | e) - ((~a & b) + a & e) & (~e | a) - (~e & a)) + ~(~e | a) - (~e & a) & ((~a & b) + a | e) - ((~a & b) + a & e)",
                    "attributes": {
                        "numOps": 84,
                        "nestedExprLevel": 21,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 22.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 26.190476190476193,
                            "mul": 4.761904761904762,
                            "bitwise": 69.04761904761905
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "clang_O3": {
                    "expr": "(~(e ^ a | (~a & b) + a ^ e + (~a & b) + a ^ e & (e ^ a) + 1) & (~e + b * 2 & e) - (~e & e + b * 2)) + e ^ a | (~a & b) + a ^ e + (~a & b) + a ^ e & (e ^ a) + 1",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 7,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 62.96296296296296,
                        "opsPercentages": {
                            "arithmetic": 30.0,
                            "mul": 5.0,
                            "bitwise": 65.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e & ((e | b * 2) + (e & b * 2) ^ 0xffffffff)) - ((e ^ 0xffffffff) & (e | b * 2) + (e & b * 2)) & (((e | (b & (a ^ 0xffffffff)) + a) - (e & (b & (a ^ 0xffffffff)) + a) & ((0xffffffff - e | a) - (0xffffffff - e & a) ^ 0xffffffff)) - (((e | (b & (a ^ 0xffffffff)) + a) - (e & (b & (a ^ 0xffffffff)) + a) ^ 0xffffffff) & (0xffffffff - e | a) - (0xffffffff - e & a)) ^ 0xffffffff)) + (((e | (b & (a ^ 0xffffffff)) + a) - (e & (b & (a ^ 0xffffffff)) + a) & ((0xffffffff - e | a) - (0xffffffff - e & a) ^ 0xffffffff)) - (((e | (b & (a ^ 0xffffffff)) + a) - (e & (b & (a ^ 0xffffffff)) + a) ^ 0xffffffff) & (0xffffffff - e | a) - (0xffffffff - e & a)))",
                    "attributes": {
                        "numOps": 84,
                        "nestedExprLevel": 38,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 22.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 4.761904761904762,
                            "bitwise": 59.523809523809526
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "msvc_default": {
                    "expr": "((~((b * 2 | e) + (b * 2 & e)) & e) - (~e & (b * 2 | e) + (b * 2 & e)) & ~((((~a & b) + a | e) - ((~a & b) + a & e) & ~((0xffffffff - e | a) - (0xffffffff - e & a))) - (~(((~a & b) + a | e) - ((~a & b) + a & e) ) & (0xffffffff - e | a) - (0xffffffff - e & a)))) + ((((~a & b) + a | e) - ((~a & b) + a & e) & ~((0xffffffff - e | a) - (0xffffffff - e & a))) - (~(((~a & b) + a | e) - ((~a & b) + a & e)) & (0xffffffff - e | a) - (0xffffffff - e & a)))",
                    "attributes": {
                        "numOps": 84,
                        "nestedExprLevel": 30,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 22.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 4.761904761904762,
                            "bitwise": 59.523809523809526
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~e + b * 2 & e) - (~e & e + b * 2) & ~(~a & b) + a ^ e & (a ^ e) + ~(a ^ e | (~a & b) + a ^ e)) + ((~a & b) + a ^ e & (a ^ e) - ~(a ^ e | (~a & b) + a ^ e))",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 9,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 62.96296296296296,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 5.0,
                            "bitwise": 70.0
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                }
            }
        },
        {
            "num": 56,
            "gt": {
                "expr": "(((e-(c-a))^((e|e)^(((c^a)&e)*a))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 12.5,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "(((e + ~ ((c ^ a) - ((~ c & a) + (~ c & a)))) + 1) | (((((e + e) + 1) + ((- e - 1) | (- e - 1))) | (((((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) & a) * ((((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) | a) + ((((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) & ~ a) * (~ (((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) & a))) - ((((e + e) + 1) + ((- e - 1) | (- e - 1))) & (((((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) & a) * ((((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) | a) + ((((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) & ~ a) * (~ (((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) & a))))) - (((e + ~ ((c ^ a) - ((~ c & a) + (~ c & a)))) + 1) & (((((e + e) + 1) + ((- e - 1) | (- e - 1))) | (((((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) & a) * ((((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) | a) + ((((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) & ~ a) * (~ (((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) & a))) - ((((e + e) + 1) + ((- e - 1) | (- e - 1))) & (((((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) & a) * ((((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) | a) + ((((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) & ~ a) * (~ (((~ ((c | a) - (c & a)) | e) + ((c | a) - (c & a))) + 1) & a)))))",
                "attributes": {
                    "numOps": 257,
                    "nestedExprLevel": 167,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 41.63424124513619,
                        "mul": 3.11284046692607,
                        "bitwise": 55.252918287937746
                    },
                    "percentageDAGsCancel": 5.555555555555555
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-((~(c ^ a) | e) + (c ^ a)) - 2 & a) * ((c ^ a) + (~(c ^ a) | e) + 1 & ~a) + ((c ^ a) + (~(c ^ a) | e) + 1 & a) * ((c ^ a) + (~(c ^ a) | e) + 1 | a) ^ e * 2 + 1 + ~e ^ e + ~(c ^ a) + (~c & a) * 2 + 1",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 13,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 81.71206225680933,
                        "opsPercentages": {
                            "arithmetic": 31.914893617021278,
                            "mul": 8.51063829787234,
                            "bitwise": 59.57446808510638
                        },
                        "percentageDAGsCancel": 10.714285714285714
                    }
                },
                "msvc_O1": {
                    "expr": "(((~c & a) * 2 - (a ^ c)) + e | (((a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c)) | a) * ((a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c)) & a) + (~a & (a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c))) * (~(a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c)) & a) | e) - (((a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c)) | a) * ((a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c)) & a) + (~a & (a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c))) * (~(a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c)) & a) & e)) - (((~c & a) * 2 - (a ^ c)) + e & (((a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c)) | a) * ((a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c)) & a) + (~a & (a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c))) * (~(a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c)) & a) | e) - (((a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c)) | a) * ((a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c)) & a) + (~a & (a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c))) * (~(a | c) + 1 + ((~((a | c) - (a & c)) | e) - (a & c)) & a) & e))",
                    "attributes": {
                        "numOps": 217,
                        "nestedExprLevel": 92,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 15.56420233463035,
                        "opsPercentages": {
                            "arithmetic": 34.56221198156682,
                            "mul": 4.6082949308755765,
                            "bitwise": 60.82949308755761
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((~c & a) * 2 - c ^ a) + e ^ e ^ (-((~c ^ a | e) + c ^ a) - 2 & a) * (~a & c ^ a + (~c ^ a | e) + 1) + (c ^ a + (~c ^ a | e) + 1 | a) * (c ^ a + (~c ^ a | e) + 1 & a)",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 8,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 84.04669260700389,
                        "opsPercentages": {
                            "arithmetic": 29.268292682926827,
                            "mul": 7.317073170731707,
                            "bitwise": 63.41463414634146
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "clang_default": {
                    "expr": "(e + ((c ^ a) - (((c ^ 0xffffffff) & a) + ((c ^ 0xffffffff) & a)) ^ 0xffffffff) + 1 | (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) | (((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 & a) * (((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 | a) + (((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 & (a ^ 0xffffffff)) * ((((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 ^ 0xffffffff) & a)) - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & (((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 & a) * (((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 | a) + (((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 & (a ^ 0xffffffff)) * ((((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 ^ 0xffffffff) & a))) - (e + ((c ^ a) - (((c ^ 0xffffffff) & a) + ((c ^ 0xffffffff) & a)) ^ 0xffffffff) + 1 & (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) | (((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 & a) * (((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 | a) + (((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 & (a ^ 0xffffffff)) * ((((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 ^ 0xffffffff) & a)) - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & (((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 & a) * (((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 | a) + (((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 & (a ^ 0xffffffff)) * ((((c | a) - (c & a) ^ 0xffffffff | e) + ((c | a) - (c & a)) + 1 ^ 0xffffffff) & a)))",
                    "attributes": {
                        "numOps": 249,
                        "nestedExprLevel": 99,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 3.11284046692607,
                        "opsPercentages": {
                            "arithmetic": 38.152610441767074,
                            "mul": 4.819277108433735,
                            "bitwise": 57.028112449799195
                        },
                        "percentageDAGsCancel": 8.571428571428571
                    }
                },
                "msvc_default": {
                    "expr": "(e + 1 + ~((c ^ a) - ((~c & a) + (~c & a))) | (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) | ((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a)) & a) * ((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a)) | a) + ((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a)) & ~a) * (~((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a))) & a)) - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & ((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a)) & a) * ((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a)) | a) + ((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a)) & ~a) * (~((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a))) & a))) - (e + 1 + ~((c ^ a) - ((~c & a) + (~c & a))) & (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) | ((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a)) & a) * ((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a)) | a) + ((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a)) & ~a) * (~((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a))) & a)) - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & ((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a)) & a) * ((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a)) | a) + ((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a)) & ~a) * (~((~((c | a) - (c & a)) | e) + 1 + ((c | a) - (c & a))) & a)))",
                    "attributes": {
                        "numOps": 249,
                        "nestedExprLevel": 113,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 3.11284046692607,
                        "opsPercentages": {
                            "arithmetic": 38.152610441767074,
                            "mul": 4.819277108433735,
                            "bitwise": 57.028112449799195
                        },
                        "percentageDAGsCancel": 17.142857142857142
                    }
                },
                "gcc_O3": {
                    "expr": "e + 1 + ~(c ^ a) + (~c & a) * 2 ^ e ^ ((~(c ^ a) | e) + (c ^ a) + 1 & a) * ((~(c ^ a) | e) + (c ^ a) + 1 | a) + (~a & (~(c ^ a) | e) + (c ^ a) + 1) * (-(~(c ^ a) | e) + (c ^ a) - 2 & a)",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 14,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 83.26848249027238,
                        "opsPercentages": {
                            "arithmetic": 30.23255813953488,
                            "mul": 6.976744186046512,
                            "bitwise": 62.7906976744186
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                }
            }
        },
        {
            "num": 57,
            "gt": {
                "expr": "((((-(d-(b*(b&d))))-b)-(~(-(b^d)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 11.11111111111111,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((~ (((d & ~ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1)))) + (d & ~ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1))))) - (d ^ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1))))) + 1) ^ b) - ((~ (~ (((d & ~ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1)))) + (d & ~ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1))))) - (d ^ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1))))) + 1) & b) + (~ (~ (((d & ~ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1)))) + (d & ~ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1))))) - (d ^ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1))))) + 1) & b))) ^ (((b | d) - (b & d)) - 1)) - ((~ (((~ (((d & ~ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1)))) + (d & ~ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1))))) - (d ^ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1))))) + 1) ^ b) - ((~ (~ (((d & ~ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1)))) + (d & ~ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1))))) - (d ^ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1))))) + 1) & b) + (~ (~ (((d & ~ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1)))) + (d & ~ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1))))) - (d ^ ((b & (((~ b | d) + b) + 1)) * (b | (((~ b | d) + b) + 1)) + (b & ~ (((~ b | d) + b) + 1)) * (~ b & (((~ b | d) + b) + 1))))) + 1) & b))) & (((b | d) - (b & d)) - 1)) << 1)",
                "attributes": {
                    "numOps": 531,
                    "nestedExprLevel": 290,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 35.59322033898305,
                        "mul": 6.779661016949152,
                        "bitwise": 57.6271186440678
                    },
                    "percentageDAGsCancel": 24.242424242424242
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((((-((~b | d) + b) - 2 & b) * (b + (~b | d) + 1 & ~b) + (b + (~b | d) + 1 & b) * (b + (~b | d) + 1 | b) ^ d) + ~((~((-((~b | d) + b) - 2 & b) * (b + (~b | d) + 1 & ~b) + (b + (~b | d) + 1 & b) * (b + (~b | d) + 1 | b)) & d) * 2) + 1 ^ b) + (((~((-((~b | d) + b) - 2 & b) * (b + (~b | d) + 1 & ~b) + (b + (~b | d) + 1 & b) * (b + (~b | d) + 1 | b)) & d) * 2 - ((-((~b | d) + b) - 2 & b) * (b + (~b | d) + 1 & ~b) + (b + (~b | d) + 1 & b) * (b + (~b | d) + 1 | b) ^ d)) - 1 & b) * -2 ^ (b ^ d) - 1) + ((b ^ d) - 1 & (((~((-((~b | d) + b) - 2 & b) * (b + (~b | d) + 1 & ~b) + (b + (~b | d) + 1 & b) * (b + (~b | d) + 1 | b)) & d) * 2 - ((-((~b | d) + b) - 2 & b) * (b + (~b | d) + 1 & ~b) + (b + (~b | d) + 1 & b) * (b + (~b | d) + 1 | b) ^ d)) - 1 ^ b) + (((~((-((~b | d) + b) - 2 & b) * (b + (~b | d) + 1 & ~b) + (b + (~b | d) + 1 & b) * (b + (~b | d) + 1 | b)) & d) * 2 - ((-((~b | d) + b) - 2 & b) * (b + (~b | d) + 1 & ~b) + (b + (~b | d) + 1 & b) * (b + (~b | d) + 1 | b) ^ d)) - 1 & b) * 2) * -2",
                    "attributes": {
                        "numOps": 243,
                        "nestedExprLevel": 65,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 54.23728813559322,
                        "opsPercentages": {
                            "arithmetic": 39.09465020576132,
                            "mul": 9.465020576131687,
                            "bitwise": 51.440329218106996
                        },
                        "percentageDAGsCancel": 8.108108108108109
                    }
                },
                "msvc_O1": {
                    "expr": "((b | d) - (b & d) - 1 ^ (((b + 1 + (~b | d) & b) * (b + 1 + (~b | d) | b) + (~b + 1 + (~b | d) & b) * (b + 1 + (~b | d) & ~b) ^ d) + (~(b + 1 + (~b | d) & b) * (b + 1 + (~b | d) | b) + (~b + 1 + (~b | d) & b) * (b + 1 + (~b | d) & ~b) & d) * -2 ^ b) + (~((b + 1 + (~b | d) & b) * (b + 1 + (~b | d) | b) + (~b + 1 + (~b | d) & b) * (b + 1 + (~b | d) & ~b) ^ d) + (~(b + 1 + (~b | d) & b) * (b + 1 + (~b | d) | b) + (~b + 1 + (~b | d) & b) * (b + 1 + (~b | d) & ~b) & d) * -2 & b) * -2) - (~(((b + 1 + (~b | d) & b) * (b + 1 + (~b | d) | b) + (~b + 1 + (~b | d) & b) * (b + 1 + (~b | d) & ~b) ^ d) + (~(b + 1 + (~b | d) & b) * (b + 1 + (~b | d) | b) + (~b + 1 + (~b | d) & b) * (b + 1 + (~b | d) & ~b) & d) * -2 ^ b) + (~((b + 1 + (~b | d) & b) * (b + 1 + (~b | d) | b) + (~b + 1 + (~b | d) & b) * (b + 1 + (~b | d) & ~b) ^ d) + (~(b + 1 + (~b | d) & b) * (b + 1 + (~b | d) | b) + (~b + 1 + (~b | d) & b) * (b + 1 + (~b | d) & ~b) & d) * -2 & b) * -2 * 2 & (b | d) - (b & d) * 2 - 2)",
                    "attributes": {
                        "numOps": 250,
                        "nestedExprLevel": 50,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 52.91902071563088,
                        "opsPercentages": {
                            "arithmetic": 35.6,
                            "mul": 9.6,
                            "bitwise": 54.800000000000004
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_O3": {
                    "expr": "((((~b & ~b | d + b + 1) * (-(~b | d + b) - 2 & b) + (~b | d + b + 1 | b) * (~b | d + b + 1 & b) ^ d) + (~(~b & ~b | d + b + 1) * (-(~b | d + b) - 2 & b) + (~b | d + b + 1 | b) * (~b | d + b + 1 & b) & d) * -2 ^ b) + (~((~b & ~b | d + b + 1) * (-(~b | d + b) - 2 & b) + (~b | d + b + 1 | b) * (~b | d + b + 1 & b) ^ d) + (~(~b & ~b | d + b + 1) * (-(~b | d + b) - 2 & b) + (~b | d + b + 1 | b) * (~b | d + b + 1 & b) & d) * -2 & b) * -2 ^ (d ^ b) - 1) + (~(((~b & ~b | d + b + 1) * (-(~b | d + b) - 2 & b) + (~b | d + b + 1 | b) * (~b | d + b + 1 & b) ^ d) + (~(~b & ~b | d + b + 1) * (-(~b | d + b) - 2 & b) + (~b | d + b + 1 | b) * (~b | d + b + 1 & b) & d) * -2 ^ b) + (~((~b & ~b | d + b + 1) * (-(~b | d + b) - 2 & b) + (~b | d + b + 1 | b) * (~b | d + b + 1 & b) ^ d) + (~(~b & ~b | d + b + 1) * (-(~b | d + b) - 2 & b) + (~b | d + b + 1 | b) * (~b | d + b + 1 & b) & d) * -2 & b) * -2 & (d ^ b) - 1) * -2",
                    "attributes": {
                        "numOps": 246,
                        "nestedExprLevel": 33,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 53.672316384180796,
                        "opsPercentages": {
                            "arithmetic": 39.02439024390244,
                            "mul": 9.34959349593496,
                            "bitwise": 51.6260162601626
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((((d & ((b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1) ^ 0xffffffff)) + (d & ((b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1) ^ 0xffffffff)) ) - (d ^ (b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1)) ^ 0xffffffff ) + 1 ^ b) - ((((((d & ((b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1) ^ 0xffffffff) ) + (d & ((b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1) ^ 0xffffffff))) - (d ^ (b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1)) ^ 0xffffffff) + 1 ^ 0xffffffff) & b) + (((((d & ((b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1) ^ 0xffffffff)) + (d & ((b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1) ^ 0xffffffff) )) - (d ^ (b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1)) ^ 0xffffffff) + 1 ^ 0xffffffff) & b)) ^ ((b | d) - (b & d)) - 1 ) + ((((((d & ((b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1) ^ 0xffffffff)) + (d & ((b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1) ^ 0xffffffff))) - (d ^ (b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1)) ^ 0xffffffff) + 1 ^ b) - ((((((d & ((b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1) ^ 0xffffffff)) + (d & ((b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1) ^ 0xffffffff))) - (d ^ (b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1)) ^ 0xffffffff) + 1 ^ 0xffffffff) & b) + (((((d & ((b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1) ^ 0xffffffff)) + (d & ((b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1) ^ 0xffffffff))) - (d ^ (b & (b ^ 0xffffffff | d) + b + 1) * (b | (b ^ 0xffffffff | d) + b + 1) + (b & ((b ^ 0xffffffff | d) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | d) + b + 1)) ^ 0xffffffff) + 1 ^ 0xffffffff) & b)) ^ 0xffffffff) & ((b | d) - (b & d)) - 1) * -2",
                    "attributes": {
                        "numOps": 532,
                        "nestedExprLevel": 170,
                        "numDAGs": 34,
                        "percentDecreaseByOps": -0.18832391713747645,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 6.954887218045112,
                            "bitwise": 57.330827067669176
                        },
                        "percentageDAGsCancel": 8.823529411764707
                    }
                },
                "msvc_default": {
                    "expr": "((~(((~(((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b)) & d) + (~(((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b)) & d)) - (((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b) ^ d)) + 1 ^ b) - ((~(~(((~(((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b)) & d) + (~(((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b)) & d)) - (((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b) ^ d)) + 1) & b) + (~(~(((~(((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b)) & d) + (~(((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b)) & d)) - (((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b) ^ d)) + 1) & b)) ^ ((b | d) - (b & d)) - 1) + (~((~(((~(((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b)) & d) + (~(((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b)) & d)) - (((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b) ^ d)) + 1 ^ b) - ((~(~(((~(((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b)) & d) + (~(((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b)) & d)) - (((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b) ^ d)) + 1) & b) + (~(~(((~(((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b)) & d) + (~(((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b)) & d)) - (((~b | d) + 1 + b & b) * ((~b | d) + 1 + b | b) + (~((~b | d) + 1 + b) & b) * (~b & (~b | d) + 1 + b) ^ d)) + 1) & b))) & ((b | d) - (b & d)) - 1) * -2",
                    "attributes": {
                        "numOps": 532,
                        "nestedExprLevel": 152,
                        "numDAGs": 34,
                        "percentDecreaseByOps": -0.18832391713747645,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 6.954887218045112,
                            "bitwise": 57.330827067669176
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "gcc_O3": {
                    "expr": "(((-(~b | d) + b - 2 & b) * (~b & (~b | d) + b + 1) + ((~b | d) + b + 1 | b) * ((~b | d) + b + 1 & b) ^ d + ~(-(~b | d) + b - 2 & b) * (~b & (~b | d) + b + 1) + ((~b | d) + b + 1 | b) * ((~b | d) + b + 1 & b) & d * -2 ^ b) + (~(-(~b | d) + b - 2 & b) * (~b & (~b | d) + b + 1) + ((~b | d) + b + 1 | b) * ((~b | d) + b + 1 & b) & d * 2 - (-(~b | d) + b - 2 & b) * (~b & (~b | d) + b + 1) + ((~b | d) + b + 1 | b) * ((~b | d) + b + 1 & b) ^ d) - 1 & b * -2 ^ (d ^ b) - 1) + (((~(-(~b | d) + b - 2 & b) * (~b & (~b | d) + b + 1) + ((~b | d) + b + 1 | b) * ((~b | d) + b + 1 & b) & d * 2 - (-(~b | d) + b - 2 & b) * (~b & (~b | d) + b + 1) + ((~b | d) + b + 1 | b) * ((~b | d) + b + 1 & b) ^ d) - 1 ^ b) + (~(-(~b | d) + b - 2 & b) * (~b & (~b | d) + b + 1) + ((~b | d) + b + 1 | b) * ((~b | d) + b + 1 & b) & d * 2 - (-(~b | d) + b - 2 & b) * (~b & (~b | d) + b + 1) + ((~b | d) + b + 1 | b) * ((~b | d) + b + 1 & b) ^ d) - 1 & b * 2 & (d ^ b) - 1) * -2",
                    "attributes": {
                        "numOps": 242,
                        "nestedExprLevel": 42,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 54.4256120527307,
                        "opsPercentages": {
                            "arithmetic": 39.25619834710744,
                            "mul": 9.50413223140496,
                            "bitwise": 51.2396694214876
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                }
            }
        },
        {
            "num": 58,
            "gt": {
                "expr": "(((((~c)-c)|e)+(a+a)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 0.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((((- c - 1) & ~ c) + ((- c - 1) & ~ c)) - ((- c - 1) ^ c)) + e) + 1) + ((- ((((- c - 1) & ~ c) + ((- c - 1) & ~ c)) - ((- c - 1) ^ c)) - 1) | (- e - 1))) - ~ ((a - ~ a) - 1)) - 1",
                "attributes": {
                    "numOps": 40,
                    "nestedExprLevel": 20,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 67.5,
                        "mul": 0.0,
                        "bitwise": 32.5
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((e + ~c * 2 + (~e | c * 2)) - (~a * 2 + 1)) + 1",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 70.0,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 25.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~c * 2) - 1 | ~e) + e + (a + 1 + ~c) * 2",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 70.0,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 16.666666666666664,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~e | ~c * 2 ^ 0xfffffffe) + ~c * 2 + a * 2 + e + 2",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 2,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 70.0,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 25.0,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((0xffffffff - c & (c ^ 0xffffffff)) + (0xffffffff - c & (c ^ 0xffffffff))) - (0xffffffff - c ^ c)) + e + (0xffffffff - (((0xffffffff - c & (c ^ 0xffffffff)) + (0xffffffff - c & (c ^ 0xffffffff))) - (0xffffffff - c ^ c)) | 0xffffffff - e)) - ((a - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 16,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 25.0,
                        "opsPercentages": {
                            "arithmetic": 56.666666666666664,
                            "mul": 0.0,
                            "bitwise": 43.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((((0xffffffff - c & ~c) + (0xffffffff - c & ~c)) - (0xffffffff - c ^ c)) + e + (0xffffffff - (((0xffffffff - c & ~c) + (0xffffffff - c & ~c)) - (0xffffffff - c ^ c)) | 0xffffffff - e)) - ~((a - ~a) - 1)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 11,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 25.0,
                        "opsPercentages": {
                            "arithmetic": 56.666666666666664,
                            "mul": 0.0,
                            "bitwise": 43.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((e + ~c * 2 + (c * 2 | ~e)) - (~a * 2 + 1)) + 1",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 70.0,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 25.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 59,
            "gt": {
                "expr": "(((b-((b&b)-(~(d^b))))^(~(d+d))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 0.0,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "(((((b & ~ (((((~ b | b) + b) + 1) ^ (((d & b) - (d | b)) - 1)) - ((~ (((~ b | b) + b) + 1) & (((d & b) - (d | b)) - 1)) + (~ (((~ b | b) + b) + 1) & (((d & b) - (d | b)) - 1))))) + (b & ~ (((((~ b | b) + b) + 1) ^ (((d & b) - (d | b)) - 1)) - ((~ (((~ b | b) + b) + 1) & (((d & b) - (d | b)) - 1)) + (~ (((~ b | b) + b) + 1) & (((d & b) - (d | b)) - 1)))))) - (b ^ (((((~ b | b) + b) + 1) ^ (((d & b) - (d | b)) - 1)) - ((~ (((~ b | b) + b) + 1) & (((d & b) - (d | b)) - 1)) + (~ (((~ b | b) + b) + 1) & (((d & b) - (d | b)) - 1)))))) - (- ((d | d) + (d & d)) - 1)) - (((((b & ~ (((((~ b | b) + b) + 1) ^ (((d & b) - (d | b)) - 1)) - ((~ (((~ b | b) + b) + 1) & (((d & b) - (d | b)) - 1)) + (~ (((~ b | b) + b) + 1) & (((d & b) - (d | b)) - 1))))) + (b & ~ (((((~ b | b) + b) + 1) ^ (((d & b) - (d | b)) - 1)) - ((~ (((~ b | b) + b) + 1) & (((d & b) - (d | b)) - 1)) + (~ (((~ b | b) + b) + 1) & (((d & b) - (d | b)) - 1)))))) - (b ^ (((((~ b | b) + b) + 1) ^ (((d & b) - (d | b)) - 1)) - ((~ (((~ b | b) + b) + 1) & (((d & b) - (d | b)) - 1)) + (~ (((~ b | b) + b) + 1) & (((d & b) - (d | b)) - 1)))))) | ~ (- ((d | d) + (d & d)) - 1)) << 1)) - 2",
                "attributes": {
                    "numOps": 216,
                    "nestedExprLevel": 141,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 44.907407407407405,
                        "mul": 0.0,
                        "bitwise": 55.092592592592595
                    },
                    "percentageDAGsCancel": 13.793103448275861
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((d + ~(b | d) * 2 & b) * 2 - (~d + ~(b | d) * -2 ^ b)) - (d * -2 + -1)) + (d * 2 | (d + ~(b | d) * 2 & b) * 2 - (~d + ~(b | d) * -2 ^ b)) * -2 + -2",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 10,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 81.48148148148148,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 22.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((~(((b & d) - (b | d)) - 1 ^ b) + (~b & ((b & d) - (b | d)) - 1) * -2 & b + d) * 2 - ((~(((b & d) - (b | d)) - 1 ^ b) + (~b & ((b & d) - (b | d)) - 1) * -2 & b * 2 - (((b & d) - (b | d)) - 1 ^ b) + (~b & ((b & d) - (b | d)) - 1) * -2 ^ b) * 2 | d << 2)) - (((b & d) - (b | d)) - 1 ^ b) + (~b & ((b & d) - (b | d)) - 1) * -2 ^ b) + -1",
                    "attributes": {
                        "numOps": 73,
                        "nestedExprLevel": 30,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 66.20370370370371,
                        "opsPercentages": {
                            "arithmetic": 41.0958904109589,
                            "mul": 9.58904109589041,
                            "bitwise": 49.31506849315068
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "clang_O3": {
                    "expr": "~((d * 2 | (d - ((d | b) * 2 + 2) & b) * 2 - (~d + (d | b) * 2 + 2 ^ b)) * 2) + (d - ((d | b) * 2 + 2) & b) * 2 - (~d + (d | b) * 2 + 2 ^ b) + d * 2",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 10,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 84.72222222222221,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 27.27272727272727,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b & (((b ^ 0xffffffff | b) + b + 1 ^ ((d & b) - (d | b)) - 1) - ((((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) & ((d & b) - (d | b)) - 1) + (((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) & ((d & b) - (d | b)) - 1)) ^ 0xffffffff)) + (b & (((b ^ 0xffffffff | b) + b + 1 ^ ((d & b) - (d | b)) - 1) - ((((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) & ((d & b) - (d | b)) - 1) + (((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) & ((d & b) - (d | b)) - 1)) ^ 0xffffffff))) - (b ^ ((b ^ 0xffffffff | b) + b + 1 ^ ((d & b) - (d | b)) - 1) - ((((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) & ((d & b) - (d | b)) - 1) + (((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) & ((d & b) - (d | b)) - 1)))) + d * 2 + (((b & (((b ^ 0xffffffff | b) + b + 1 ^ ((d & b) - (d | b)) - 1) - ((((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) & ((d & b) - (d | b)) - 1) + (((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) & ((d & b) - (d | b)) - 1)) ^ 0xffffffff)) + (b & (((b ^ 0xffffffff | b) + b + 1 ^ ((d & b) - (d | b)) - 1) - ((((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) & ((d & b) - (d | b)) - 1) + (((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) & ((d & b) - (d | b)) - 1)) ^ 0xffffffff))) - (b ^ ((b ^ 0xffffffff | b) + b + 1 ^ ((d & b) - (d | b)) - 1) - ((((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) & ((d & b) - (d | b)) - 1) + (((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) & ((d & b) - (d | b)) - 1))) | d * -2 - 1 ^ 0xffffffff ) * -2 + -1",
                    "attributes": {
                        "numOps": 212,
                        "nestedExprLevel": 87,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 1.8518518518518516,
                        "opsPercentages": {
                            "arithmetic": 44.81132075471698,
                            "mul": 1.4150943396226416,
                            "bitwise": 53.77358490566038
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((~((b ^ ((d & b) - (d | b)) - 1) - ((~b & ((d & b) - (d | b)) - 1) + (~b & ((d & b) - (d | b)) - 1))) & b) + (~((b ^ ((d & b) - (d | b)) - 1) - ((~b & ((d & b) - (d | b)) - 1) + (~b & ((d & b) - (d | b)) - 1))) & b)) - ((b ^ ((d & b) - (d | b)) - 1) - ((~b & ((d & b) - (d | b)) - 1) + (~b & ((d & b) - (d | b)) - 1)) ^ b)) + d * 2 + (((~((b ^ ((d & b) - (d | b)) - 1) - ((~b & ((d & b) - (d | b)) - 1) + (~b & ((d & b) - (d | b)) - 1))) & b) + (~((b ^ ((d & b) - (d | b)) - 1) - ((~b & ((d & b) - (d | b)) - 1) + (~b & ((d & b) - (d | b)) - 1))) & b)) - ((b ^ ((d & b) - (d | b)) - 1) - ((~b & ((d & b) - (d | b)) - 1) + (~b & ((d & b) - (d | b)) - 1)) ^ b) | ~(d * -2 - 1)) * -2 + -1",
                    "attributes": {
                        "numOps": 140,
                        "nestedExprLevel": 76,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 35.18518518518518,
                        "opsPercentages": {
                            "arithmetic": 42.142857142857146,
                            "mul": 2.142857142857143,
                            "bitwise": 55.714285714285715
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~(b | d) * 2 + d & b) * 2 - (~d + ~(b | d) * -2 ^ b) - (d * -2 + -1)) + (d * 2 | (~(b | d) * 2 + d & b) * 2 - (~d + ~(b | d) * -2 ^ b)) * -2 + -2",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 9,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 81.48148148148148,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 22.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 60,
            "gt": {
                "expr": "((~(((a|a)-c)*(a+c))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "- (((((((a & ~ a) + a) & ~ c) + (((a & ~ a) + a) & ~ c)) - (((a & ~ a) + a) ^ c)) & ((a ^ c) + ((a & c) << 1))) * ((((((a & ~ a) + a) & ~ c) + (((a & ~ a) + a) & ~ c)) - (((a & ~ a) + a) ^ c)) | ((a ^ c) + ((a & c) << 1))) + ((((((a & ~ a) + a) & ~ c) + (((a & ~ a) + a) & ~ c)) - (((a & ~ a) + a) ^ c)) & ~ ((a ^ c) + ((a & c) << 1))) * (~ (((((a & ~ a) + a) & ~ c) + (((a & ~ a) + a) & ~ c)) - (((a & ~ a) + a) ^ c)) & ((a ^ c) + ((a & c) << 1)))) - 1",
                "attributes": {
                    "numOps": 91,
                    "nestedExprLevel": 47,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 29.67032967032967,
                        "mul": 2.197802197802198,
                        "bitwise": 68.13186813186813
                    },
                    "percentageDAGsCancel": 8.695652173913043
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((a & c) * 2 + (a ^ c) & ~((~c & a) * 2) + (a ^ c)) * ((~c & a) * 2 - (a ^ c) & ~((a & c) * 2 + (a ^ c))) + ((~c & a) * 2 - (a ^ c) & (a & c) * 2 + (a ^ c)) * ((a & c) * 2 + (a ^ c) | (~c & a) * 2 - (a ^ c)))",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 16,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 49.45054945054945,
                        "opsPercentages": {
                            "arithmetic": 19.565217391304348,
                            "mul": 21.73913043478261,
                            "bitwise": 58.69565217391305
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_O1": {
                    "expr": "~((~(a ^ c) + (a & c) * 2 & (~c & a) * 2 - (a ^ c)) * (~(~c & a) * 2 - (a ^ c) & (a ^ c) + (a & c) * 2)) - ((~c & a) * 2 - (a ^ c) | (a ^ c) + (a & c) * 2) * ((~c & a) * 2 - (a ^ c) & (a ^ c) + (a & c) * 2)",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 14,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 49.45054945054945,
                        "opsPercentages": {
                            "arithmetic": 19.565217391304348,
                            "mul": 21.73913043478261,
                            "bitwise": 58.69565217391305
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "clang_O3": {
                    "expr": "~((~(~c & a) * 2 - (c ^ a) & (c ^ a) + (c & a) * 2) * (~(c ^ a) + (c & a) * 2 & (~c & a) * 2 - (c ^ a)) + ((~c & a) * 2 - (c ^ a) | (c ^ a) + (c & a) * 2) * ((~c & a) * 2 - (c ^ a) & (c ^ a) + (c & a) * 2))",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 14,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 49.45054945054945,
                        "opsPercentages": {
                            "arithmetic": 19.565217391304348,
                            "mul": 21.73913043478261,
                            "bitwise": 58.69565217391305
                        },
                        "percentageDAGsCancel": 9.523809523809524
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((((a & (a ^ 0xffffffff)) + a & (c ^ 0xffffffff)) + ((a & (a ^ 0xffffffff)) + a & (c ^ 0xffffffff))) - ((a & (a ^ 0xffffffff)) + a ^ c) & (a ^ c) + (a & c) * 2) * ((((a & (a ^ 0xffffffff)) + a & (c ^ 0xffffffff)) + ((a & (a ^ 0xffffffff)) + a & (c ^ 0xffffffff))) - ((a & (a ^ 0xffffffff)) + a ^ c) | (a ^ c) + (a & c) * 2) + ((((a & (a ^ 0xffffffff)) + a & (c ^ 0xffffffff)) + ((a & (a ^ 0xffffffff)) + a & (c ^ 0xffffffff))) - ((a & (a ^ 0xffffffff)) + a ^ c) & ((a ^ c) + (a & c) * 2 ^ 0xffffffff)) * (((((a & (a ^ 0xffffffff)) + a & (c ^ 0xffffffff)) + ((a & (a ^ 0xffffffff)) + a & (c ^ 0xffffffff))) - ((a & (a ^ 0xffffffff)) + a ^ c) ^ 0xffffffff) & (a ^ c) + (a & c) * 2))",
                    "attributes": {
                        "numOps": 91,
                        "nestedExprLevel": 49,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 29.67032967032967,
                            "mul": 6.593406593406594,
                            "bitwise": 63.73626373626373
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((((a & ~c) + (a & ~c)) - (a ^ c) & (a ^ c) + (a & c) * 2) * (((a & ~c) + (a & ~c)) - (a ^ c) | (a ^ c) + (a & c) * 2) + (((a & ~c) + (a & ~c)) - (a ^ c) & ~((a ^ c) + (a & c) * 2)) * (~(((a & ~c) + (a & ~c)) - (a ^ c)) & (a ^ c) + (a & c) * 2))",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 21,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 39.56043956043956,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 10.909090909090908,
                            "bitwise": 61.81818181818181
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~((~(~c & a) * 2 + c ^ a & c ^ a + (c & a) * 2) * (~c ^ a + (c & a) * 2 & (~c & a) * 2 - c ^ a) + ((~c & a) * 2 - c ^ a | c ^ a + (c & a) * 2) * ((~c & a) * 2 - c ^ a & c ^ a + (c & a) * 2))",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 10,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 49.45054945054945,
                        "opsPercentages": {
                            "arithmetic": 19.565217391304348,
                            "mul": 21.73913043478261,
                            "bitwise": 58.69565217391305
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 61,
            "gt": {
                "expr": "(((((a&e)*e)|c)|(e+a)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 20.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((((((((~ a | e) - ~ a) & e) * (((~ a | e) - ~ a) | e) + (((~ a | e) - ~ a) & ~ e) * (~ ((~ a | e) - ~ a) & e)) + c) + 1) + ((- ((((~ a | e) - ~ a) & e) * (((~ a | e) - ~ a) | e) + (((~ a | e) - ~ a) & ~ e) * (~ ((~ a | e) - ~ a) & e)) - 1) | (- c - 1))) + ((e | a) + (e & a))) + 1) + ((- (((((((~ a | e) - ~ a) & e) * (((~ a | e) - ~ a) | e) + (((~ a | e) - ~ a) & ~ e) * (~ ((~ a | e) - ~ a) & e)) + c) + 1) + ((- ((((~ a | e) - ~ a) & e) * (((~ a | e) - ~ a) | e) + (((~ a | e) - ~ a) & ~ e) * (~ ((~ a | e) - ~ a) & e)) - 1) | (- c - 1))) - 1) | (- ((e | a) + (e & a)) - 1))",
                "attributes": {
                    "numOps": 130,
                    "nestedExprLevel": 58,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 33.07692307692307,
                        "mul": 6.153846153846154,
                        "bitwise": 60.76923076923077
                    },
                    "percentageDAGsCancel": 12.903225806451612
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(a + e) | ((~a & e) * (e & a & ~e) + (e & a) * e & c) - (c + (e & a) * e + (~a & e) * (e & a & ~e) + 1)) + a + e + c + (e & a) * e + (~a & e) * (e & a & ~e) + ~((~a & e) * (e & a & ~e) + (e & a) * e & c) + 2",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 11,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 60.76923076923077,
                        "opsPercentages": {
                            "arithmetic": 27.450980392156865,
                            "mul": 15.686274509803921,
                            "bitwise": 56.86274509803921
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_O1": {
                    "expr": "c + 2 + ((((-2 - ~(~e & a + 1 + (~a | e)) * (~a + 1 + (~a | e) & e) - (a + 1 + (~a | e) | e) * (a + 1 + (~a | e) & e) | ~c) - (a + 1 + (~a | e) | e) * (a + 1 + (~a | e) & e)) - (~e & a + 1 + (~a | e)) * (~a + 1 + (~a | e) & e)) - c | ~(a | e) - (a & e)) + ~(~e & a + 1 + (~a | e)) * (~a + 1 + (~a | e) & e) - (a + 1 + (~a | e) | e) * (a + 1 + (~a | e) & e) | ~c + (a + 1 + (~a | e) | e) * (a + 1 + (~a | e) & e) + (~e & a + 1 + (~a | e)) * (~a + 1 + (~a | e) & e) + (a & e) + (a | e)",
                    "attributes": {
                        "numOps": 123,
                        "nestedExprLevel": 24,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 5.384615384615385,
                        "opsPercentages": {
                            "arithmetic": 38.21138211382114,
                            "mul": 6.504065040650407,
                            "bitwise": 55.28455284552846
                        },
                        "percentageDAGsCancel": 10.81081081081081
                    }
                },
                "clang_O3": {
                    "expr": "e + a | c | (e & a) * e",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 96.15384615384616,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "clang_default": {
                    "expr": "((a ^ 0xffffffff | e) - (a ^ 0xffffffff) & e) * ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) | e) + ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) & (e ^ 0xffffffff)) * (((a ^ 0xffffffff | e) - (a ^ 0xffffffff) ^ 0xffffffff) & e) + c + (0xffffffff - (((a ^ 0xffffffff | e) - (a ^ 0xffffffff) & e) * ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) | e) + ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) & (e ^ 0xffffffff)) * (((a ^ 0xffffffff | e) - (a ^ 0xffffffff) ^ 0xffffffff) & e)) | 0xffffffff - c) + (e | a) + (e & a) + 2 + (0xffffffff - (((a ^ 0xffffffff | e) - (a ^ 0xffffffff) & e) * ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) | e) + ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) & (e ^ 0xffffffff)) * (((a ^ 0xffffffff | e) - (a ^ 0xffffffff) ^ 0xffffffff) & e) + c + 1 + (0xffffffff - (((a ^ 0xffffffff | e) - (a ^ 0xffffffff) & e) * ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) | e) + ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) & (e ^ 0xffffffff)) * (((a ^ 0xffffffff | e) - (a ^ 0xffffffff) ^ 0xffffffff) & e)) | 0xffffffff - c)) | 0xffffffff - ((e | a) + (e & a)))",
                    "attributes": {
                        "numOps": 123,
                        "nestedExprLevel": 46,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 5.384615384615385,
                        "opsPercentages": {
                            "arithmetic": 29.268292682926827,
                            "mul": 6.504065040650407,
                            "bitwise": 64.22764227642277
                        },
                        "percentageDAGsCancel": 13.793103448275861
                    }
                },
                "msvc_default": {
                    "expr": "((~a | e) - ~a & ~e) * (~((~a | e) - ~a) & e) + ((~a | e) - ~a & e) * ((~a | e) - ~a | e) + c + (0xffffffff - (((~a | e) - ~a & e) * ((~a | e) - ~a | e) + ((~a | e) - ~a & ~e) * (~((~a | e) - ~a) & e)) | 0xffffffff - c) + (e | a) + (e & a) + 2 + (0xffffffff - (((~a | e) - ~a & ~e) * (~((~a | e) - ~a) & e) + ((~a | e) - ~a & e) * ((~a | e) - ~a | e) + c + 1 + (0xffffffff - (((~a | e) - ~a & e) * ((~a | e) - ~a | e) + ((~a | e) - ~a & ~e) * (~((~a | e) - ~a) & e)) | 0xffffffff - c)) | 0xffffffff - ((e | a) + (e & a)))",
                    "attributes": {
                        "numOps": 123,
                        "nestedExprLevel": 30,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 5.384615384615385,
                        "opsPercentages": {
                            "arithmetic": 29.268292682926827,
                            "mul": 6.504065040650407,
                            "bitwise": 64.22764227642277
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "gcc_O3": {
                    "expr": "((e & a) * e + 1 + c - (e & a) * e & c) + e + a + ((e & a) * e & c - (e & a) * e + 1 + c | ~(e + a))",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 6,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 83.07692307692308,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 18.181818181818183,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 6.25
                    }
                }
            }
        },
        {
            "num": 62,
            "gt": {
                "expr": "(((c+(a^a))^((~((c*a)-e))+(-(c+a)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 11.11111111111111,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "(((((c ^ ~ ((a | a) - (a & a))) + ((c | ((a | a) - (a & a))) << 1)) + 1) - (((~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) + e) ^ (~ ((c ^ a) + ((c & a) + (c & a))) + 1)) + (((~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) + e) & (~ ((c ^ a) + ((c & a) + (c & a))) + 1)) + ((~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) + e) & (~ ((c ^ a) + ((c & a) + (c & a))) + 1))))) - (((((c ^ ~ ((a | a) - (a & a))) + ((c | ((a | a) - (a & a))) << 1)) + 1) | ~ (((~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) + e) ^ (~ ((c ^ a) + ((c & a) + (c & a))) + 1)) + (((~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) + e) & (~ ((c ^ a) + ((c & a) + (c & a))) + 1)) + ((~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) + e) & (~ ((c ^ a) + ((c & a) + (c & a))) + 1))))) + ((((c ^ ~ ((a | a) - (a & a))) + ((c | ((a | a) - (a & a))) << 1)) + 1) | ~ (((~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) + e) ^ (~ ((c ^ a) + ((c & a) + (c & a))) + 1)) + (((~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) + e) & (~ ((c ^ a) + ((c & a) + (c & a))) + 1)) + ((~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) + e) & (~ ((c ^ a) + ((c & a) + (c & a))) + 1))))))) - 2",
                "attributes": {
                    "numOps": 221,
                    "nestedExprLevel": 120,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 30.316742081447963,
                        "mul": 8.144796380090497,
                        "bitwise": 61.53846153846154
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((c * 2 + ~c) - ((-((c & a) * 2 + (c ^ a)) & ~((~c & a) * (~a & c) + (c & a) * (c | a)) + e) * 2 + (~((~c & a) * (~a & c) + (c & a) * (c | a)) + e ^ -((c & a) * 2 + (c ^ a))))) + (~((-((c & a) * 2 + (c ^ a)) & ~((~c & a) * (~a & c) + (c & a) * (c | a)) + e) * 2 + (~((~c & a) * (~a & c) + (c & a) * (c | a)) + e ^ -((c & a) * 2 + (c ^ a)))) | c * 2 + ~c + 1) * -2 + -1",
                    "attributes": {
                        "numOps": 87,
                        "nestedExprLevel": 29,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 60.633484162895925,
                        "opsPercentages": {
                            "arithmetic": 29.88505747126437,
                            "mul": 19.54022988505747,
                            "bitwise": 50.57471264367817
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "msvc_O1": {
                    "expr": "(~c - 1) + (((c - (~((a & c) * -2 - (a ^ c) ^ e + ~((~a & c) * (~c & a) + (a | c) * (a & c)) + (a & c) * -2 - (a ^ c) & e + ~((~a & c) * (~c & a) + (a | c) * (a & c)) * 2) | c * 2 + 1 + ~c)) - (a & c) * -2 - (a ^ c) & e + ~((~a & c) * (~c & a) + (a | c) * (a & c))) * 2 - (a & c) * -2 - (a ^ c) ^ e + ~((~a & c) * (~c & a) + (a | c) * (a & c)))",
                    "attributes": {
                        "numOps": 83,
                        "nestedExprLevel": 22,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 62.44343891402715,
                        "opsPercentages": {
                            "arithmetic": 28.915662650602407,
                            "mul": 18.072289156626507,
                            "bitwise": 53.01204819277109
                        },
                        "percentageDAGsCancel": 2.7777777777777777
                    }
                },
                "clang_O3": {
                    "expr": "(c - (~((~c & a) * (~a & c) + (c | a) * (c & a)) + e ^ -((a ^ c) + (c & a) * 2)) + (-((a ^ c) + (c & a) * 2) & ~((~c & a) * (~a & c) + (c | a) * (c & a)) + e) * 2) + (~(~((~c & a) * (~a & c) + (c | a) * (c & a)) + e ^ -((a ^ c) + (c & a) * 2)) + (-((a ^ c) + (c & a) * 2) & ~((~c & a) * (~a & c) + (c | a) * (c & a)) + e) * 2 | c) * -2 + -2",
                    "attributes": {
                        "numOps": 80,
                        "nestedExprLevel": 27,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 63.80090497737556,
                        "opsPercentages": {
                            "arithmetic": 28.749999999999996,
                            "mul": 18.75,
                            "bitwise": 52.5
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "clang_default": {
                    "expr": "((((c ^ 0xffffffff) + c * 2) - ((((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) + e ^ ((c ^ a) + (c & a) + (c & a) ^ 0xffffffff) + 1) + (((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) + e & ((c ^ a) + (c & a) + (c & a) ^ 0xffffffff) + 1) + (((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) + e & ((c ^ a) + (c & a) + (c & a) ^ 0xffffffff) + 1))) - (((c ^ 0xffffffff) + c * 2 + 1 | (((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) + e ^ ((c ^ a) + (c & a) + (c & a) ^ 0xffffffff) + 1) + (((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) + e & ((c ^ a) + (c & a) + (c & a) ^ 0xffffffff) + 1) + (((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) + e & ((c ^ a) + (c & a) + (c & a) ^ 0xffffffff) + 1) ^ 0xffffffff) + ((c ^ 0xffffffff) + c * 2 + 1 | (((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) + e ^ ((c ^ a) + (c & a) + (c & a) ^ 0xffffffff) + 1) + (((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) + e & ((c ^ a) + (c & a) + (c & a) ^ 0xffffffff) + 1) + (((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) + e & ((c ^ a) + (c & a) + (c & a) ^ 0xffffffff) + 1) ^ 0xffffffff))) + -1",
                    "attributes": {
                        "numOps": 197,
                        "nestedExprLevel": 72,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 10.85972850678733,
                        "opsPercentages": {
                            "arithmetic": 30.96446700507614,
                            "mul": 10.65989847715736,
                            "bitwise": 58.37563451776649
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((((c ^ 0xffffffff) + c * 2) - ((~((c & a) * (c | a) + (~a & c) * (~c & a)) + e ^ ~((c ^ a) + (c & a) + (c & a)) + 1) + (~((c & a) * (c | a) + (~a & c) * (~c & a) ) + e & ~((c ^ a) + (c & a) + (c & a)) + 1) + (~((c & a) * (c | a) + (~a & c) * (~c & a) ) + e & ~((c ^ a) + (c & a) + (c & a)) + 1))) - (((c ^ 0xffffffff) + 1 + c * 2 | ~((~((c & a) * (c | a) + (~a & c) * (~c & a)) + e ^ ~((c ^ a) + (c & a) + (c & a)) + 1) + (~((c & a) * (c | a) + (~a & c) * (~c & a)) + e & ~((c ^ a) + (c & a) + (c & a)) + 1) + (~((c & a) * (c | a) + (~a & c) * (~c & a)) + e & ~((c ^ a) + (c & a) + (c & a)) + 1))) + ((c ^ 0xffffffff) + 1 + c * 2 | ~((~((c & a) * (c | a) + (~a & c) * (~c & a)) + e ^ ~((c ^ a) + (c & a) + (c & a)) + 1) + (~((c & a) * (c | a) + (~a & c) * (~c & a)) + e & ~((c ^ a) + (c & a) + (c & a)) + 1) + (~((c & a) * (c | a) + (~a & c) * (~c & a)) + e & ~((c ^ a) + (c & a) + (c & a)) + 1))))) + -1",
                    "attributes": {
                        "numOps": 197,
                        "nestedExprLevel": 65,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 10.85972850678733,
                        "opsPercentages": {
                            "arithmetic": 30.96446700507614,
                            "mul": 10.65989847715736,
                            "bitwise": 58.37563451776649
                        },
                        "percentageDAGsCancel": 3.125
                    }
                },
                "gcc_O3": {
                    "expr": "(c - (~((~a & c) * (~c & a) + (c | a) * (c & a)) + e ^ -((a ^ c) + (c & a) * 2)) + (~((~a & c) * (~c & a) + (c | a) * (c & a)) + e & -((a ^ c) + (c & a) * 2)) * 2) + (~(~((~a & c) * (~c & a) + (c | a) * (c & a)) + e ^ -((a ^ c) + (c & a) * 2)) + (~((~a & c) * (~c & a) + (c | a) * (c & a)) + e & -((a ^ c) + (c & a) * 2)) * 2 | c) * -2 + -2",
                    "attributes": {
                        "numOps": 80,
                        "nestedExprLevel": 27,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 63.80090497737556,
                        "opsPercentages": {
                            "arithmetic": 28.749999999999996,
                            "mul": 18.75,
                            "bitwise": 52.5
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                }
            }
        },
        {
            "num": 63,
            "gt": {
                "expr": "((b&(~(~((d+d)-(d|(b|b)))))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 28.57142857142857,
                        "mul": 0.0,
                        "bitwise": 71.42857142857143
                    },
                    "percentageDAGsCancel": 28.57142857142857
                }
            },
            "mba": {
                "expr": "b - (b & ((((d & ~ (((b + b) + 1) + ((- b - 1) | (- b - 1)))) + (((b + b) + 1) + ((- b - 1) | (- b - 1)))) - ((d - ~ d) - 1)) - 1))",
                "attributes": {
                    "numOps": 26,
                    "nestedExprLevel": 16,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 76.92307692307693,
                        "mul": 0.0,
                        "bitwise": 23.076923076923077
                    },
                    "percentageDAGsCancel": 18.75
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(d - ~d) + ~(~b + b * 2 + 1 + (-b - 1 & d)) & b",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 7.6923076923076925,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "msvc_O1": {
                    "expr": "b - (~d + ((~b & d) - d) + b & b)",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 69.23076923076923,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_O3": {
                    "expr": "d * 2 - ((~b & d) + b) & b",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 76.92307692307693,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 16.666666666666664,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "b - (b & ((d & (b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) ^ 0xffffffff)) + b * 2 + (0xffffffff - b | 0xffffffff - b) ) - ((d - (d ^ 0xffffffff)) + -1))",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 9,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 19.230769230769234,
                        "opsPercentages": {
                            "arithmetic": 61.904761904761905,
                            "mul": 9.523809523809524,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_default": {
                    "expr": "b - (((~(b * 2 + 1 + (0xffffffff - b | 0xffffffff - b)) & d ) + b * 2 + (0xffffffff - b | 0xffffffff - b)) - ((d - ~d) + -1) & b)",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 8,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 19.230769230769234,
                        "opsPercentages": {
                            "arithmetic": 61.904761904761905,
                            "mul": 9.523809523809524,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~((b - b * 2 + 1 & d) + ~b + b * 2 + 1) + 1 + d * 2 & b",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 3,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 46.15384615384615,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 21.428571428571427,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                }
            }
        },
        {
            "num": 64,
            "gt": {
                "expr": "((-(~((e*e)-(c+(c&e))))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 16.666666666666664,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((e & e) * (e | e) + (e & ~ e) * (~ e & e)) + ~ ((c ^ ((~ c | e) - ~ c)) + ((c & ((~ c | e) - ~ c)) << 1))) + 1) + 1",
                "attributes": {
                    "numOps": 25,
                    "nestedExprLevel": 13,
                    "numDAGs": 19,
                    "opsPercentages": {
                        "arithmetic": 28.000000000000004,
                        "mul": 8.0,
                        "bitwise": 64.0
                    },
                    "percentageDAGsCancel": 26.31578947368421
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((e & c) * 2 + (~e & c)) + e * e + 2",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 64.0,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 22.22222222222222,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "e * e + 2 + ~(((~c | e) + c * 2 + 2 & c * 2) + ((~c | e) + c + 1 ^ c))",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 32.0,
                        "opsPercentages": {
                            "arithmetic": 41.17647058823529,
                            "mul": 17.647058823529413,
                            "bitwise": 41.17647058823529
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_O3": {
                    "expr": "((e * e + (e & c) * -2) - (c ^ e & c)) + 1",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 64.0,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 22.22222222222222,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + ((c ^ (c ^ 0xffffffff | e) - (c ^ 0xffffffff)) + (c & (c ^ 0xffffffff | e) - (c ^ 0xffffffff)) * 2 ^ 0xffffffff) + 2",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 8,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 12.0,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 13.636363636363635,
                            "bitwise": 59.09090909090909
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "msvc_default": {
                    "expr": "e * e + 2 + ~(((~c | e) - ~c ^ c) + ((~c | e) - ~c & c) * 2)",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 36.0,
                        "opsPercentages": {
                            "arithmetic": 31.25,
                            "mul": 12.5,
                            "bitwise": 56.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~((~e & c) + (c & e) * 2) + 2 + e * e",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 64.0,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 22.22222222222222,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 65,
            "gt": {
                "expr": "((((c|(a^a))^(b*c))+(((a|b)+b)+(~(-c)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 10.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "((((((((c + ((a | a) - (a & a))) + 1) + ((- c - 1) | (- ((a | a) - (a & a)) - 1))) - ((b & c) * (b | c) + (b & ~ c) * (~ b & c))) - (((((c + ((a | a) - (a & a))) + 1) + ((- c - 1) | (- ((a | a) - (a & a)) - 1))) | ~ ((b & c) * (b | c) + (b & ~ c) * (~ b & c))) << 1)) - 2) ^ ~ (((((((a & ~ b) + b) - ~ b) - 1) | (c - 1)) + (((((a & ~ b) + b) - ~ b) - 1) | (c - 1))) - (((((a & ~ b) + b) - ~ b) - 1) ^ (c - 1)))) + ((((((((c + ((a | a) - (a & a))) + 1) + ((- c - 1) | (- ((a | a) - (a & a)) - 1))) - ((b & c) * (b | c) + (b & ~ c) * (~ b & c))) - (((((c + ((a | a) - (a & a))) + 1) + ((- c - 1) | (- ((a | a) - (a & a)) - 1))) | ~ ((b & c) * (b | c) + (b & ~ c) * (~ b & c))) << 1)) - 2) | (((((((a & ~ b) + b) - ~ b) - 1) | (c - 1)) + (((((a & ~ b) + b) - ~ b) - 1) | (c - 1))) - (((((a & ~ b) + b) - ~ b) - 1) ^ (c - 1)))) << 1)) + 1",
                "attributes": {
                    "numOps": 162,
                    "nestedExprLevel": 97,
                    "numDAGs": 41,
                    "opsPercentages": {
                        "arithmetic": 46.913580246913575,
                        "mul": 4.938271604938271,
                        "bitwise": 48.148148148148145
                    },
                    "percentageDAGsCancel": 14.634146341463413
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((c - 1 | (((~b & a) + b) - ~b) - 1) * 2 - ((((~b & a) + b) - ~b) - 1 ^ c - 1) | ((c - ((b & c) * (b | c) + (~b & c) * (~c & b) )) + (~((~b & c) * (~c & b) + (b & c) * (b | c)) | c) * -2) - 2) * 2 + (((c - ((b & c) * (b | c) + (~b & c) * (~c & b))) + (~((~b & c) * (~c & b) + (b & c) * (b | c)) | c) * -2) - 2 ^ (c - 1 ^ (((~b & a) + b) - ~b) - 1) + ~((c - 1 | (((~b & a) + b) - ~b) - 1) * 2)) + 1",
                    "attributes": {
                        "numOps": 92,
                        "nestedExprLevel": 35,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 43.20987654320987,
                        "opsPercentages": {
                            "arithmetic": 34.78260869565217,
                            "mul": 14.130434782608695,
                            "bitwise": 51.08695652173913
                        },
                        "percentageDAGsCancel": 2.941176470588235
                    }
                },
                "msvc_O1": {
                    "expr": "(((c - (~((~c & b) * (~b & c) + (b | c) * (b & c)) * 2 | c * 2)) - (~c & b) * (~b & c)) - (b | c) * (b & c) - 2 ^ ~(((~b & a) + b * 2 | c - 1) * 2 - (~b & a) + b * 2 ^ c - 1)) + ((((~b & a) + b * 2 * 2 | c * 2 - 2) - (~b & a) + b * 2 ^ c - 1) * 2 | ((c - (~((~c & b) * (~b & c) + (b | c) * (b & c)) * 2 | c * 2)) - (~c & b) * (~b & c)) - (b | c) * (b & c) * 2 - 4) + 1",
                    "attributes": {
                        "numOps": 86,
                        "nestedExprLevel": 25,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 46.913580246913575,
                        "opsPercentages": {
                            "arithmetic": 25.581395348837212,
                            "mul": 24.418604651162788,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_O3": {
                    "expr": "(((~b & a) + b * 2 | c - 1) * 2 - (c - 1 ^ (~b & a) + b * 2) | ((c - (~b & c) * (~c & b) + (c | b) * (c & b)) + (~(~b & c) * (~c & b) + (c | b) * (c & b) | c) * -2) - 2) * 2 - (((c - (~b & c) * (~c & b) + (c | b) * (c & b)) + (~(~b & c) * (~c & b) + (c | b) * (c & b) | c) * -2) - 2 ^ ((~b & a) + b * 2 | c - 1) * 2 - (c - 1 ^ (~b & a) + b * 2))",
                    "attributes": {
                        "numOps": 82,
                        "nestedExprLevel": 22,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 49.382716049382715,
                        "opsPercentages": {
                            "arithmetic": 28.04878048780488,
                            "mul": 20.73170731707317,
                            "bitwise": 51.21951219512195
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_default": {
                    "expr": "(((c - ((b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c))) + (c | (b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c) ^ 0xffffffff ) * -2) - 2 ^ (((((a & (b ^ 0xffffffff)) + b) - (b ^ 0xffffffff)) - 1 | c - 1) + ((((a & (b ^ 0xffffffff)) + b) - (b ^ 0xffffffff)) - 1 | c - 1)) - ((((a & (b ^ 0xffffffff)) + b) - (b ^ 0xffffffff)) - 1 ^ c - 1) ^ 0xffffffff) + (((c - ((b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c))) + (c | (b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c) ^ 0xffffffff ) * -2) - 2 | (((((a & (b ^ 0xffffffff)) + b) - (b ^ 0xffffffff)) - 1 | c - 1) + ((((a & (b ^ 0xffffffff)) + b) - (b ^ 0xffffffff)) - 1 | c - 1)) - ((((a & (b ^ 0xffffffff)) + b) - (b ^ 0xffffffff)) - 1 ^ c - 1)) * 2 + 1",
                    "attributes": {
                        "numOps": 108,
                        "nestedExprLevel": 55,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 33.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 38.88888888888889,
                            "mul": 10.185185185185185,
                            "bitwise": 50.92592592592593
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((c - ((b & c) * (b | c) + (~c & b) * (~b & c)) ) + (c | ~((b & c) * (b | c) + (~c & b) * (~b & c))) * -2) - 2 ^ ~((((((~b & a) + b) - ~b) - 1 | c - 1) + ((((~b & a) + b) - ~b) - 1 | c - 1)) - ((((~b & a) + b) - ~b) - 1 ^ c - 1))) + 1 + (((c - ((b & c) * (b | c) + (~c & b) * (~b & c)) ) + (c | ~((b & c) * (b | c) + (~c & b) * (~b & c))) * -2) - 2 | (((((~b & a) + b) - ~b) - 1 | c - 1) + ((((~b & a) + b) - ~b) - 1 | c - 1)) - ((((~b & a) + b) - ~b) - 1 ^ c - 1)) * 2",
                    "attributes": {
                        "numOps": 108,
                        "nestedExprLevel": 43,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 33.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 38.88888888888889,
                            "mul": 10.185185185185185,
                            "bitwise": 50.92592592592593
                        },
                        "percentageDAGsCancel": 6.451612903225806
                    }
                },
                "gcc_O3": {
                    "expr": "(~((((a & ~b) + b) - ~b) - 1 | c - 1) * 2 + (((a & ~b) + b) - ~b) - 1 ^ c - 1 ^ ((c - (~c & b) * (~b & c) + (b & c) * (b | c)) + (~(~c & b) * (~b & c) + (b & c) * (b | c) | c) * -2) - 2) + 1 + (((((a & ~b) + b) - ~b) - 1 | c - 1) * 2 - (((a & ~b) + b) - ~b) - 1 ^ c - 1 | ((c - (~c & b) * (~b & c) + (b & c) * (b | c)) + (~(~c & b) * (~b & c) + (b & c) * (b | c) | c) * -2) - 2) * 2",
                    "attributes": {
                        "numOps": 92,
                        "nestedExprLevel": 27,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 43.20987654320987,
                        "opsPercentages": {
                            "arithmetic": 34.78260869565217,
                            "mul": 14.130434782608695,
                            "bitwise": 51.08695652173913
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 66,
            "gt": {
                "expr": "(((~((((c|b)+c)*(-(-b)))^c))&(b|c)))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 11.11111111111111,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "((~ (((((((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) & ~ ((~ b + 1) - 1)) * ((((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) | ~ ((~ b + 1) - 1)) + ((((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) & ~ (~ ((~ b + 1) - 1))) * (~ (((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) & ~ ((~ b + 1) - 1))) & c) + ~ ((((((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) & ~ ((~ b + 1) - 1)) * ((((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) | ~ ((~ b + 1) - 1)) + ((((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) & ~ (~ ((~ b + 1) - 1))) * (~ (((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) & ~ ((~ b + 1) - 1))) | c)) | ((b & ~ c) + c)) + (((((((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) & ~ ((~ b + 1) - 1)) * ((((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) | ~ ((~ b + 1) - 1)) + ((((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) & ~ (~ ((~ b + 1) - 1))) * (~ (((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) & ~ ((~ b + 1) - 1))) & c) + ~ ((((((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) & ~ ((~ b + 1) - 1)) * ((((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) | ~ ((~ b + 1) - 1)) + ((((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) & ~ (~ ((~ b + 1) - 1))) * (~ (((((c + b) + 1) + ((- c - 1) | (- b - 1))) | c) + ((((c + b) + 1) + ((- c - 1) | (- b - 1))) & c)) & ~ ((~ b + 1) - 1))) | c))) + 1",
                "attributes": {
                    "numOps": 419,
                    "nestedExprLevel": 227,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 67.06443914081146,
                        "mul": 1.9093078758949882,
                        "bitwise": 31.026252983293556
                    },
                    "percentageDAGsCancel": 5.714285714285714
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((~(b + c * 2 + 1 + ~(c & b)) & b) * (b + c * 2 + 1 + ~(c & b) & ~b) + (b + c * 2 + 1 + ~(c & b) & b) * (b + c * 2 + 1 + ~(c & b) | b) | c) + ((~(b + c * 2 + 1 + ~(c & b)) & b) * (b + c * 2 + 1 + ~(c & b) & ~b) + (b + c * 2 + 1 + ~(c & b) & b) * (b + c * 2 + 1 + ~(c & b) | b) & c) + ((~(b + c * 2 + 1 + ~(c & b)) & b) * (b + c * 2 + 1 + ~(c & b) & ~b) + (b + c * 2 + 1 + ~(c & b) & b) * (b + c * 2 + 1 + ~(c & b) | b) ^ c | c + (~c & b)) + 1",
                    "attributes": {
                        "numOps": 110,
                        "nestedExprLevel": 20,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 73.74701670644392,
                        "opsPercentages": {
                            "arithmetic": 39.09090909090909,
                            "mul": 16.363636363636363,
                            "bitwise": 44.54545454545455
                        },
                        "percentageDAGsCancel": 11.538461538461538
                    }
                },
                "msvc_O1": {
                    "expr": "~((~((b - (b & c)) + c | c) + ((b - (b & c)) + c & c) & b) * (~b & ((b - (b & c)) + c | c) + ((b - (b & c)) + c & c)) + (((b - (b & c)) + c | c) + ((b - (b & c)) + c & c) | b) * (((b - (b & c)) + c | c) + ((b - (b & c)) + c & c) & b) | c) + 1 + ((~c & b) + c | ~((~((b - (b & c)) + c | c) + ((b - (b & c)) + c & c) & b) * (~b & ((b - (b & c)) + c | c) + ((b - (b & c)) + c & c)) + (((b - (b & c)) + c | c) + ((b - (b & c)) + c & c) | b) * (((b - (b & c)) + c | c) + ((b - (b & c)) + c & c) & b) & c + ~((~((b - (b & c)) + c | c) + ((b - (b & c)) + c & c) & b) * (~b & ((b - (b & c)) + c | c) + ((b - (b & c)) + c & c)) + (((b - (b & c)) + c | c) + ((b - (b & c)) + c & c) | b) * (((b - (b & c)) + c | c) + ((b - (b & c)) + c & c) & b) | c))) + (~((b - (b & c)) + c | c) + ((b - (b & c)) + c & c) & b) * (~b & ((b - (b & c)) + c | c) + ((b - (b & c)) + c & c)) + (((b - (b & c)) + c | c) + ((b - (b & c)) + c & c) | b) * (((b - (b & c)) + c | c) + ((b - (b & c)) + c & c) & b) & c",
                    "attributes": {
                        "numOps": 195,
                        "nestedExprLevel": 86,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 53.46062052505967,
                        "opsPercentages": {
                            "arithmetic": 45.64102564102564,
                            "mul": 4.102564102564102,
                            "bitwise": 50.256410256410255
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_O3": {
                    "expr": "~((~(c | b) + c & b) * (~b & (c | b) + c) + ((c | b) + c | b) * ((c | b) + c & b) ^ c) & (~c & b) + c",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 7,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 94.5107398568019,
                        "opsPercentages": {
                            "arithmetic": 26.08695652173913,
                            "mul": 8.695652173913043,
                            "bitwise": 65.21739130434783
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "clang_default": {
                    "expr": "((((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & b) * ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) | b) + ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & (b ^ 0xffffffff)) * (((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) ^ 0xffffffff) & b) & c) + ((((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & b) * ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) | b ) + ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & (b ^ 0xffffffff)) * (((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) ^ 0xffffffff) & b) | c) ^ 0xffffffff) ^ 0xffffffff | (b & (c ^ 0xffffffff)) + c) + (((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & b) * ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) | b) + ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & (b ^ 0xffffffff)) * (((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) ^ 0xffffffff) & b) & c) + ((((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & b) * ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) | b) + ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & (b ^ 0xffffffff)) * (((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) ^ 0xffffffff) & b) | c) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 291,
                        "nestedExprLevel": 66,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 30.54892601431981,
                        "opsPercentages": {
                            "arithmetic": 63.57388316151202,
                            "mul": 2.7491408934707904,
                            "bitwise": 33.67697594501718
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "msvc_default": {
                    "expr": "(~((((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & b) * ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) | b) + ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & ~b) * (~((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) ) & b) & c) + ~(((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & b) * ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) | b) + ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & ~b) * (~((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) ) & b) | c)) | (~c & b) + c) + 1 + (((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & b) * ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) | b) + ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & ~b) * (~((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c)) & b) & c) + ~(((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & b) * ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) | b) + ((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c) & ~b) * (~((c + b + 1 + (0xffffffff - c | 0xffffffff - b) | c) + (c + b + 1 + (0xffffffff - c | 0xffffffff - b) & c)) & b) | c)",
                    "attributes": {
                        "numOps": 291,
                        "nestedExprLevel": 61,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 30.54892601431981,
                        "opsPercentages": {
                            "arithmetic": 63.57388316151202,
                            "mul": 2.7491408934707904,
                            "bitwise": 33.67697594501718
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "gcc_O3": {
                    "expr": "((~b & (b + c * 2) - (c & b)) * (~(b + c * 2) - (c & b) & b) + ((b + c * 2) - (c & b) | b) * ((b + c * 2) - (c & b) & b) & c) + (((~c & b) + c | (~b & (b + c * 2) - (c & b)) * (~(b + c * 2) - (c & b) & b) + ((b + c * 2) - (c & b) | b) * ((b + c * 2) - (c & b) & b) ^ c) - ((~b & (b + c * 2) - (c & b)) * (~(b + c * 2) - (c & b) & b) + ((b + c * 2) - (c & b) | b) * ((b + c * 2) - (c & b) & b) | c))",
                    "attributes": {
                        "numOps": 84,
                        "nestedExprLevel": 29,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 79.95226730310262,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 21.428571428571427,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 67,
            "gt": {
                "expr": "((((~e)+(-(a|a)))+(-(((d^d)-e)*(e*d)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 20.0,
                        "bitwise": 30.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((((- e - 1) | (~ (((a + a) + 1) + ((- a - 1) | (- a - 1))) + 1)) + ((- e - 1) | (~ (((a + a) + 1) + ((- a - 1) | (- a - 1))) + 1))) - ((- e - 1) ^ (~ (((a + a) + 1) + ((- a - 1) | (- a - 1))) + 1))) - ~ (~ ((((((((d - d) - ((d | ~ d) << 1)) - 2) + ~ e) + 1) & ((e & d) * (e | d) + (e & ~ d) * (~ e & d))) * ((((((d - d) - ((d | ~ d) << 1)) - 2) + ~ e) + 1) | ((e & d) * (e | d) + (e & ~ d) * (~ e & d))) + ((((((d - d) - ((d | ~ d) << 1)) - 2) + ~ e) + 1) & ~ ((e & d) * (e | d) + (e & ~ d) * (~ e & d))) * (~ (((((d - d) - ((d | ~ d) << 1)) - 2) + ~ e) + 1) & ((e & d) * (e | d) + (e & ~ d) * (~ e & d)))) - 1))) - 1",
                "attributes": {
                    "numOps": 127,
                    "nestedExprLevel": 61,
                    "numDAGs": 44,
                    "opsPercentages": {
                        "arithmetic": 47.24409448818898,
                        "mul": 7.874015748031496,
                        "bitwise": 44.881889763779526
                    },
                    "percentageDAGsCancel": 11.363636363636363
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((-a | ~e) * 2 - (a * 2 + ~a ^ e)) - (((~e & d) * (~d & e) + (e & d) * (e | d) & e - 1) * (-e & ~((~e & d) * (~d & e) + (e & d) * (e | d)) ) + (-e & (~e & d) * (~d & e) + (e & d) * (e | d)) * ((~e & d) * (~d & e) + (e & d) * (e | d) | -e) + -1)) + -1",
                    "attributes": {
                        "numOps": 62,
                        "nestedExprLevel": 18,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 51.181102362204726,
                        "opsPercentages": {
                            "arithmetic": 27.419354838709676,
                            "mul": 19.35483870967742,
                            "bitwise": 53.2258064516129
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((-a | ~e) * 2 - (~(~d & e) * (~e & d) + (d | e) * (d & e) & ~e + 1) * (~~e + 1 & (~d & e) * (~e & d) + (d | e) * (d & e))) - (~e + 1 | (~d & e) * (~e & d) + (d | e) * (d & e)) * (~e + 1 & (~d & e) * (~e & d) + (d | e) * (d & e))) - (-a ^ ~e)",
                    "attributes": {
                        "numOps": 62,
                        "nestedExprLevel": 16,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 51.181102362204726,
                        "opsPercentages": {
                            "arithmetic": 20.967741935483872,
                            "mul": 17.741935483870968,
                            "bitwise": 61.29032258064516
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_O3": {
                    "expr": "(~e | -a) * 2 - ((e - 1 & (~e & d) * (~d & e) + (e | d) * (e & d)) * (~(~e & d) * (~d & e) + (e | d) * (e & d) & -e) + (-a ^ ~e) + ((~e & d) * (~d & e) + (e | d) * (e & d) | -e) * ((~e & d) * (~d & e) + (e | d) * (e & d) & -e))",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 14,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 55.118110236220474,
                        "opsPercentages": {
                            "arithmetic": 22.807017543859647,
                            "mul": 19.298245614035086,
                            "bitwise": 57.89473684210527
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "clang_default": {
                    "expr": "((((0xffffffff - e | (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) ^ 0xffffffff) + 1) + (0xffffffff - e | (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) ^ 0xffffffff) + 1)) - (0xffffffff - e ^ (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) ^ 0xffffffff) + 1)) - ((((d | d ^ 0xffffffff) * -2 + (e ^ 0xffffffff)) - 1 & (e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d)) * (((d | d ^ 0xffffffff) * -2 + (e ^ 0xffffffff)) - 1 | (e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d)) + (((d | d ^ 0xffffffff) * -2 + (e ^ 0xffffffff)) - 1 & ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) ^ 0xffffffff)) * ((((d | d ^ 0xffffffff) * -2 + (e ^ 0xffffffff)) - 1 ^ 0xffffffff) & (e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d)) + -1)) + -1",
                    "attributes": {
                        "numOps": 110,
                        "nestedExprLevel": 38,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 13.385826771653544,
                        "opsPercentages": {
                            "arithmetic": 38.18181818181819,
                            "mul": 15.454545454545453,
                            "bitwise": 46.36363636363636
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((((0xffffffff - e | ~(a * 2 + 1 + (0xffffffff - a | 0xffffffff - a)) + 1) + (0xffffffff - e | ~(a * 2 + 1 + (0xffffffff - a | 0xffffffff - a)) + 1)) - (0xffffffff - e ^ ~(a * 2 + 1 + (0xffffffff - a | 0xffffffff - a)) + 1)) - ((~e + 1 & (e & d) * (e | d) + (~d & e) * (~e & d)) * (~e + 1 | (e & d) * (e | d) + (~d & e) * (~e & d)) + -1 + (~e + 1 & ~((e & d) * (e | d) + (~d & e) * (~e & d))) * (~(~e + 1) & (e & d) * (e | d) + (~d & e) * (~e & d)))) + -1",
                    "attributes": {
                        "numOps": 90,
                        "nestedExprLevel": 25,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 29.133858267716533,
                        "opsPercentages": {
                            "arithmetic": 37.77777777777778,
                            "mul": 14.444444444444443,
                            "bitwise": 47.77777777777778
                        },
                        "percentageDAGsCancel": 2.857142857142857
                    }
                },
                "gcc_O3": {
                    "expr": "(((-a | ~e) * 2 - (a - 1 ^ e)) - (e - 1 & (~d & e) * (~e & d) + (d | e) * (e & d)) * (~(~d & e) * (~e & d) + (d | e) * (e & d) & -e)) - (-e & (~d & e) * (~e & d) + (d | e) * (e & d)) * (-e | (~d & e) * (~e & d) + (d | e) * (e & d))",
                    "attributes": {
                        "numOps": 56,
                        "nestedExprLevel": 16,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 55.90551181102362,
                        "opsPercentages": {
                            "arithmetic": 23.214285714285715,
                            "mul": 19.642857142857142,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                }
            }
        },
        {
            "num": 68,
            "gt": {
                "expr": "((~(-((-(~a))&(d|(d|d))))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 28.57142857142857,
                        "mul": 0.0,
                        "bitwise": 71.42857142857143
                    },
                    "percentageDAGsCancel": 28.57142857142857
                }
            },
            "mba": {
                "expr": "(((~ (a + 1) | (((d + ((d & ~ d) + d)) + 1) + ((- d - 1) | (- ((d & ~ d) + d) - 1)))) + (a + 1)) + 1) - 1",
                "attributes": {
                    "numOps": 21,
                    "nestedExprLevel": 12,
                    "numDAGs": 17,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 0.0,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 17.647058823529413
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "a + 1 + (-a - 2 | ~d + d * 2 + 1)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 2,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 57.14285714285714,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 11.11111111111111,
                            "bitwise": 22.22222222222222
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "(~(a + 1) | d) + 1 + a",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 76.19047619047619,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(-a - 2 | d) + a + 1",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 76.19047619047619,
                        "opsPercentages": {
                            "arithmetic": 80.0,
                            "mul": 0.0,
                            "bitwise": 20.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "clang_default": {
                    "expr": "(a + 1 ^ 0xffffffff | (d & (d ^ 0xffffffff)) + d * 2 + 1 + (0xffffffff - d | 0xffffffff - ((d & (d ^ 0xffffffff)) + d))) + a + 1",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 7,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 19.047619047619047,
                        "opsPercentages": {
                            "arithmetic": 52.94117647058824,
                            "mul": 5.88235294117647,
                            "bitwise": 41.17647058823529
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "msvc_default": {
                    "expr": "(~(a + 1) | d * 2 + 1 + (0xffffffff - d | 0xffffffff - d)) + 1 + a",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 47.61904761904761,
                        "opsPercentages": {
                            "arithmetic": 63.63636363636363,
                            "mul": 9.090909090909092,
                            "bitwise": 27.27272727272727
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "a + 1 + (-a - 2 | d)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 76.19047619047619,
                        "opsPercentages": {
                            "arithmetic": 80.0,
                            "mul": 0.0,
                            "bitwise": 20.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 69,
            "gt": {
                "expr": "((-((-c)-(b|b))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 0.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "~ (((~ c + 1) & ~ (((b + b) + 1) + ((- b - 1) | (- b - 1)))) - (~ (~ c + 1) & (((b + b) + 1) + ((- b - 1) | (- b - 1))))) + 1",
                "attributes": {
                    "numOps": 27,
                    "nestedExprLevel": 12,
                    "numDAGs": 15,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 0.0,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 6.666666666666667
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~b + b * 2 + 1 & c - 1) + ~(-b - 1 & -c) + 1",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 2,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 51.85185185185185,
                        "opsPercentages": {
                            "arithmetic": 61.53846153846154,
                            "mul": 7.6923076923076925,
                            "bitwise": 30.76923076923077
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_O1": {
                    "expr": "(~-c & b) - (~b & -c)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 74.07407407407408,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 0.0,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "b + c",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 96.29629629629629,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c ^ 0xffffffff) + 1 & (b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) ^ 0xffffffff)) - (((c ^ 0xffffffff) + 1 ^ 0xffffffff) & b * 2 + 1 + (0xffffffff - b | 0xffffffff - b)) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 7,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 14.814814814814813,
                        "opsPercentages": {
                            "arithmetic": 52.17391304347826,
                            "mul": 8.695652173913043,
                            "bitwise": 39.130434782608695
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~((~c + 1 & ~(b * 2 + 1 + (0xffffffff - b | 0xffffffff - b))) - (~(~c + 1) & b * 2 + 1 + (0xffffffff - b | 0xffffffff - b))) + 1",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 14.814814814814813,
                        "opsPercentages": {
                            "arithmetic": 52.17391304347826,
                            "mul": 8.695652173913043,
                            "bitwise": 39.130434782608695
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(b * 2 + 1 + ~b & c - 1) - (-c & b - b * 2 + 1)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 2,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 55.55555555555556,
                        "opsPercentages": {
                            "arithmetic": 58.333333333333336,
                            "mul": 16.666666666666664,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 70,
            "gt": {
                "expr": "((((b^(-b))-b)+(((-d)+d)&(d|(b*b)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 11.11111111111111,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "(((((((b - (~ b + 1)) - ((b | ~ (~ b + 1)) << 1)) - 2) & ~ b) << 1) - ((((b - (~ b + 1)) - ((b | ~ (~ b + 1)) << 1)) - 2) ^ b)) - ~ ((~ ((~ (d - 1) | d) + (~ (d - 1) & d)) | (((d + ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + 1) + ((- d - 1) | (- ((b & b) * (b | b) + (b & ~ b) * (~ b & b)) - 1)))) - ~ ((~ (d - 1) | d) + (~ (d - 1) & d)))) - 1",
                "attributes": {
                    "numOps": 72,
                    "nestedExprLevel": 36,
                    "numDAGs": 38,
                    "opsPercentages": {
                        "arithmetic": 40.27777777777778,
                        "mul": 5.555555555555555,
                        "bitwise": 54.166666666666664
                    },
                    "percentageDAGsCancel": 21.052631578947366
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~b & (b * 2 + (b - 1 | b) * -2) - 2) * 2 - ((b * 2 + (b - 1 | b) * -2) - 2 ^ b)",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 73.61111111111111,
                        "opsPercentages": {
                            "arithmetic": 47.368421052631575,
                            "mul": 26.31578947368421,
                            "bitwise": 26.31578947368421
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(d - 1) & d + ((((b * b - (b * b & d)) + d | ~(~(d - 1) & d + ~(d - 1) | d) ) + ((b - b - 1 | b) * 4 - 4 & ~b * 2)) - ((b * 2 + b - 1 | b * -2) - 2 ^ b)) + ~(d - 1) | d + 1",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 10,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 43.05555555555556,
                        "opsPercentages": {
                            "arithmetic": 46.34146341463415,
                            "mul": 14.634146341463413,
                            "bitwise": 39.02439024390244
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "clang_O3": {
                    "expr": "(~b & (b - (b - 1 | b)) * 2 - 2) * 2 - ((b - (b - 1 | b)) * 2 - 2 ^ b)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 79.16666666666666,
                        "opsPercentages": {
                            "arithmetic": 46.666666666666664,
                            "mul": 20.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_default": {
                    "expr": "(((((b - ((b ^ 0xffffffff) + 1)) + (b | (b ^ 0xffffffff) + 1 ^ 0xffffffff) * -2) - 2 & (b ^ 0xffffffff)) * 2 - (((b - ((b ^ 0xffffffff) + 1)) + (b | (b ^ 0xffffffff) + 1 ^ 0xffffffff) * -2) - 2 ^ b)) - (((d - 1 ^ 0xffffffff | d) + ((d - 1 ^ 0xffffffff) & d) ^ 0xffffffff | d + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) + 1 + (0xffffffff - d | 0xffffffff - (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)))) - ((d - 1 ^ 0xffffffff | d) + ((d - 1 ^ 0xffffffff) & d) ^ 0xffffffff) ^ 0xffffffff)) + -1",
                    "attributes": {
                        "numOps": 69,
                        "nestedExprLevel": 26,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 4.166666666666666,
                        "opsPercentages": {
                            "arithmetic": 43.47826086956522,
                            "mul": 10.144927536231885,
                            "bitwise": 46.3768115942029
                        },
                        "percentageDAGsCancel": 10.81081081081081
                    }
                },
                "msvc_default": {
                    "expr": "(((((b - (~b + 1)) + (~(~b + 1) | b) * -2) - 2 & ~b) * 2 - (((b - (~b + 1)) + (~(~b + 1) | b) * -2) - 2 ^ b)) - ~((~((~(d - 1) | d) + (~(d - 1) & d)) | d + b * b + 1 + (0xffffffff - d | 0xffffffff - b * b)) - ~((~(d - 1) | d) + (~(d - 1) & d)))) + -1",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 21,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 20.833333333333336,
                        "opsPercentages": {
                            "arithmetic": 49.122807017543856,
                            "mul": 8.771929824561402,
                            "bitwise": 42.10526315789473
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "gcc_O3": {
                    "expr": "(~b & (b - (b - 1 | b)) * 2 - 2) * 2 - ((b - (b - 1 | b)) * 2 - 2 ^ b)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 79.16666666666666,
                        "opsPercentages": {
                            "arithmetic": 46.666666666666664,
                            "mul": 20.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 10.0
                    }
                }
            }
        },
        {
            "num": 71,
            "gt": {
                "expr": "((((-(b&b))*(~b))*(d*(-(b&(d&b))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 22.22222222222222,
                        "mul": 33.33333333333333,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "((((~ ((~ b | b) - ~ b) + 1) & (- b - 1)) * ((~ ((~ b | b) - ~ b) + 1) | (- b - 1)) + ((~ ((~ b | b) - ~ b) + 1) & ~ (- b - 1)) * (~ (~ ((~ b | b) - ~ b) + 1) & (- b - 1))) & ((d & ~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1)) * (d | ~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1)) + (d & ~ (~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1))) * (~ d & ~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1)))) * ((((~ ((~ b | b) - ~ b) + 1) & (- b - 1)) * ((~ ((~ b | b) - ~ b) + 1) | (- b - 1)) + ((~ ((~ b | b) - ~ b) + 1) & ~ (- b - 1)) * (~ (~ ((~ b | b) - ~ b) + 1) & (- b - 1))) | ((d & ~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1)) * (d | ~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1)) + (d & ~ (~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1))) * (~ d & ~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1)))) + ((((~ ((~ b | b) - ~ b) + 1) & (- b - 1)) * ((~ ((~ b | b) - ~ b) + 1) | (- b - 1)) + ((~ ((~ b | b) - ~ b) + 1) & ~ (- b - 1)) * (~ (~ ((~ b | b) - ~ b) + 1) & (- b - 1))) & ~ ((d & ~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1)) * (d | ~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1)) + (d & ~ (~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1))) * (~ d & ~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1)))) * (~ (((~ ((~ b | b) - ~ b) + 1) & (- b - 1)) * ((~ ((~ b | b) - ~ b) + 1) | (- b - 1)) + ((~ ((~ b | b) - ~ b) + 1) & ~ (- b - 1)) * (~ (~ ((~ b | b) - ~ b) + 1) & (- b - 1))) & ((d & ~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1)) * (d | ~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1)) + (d & ~ (~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1))) * (~ d & ~ ((((~ b | (((~ d | b) + d) + 1)) + b) + 1) - 1))))",
                "attributes": {
                    "numOps": 369,
                    "nestedExprLevel": 194,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 41.46341463414634,
                        "mul": 4.878048780487805,
                        "bitwise": 53.65853658536586
                    },
                    "percentageDAGsCancel": 9.523809523809524
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b + (~b | d + (~d | b) + 1) & d) * ~(b + (~b | d + (~d | b) + 1) | d) + (~(b + (~b | d + (~d | b) + 1)) & d) * (~(b + (~b | d + (~d | b) + 1)) | d) & ~((-b & b) * (~b & b - 1) + (-b & ~b) * (~b | -b))) * ((-b & ~b) * (~b | -b) + (-b & b) * (~b & b - 1) & ~((b + (~b | d + (~d | b) + 1) & d) * ~(b + (~b | d + (~d | b) + 1) | d) + (~(b + (~b | d + (~d | b) + 1)) & d) * (~(b + (~b | d + (~d | b) + 1)) | d))) + ((-b & ~b) * (~b | -b) + (-b & b) * (~b & b - 1) & (b + (~b | d + (~d | b) + 1) & d) * ~(b + (~b | d + (~d | b) + 1) | d) + (~(b + (~b | d + (~d | b) + 1)) & d) * (~(b + (~b | d + (~d | b) + 1)) | d)) * ((b + (~b | d + (~d | b) + 1) & d) * ~(b + (~b | d + (~d | b) + 1) | d) + (~(b + (~b | d + (~d | b) + 1)) & d) * (~(b + (~b | d + (~d | b) + 1)) | d) | (-b & ~b) * (~b | -b) + (-b & b) * (~b & b - 1))",
                    "attributes": {
                        "numOps": 217,
                        "nestedExprLevel": 56,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 41.19241192411924,
                        "opsPercentages": {
                            "arithmetic": 33.6405529953917,
                            "mul": 8.294930875576037,
                            "bitwise": 58.06451612903226
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(-b | ~b) * (-b & ~b) + (~-b & ~b) * (-b & b) & (~(~b | (~d | b) + 1 + d) + b & ~d) * ((~b | (~d | b) + 1 + d) + b & d) + (~(~b | (~d | b) + 1 + d) + b | d) * (~(~b | (~d | b) + 1 + d) + b & d)) * (~(~(~b | (~d | b) + 1 + d) + b & ~d) * ((~b | (~d | b) + 1 + d) + b & d) + (~(~b | (~d | b) + 1 + d) + b | d) * (~(~b | (~d | b) + 1 + d) + b & d) & (-b | ~b) * (-b & ~b) + (~-b & ~b) * (-b & b)) + ((~(~b | (~d | b) + 1 + d) + b & ~d) * ((~b | (~d | b) + 1 + d) + b & d) + (~(~b | (~d | b) + 1 + d) + b | d) * (~(~b | (~d | b) + 1 + d) + b & d) | (-b | ~b) * (-b & ~b) + (~-b & ~b) * (-b & b)) * ((~(~b | (~d | b) + 1 + d) + b & ~d) * ((~b | (~d | b) + 1 + d) + b & d) + (~(~b | (~d | b) + 1 + d) + b | d) * (~(~b | (~d | b) + 1 + d) + b & d) & (-b | ~b) * (-b & ~b) + (~-b & ~b) * (-b & b))",
                    "attributes": {
                        "numOps": 225,
                        "nestedExprLevel": 46,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 39.02439024390244,
                        "opsPercentages": {
                            "arithmetic": 32.44444444444444,
                            "mul": 8.0,
                            "bitwise": 59.55555555555555
                        },
                        "percentageDAGsCancel": 7.894736842105263
                    }
                },
                "clang_O3": {
                    "expr": "(~(b - 1 & ~b) * (-b & b) + (-b | ~b) * (-b & ~b) & (~b & ~d) * (b & d) + (~b | d) * (~b & d)) * (~(~b & ~d) * (b & d) + (~b | d) * (~b & d) & (b - 1 & ~b) * (-b & b) + (-b | ~b) * (-b & ~b)) + ((~b & ~d) * (b & d) + (~b | d) * (~b & d) | (b - 1 & ~b) * (-b & b) + (-b | ~b) * (-b & ~b)) * ((~b & ~d) * (b & d) + (~b | d) * (~b & d) & (b - 1 & ~b) * (-b & b) + (-b | ~b) * (-b & ~b))",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 21,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 70.46070460704607,
                        "opsPercentages": {
                            "arithmetic": 22.93577981651376,
                            "mul": 16.51376146788991,
                            "bitwise": 60.550458715596335
                        },
                        "percentageDAGsCancel": 9.67741935483871
                    }
                },
                "clang_default": {
                    "expr": "((((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 & 0xffffffff - b) * (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 | 0xffffffff - b) + (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 & (0xffffffff - b ^ 0xffffffff)) * ((((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 ^ 0xffffffff) & 0xffffffff - b) & (d & ((b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b ^ 0xffffffff)) * (d | (b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b ^ 0xffffffff ) + (d & (b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b) * ((d ^ 0xffffffff) & ((b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b ^ 0xffffffff))) * ((((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 & 0xffffffff - b) * (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 | 0xffffffff - b) + (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 & (0xffffffff - b ^ 0xffffffff)) * ((((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 ^ 0xffffffff) & 0xffffffff - b) | (d & ((b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b ^ 0xffffffff)) * (d | (b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b ^ 0xffffffff ) + (d & (b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b) * ((d ^ 0xffffffff) & ((b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b ^ 0xffffffff))) + ((((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 & 0xffffffff - b) * (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 | 0xffffffff - b) + (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 & (0xffffffff - b ^ 0xffffffff)) * ((((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 ^ 0xffffffff) & 0xffffffff - b) & ((d & ((b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b ^ 0xffffffff)) * (d | (b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b ^ 0xffffffff) + (d & (b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b) * ((d ^ 0xffffffff) & ((b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b ^ 0xffffffff)) ^ 0xffffffff)) * (((((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 & 0xffffffff - b) * (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 | 0xffffffff - b) + (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 & (0xffffffff - b ^ 0xffffffff)) * ((((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + 1 ^ 0xffffffff) & 0xffffffff - b) ^ 0xffffffff) & (d & ((b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b ^ 0xffffffff)) * (d | (b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b ^ 0xffffffff ) + (d & (b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b) * ((d ^ 0xffffffff) & ((b ^ 0xffffffff | (d ^ 0xffffffff | b) + d + 1) + b ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 313,
                        "nestedExprLevel": 100,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 15.176151761517614,
                        "opsPercentages": {
                            "arithmetic": 33.54632587859425,
                            "mul": 5.7507987220447285,
                            "bitwise": 60.70287539936102
                        },
                        "percentageDAGsCancel": 7.894736842105263
                    }
                },
                "msvc_default": {
                    "expr": "((~(-~b - 1) + 1 & 0xffffffff - b) * (~(-~b - 1) + 1 | 0xffffffff - b) + (~(-~b - 1) + 1 & ~(0xffffffff - b)) * (~(~(-~b - 1) + 1) & 0xffffffff - b) & (~((~b | (~d | b) + 1 + d) + b) & d) * (~((~b | (~d | b) + 1 + d) + b) | d) + ((~b | (~d | b) + 1 + d) + b & d) * (~d & ~((~b | (~d | b) + 1 + d) + b))) * ((~(-~b - 1) + 1 & 0xffffffff - b) * (~(-~b - 1) + 1 | 0xffffffff - b) + (~(-~b - 1) + 1 & ~(0xffffffff - b)) * (~(~(-~b - 1) + 1) & 0xffffffff - b) | (~((~b | (~d | b) + 1 + d) + b) & d) * (~((~b | (~d | b) + 1 + d) + b) | d) + ((~b | (~d | b) + 1 + d) + b & d) * (~d & ~((~b | (~d | b) + 1 + d) + b))) + ((~(-~b - 1) + 1 & 0xffffffff - b) * (~(-~b - 1) + 1 | 0xffffffff - b) + (~(-~b - 1) + 1 & ~(0xffffffff - b)) * (~(~(-~b - 1) + 1) & 0xffffffff - b) & ~((~((~b | (~d | b) + 1 + d) + b) & d) * (~((~b | (~d | b) + 1 + d) + b) | d) + ((~b | (~d | b) + 1 + d) + b & d) * (~d & ~((~b | (~d | b) + 1 + d) + b)))) * (~((~(-~b - 1) + 1 & 0xffffffff - b) * (~(-~b - 1) + 1 | 0xffffffff - b) + (~(-~b - 1) + 1 & ~(0xffffffff - b)) * (~(~(-~b - 1) + 1) & 0xffffffff - b)) & (~((~b | (~d | b) + 1 + d) + b) & d) * (~((~b | (~d | b) + 1 + d) + b) | d) + ((~b | (~d | b) + 1 + d) + b & d) * (~d & ~((~b | (~d | b) + 1 + d) + b)))",
                    "attributes": {
                        "numOps": 297,
                        "nestedExprLevel": 76,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 19.51219512195122,
                        "opsPercentages": {
                            "arithmetic": 40.74074074074074,
                            "mul": 6.0606060606060606,
                            "bitwise": 53.198653198653204
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "gcc_O3": {
                    "expr": "(~~(b | d) * (b & d) + (~b & d) * (~b | d) & (b - 1 & ~b) * (-b & b) + (-b | ~b) * (-b & ~b)) * (~(b - 1 & ~b) * (-b & b) + (-b | ~b) * (-b & ~b) & ~(b | d) * (b & d) + (~b & d) * (~b | d)) + ((b - 1 & ~b) * (-b & b) + (-b | ~b) * (-b & ~b) | ~(b | d) * (b & d) + (~b & d) * (~b | d)) * ((b - 1 & ~b) * (-b & b) + (-b | ~b) * (-b & ~b) & ~(b | d) * (b & d) + (~b & d) * (~b | d))",
                    "attributes": {
                        "numOps": 105,
                        "nestedExprLevel": 21,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 71.54471544715447,
                        "opsPercentages": {
                            "arithmetic": 23.809523809523807,
                            "mul": 17.142857142857142,
                            "bitwise": 59.04761904761905
                        },
                        "percentageDAGsCancel": 6.451612903225806
                    }
                }
            }
        },
        {
            "num": 72,
            "gt": {
                "expr": "(((~c)-(~(a|a))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((- c - 1) & ~ (- ((a & ~ a) + a) - 1)) - (~ (- c - 1) & (- ((a & ~ a) + a) - 1))",
                "attributes": {
                    "numOps": 19,
                    "nestedExprLevel": 8,
                    "numDAGs": 12,
                    "opsPercentages": {
                        "arithmetic": 57.89473684210527,
                        "mul": 0.0,
                        "bitwise": 42.10526315789473
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~c & a) - (~a & c)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 73.68421052631578,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 0.0,
                            "bitwise": 80.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~c | a) + (~c & a) + 1",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 68.42105263157895,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~c & a) - (~a & c)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 73.68421052631578,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 0.0,
                            "bitwise": 80.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - c & (0xffffffff - ((a & (a ^ 0xffffffff)) + a) ^ 0xffffffff)) - ((0xffffffff - c ^ 0xffffffff) & 0xffffffff - ((a & (a ^ 0xffffffff)) + a))",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 9,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 21.052631578947366,
                        "opsPercentages": {
                            "arithmetic": 46.666666666666664,
                            "mul": 0.0,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 40.0
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - c & ~(0xffffffff - a)) - (~(0xffffffff - c) & 0xffffffff - a)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 52.63157894736842,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 0.0,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~c & a) - (~a & c)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 73.68421052631578,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 0.0,
                            "bitwise": 80.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 73,
            "gt": {
                "expr": "(((~(~c))-(~c)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 3,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "((- (- c - 1) - 1) & ~ (- c - 1)) - (~ (- (- c - 1) - 1) & (- c - 1))",
                "attributes": {
                    "numOps": 17,
                    "nestedExprLevel": 7,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 76.47058823529412,
                        "mul": 0.0,
                        "bitwise": 23.52941176470588
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "c - ~c",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 88.23529411764706,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "c * 2 + 1",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 88.23529411764706,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 50.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "c * 2 + 1",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 88.23529411764706,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 50.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - (-1 - c) & (0xffffffff - c ^ 0xffffffff)) - ((0xffffffff - (-1 - c) ^ 0xffffffff) & 0xffffffff - c)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 6,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 23.52941176470588,
                        "opsPercentages": {
                            "arithmetic": 69.23076923076923,
                            "mul": 0.0,
                            "bitwise": 30.76923076923077
                        },
                        "percentageDAGsCancel": 22.22222222222222
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - (-1 - c) & ~(0xffffffff - c)) - (~(0xffffffff - (-1 - c)) & 0xffffffff - c)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 6,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 23.52941176470588,
                        "opsPercentages": {
                            "arithmetic": 69.23076923076923,
                            "mul": 0.0,
                            "bitwise": 30.76923076923077
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "c - ~c",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 88.23529411764706,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 74,
            "gt": {
                "expr": "((~(((d*c)-(d&c))+(~(c*d)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 28.57142857142857,
                        "mul": 28.57142857142857,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "- (((((((d & c) * (d | c) + (d & ~ c) * (~ d & c)) & ~ (((~ d | c) + d) + 1)) - (~ ((d & c) * (d | c) + (d & ~ c) * (~ d & c)) & (((~ d | c) + d) + 1))) ^ ~ (- ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) - 1)) + ((((((d & c) * (d | c) + (d & ~ c) * (~ d & c)) & ~ (((~ d | c) + d) + 1)) - (~ ((d & c) * (d | c) + (d & ~ c) * (~ d & c)) & (((~ d | c) + d) + 1))) | (- ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) - 1)) << 1)) + 1) - 1",
                "attributes": {
                    "numOps": 92,
                    "nestedExprLevel": 40,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 26.08695652173913,
                        "mul": 13.043478260869565,
                        "bitwise": 60.86956521739131
                    },
                    "percentageDAGsCancel": 5.88235294117647
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-2 - ((((d & c) * (d | c) + (~d & c) * (~c & d) & -((~d | c) + d) - 2) - (d + (~d | c) + 1 & ~((~d & c) * (~c & d) + (d & c) * (d | c))) ^ (~c & d) * (~d & c) + (c & d) * (c | d)) + (~((~c & d) * (~d & c) + (c & d) * (c | d)) | ((d & c) * (d | c) + (~d & c) * (~c & d) & -((~d | c) + d) - 2) - (d + (~d | c) + 1 & ~((~d & c) * (~c & d) + (d & c) * (d | c)))) * 2)",
                    "attributes": {
                        "numOps": 87,
                        "nestedExprLevel": 25,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 5.434782608695652,
                        "opsPercentages": {
                            "arithmetic": 24.137931034482758,
                            "mul": 14.942528735632186,
                            "bitwise": 60.91954022988506
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "msvc_O1": {
                    "expr": "(-2 - (~(~(~c & d) * (~d & c) - (c | d) * (c & d)) ^ (~d + 1 + (~d | c) & (~c & d) * (~d & c) + (c | d) * (c & d)) - ~(~c & d) * (~d & c) + (c | d) * (c & d) & d + 1 + (~d | c))) - ((~d + 1 + (~d | c) * 2 & (~c & d) * (~d & c) + (c | d) * (c & d) * 2) + ~(~c & d) * (~d & c) + (c | d) * (c & d) & d + 1 + (~d | c) * -2 | (~c & d) * (~d & c) + (c | d) * (c & d) * -2 - 2)",
                    "attributes": {
                        "numOps": 94,
                        "nestedExprLevel": 21,
                        "numDAGs": 40,
                        "percentDecreaseByOps": -2.1739130434782608,
                        "opsPercentages": {
                            "arithmetic": 23.404255319148938,
                            "mul": 17.02127659574468,
                            "bitwise": 59.57446808510638
                        },
                        "percentageDAGsCancel": 7.5
                    }
                },
                "clang_O3": {
                    "expr": "-2 - (((~d & c) * (~c & d) + (d | c) * (d & c) ^ (-(~d | c + d) - 2 & (~d & c) * (~c & d) + (d | c) * (d & c)) - (~d | c + d + 1 & ~(~d & c) * (~c & d) + (d | c) * (d & c))) + ((-(~d | c + d) - 2 & (~d & c) * (~c & d) + (d | c) * (d & c)) - (~d | c + d + 1 & ~(~d & c) * (~c & d) + (d | c) * (d & c)) | ~(~d & c) * (~c & d) + (d | c) * (d & c)) * 2)",
                    "attributes": {
                        "numOps": 87,
                        "nestedExprLevel": 20,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 5.434782608695652,
                        "opsPercentages": {
                            "arithmetic": 24.137931034482758,
                            "mul": 14.942528735632186,
                            "bitwise": 60.91954022988506
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) & ((d ^ 0xffffffff | c) + d + 1 ^ 0xffffffff)) - (((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) ^ 0xffffffff ) & (d ^ 0xffffffff | c) + d + 1) ^ 0xffffffff - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) ^ 0xffffffff) + (((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) & ((d ^ 0xffffffff | c) + d + 1 ^ 0xffffffff)) - (((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) ^ 0xffffffff) & (d ^ 0xffffffff | c) + d + 1) | 0xffffffff - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d))) * 2 + 1)",
                    "attributes": {
                        "numOps": 90,
                        "nestedExprLevel": 35,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 2.1739130434782608,
                        "opsPercentages": {
                            "arithmetic": 24.444444444444443,
                            "mul": 14.444444444444443,
                            "bitwise": 61.111111111111114
                        },
                        "percentageDAGsCancel": 6.0606060606060606
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((((d & c) * (d | c) + (~c & d) * (~d & c) & ~((~d | c) + 1 + d)) - (~((d & c) * (d | c) + (~c & d) * (~d & c)) & (~d | c) + 1 + d ) ^ ~(0xffffffff - ((c & d) * (c | d) + (~d & c) * (~c & d)))) + 1 + (((d & c) * (d | c) + (~c & d) * (~d & c) & ~((~d | c) + 1 + d) ) - (~((d & c) * (d | c) + (~c & d) * (~d & c)) & (~d | c) + 1 + d) | 0xffffffff - ((c & d) * (c | d) + (~d & c) * (~c & d))) * 2)",
                    "attributes": {
                        "numOps": 90,
                        "nestedExprLevel": 27,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 2.1739130434782608,
                        "opsPercentages": {
                            "arithmetic": 24.444444444444443,
                            "mul": 14.444444444444443,
                            "bitwise": 61.111111111111114
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-2 - (((~c & d) * (~d & c) + (d & c) * (d | c) ^ (-(~d | c) + d - 2 & (~c & d) * (~d & c) + (d & c) * (d | c)) - ((~d | c) + d + 1 & ~(~c & d) * (~d & c) + (d & c) * (d | c))) + (~(~c & d) * (~d & c) + (d & c) * (d | c) | (-(~d | c) + d - 2 & (~c & d) * (~d & c) + (d & c) * (d | c)) - ((~d | c) + d + 1 & ~(~c & d) * (~d & c) + (d & c) * (d | c))) * 2)",
                    "attributes": {
                        "numOps": 87,
                        "nestedExprLevel": 21,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 5.434782608695652,
                        "opsPercentages": {
                            "arithmetic": 24.137931034482758,
                            "mul": 14.942528735632186,
                            "bitwise": 60.91954022988506
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 75,
            "gt": {
                "expr": "((((d|d)^e)^((~(-((c|d)-c)))*(e-e))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 11.11111111111111,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "((((((((d + d) + 1) + ((- d - 1) | (- d - 1))) - e) - (((((d + d) + 1) + ((- d - 1) | (- d - 1))) | ~ e) << 1)) - 2) - (((((((((c + d) + 1) + ((- c - 1) | (- d - 1))) & ~ c) << 1) - ((((c + d) + 1) + ((- c - 1) | (- d - 1))) ^ c)) - 1) & ((e ^ e) - ((~ e & e) << 1))) * ((((((((c + d) + 1) + ((- c - 1) | (- d - 1))) & ~ c) << 1) - ((((c + d) + 1) + ((- c - 1) | (- d - 1))) ^ c)) - 1) | ((e ^ e) - ((~ e & e) << 1))) + ((((((((c + d) + 1) + ((- c - 1) | (- d - 1))) & ~ c) << 1) - ((((c + d) + 1) + ((- c - 1) | (- d - 1))) ^ c)) - 1) & ~ ((e ^ e) - ((~ e & e) << 1))) * (~ (((((((c + d) + 1) + ((- c - 1) | (- d - 1))) & ~ c) << 1) - ((((c + d) + 1) + ((- c - 1) | (- d - 1))) ^ c)) - 1) & ((e ^ e) - ((~ e & e) << 1))))) - ((((((((d + d) + 1) + ((- d - 1) | (- d - 1))) - e) - (((((d + d) + 1) + ((- d - 1) | (- d - 1))) | ~ e) << 1)) - 2) | ~ (((((((((c + d) + 1) + ((- c - 1) | (- d - 1))) & ~ c) << 1) - ((((c + d) + 1) + ((- c - 1) | (- d - 1))) ^ c)) - 1) & ((e ^ e) - ((~ e & e) << 1))) * ((((((((c + d) + 1) + ((- c - 1) | (- d - 1))) & ~ c) << 1) - ((((c + d) + 1) + ((- c - 1) | (- d - 1))) ^ c)) - 1) | ((e ^ e) - ((~ e & e) << 1))) + ((((((((c + d) + 1) + ((- c - 1) | (- d - 1))) & ~ c) << 1) - ((((c + d) + 1) + ((- c - 1) | (- d - 1))) ^ c)) - 1) & ~ ((e ^ e) - ((~ e & e) << 1))) * (~ (((((((c + d) + 1) + ((- c - 1) | (- d - 1))) & ~ c) << 1) - ((((c + d) + 1) + ((- c - 1) | (- d - 1))) ^ c)) - 1) & ((e ^ e) - ((~ e & e) << 1))))) << 1)) - 2",
                "attributes": {
                    "numOps": 284,
                    "nestedExprLevel": 162,
                    "numDAGs": 43,
                    "opsPercentages": {
                        "arithmetic": 61.61971830985915,
                        "mul": 1.4084507042253522,
                        "bitwise": 36.971830985915496
                    },
                    "percentageDAGsCancel": 23.25581395348837
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~d + d * 2) - e) + (~e | d * 2 + 1 + ~d) * -2 + -1",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 3,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 94.71830985915493,
                        "opsPercentages": {
                            "arithmetic": 53.333333333333336,
                            "mul": 20.0,
                            "bitwise": 26.666666666666668
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_O1": {
                    "expr": "((d - (~e * 2 | d * 2)) - e) + -2",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 97.1830985915493,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 25.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(d - e) + (~e | d) * -2 + -2",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 97.1830985915493,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 12.5,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((d * 2 + (0xffffffff - d | 0xffffffff - d)) - e) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | e ^ 0xffffffff) * -2) - ((((c + d + 1 + (0xffffffff - c | 0xffffffff - d) & (c ^ 0xffffffff)) * 2 - (c + d + 1 + (0xffffffff - c | 0xffffffff - d) ^ c)) - 1 & ((e ^ 0xffffffff) & e) * -2) * (((c + d + 1 + (0xffffffff - c | 0xffffffff - d) & (c ^ 0xffffffff)) * 2 - (c + d + 1 + (0xffffffff - c | 0xffffffff - d) ^ c)) - 1 | ((e ^ 0xffffffff) & e) * -2) + (((c + d + 1 + (0xffffffff - c | 0xffffffff - d) & (c ^ 0xffffffff)) * 2 - (c + d + 1 + (0xffffffff - c | 0xffffffff - d) ^ c)) - 1 & (((e ^ 0xffffffff) & e) * -2 ^ 0xffffffff)) * ((((c + d + 1 + (0xffffffff - c | 0xffffffff - d) & (c ^ 0xffffffff)) * 2 - (c + d + 1 + (0xffffffff - c | 0xffffffff - d) ^ c)) - 1 ^ 0xffffffff) & ((e ^ 0xffffffff) & e) * -2))) + ((((d * 2 + (0xffffffff - d | 0xffffffff - d)) - e) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | e ^ 0xffffffff) * -2) - 1 | (((c + d + 1 + (0xffffffff - c | 0xffffffff - d) & (c ^ 0xffffffff)) * 2 - (c + d + 1 + (0xffffffff - c | 0xffffffff - d) ^ c)) - 1 & ((e ^ 0xffffffff) & e) * -2) * (((c + d + 1 + (0xffffffff - c | 0xffffffff - d) & (c ^ 0xffffffff)) * 2 - (c + d + 1 + (0xffffffff - c | 0xffffffff - d) ^ c)) - 1 | ((e ^ 0xffffffff) & e) * -2) + (((c + d + 1 + (0xffffffff - c | 0xffffffff - d) & (c ^ 0xffffffff)) * 2 - (c + d + 1 + (0xffffffff - c | 0xffffffff - d) ^ c)) - 1 & (((e ^ 0xffffffff) & e) * -2 ^ 0xffffffff)) * ((((c + d + 1 + (0xffffffff - c | 0xffffffff - d) & (c ^ 0xffffffff)) * 2 - (c + d + 1 + (0xffffffff - c | 0xffffffff - d) ^ c)) - 1 ^ 0xffffffff) & ((e ^ 0xffffffff) & e) * -2) ^ 0xffffffff) * -2 + -3",
                    "attributes": {
                        "numOps": 237,
                        "nestedExprLevel": 65,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 16.549295774647888,
                        "opsPercentages": {
                            "arithmetic": 55.69620253164557,
                            "mul": 11.39240506329114,
                            "bitwise": 32.91139240506329
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "msvc_default": {
                    "expr": "((d * 2 + (0xffffffff - d | 0xffffffff - d)) - e) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | ~e) * -2 + -1",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 5,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 93.30985915492957,
                        "opsPercentages": {
                            "arithmetic": 63.1578947368421,
                            "mul": 15.789473684210526,
                            "bitwise": 21.052631578947366
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(d - e) + (~e | d) * -2 + -2",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 97.1830985915493,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 12.5,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 76,
            "gt": {
                "expr": "(((d&d)-(d-(~d))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(((~ d | d) - ~ d) + ~ ((d + ~ (- d - 1)) + 1)) + 1",
                "attributes": {
                    "numOps": 12,
                    "nestedExprLevel": 6,
                    "numDAGs": 11,
                    "opsPercentages": {
                        "arithmetic": 58.333333333333336,
                        "mul": 0.0,
                        "bitwise": 41.66666666666667
                    },
                    "percentageDAGsCancel": 18.181818181818183
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "d + ~d * 2 + 1",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 1,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 25.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "-1 - d",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 83.33333333333334,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "d + ~d * 2 + 1",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 1,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 25.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((d ^ 0xffffffff | d) - (d ^ 0xffffffff)) + (d + (0xffffffff - d ^ 0xffffffff) + 1 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 5,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 8.333333333333332,
                        "opsPercentages": {
                            "arithmetic": 54.54545454545454,
                            "mul": 0.0,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_default": {
                    "expr": "~(d + 1 + ~(0xffffffff - d)) - ~d",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 41.66666666666667,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "d + 1 + ~d * 2",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 1,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 25.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 77,
            "gt": {
                "expr": "((((c+c)&((c+a)|(c*c)))-((a|(~(~a)))|c)))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 10.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((~ (((c | c) << 1) - (c ^ c)) | (((((c ^ a) + ((c & a) + (c & a))) + ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + 1) + ((- ((c ^ a) + ((c & a) + (c & a))) - 1) | (- ((c & c) * (c | c) + (c & ~ c) * (~ c & c)) - 1)))) - ~ (((c | c) << 1) - (c ^ c))) + ~ (((((a + (- (- a - 1) - 1)) + 1) + ((- a - 1) | (- (- (- a - 1) - 1) - 1))) & ~ c) + c)) + 1",
                "attributes": {
                    "numOps": 70,
                    "nestedExprLevel": 38,
                    "numDAGs": 41,
                    "opsPercentages": {
                        "arithmetic": 48.57142857142857,
                        "mul": 5.714285714285714,
                        "bitwise": 45.714285714285715
                    },
                    "percentageDAGsCancel": 19.51219512195122
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(c + (a * 2 + 1 + ~a & ~c)) + (c * c + (c ^ a) + (c & a) * 2 + 1 + ~(c * c & (c ^ a) + (c & a) * 2) & c * 2) + 1",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 6,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 61.42857142857143,
                        "opsPercentages": {
                            "arithmetic": 37.03703703703704,
                            "mul": 22.22222222222222,
                            "bitwise": 40.74074074074074
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "msvc_O1": {
                    "expr": "((~(a & c) * 2 - (a ^ c) | ~(c * c)) + (a & c) * 2 + (a ^ c) + c * c + 1 | ~(c * 2)) + ~((~c & a) + c) + (c + 1) * 2",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 8,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 61.42857142857143,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 22.22222222222222,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((c * c | (c ^ a) + (c & a) * 2) & c * 2) - ((~c & a) + c)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 82.85714285714286,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((c * 2 ^ 0xffffffff | (c ^ a) + (c & a) + (c & a) + c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) + 1 + (0xffffffff - ((c ^ a) + (c & a) + (c & a)) | 0xffffffff - (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))) ) - (c * 2 ^ 0xffffffff)) + ((a * 2 + 1 + (0xffffffff - a | 0xffffffff - (-1 - (-1 - a))) & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 18,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 25.71428571428571,
                        "opsPercentages": {
                            "arithmetic": 44.230769230769226,
                            "mul": 13.461538461538462,
                            "bitwise": 42.30769230769231
                        },
                        "percentageDAGsCancel": 11.428571428571429
                    }
                },
                "msvc_default": {
                    "expr": "((~(c * 2) | (c ^ a) + (c & a) + (c & a) + c * c + 1 + (0xffffffff - ((c ^ a) + (c & a) + (c & a)) | 0xffffffff - c * c)) - ~(c * 2)) + 1 + ~((a * 2 + 1 + (0xffffffff - a | 0xffffffff - (-1 - (-1 - a))) & ~c) + c)",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 14,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 42.857142857142854,
                        "opsPercentages": {
                            "arithmetic": 52.5,
                            "mul": 12.5,
                            "bitwise": 35.0
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "gcc_O3": {
                    "expr": "((c * c + (c ^ a) + (c & a) * 2) - ((c ^ a) + (c & a) * 2 & c * c) & c * 2) - ((a & ~c) + c)",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 8,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 72.85714285714285,
                        "opsPercentages": {
                            "arithmetic": 31.57894736842105,
                            "mul": 26.31578947368421,
                            "bitwise": 42.10526315789473
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 78,
            "gt": {
                "expr": "(((((e&a)+d)|(d^d))|((a-(d|e))-(e|a))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "(((((((((~ e | a) - ~ e) | d) << 1) - (((~ e | a) - ~ e) ^ d)) & ~ ((d | d) - (d & d))) + ((d | d) - (d & d))) + (((((a & ~ ((d & ~ e) + e)) - (~ a & ((d & ~ e) + e))) & ~ ((e & ~ a) + a)) + (((a & ~ ((d & ~ e) + e)) - (~ a & ((d & ~ e) + e))) & ~ ((e & ~ a) + a))) - (((a & ~ ((d & ~ e) + e)) - (~ a & ((d & ~ e) + e))) ^ ((e & ~ a) + a)))) + 1) + ((- (((((((~ e | a) - ~ e) | d) << 1) - (((~ e | a) - ~ e) ^ d)) & ~ ((d | d) - (d & d))) + ((d | d) - (d & d))) - 1) | (- (((((a & ~ ((d & ~ e) + e)) - (~ a & ((d & ~ e) + e))) & ~ ((e & ~ a) + a)) + (((a & ~ ((d & ~ e) + e)) - (~ a & ((d & ~ e) + e))) & ~ ((e & ~ a) + a))) - (((a & ~ ((d & ~ e) + e)) - (~ a & ((d & ~ e) + e))) ^ ((e & ~ a) + a))) - 1))",
                "attributes": {
                    "numOps": 148,
                    "nestedExprLevel": 77,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 31.756756756756754,
                        "mul": 0.0,
                        "bitwise": 68.24324324324324
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((((~(e + (~e & d)) & a) - (e + (~e & d) & ~a) ^ a + (~a & e)) + (~(a + (~a & e)) & (~(e + (~e & d)) & a) - (e + (~e & d) & ~a)) * -2) - 1 | ((a & e ^ d) + (a & e | d) * -2) - 1) + ((~(a + (~a & e)) & (~(e + (~e & d)) & a) - (e + (~e & d) & ~a)) * 2 - ((~(e + (~e & d)) & a) - (e + (~e & d) & ~a) ^ a + (~a & e))) + ((a & e | d) * 2 - (a & e ^ d)) + 1",
                    "attributes": {
                        "numOps": 86,
                        "nestedExprLevel": 28,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 41.891891891891895,
                        "opsPercentages": {
                            "arithmetic": 31.3953488372093,
                            "mul": 4.651162790697675,
                            "bitwise": 63.95348837209303
                        },
                        "percentageDAGsCancel": 9.67741935483871
                    }
                },
                "msvc_O1": {
                    "expr": "~(~a & e) + a & (~(~e & d) + e & a) - ((~e & d) + e & ~a) * 2 + 1 + ((((e + (~e | a) + 1 ^ d - e + (~e | a) * 2 + 2 | d * 2) - 1 | ((~a & e) + a ^ (~(~e & d) + e & a) - ((~e & d) + e & ~a) + ~(~a & e) + a & (~(~e & d) + e & a) - ((~e & d) + e & ~a) * -2) - 1) - e + (~e | a) + 1 ^ d) - (~a & e) + a ^ (~(~e & d) + e & a) - ((~e & d) + e & ~a)) + e + (~e | a) * 2 + 2 | d * 2",
                    "attributes": {
                        "numOps": 99,
                        "nestedExprLevel": 18,
                        "numDAGs": 49,
                        "percentDecreaseByOps": 33.108108108108105,
                        "opsPercentages": {
                            "arithmetic": 34.34343434343434,
                            "mul": 6.0606060606060606,
                            "bitwise": 59.59595959595959
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(~a & e) + a & (~(~e & d) + e & a) - ((~e & d) + e & ~a)) * 2 - ((~a & e) + a ^ (~(~e & d) + e & a) - ((~e & d) + e & ~a)) | (e & a | d) * 2 - (e & a ^ d)",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 9,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 72.97297297297297,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 5.0,
                            "bitwise": 70.0
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "clang_default": {
                    "expr": "(((e ^ 0xffffffff | a) - (e ^ 0xffffffff) | d) * 2 - ((e ^ 0xffffffff | a) - (e ^ 0xffffffff) ^ d)) + ((((a & ((d & (e ^ 0xffffffff)) + e ^ 0xffffffff)) - ((a ^ 0xffffffff) & (d & (e ^ 0xffffffff)) + e) & ((e & (a ^ 0xffffffff)) + a ^ 0xffffffff)) + ((a & ((d & (e ^ 0xffffffff)) + e ^ 0xffffffff)) - ((a ^ 0xffffffff) & (d & (e ^ 0xffffffff)) + e) & ((e & (a ^ 0xffffffff)) + a ^ 0xffffffff))) - ((a & ((d & (e ^ 0xffffffff)) + e ^ 0xffffffff)) - ((a ^ 0xffffffff) & (d & (e ^ 0xffffffff)) + e) ^ (e & (a ^ 0xffffffff)) + a)) + 1 + (0xffffffff - (((e ^ 0xffffffff | a) - (e ^ 0xffffffff) | d) * 2 - ((e ^ 0xffffffff | a) - (e ^ 0xffffffff) ^ d)) | 0xffffffff - ((((a & ((d & (e ^ 0xffffffff)) + e ^ 0xffffffff)) - ((a ^ 0xffffffff) & (d & (e ^ 0xffffffff)) + e) & ((e & (a ^ 0xffffffff)) + a ^ 0xffffffff)) + ((a & ((d & (e ^ 0xffffffff)) + e ^ 0xffffffff)) - ((a ^ 0xffffffff) & (d & (e ^ 0xffffffff)) + e) & ((e & (a ^ 0xffffffff)) + a ^ 0xffffffff))) - ((a & ((d & (e ^ 0xffffffff)) + e ^ 0xffffffff)) - ((a ^ 0xffffffff) & (d & (e ^ 0xffffffff)) + e) ^ (e & (a ^ 0xffffffff)) + a)))",
                    "attributes": {
                        "numOps": 128,
                        "nestedExprLevel": 63,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 13.513513513513514,
                        "opsPercentages": {
                            "arithmetic": 30.46875,
                            "mul": 1.5625,
                            "bitwise": 67.96875
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((~e | a) - ~e | d) * 2 - ((~e | a) - ~e ^ d)) + ((((~((~e & d) + e) & a) - (~a & (~e & d) + e) & ~((~a & e) + a)) + ((~((~e & d) + e) & a) - (~a & (~e & d) + e) & ~((~a & e) + a))) - ((~((~e & d) + e) & a) - (~a & (~e & d) + e) ^ (~a & e) + a)) + 1 + (0xffffffff - (((~e | a) - ~e | d) * 2 - ((~e | a) - ~e ^ d)) | 0xffffffff - ((((~((~e & d) + e) & a) - (~a & (~e & d) + e) & ~((~a & e) + a)) + ((~((~e & d) + e) & a) - (~a & (~e & d) + e) & ~((~a & e) + a))) - ((~((~e & d) + e) & a) - (~a & (~e & d) + e) ^ (~a & e) + a)))",
                    "attributes": {
                        "numOps": 128,
                        "nestedExprLevel": 42,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 13.513513513513514,
                        "opsPercentages": {
                            "arithmetic": 30.46875,
                            "mul": 1.5625,
                            "bitwise": 67.96875
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "gcc_O3": {
                    "expr": "((a & e ^ d + d | a & e * -2) - 1 | ((~(~e & d) + e & a) - ((~e & d) + e & ~a) ^ (~a & e) + a + ~(~a & e) + a & (~(~e & d) + e & a) - ((~e & d) + e & ~a) * -2) - 1) + (d | a & e * 2 - a & e ^ d) + 1 + (~(~a & e) + a & (~(~e & d) + e & a) - ((~e & d) + e & ~a) * 2 - (~(~e & d) + e & a) - ((~e & d) + e & ~a) ^ (~a & e) + a)",
                    "attributes": {
                        "numOps": 86,
                        "nestedExprLevel": 15,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 41.891891891891895,
                        "opsPercentages": {
                            "arithmetic": 31.3953488372093,
                            "mul": 4.651162790697675,
                            "bitwise": 63.95348837209303
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                }
            }
        },
        {
            "num": 79,
            "gt": {
                "expr": "(((b^c)^(b|(b|c))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 0.0,
                        "bitwise": 100.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((((b - c) - ((b | ~ c) + (b | ~ c))) - 2) | ((b & ~ ((b & ~ c) + c)) + ((b & ~ c) + c))) - ((((b - c) - ((b | ~ c) + (b | ~ c))) - 2) & ((b & ~ ((b & ~ c) + c)) + ((b & ~ c) + c)))",
                "attributes": {
                    "numOps": 37,
                    "nestedExprLevel": 20,
                    "numDAGs": 14,
                    "opsPercentages": {
                        "arithmetic": 40.54054054054054,
                        "mul": 0.0,
                        "bitwise": 59.45945945945946
                    },
                    "percentageDAGsCancel": 28.57142857142857
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "c + (~c & b) + (~(c + (~c & b)) & b) ^ ((b - c) + (~c | b) * -2) - 2",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 54.054054054054056,
                        "opsPercentages": {
                            "arithmetic": 41.17647058823529,
                            "mul": 5.88235294117647,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_O1": {
                    "expr": "((b - ((~c | b) * 2 + 2)) - c | ~c & b + (~(~c & b + c) & b) + c) - ((b - ((~c | b) * 2 + 2)) - c & ~c & b + (~(~c & b + c) & b) + c)",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 10,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 10.81081081081081,
                        "opsPercentages": {
                            "arithmetic": 39.39393939393939,
                            "mul": 6.0606060606060606,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "clang_O3": {
                    "expr": "(~(~c & b) + c & b) + (~c & b) + c ^ ((b - c) + (~c | b) * -2) - 2",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 54.054054054054056,
                        "opsPercentages": {
                            "arithmetic": 41.17647058823529,
                            "mul": 5.88235294117647,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff))) - 2 | (b & ((b & (c ^ 0xffffffff)) + c ^ 0xffffffff)) + (b & (c ^ 0xffffffff)) + c) - (((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff))) - 2 & (b & ((b & (c ^ 0xffffffff)) + c ^ 0xffffffff)) + (b & (c ^ 0xffffffff)) + c)",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 18,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 40.54054054054054,
                            "mul": 0.0,
                            "bitwise": 59.45945945945946
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "msvc_default": {
                    "expr": "(((b - c) - ((~c | b) + (~c | b))) - 2 | (~c & b) + (~((~c & b) + c) & b) + c) - (((b - c) - ((~c | b) + (~c | b))) - 2 & (~c & b) + (~((~c & b) + c) & b) + c)",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 14,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 40.54054054054054,
                            "mul": 0.0,
                            "bitwise": 59.45945945945946
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "gcc_O3": {
                    "expr": "((b - c) + (~c | b) * -2) - 2 ^ (~(~c & b) + c & b) + (~c & b) + c",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 54.054054054054056,
                        "opsPercentages": {
                            "arithmetic": 41.17647058823529,
                            "mul": 5.88235294117647,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 80,
            "gt": {
                "expr": "((e*((b+b)&(b+b))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 3,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 25.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(e & (((~ ((b | b) + (b & b)) | ((b - ~ b) - 1)) + ((b | b) + (b & b))) + 1)) * (e | (((~ ((b | b) + (b & b)) | ((b - ~ b) - 1)) + ((b | b) + (b & b))) + 1)) + (e & ~ (((~ ((b | b) + (b & b)) | ((b - ~ b) - 1)) + ((b | b) + (b & b))) + 1)) * (~ e & (((~ ((b | b) + (b & b)) | ((b - ~ b) - 1)) + ((b | b) + (b & b))) + 1))",
                "attributes": {
                    "numOps": 61,
                    "nestedExprLevel": 37,
                    "numDAGs": 19,
                    "opsPercentages": {
                        "arithmetic": 40.98360655737705,
                        "mul": 3.278688524590164,
                        "bitwise": 55.73770491803278
                    },
                    "percentageDAGsCancel": 15.789473684210526
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b * -2 - (~(b * 2) | (b - ~b) - 1)) - 2 & e) * (b * 2 + (~(b * 2) | (b - ~b) - 1) + 1 & ~e) + (b * 2 + (~(b * 2) | (b - ~b) - 1) + 1 & e) * (b * 2 + (~(b * 2) | (b - ~b) - 1) + 1 | e)",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 14,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 26.229508196721312,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 22.22222222222222,
                            "bitwise": 37.77777777777778
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~e & b * 2) * (~b * 2 & e) + (b * 2 | e) * (b * 2 & e)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 78.68852459016394,
                        "opsPercentages": {
                            "arithmetic": 7.6923076923076925,
                            "mul": 46.15384615384615,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~e & b * 2) * (~b * 2 & e) + (b * 2 | e) * (b * 2 & e)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 78.68852459016394,
                        "opsPercentages": {
                            "arithmetic": 7.6923076923076925,
                            "mul": 46.15384615384615,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(e & (b * 2 ^ 0xffffffff | (b - (b ^ 0xffffffff)) - 1) + b * 2 + 1) * (e | (b * 2 ^ 0xffffffff | (b - (b ^ 0xffffffff)) - 1) + b * 2 + 1) + (e & ((b * 2 ^ 0xffffffff | (b - (b ^ 0xffffffff)) - 1) + b * 2 + 1 ^ 0xffffffff)) * ((e ^ 0xffffffff) & (b * 2 ^ 0xffffffff | (b - (b ^ 0xffffffff)) - 1) + b * 2 + 1)",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 15,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 26.229508196721312,
                        "opsPercentages": {
                            "arithmetic": 37.77777777777778,
                            "mul": 22.22222222222222,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~(b * 2) | (b - ~b) - 1) + 1 + b * 2 & e) * ((~(b * 2) | (b - ~b) - 1) + 1 + b * 2 | e) + (~((~(b * 2) | (b - ~b) - 1) + 1 + b * 2) & e) * (~e & (~(b * 2) | (b - ~b) - 1) + 1 + b * 2)",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 14,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 26.229508196721312,
                        "opsPercentages": {
                            "arithmetic": 37.77777777777778,
                            "mul": 22.22222222222222,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "gcc_O3": {
                    "expr": "(~b * 2 & e) * (~e & b * 2) + (b * 2 & e) * (b * 2 | e)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 78.68852459016394,
                        "opsPercentages": {
                            "arithmetic": 7.6923076923076925,
                            "mul": 46.15384615384615,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 18.181818181818183
                    }
                }
            }
        },
        {
            "num": 81,
            "gt": {
                "expr": "(((-((d+c)&(c^c)))|((-c)-((c&c)+d))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 0.0,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 44.44444444444444
                }
            },
            "mba": {
                "expr": "((~ ((~ ((d - ~ c) - 1) | (((c - c) - ((c | ~ c) + (c | ~ c))) - 2)) - ~ ((d - ~ c) - 1)) + 1) & ~ (((~ (c - 1) & ~ (((((~ c | c) + c) + 1) - ~ d) - 1)) << 1) - (~ (c - 1) ^ (((((~ c | c) + c) + 1) - ~ d) - 1)))) + (((~ (c - 1) & ~ (((((~ c | c) + c) + 1) - ~ d) - 1)) << 1) - (~ (c - 1) ^ (((((~ c | c) + c) + 1) - ~ d) - 1)))",
                "attributes": {
                    "numOps": 69,
                    "nestedExprLevel": 36,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 47.82608695652174,
                        "mul": 0.0,
                        "bitwise": 52.17391304347826
                    },
                    "percentageDAGsCancel": 20.689655172413794
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~d + ~c + 1 & -c) * 2 - (-c ^ (c - ~d) - 1)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 81.15942028985508,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 7.6923076923076925,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(d + c) & ~(c - 1)) * 2 - (d + c ^ ~(c - 1))",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 5,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 84.05797101449275,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 9.090909090909092,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(c + d) & -c) * 2 - (c + d ^ -c)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 86.95652173913044,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 11.11111111111111,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((d - (c ^ 0xffffffff)) - 1 ^ 0xffffffff | 0xfffffffe - ((c | c ^ 0xffffffff) + (c | c ^ 0xffffffff))) - ((d - (c ^ 0xffffffff)) - 1 ^ 0xffffffff) ^ 0xffffffff) + 1 & (((c - 1 ^ 0xffffffff) & (((c ^ 0xffffffff | c) + c) - (d ^ 0xffffffff) ^ 0xffffffff)) * 2 - (c - 1 ^ 0xffffffff ^ ((c ^ 0xffffffff | c) + c) - (d ^ 0xffffffff)) ^ 0xffffffff)) + (((c - 1 ^ 0xffffffff) & (((c ^ 0xffffffff | c) + c) - (d ^ 0xffffffff) ^ 0xffffffff)) * 2 - (c - 1 ^ 0xffffffff ^ ((c ^ 0xffffffff | c) + c) - (d ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 59,
                        "nestedExprLevel": 25,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 14.492753623188406,
                        "opsPercentages": {
                            "arithmetic": 38.983050847457626,
                            "mul": 3.389830508474576,
                            "bitwise": 57.6271186440678
                        },
                        "percentageDAGsCancel": 8.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(~((d - ~c) - 1) - ~((d - ~c) - 1)) + 1 & ~((~(c - 1) & ~((c + -1) - ~d)) * 2 - (~(c - 1) ^ (c + -1) - ~d))) + ((~(c - 1) & ~((c + -1) - ~d)) * 2 - (~(c - 1) ^ (c + -1) - ~d))",
                    "attributes": {
                        "numOps": 48,
                        "nestedExprLevel": 15,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 30.434782608695656,
                        "opsPercentages": {
                            "arithmetic": 52.083333333333336,
                            "mul": 4.166666666666666,
                            "bitwise": 43.75
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "gcc_O3": {
                    "expr": "(~d - c & -c) * 2 - ((c - ~d) - 1 ^ -c)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 84.05797101449275,
                        "opsPercentages": {
                            "arithmetic": 54.54545454545454,
                            "mul": 9.090909090909092,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 82,
            "gt": {
                "expr": "((~(-(c+(b*b)))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 25.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((c ^ ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((c | ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + (c | ((b & b) * (b | b) + (b & ~ b) * (~ b & b))))) + 1) - 1",
                "attributes": {
                    "numOps": 35,
                    "nestedExprLevel": 16,
                    "numDAGs": 15,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 17.142857142857142,
                        "bitwise": 62.857142857142854
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(b * b | c) * 2 + ~(b * b ^ c)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 80.0,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 42.857142857142854,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(b * b) ^ c) + (b * b | c) * 2",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 80.0,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 42.857142857142854,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~(b * b ^ c) + (b * b | c) * 2",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 80.0,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 42.857142857142854,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(c ^ b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) + (c | b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) + (c | b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b))",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 11,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 22.857142857142858,
                        "opsPercentages": {
                            "arithmetic": 18.51851851851852,
                            "mul": 22.22222222222222,
                            "bitwise": 59.25925925925925
                        },
                        "percentageDAGsCancel": 27.27272727272727
                    }
                },
                "msvc_default": {
                    "expr": "(~(b * b) ^ c) + (b * b | c) + (b * b | c)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 74.28571428571429,
                        "opsPercentages": {
                            "arithmetic": 22.22222222222222,
                            "mul": 33.33333333333333,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(b * b ^ c) + (b * b | c) * 2",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 80.0,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 42.857142857142854,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 83,
            "gt": {
                "expr": "((((d-c)-(d|c))-(c|(c|c))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "((((((d + ~ c) + 1) & ~ (((d + c) + 1) + ((- d - 1) | (- c - 1)))) + (((d + ~ c) + 1) & ~ (((d + c) + 1) + ((- d - 1) | (- c - 1))))) - (((d + ~ c) + 1) ^ (((d + c) + 1) + ((- d - 1) | (- c - 1))))) ^ (((c + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) + ((- c - 1) | (- (((c + c) + 1) + ((- c - 1) | (- c - 1))) - 1)))) - ((~ (((((d + ~ c) + 1) & ~ (((d + c) + 1) + ((- d - 1) | (- c - 1)))) + (((d + ~ c) + 1) & ~ (((d + c) + 1) + ((- d - 1) | (- c - 1))))) - (((d + ~ c) + 1) ^ (((d + c) + 1) + ((- d - 1) | (- c - 1))))) & (((c + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) + ((- c - 1) | (- (((c + c) + 1) + ((- c - 1) | (- c - 1))) - 1)))) + (~ (((((d + ~ c) + 1) & ~ (((d + c) + 1) + ((- d - 1) | (- c - 1)))) + (((d + ~ c) + 1) & ~ (((d + c) + 1) + ((- d - 1) | (- c - 1))))) - (((d + ~ c) + 1) ^ (((d + c) + 1) + ((- d - 1) | (- c - 1))))) & (((c + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) + ((- c - 1) | (- (((c + c) + 1) + ((- c - 1) | (- c - 1))) - 1)))))",
                "attributes": {
                    "numOps": 199,
                    "nestedExprLevel": 104,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 76.38190954773869,
                        "mul": 0.0,
                        "bitwise": 23.618090452261306
                    },
                    "percentageDAGsCancel": 12.903225806451612
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((d & c) - (c + d + 1) & d + ~c + 1) * 2 - (~(d & c) + c + d + 1 ^ d + ~c + 1) ^ (-c - 1 | ~c) + c * 3 + ~c + 2) + ((-c - 1 | ~c) + c * 3 + ~c + 2 & ~(((d & c) - (c + d + 1) & d + ~c + 1) * 2) + (~(d & c) + c + d + 1 ^ d + ~c + 1)) * -2",
                    "attributes": {
                        "numOps": 62,
                        "nestedExprLevel": 12,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 68.84422110552764,
                        "opsPercentages": {
                            "arithmetic": 54.83870967741935,
                            "mul": 8.064516129032258,
                            "bitwise": 37.096774193548384
                        },
                        "percentageDAGsCancel": 10.344827586206897
                    }
                },
                "msvc_O1": {
                    "expr": "((~(d - (c & d)) + c & d - c) * 2 - ((d - (c & d)) + c ^ d - c) ^ c) + (~(~(d - (c & d)) + c & d - c) * 2 - ((d - (c & d)) + c ^ d - c) & c) * -2",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 12,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 83.91959798994975,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 9.375,
                            "bitwise": 40.625
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((~(d | c) & d - c) * 2 - ((d | c) ^ d - c) ^ c) + (~(~(d | c) & d - c) * 2 - ((d | c) ^ d - c) & c) * -2",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 8,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 87.93969849246231,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 12.5,
                            "bitwise": 54.166666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d + (c ^ 0xffffffff) + 1 & (d + c + 1 + (0xffffffff - d | 0xffffffff - c) ^ 0xffffffff)) + (d + (c ^ 0xffffffff) + 1 & (d + c + 1 + (0xffffffff - d | 0xffffffff - c) ^ 0xffffffff))) - (d + (c ^ 0xffffffff) + 1 ^ d + c + 1 + (0xffffffff - d | 0xffffffff - c)) ^ c * 3 + (0xffffffff - c | 0xffffffff - c) + 2 + (0xffffffff - c | 0xffffffff - (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)))) - (((((d + (c ^ 0xffffffff) + 1 & (d + c + 1 + (0xffffffff - d | 0xffffffff - c) ^ 0xffffffff)) + (d + (c ^ 0xffffffff) + 1 & (d + c + 1 + (0xffffffff - d | 0xffffffff - c) ^ 0xffffffff))) - (d + (c ^ 0xffffffff) + 1 ^ d + c + 1 + (0xffffffff - d | 0xffffffff - c)) ^ 0xffffffff) & c * 3 + (0xffffffff - c | 0xffffffff - c) + 2 + (0xffffffff - c | 0xffffffff - (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)))) + ((((d + (c ^ 0xffffffff) + 1 & (d + c + 1 + (0xffffffff - d | 0xffffffff - c) ^ 0xffffffff)) + (d + (c ^ 0xffffffff) + 1 & (d + c + 1 + (0xffffffff - d | 0xffffffff - c) ^ 0xffffffff))) - (d + (c ^ 0xffffffff) + 1 ^ d + c + 1 + (0xffffffff - d | 0xffffffff - c)) ^ 0xffffffff) & c * 3 + (0xffffffff - c | 0xffffffff - c) + 2 + (0xffffffff - c | 0xffffffff - (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)))))",
                    "attributes": {
                        "numOps": 157,
                        "nestedExprLevel": 35,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 21.105527638190953,
                        "opsPercentages": {
                            "arithmetic": 66.2420382165605,
                            "mul": 3.821656050955414,
                            "bitwise": 29.936305732484076
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((d + 1 + ~c & ~(d + c + 1 + (0xffffffff - d | 0xffffffff - c))) + (d + 1 + ~c & ~(d + c + 1 + (0xffffffff - d | 0xffffffff - c)))) - (d + 1 + ~c ^ d + c + 1 + (0xffffffff - d | 0xffffffff - c)) ^ (0xffffffff - c | 0xffffffff - c) + c * 3 + 2 + (0xffffffff - c | 0xffffffff - (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)))) - ((~(((d + 1 + ~c & ~(d + c + 1 + (0xffffffff - d | 0xffffffff - c))) + (d + 1 + ~c & ~(d + c + 1 + (0xffffffff - d | 0xffffffff - c)))) - (d + 1 + ~c ^ d + c + 1 + (0xffffffff - d | 0xffffffff - c))) & (0xffffffff - c | 0xffffffff - c) + c * 3 + 2 + (0xffffffff - c | 0xffffffff - (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)))) + (~(((d + 1 + ~c & ~(d + c + 1 + (0xffffffff - d | 0xffffffff - c))) + (d + 1 + ~c & ~(d + c + 1 + (0xffffffff - d | 0xffffffff - c)))) - (d + 1 + ~c ^ d + c + 1 + (0xffffffff - d | 0xffffffff - c))) & (0xffffffff - c | 0xffffffff - c) + c * 3 + 2 + (0xffffffff - c | 0xffffffff - (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)))))",
                    "attributes": {
                        "numOps": 157,
                        "nestedExprLevel": 35,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 21.105527638190953,
                        "opsPercentages": {
                            "arithmetic": 66.2420382165605,
                            "mul": 3.821656050955414,
                            "bitwise": 29.936305732484076
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((c & d) - c + 1 + d & d - c) * 2 - ~(c & d) + c + 1 + d ^ d - c ^ c * 2 + 1 + (c - c * 2 + 1 | ~c)) + (~((c & d) - c + 1 + d & d - c) * 2 + ~(c & d) + c + 1 + d ^ d - c & c * 2 + 1 + (c - c * 2 + 1 | ~c)) * -2",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 8,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 73.86934673366834,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 13.461538461538462,
                            "bitwise": 32.69230769230769
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 84,
            "gt": {
                "expr": "((-((-(-(-e)))&((b&e)+b))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 71.42857142857143,
                        "mul": 0.0,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "~ ((~ (~ (~ (~ (e - 1)) + 1) + 1) | ((((~ b | e) - ~ b) - ~ b) - 1)) - ~ (~ (~ (~ (e - 1)) + 1) + 1)) + 1",
                "attributes": {
                    "numOps": 25,
                    "nestedExprLevel": 13,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 44.0,
                        "mul": 0.0,
                        "bitwise": 56.00000000000001
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(-e & ((e & b) - ~b) - 1)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 4,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 72.0,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(-2 - (((~b | e) + ~b * -2) - 1 | ~(~e + 1))) - ~e",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 5,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 40.0,
                        "opsPercentages": {
                            "arithmetic": 46.666666666666664,
                            "mul": 6.666666666666667,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_O3": {
                    "expr": "-(-e & (e & b) + b)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 80.0,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "clang_default": {
                    "expr": "(((e ^ 0xffffffff) + 1 ^ 0xffffffff | (((b ^ 0xffffffff | e) - (b ^ 0xffffffff)) - (b ^ 0xffffffff)) - 1) - ((e ^ 0xffffffff) + 1 ^ 0xffffffff) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 8,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 32.0,
                        "opsPercentages": {
                            "arithmetic": 41.17647058823529,
                            "mul": 0.0,
                            "bitwise": 58.82352941176471
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "msvc_default": {
                    "expr": "~((~(~e + 1) | (((~b | e) - ~b) - ~b) - 1) - ~(~e + 1)) + 1",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 32.0,
                        "opsPercentages": {
                            "arithmetic": 41.17647058823529,
                            "mul": 0.0,
                            "bitwise": 58.82352941176471
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-((e & b) + b & -e)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 80.0,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 85,
            "gt": {
                "expr": "(((e-e)+((a&e)*a)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 25.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((((e & ~ e) << 1) - (e ^ e)) - ~ (((((~ a | e) + a) + 1) & a) * ((((~ a | e) + a) + 1) | a) + ((((~ a | e) + a) + 1) & ~ a) * (~ (((~ a | e) + a) + 1) & a))) - 1",
                "attributes": {
                    "numOps": 33,
                    "nestedExprLevel": 19,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 36.36363636363637,
                        "mul": 6.0606060606060606,
                        "bitwise": 57.57575757575758
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-((~a | e) + a) - 2 & a) * (a + (~a | e) + 1 & ~a) + (a + (~a | e) + 1 & a) * (a + (~a | e) + 1 | a)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 7,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 24.242424242424242,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 8.0,
                            "bitwise": 52.0
                        },
                        "percentageDAGsCancel": 28.57142857142857
                    }
                },
                "msvc_O1": {
                    "expr": "(~a + 1 + (~a | e) & a) * (a + 1 + (~a | e) & ~a) + (a + 1 + (~a | e) | a) * (a + 1 + (~a | e) & a)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 6,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 24.242424242424242,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 8.0,
                            "bitwise": 56.00000000000001
                        },
                        "percentageDAGsCancel": 23.076923076923077
                    }
                },
                "clang_O3": {
                    "expr": "(-(e + a) - 2 & a) * (~a & e + a + 1) + (e + a + 1 | a) * (e + a + 1 & a)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 48.484848484848484,
                        "opsPercentages": {
                            "arithmetic": 58.82352941176471,
                            "mul": 11.76470588235294,
                            "bitwise": 29.411764705882355
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e & (e ^ 0xffffffff)) * 2 - (((a ^ 0xffffffff | e) + a + 1 & a) * ((a ^ 0xffffffff | e) + a + 1 | a) + ((a ^ 0xffffffff | e) + a + 1 & (a ^ 0xffffffff)) * (((a ^ 0xffffffff | e) + a + 1 ^ 0xffffffff) & a) ^ 0xffffffff)) + -1",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 11,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 3.0303030303030303,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 9.375,
                            "bitwise": 53.125
                        },
                        "percentageDAGsCancel": 26.31578947368421
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ~(((~a | e) + 1 + a & a) * ((~a | e) + 1 + a | a) + ((~a | e) + 1 + a & ~a) * (~((~a | e) + 1 + a) & a))",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 8,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 15.151515151515152,
                        "opsPercentages": {
                            "arithmetic": 39.285714285714285,
                            "mul": 7.142857142857142,
                            "bitwise": 53.57142857142857
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "gcc_O3": {
                    "expr": "(-(e | ~a) + a - 2 & a) * (~a & (e | ~a) + a + 1) + ((e | ~a) + a + 1 | a) * ((e | ~a) + a + 1 & a)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 24.242424242424242,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 8.0,
                            "bitwise": 52.0
                        },
                        "percentageDAGsCancel": 21.428571428571427
                    }
                }
            }
        },
        {
            "num": 86,
            "gt": {
                "expr": "((((a*e)-(e*(e+a)))-((-e)*(e-e))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 7,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 62.5,
                        "mul": 37.5,
                        "bitwise": 0.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(((((a & e) * (a | e) + (a & ~ e) * (~ a & e)) & ~ ((e & ((e - ~ a) - 1)) * (e | ((e - ~ a) - 1)) + (e & ~ ((e - ~ a) - 1)) * (~ e & ((e - ~ a) - 1)))) - (~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e)) & ((e & ((e - ~ a) - 1)) * (e | ((e - ~ a) - 1)) + (e & ~ ((e - ~ a) - 1)) * (~ e & ((e - ~ a) - 1))))) + ~ ((~ (e - 1) & (((e & ~ e) << 1) - (e ^ e))) * (~ (e - 1) | (((e & ~ e) << 1) - (e ^ e))) + (~ (e - 1) & ~ (((e & ~ e) << 1) - (e ^ e))) * (~ (~ (e - 1)) & (((e & ~ e) << 1) - (e ^ e))))) + 1",
                "attributes": {
                    "numOps": 105,
                    "nestedExprLevel": 47,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 30.476190476190478,
                        "mul": 9.523809523809524,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 23.809523809523807
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((a & e) * (a | e) + (~a & e) * (~e & a) & ~((~a + ~e + 1 & e) * ((e - ~a) - 1 & ~e) + ((e - ~a) - 1 & e) * ((e - ~a) - 1 | e))) - (~((~a & e) * (~e & a) + (a & e) * (a | e)) & (~a + ~e + 1 & e) * ((e - ~a) - 1 & ~e) + ((e - ~a) - 1 & e) * ((e - ~a) - 1 | e))",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 16,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 38.095238095238095,
                        "opsPercentages": {
                            "arithmetic": 32.30769230769231,
                            "mul": 12.307692307692308,
                            "bitwise": 55.38461538461539
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "msvc_O1": {
                    "expr": "(~(a + e & e) * (a + e | e) + (~a + e & e) * (~e & a + e) & (~a & e) * (~e & a) + (a | e) * (a & e)) - (~(~a & e) * (~e & a) + (a | e) * (a & e) & (a + e & e) * (a + e | e) + (~a + e & e) * (~e & a + e))",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 11,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 53.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 26.53061224489796,
                            "mul": 16.3265306122449,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(~e & e + a) * (~e + a & e) + (e + a | e) * (e + a & e) & (~a & e) * (~e & a) + (e | a) * (e & a)) - (~(~a & e) * (~e & a) + (e | a) * (e & a) & (~e & e + a) * (~e + a & e) + (e + a | e) * (e + a & e))",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 11,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 53.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 26.53061224489796,
                            "mul": 16.3265306122449,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "clang_default": {
                    "expr": "(((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) & ((e & (e - (a ^ 0xffffffff)) - 1) * (e | (e - (a ^ 0xffffffff)) - 1) + (e & ((e - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((e ^ 0xffffffff) & (e - (a ^ 0xffffffff)) - 1) ^ 0xffffffff)) - (((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff) & (e & (e - (a ^ 0xffffffff)) - 1) * (e | (e - (a ^ 0xffffffff)) - 1) + (e & ((e - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((e ^ 0xffffffff) & (e - (a ^ 0xffffffff)) - 1))) + (((e - 1 ^ 0xffffffff) & (e & (e ^ 0xffffffff)) * 2) * (e - 1 ^ 0xffffffff | (e & (e ^ 0xffffffff)) * 2) + ((e - 1 ^ 0xffffffff) & ((e & (e ^ 0xffffffff)) * 2 ^ 0xffffffff)) * (e - 1 & (e & (e ^ 0xffffffff)) * 2) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 95,
                        "nestedExprLevel": 41,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 9.523809523809524,
                        "opsPercentages": {
                            "arithmetic": 29.47368421052631,
                            "mul": 14.736842105263156,
                            "bitwise": 55.78947368421052
                        },
                        "percentageDAGsCancel": 20.51282051282051
                    }
                },
                "msvc_default": {
                    "expr": "((a & e) * (a | e) + (~e & a) * (~a & e) & ~(((e - ~a) - 1 & e) * ((e - ~a) - 1 | e) + (~((e - ~a) - 1) & e) * (~e & (e - ~a) - 1))) - (~((a & e) * (a | e) + (~e & a) * (~a & e)) & ((e - ~a) - 1 & e) * ((e - ~a) - 1 | e) + (~((e - ~a) - 1) & e) * (~e & (e - ~a) - 1))",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 20,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 38.095238095238095,
                        "opsPercentages": {
                            "arithmetic": 32.30769230769231,
                            "mul": 12.307692307692308,
                            "bitwise": 55.38461538461539
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "gcc_O3": {
                    "expr": "(~(~e + 1 + ~a & e) * (~e & (e - ~a) - 1) + ((e - ~a) - 1 & e) * ((e - ~a) - 1 | e) & (a & e) * (a | e) + (a & ~e) * (~a & e)) - (~(a & e) * (a | e) + (a & ~e) * (~a & e) & (~e + 1 + ~a & e) * (~e & (e - ~a) - 1) + ((e - ~a) - 1 & e) * ((e - ~a) - 1 | e))",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 14,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 38.095238095238095,
                        "opsPercentages": {
                            "arithmetic": 32.30769230769231,
                            "mul": 12.307692307692308,
                            "bitwise": 55.38461538461539
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 87,
            "gt": {
                "expr": "((((-((b-c)&e))|((c*b)+c))*(~(-(c&b)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((~ (((~ ((b ^ c) - ((~ b & c) << 1)) | e) + ((b ^ c) - ((~ b & c) << 1))) + 1) + 1) + ((((c & b) * (c | b) + (c & ~ b) * (~ c & b)) - ~ c) - 1)) + 1) + ((- (~ (((~ ((b ^ c) - ((~ b & c) << 1)) | e) + ((b ^ c) - ((~ b & c) << 1))) + 1) + 1) - 1) | (- ((((c & b) * (c | b) + (c & ~ b) * (~ c & b)) - ~ c) - 1) - 1))) & ((((~ c | b) + c) + 1) - 1)) * (((((~ (((~ ((b ^ c) - ((~ b & c) << 1)) | e) + ((b ^ c) - ((~ b & c) << 1))) + 1) + 1) + ((((c & b) * (c | b) + (c & ~ b) * (~ c & b)) - ~ c) - 1)) + 1) + ((- (~ (((~ ((b ^ c) - ((~ b & c) << 1)) | e) + ((b ^ c) - ((~ b & c) << 1))) + 1) + 1) - 1) | (- ((((c & b) * (c | b) + (c & ~ b) * (~ c & b)) - ~ c) - 1) - 1))) | ((((~ c | b) + c) + 1) - 1)) + (((((~ (((~ ((b ^ c) - ((~ b & c) << 1)) | e) + ((b ^ c) - ((~ b & c) << 1))) + 1) + 1) + ((((c & b) * (c | b) + (c & ~ b) * (~ c & b)) - ~ c) - 1)) + 1) + ((- (~ (((~ ((b ^ c) - ((~ b & c) << 1)) | e) + ((b ^ c) - ((~ b & c) << 1))) + 1) + 1) - 1) | (- ((((c & b) * (c | b) + (c & ~ b) * (~ c & b)) - ~ c) - 1) - 1))) & ~ ((((~ c | b) + c) + 1) - 1)) * (~ ((((~ (((~ ((b ^ c) - ((~ b & c) << 1)) | e) + ((b ^ c) - ((~ b & c) << 1))) + 1) + 1) + ((((c & b) * (c | b) + (c & ~ b) * (~ c & b)) - ~ c) - 1)) + 1) + ((- (~ (((~ ((b ^ c) - ((~ b & c) << 1)) | e) + ((b ^ c) - ((~ b & c) << 1))) + 1) + 1) - 1) | (- ((((c & b) * (c | b) + (c & ~ b) * (~ c & b)) - ~ c) - 1) - 1))) & ((((~ c | b) + c) + 1) - 1))",
                "attributes": {
                    "numOps": 285,
                    "nestedExprLevel": 146,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 36.84210526315789,
                        "mul": 6.315789473684211,
                        "bitwise": 56.84210526315789
                    },
                    "percentageDAGsCancel": 11.904761904761903
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c + (~c | b) & ~((~c - ((c & b) * (c | b) + (~c & b) * (~b & c)) | ((~b & c) * 2 + ~(b ^ c) | e) + (b ^ c) + (~b & c) * -2) + (((c & b) * (c | b) + (~c & b) * (~b & c)) - ~c) + ~((b ^ c) + (~b & c) * -2 + ((~b & c) * 2 + ~(b ^ c) | e)))) * ((((c & b) * (c | b) + (~c & b) * (~b & c)) - ~c) + ~((b ^ c) + (~b & c) * -2 + ((~b & c) * 2 + ~(b ^ c) | e)) + (~c - ((c & b) * (c | b) + (~c & b) * (~b & c)) | ((~b & c) * 2 + ~(b ^ c) | e) + (b ^ c) + (~b & c) * -2) & ~(c + (~c | b))) + ((((c & b) * (c | b) + (~c & b) * (~b & c)) - ~c) + ~((b ^ c) + (~b & c) * -2 + ((~b & c) * 2 + ~(b ^ c) | e)) + (~c - ((c & b) * (c | b) + (~c & b) * (~b & c)) | ((~b & c) * 2 + ~(b ^ c) | e) + (b ^ c) + (~b & c) * -2) & c + (~c | b)) * (c + (~c | b) | (((c & b) * (c | b) + (~c & b) * (~b & c)) - ~c) + ~((b ^ c) + (~b & c) * -2 + ((~b & c) * 2 + ~(b ^ c) | e)) + (~c - ((c & b) * (c | b) + (~c & b) * (~b & c) ) | ((~b & c) * 2 + ~(b ^ c) | e) + (b ^ c) + (~b & c) * -2))",
                    "attributes": {
                        "numOps": 237,
                        "nestedExprLevel": 67,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 16.842105263157894,
                        "opsPercentages": {
                            "arithmetic": 25.738396624472575,
                            "mul": 14.345991561181433,
                            "bitwise": 59.91561181434599
                        },
                        "percentageDAGsCancel": 2.564102564102564
                    }
                },
                "msvc_O1": {
                    "expr": "(~c + 2 + ~((~((b ^ c) + ~b & c * -2) | e) + ~b & c * -2 + (b ^ c) + 1) + ((~c - (~c & b) * ~b & c) - (b | c) * (b & c) | (~((b ^ c) + ~b & c * -2) | e) + ~b & c * -2 + (b ^ c)) + (~c & b) * ~b & c + (b | c) * (b & c) & c + (~c | b)) * (~c + (~c | b) & c + 2 + ~((~((b ^ c) + ~b & c * -2) | e) + ~b & c * -2 + (b ^ c) + 1) + ((~c - (~c & b) * ~b & c) - (b | c) * (b & c) | (~((b ^ c) + ~b & c * -2) | e) + ~b & c * -2 + (b ^ c)) + (~c & b) * ~b & c + (b | c) * (b & c)) + (c + (~c | b) | c + 2 + ~((~((b ^ c) + ~b & c * -2) | e) + ~b & c * -2 + (b ^ c) + 1) + ((~c - (~c & b) * ~b & c) - (b | c) * (b & c) | (~((b ^ c) + ~b & c * -2) | e) + ~b & c * -2 + (b ^ c)) + (~c & b) * ~b & c + (b | c) * (b & c)) * (c + (~c | b) & c + 2 + ~((~((b ^ c) + ~b & c * -2) | e) + ~b & c * -2 + (b ^ c) + 1) + ((~c - (~c & b) * ~b & c) - (b | c) * (b & c) | (~((b ^ c) + ~b & c * -2) | e) + ~b & c * -2 + (b ^ c)) + (~c & b) * ~b & c + (b | c) * (b & c))",
                    "attributes": {
                        "numOps": 249,
                        "nestedExprLevel": 51,
                        "numDAGs": 47,
                        "percentDecreaseByOps": 12.631578947368421,
                        "opsPercentages": {
                            "arithmetic": 30.923694779116467,
                            "mul": 13.654618473895583,
                            "bitwise": 55.42168674698795
                        },
                        "percentageDAGsCancel": 8.51063829787234
                    }
                },
                "clang_O3": {
                    "expr": "(~(~(~c & b) * (~b & c) + c + (c | b) * (c & b) | (~(c ^ b) + (~b & c) * -2 | e) + (c ^ b) + (~b & c) * -2) + ((~c & b) * (~b & c) + c + (c | b) * (c & b) - (~(c ^ b) + (~b & c) * -2 | e) + (c ^ b) + (~b & c) * -2) & (~c | b) + c) * (~(~c | b) + c & (~(~c & b) * (~b & c) + c + (c | b) * (c & b) | (~(c ^ b) + (~b & c) * -2 | e) + (c ^ b) + (~b & c) * -2) + ((~c & b) * (~b & c) + c + (c | b) * (c & b) - (~(c ^ b) + (~b & c) * -2 | e) + (c ^ b) + (~b & c) * -2)) + ((~(~c & b) * (~b & c) + c + (c | b) * (c & b) | (~(c ^ b) + (~b & c) * -2 | e) + (c ^ b) + (~b & c) * -2) + ((~c & b) * (~b & c) + c + (c | b) * (c & b) - (~(c ^ b) + (~b & c) * -2 | e) + (c ^ b) + (~b & c) * -2) | (~c | b) + c) * ((~(~c & b) * (~b & c) + c + (c | b) * (c & b) | (~(c ^ b) + (~b & c) * -2 | e) + (c ^ b) + (~b & c) * -2) + ((~c & b) * (~b & c) + c + (c | b) * (c & b) - (~(c ^ b) + (~b & c) * -2 | e) + (c ^ b) + (~b & c) * -2) & (~c | b) + c)",
                    "attributes": {
                        "numOps": 237,
                        "nestedExprLevel": 54,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 16.842105263157894,
                        "opsPercentages": {
                            "arithmetic": 29.11392405063291,
                            "mul": 14.345991561181433,
                            "bitwise": 56.540084388185655
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "clang_default": {
                    "expr": "((((b ^ c) + ((b ^ 0xffffffff) & c) * -2 ^ 0xffffffff | e) + (b ^ c) + ((b ^ 0xffffffff) & c) * -2 + 1 ^ 0xffffffff) + (((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) - (c ^ 0xffffffff)) + 1 + (0xffffffff - ((((b ^ c) + ((b ^ 0xffffffff) & c) * -2 ^ 0xffffffff | e) + (b ^ c) + ((b ^ 0xffffffff) & c) * -2 + 1 ^ 0xffffffff) + 1) | 0xffffffff - ((((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) - (c ^ 0xffffffff)) + -1)) & (c ^ 0xffffffff | b) + c) * ((((b ^ c) + ((b ^ 0xffffffff) & c) * -2 ^ 0xffffffff | e) + (b ^ c) + ((b ^ 0xffffffff) & c) * -2 + 1 ^ 0xffffffff) + (((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) - (c ^ 0xffffffff)) + 1 + (0xffffffff - ((((b ^ c) + ((b ^ 0xffffffff) & c) * -2 ^ 0xffffffff | e) + (b ^ c) + ((b ^ 0xffffffff) & c) * -2 + 1 ^ 0xffffffff) + 1) | 0xffffffff - ((((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) - (c ^ 0xffffffff)) + -1)) | (c ^ 0xffffffff | b) + c) + ((((b ^ c) + ((b ^ 0xffffffff) & c) * -2 ^ 0xffffffff | e) + (b ^ c) + ((b ^ 0xffffffff) & c) * -2 + 1 ^ 0xffffffff) + (((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) - (c ^ 0xffffffff)) + 1 + (0xffffffff - ((((b ^ c) + ((b ^ 0xffffffff) & c) * -2 ^ 0xffffffff | e) + (b ^ c) + ((b ^ 0xffffffff) & c) * -2 + 1 ^ 0xffffffff) + 1) | 0xffffffff - ((((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) - (c ^ 0xffffffff)) + -1)) & ((c ^ 0xffffffff | b) + c ^ 0xffffffff)) * (((((b ^ c) + ((b ^ 0xffffffff) & c) * -2 ^ 0xffffffff | e) + (b ^ c) + ((b ^ 0xffffffff) & c) * -2 + 1 ^ 0xffffffff) + (((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) - (c ^ 0xffffffff)) + 1 + (0xffffffff - ((((b ^ c) + ((b ^ 0xffffffff) & c) * -2 ^ 0xffffffff | e) + (b ^ c) + ((b ^ 0xffffffff) & c) * -2 + 1 ^ 0xffffffff) + 1) | 0xffffffff - ((((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) - (c ^ 0xffffffff)) + -1)) ^ 0xffffffff) & (c ^ 0xffffffff | b) + c)",
                    "attributes": {
                        "numOps": 281,
                        "nestedExprLevel": 108,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 1.4035087719298245,
                        "opsPercentages": {
                            "arithmetic": 35.94306049822064,
                            "mul": 12.099644128113878,
                            "bitwise": 51.95729537366548
                        },
                        "percentageDAGsCancel": 7.317073170731707
                    }
                },
                "msvc_default": {
                    "expr": "(~((~((b ^ c) + (~b & c) * -2) | e) + 1 + (b ^ c) + (~b & c) * -2) + (((c & b) * (c | b) + (~b & c) * (~c & b)) - ~c) + 1 + (0xffffffff - (~((~((b ^ c) + (~b & c) * -2) | e) + 1 + (b ^ c) + (~b & c) * -2) + 1) | 0xffffffff - ((((c & b) * (c | b) + (~b & c) * (~c & b) ) - ~c) + -1)) & (~c | b) + c) * (~((~((b ^ c) + (~b & c) * -2) | e) + 1 + (b ^ c) + (~b & c) * -2) + (((c & b) * (c | b) + (~b & c) * (~c & b)) - ~c) + 1 + (0xffffffff - (~((~((b ^ c) + (~b & c) * -2) | e) + 1 + (b ^ c) + (~b & c) * -2) + 1) | 0xffffffff - ((((c & b) * (c | b) + (~b & c) * (~c & b) ) - ~c) + -1)) | (~c | b) + c) + (~((~((b ^ c) + (~b & c) * -2) | e) + 1 + (b ^ c) + (~b & c) * -2) + (((c & b) * (c | b) + (~b & c) * (~c & b)) - ~c) + 1 + (0xffffffff - (~((~((b ^ c) + (~b & c) * -2) | e) + 1 + (b ^ c) + (~b & c) * -2) + 1) | 0xffffffff - ((((c & b) * (c | b) + (~b & c) * (~c & b) ) - ~c) + -1)) & ~((~c | b) + c)) * (~(~((~((b ^ c) + (~b & c) * -2) | e) + 1 + (b ^ c) + (~b & c) * -2) + (((c & b) * (c | b) + (~b & c) * (~c & b)) - ~c) + 1 + (0xffffffff - (~((~((b ^ c) + (~b & c) * -2) | e) + 1 + (b ^ c) + (~b & c) * -2) + 1) | 0xffffffff - ((((c & b) * (c | b) + (~b & c) * (~c & b)) - ~c) + -1))) & (~c | b) + c)",
                    "attributes": {
                        "numOps": 281,
                        "nestedExprLevel": 92,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 1.4035087719298245,
                        "opsPercentages": {
                            "arithmetic": 35.94306049822064,
                            "mul": 12.099644128113878,
                            "bitwise": 51.95729537366548
                        },
                        "percentageDAGsCancel": 7.5
                    }
                },
                "gcc_O3": {
                    "expr": "(~c & ((b & c) * (b | c) + ~b & c * (~c & b) - ~c) + ~(~(b ^ c) + ~b & c * 2 | e) + (b ^ c) + ~b & c * -2 + ((~(b ^ c) + ~b & c * 2 | e) + (b ^ c) + ~b & c * -2 | ~c - (b & c) * (b | c) + ~b & c * (~c & b))) * (~((b & c) * (b | c) + ~b & c * (~c & b) - ~c) + ~(~(b ^ c) + ~b & c * 2 | e) + (b ^ c) + ~b & c * -2 + ((~(b ^ c) + ~b & c * 2 | e) + (b ^ c) + ~b & c * -2 | ~c - (b & c) * (b | c) + ~b & c * (~c & b)) & c) + (((b & c) * (b | c) + ~b & c * (~c & b) - ~c) + ~(~(b ^ c) + ~b & c * 2 | e) + (b ^ c) + ~b & c * -2 + ((~(b ^ c) + ~b & c * 2 | e) + (b ^ c) + ~b & c * -2 | ~c - (b & c) * (b | c) + ~b & c * (~c & b)) | c) * (((b & c) * (b | c) + ~b & c * (~c & b) - ~c) + ~(~(b ^ c) + ~b & c * 2 | e) + (b ^ c) + ~b & c * -2 + ((~(b ^ c) + ~b & c * 2 | e) + (b ^ c) + ~b & c * -2 | ~c - (b & c) * (b | c) + ~b & c * (~c & b)) & c)",
                    "attributes": {
                        "numOps": 225,
                        "nestedExprLevel": 38,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 21.052631578947366,
                        "opsPercentages": {
                            "arithmetic": 25.333333333333336,
                            "mul": 15.11111111111111,
                            "bitwise": 59.55555555555555
                        },
                        "percentageDAGsCancel": 6.8181818181818175
                    }
                }
            }
        },
        {
            "num": 88,
            "gt": {
                "expr": "((((a|c)|((a^c)-(-a)))^(~((b&a)^(~a)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "(((((a & ~ c) + c) & ~ ((((a | c) - (a & c)) + ~ (~ (a - 1))) + 1)) + ((((a | c) - (a & c)) + ~ (~ (a - 1))) + 1)) | (((((~ b | a) - ~ b) & (- a - 1)) - (((~ b | a) - ~ b) | (- a - 1))) - 1)) - (((((a & ~ c) + c) & ~ ((((a | c) - (a & c)) + ~ (~ (a - 1))) + 1)) + ((((a | c) - (a & c)) + ~ (~ (a - 1))) + 1)) & (((((~ b | a) - ~ b) & (- a - 1)) - (((~ b | a) - ~ b) | (- a - 1))) - 1))",
                "attributes": {
                    "numOps": 79,
                    "nestedExprLevel": 45,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 46.835443037974684,
                        "mul": 0.0,
                        "bitwise": 53.16455696202531
                    },
                    "percentageDAGsCancel": 15.384615384615385
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((a & b & ~a) - (~a | b)) - 1 ^ ((~c & a) + c & -((a ^ c) + (a - 1)) - 2) + a + (a ^ c)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 7,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 74.68354430379746,
                        "opsPercentages": {
                            "arithmetic": 45.0,
                            "mul": 0.0,
                            "bitwise": 55.00000000000001
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "(((c + (~c & a) & ~(((a | c) - (a & c)) + a)) - (a & c)) + (a | c) + a | ((~a & b + 1 + (~b | a)) - (~a | b + 1 + (~b | a))) - 1) - (((c + (~c & a) & ~(((a | c) - (a & c)) + a)) - (a & c)) + (a | c) + a & ((~a & b + 1 + (~b | a)) - (~a | b + 1 + (~b | a))) - 1)",
                    "attributes": {
                        "numOps": 59,
                        "nestedExprLevel": 22,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 25.31645569620253,
                        "opsPercentages": {
                            "arithmetic": 42.3728813559322,
                            "mul": 0.0,
                            "bitwise": 57.6271186440678
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "clang_O3": {
                    "expr": "(~(c ^ a) + a & (~c & a) + c) + (c ^ a) + a ^ ~b & a",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 83.54430379746836,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 0.0,
                            "bitwise": 69.23076923076923
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((a & (c ^ 0xffffffff)) + c & (((a | c) - (a & c)) + a ^ 0xffffffff)) + ((a | c) - (a & c)) + a | (((b ^ 0xffffffff | a) - (b ^ 0xffffffff) & 0xffffffff - a) - ((b ^ 0xffffffff | a) - (b ^ 0xffffffff) | 0xffffffff - a)) - 1) - (((a & (c ^ 0xffffffff)) + c & (((a | c) - (a & c)) + a ^ 0xffffffff)) + ((a | c) - (a & c)) + a & (((b ^ 0xffffffff | a) - (b ^ 0xffffffff) & 0xffffffff - a) - ((b ^ 0xffffffff | a) - (b ^ 0xffffffff) | 0xffffffff - a)) - 1)",
                    "attributes": {
                        "numOps": 59,
                        "nestedExprLevel": 27,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 25.31645569620253,
                        "opsPercentages": {
                            "arithmetic": 42.3728813559322,
                            "mul": 0.0,
                            "bitwise": 57.6271186440678
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_default": {
                    "expr": "(((~c & a) + c & ~(((a | c) - (a & c)) + a) ) + ((a | c) - (a & c)) + a | (((~b | a) - ~b & 0xffffffff - a) - ((~b | a) - ~b | 0xffffffff - a)) - 1) - (((~c & a) + c & ~(((a | c) - (a & c)) + a) ) + ((a | c) - (a & c)) + a & (((~b | a) - ~b & 0xffffffff - a) - ((~b | a) - ~b | 0xffffffff - a)) - 1)",
                    "attributes": {
                        "numOps": 59,
                        "nestedExprLevel": 22,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 25.31645569620253,
                        "opsPercentages": {
                            "arithmetic": 42.3728813559322,
                            "mul": 0.0,
                            "bitwise": 57.6271186440678
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "gcc_O3": {
                    "expr": "(a - 1) + (c ^ a) + 1 + ((~c & a) + c & -(a - 1) + (c ^ a) - 2) ^ ~b & a",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 78.48101265822784,
                        "opsPercentages": {
                            "arithmetic": 52.94117647058824,
                            "mul": 0.0,
                            "bitwise": 47.05882352941176
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 89,
            "gt": {
                "expr": "(((((-a)&a)+(a-a))|(~((-b)^(a^b)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 0.0,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "(((((((~ (~ a + 1) | a) + (~ a + 1)) + 1) ^ ((a + ~ a) + 1)) + (((((~ (~ a + 1) | a) + (~ a + 1)) + 1) & ((a + ~ a) + 1)) << 1)) + (((~ b + 1) & ((a | b) - (a & b))) + ~ ((~ b + 1) | ((a | b) - (a & b))))) + 1) + ((- (((((~ (~ a + 1) | a) + (~ a + 1)) + 1) ^ ((a + ~ a) + 1)) + (((((~ (~ a + 1) | a) + (~ a + 1)) + 1) & ((a + ~ a) + 1)) << 1)) - 1) | (- (((~ b + 1) & ((a | b) - (a & b))) + ~ ((~ b + 1) | ((a | b) - (a & b)))) - 1))",
                "attributes": {
                    "numOps": 88,
                    "nestedExprLevel": 48,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 48.86363636363637,
                        "mul": 0.0,
                        "bitwise": 51.13636363636363
                    },
                    "percentageDAGsCancel": 13.793103448275861
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a ^ b ^ -b | (-a | a) - 1) + ~(a ^ b | -b) + (-b & (a ^ b)) + (~a & a - 1) + 2",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 5,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 76.13636363636364,
                        "opsPercentages": {
                            "arithmetic": 47.61904761904761,
                            "mul": 0.0,
                            "bitwise": 52.38095238095239
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~a + 1) | a) + ~a + 3 + ~-b | (a | b) - (a & b) + (~((~(~a + 1) | a) + ~a + 2) | -b | (a | b) - (a & b) - -b & (a | b) - (a & b)) + -b & (a | b) - (a & b)",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 10,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 53.40909090909091,
                        "opsPercentages": {
                            "arithmetic": 43.90243902439025,
                            "mul": 0.0,
                            "bitwise": 56.09756097560976
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "clang_O3": {
                    "expr": "(b ^ a ^ b | (-a | a) - 1) + ~(b ^ a | b) + (~a & a - 1) + (b ^ a & b) + 2",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 4,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 79.54545454545455,
                        "opsPercentages": {
                            "arithmetic": 38.88888888888889,
                            "mul": 0.0,
                            "bitwise": 61.111111111111114
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "clang_default": {
                    "expr": "(((a ^ 0xffffffff) + 1 ^ 0xffffffff | a) + (a ^ 0xffffffff) + 2 ^ a + (a ^ 0xffffffff) + 1) + (((a ^ 0xffffffff) + 1 ^ 0xffffffff | a) + (a ^ 0xffffffff) + 2 & a + (a ^ 0xffffffff) + 1) * 2 + ((b ^ 0xffffffff) + 1 & (a | b) - (a & b)) + (((b ^ 0xffffffff) + 1 | (a | b) - (a & b)) ^ 0xffffffff) + 1 + (0xffffffff - ((((a ^ 0xffffffff) + 1 ^ 0xffffffff | a) + (a ^ 0xffffffff) + 2 ^ a + (a ^ 0xffffffff) + 1) + (((a ^ 0xffffffff) + 1 ^ 0xffffffff | a) + (a ^ 0xffffffff) + 2 & a + (a ^ 0xffffffff) + 1) * 2) | 0xffffffff - (((b ^ 0xffffffff) + 1 & (a | b) - (a & b)) + (((b ^ 0xffffffff) + 1 | (a | b) - (a & b)) ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 82,
                        "nestedExprLevel": 27,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 6.8181818181818175,
                        "opsPercentages": {
                            "arithmetic": 45.1219512195122,
                            "mul": 2.4390243902439024,
                            "bitwise": 52.4390243902439
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~(~a + 1) | a) + 2 + ~a ^ a + 1 + ~a) + ((~(~a + 1) | a) + 2 + ~a & a + 1 + ~a) * 2 + (~b + 1 & (a | b) - (a & b)) + ~(~b + 1 | (a | b) - (a & b)) + 1 + (0xffffffff - (((~(~a + 1) | a) + 2 + ~a ^ a + 1 + ~a) + ((~(~a + 1) | a) + 2 + ~a & a + 1 + ~a) * 2) | 0xffffffff - ((~b + 1 & (a | b) - (a & b)) + ~(~b + 1 | (a | b) - (a & b))))",
                    "attributes": {
                        "numOps": 82,
                        "nestedExprLevel": 20,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 6.8181818181818175,
                        "opsPercentages": {
                            "arithmetic": 45.1219512195122,
                            "mul": 2.4390243902439024,
                            "bitwise": 52.4390243902439
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "gcc_O3": {
                    "expr": "(b & b ^ a) + 1 + ((a - 1 & ~a) - (b | b ^ a)) + ((-a | a) - 1 | b ^ b ^ a)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 80.68181818181817,
                        "opsPercentages": {
                            "arithmetic": 41.17647058823529,
                            "mul": 0.0,
                            "bitwise": 58.82352941176471
                        },
                        "percentageDAGsCancel": 23.52941176470588
                    }
                }
            }
        },
        {
            "num": 90,
            "gt": {
                "expr": "(((e^(a*e))+((~e)^e)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 20.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((e - ((a & e) * (a | e) + (a & ~ e) * (~ a & e))) - ((e | ~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e))) + (e | ~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e))))) - 2) - ~ (((- e - 1) | e) - ((- e - 1) & e))) - 1",
                "attributes": {
                    "numOps": 45,
                    "nestedExprLevel": 21,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 31.11111111111111,
                        "mul": 13.333333333333334,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 8.695652173913043
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(e - ((a & e) * (a | e) + (~a & e) * (~e & a))) + (~((~a & e) * (~e & a) + (a & e) * (a | e)) | e) * -2 + -3",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 42.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 26.923076923076923,
                            "mul": 19.230769230769234,
                            "bitwise": 53.84615384615385
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~((~((a | e) * (a & e) + (~e & a) * (~a & e)) | e) * 2) - (a | e) * (a & e)) - (~e & a) * (~a & e)) + e + -2",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 10,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 42.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 19.230769230769234,
                            "bitwise": 57.692307692307686
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(e - (~a & e) * (~e & a) + (e | a) * (e & a)) + (~(~a & e) * (~e & a) + (e | a) * (e & a) | e) * -2 + -3",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 7,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 42.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 26.923076923076923,
                            "mul": 19.230769230769234,
                            "bitwise": 53.84615384615385
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "clang_default": {
                    "expr": "(((e - ((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e))) - ((e | (a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff) + (e | (a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff))) - ((0xffffffff - e | e) - (0xffffffff - e & e) ^ 0xffffffff)) + -3",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 19,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 4.444444444444445,
                        "opsPercentages": {
                            "arithmetic": 27.906976744186046,
                            "mul": 13.953488372093023,
                            "bitwise": 58.139534883720934
                        },
                        "percentageDAGsCancel": 13.636363636363635
                    }
                },
                "msvc_default": {
                    "expr": "(((e - ((a & e) * (a | e) + (~e & a) * (~a & e)) ) - ((~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) + (~((a & e) * (a | e) + (~e & a) * (~a & e)) | e))) - ~((0xffffffff - e | e) - (0xffffffff - e & e))) + -3",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 18,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 4.444444444444445,
                        "opsPercentages": {
                            "arithmetic": 27.906976744186046,
                            "mul": 13.953488372093023,
                            "bitwise": 58.139534883720934
                        },
                        "percentageDAGsCancel": 13.636363636363635
                    }
                },
                "gcc_O3": {
                    "expr": "(e - (~a & e) * (~e & a) + (a | e) * (a & e)) + (~(~a & e) * (~e & a) + (a | e) * (a & e) | e) * -2 + -3",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 7,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 42.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 26.923076923076923,
                            "mul": 19.230769230769234,
                            "bitwise": 53.84615384615385
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                }
            }
        },
        {
            "num": 91,
            "gt": {
                "expr": "(((a*(b&a))|(-(b+a))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((a & ((~ b | a) - ~ b)) * (a | ((~ b | a) - ~ b)) + (a & ~ ((~ b | a) - ~ b)) * (~ a & ((~ b | a) - ~ b))) & ~ (~ (((b - ~ a) - 1) - 1))) + ~ (((b - ~ a) - 1) - 1)",
                "attributes": {
                    "numOps": 38,
                    "nestedExprLevel": 17,
                    "numDAGs": 19,
                    "opsPercentages": {
                        "arithmetic": 31.57894736842105,
                        "mul": 5.263157894736842,
                        "bitwise": 63.1578947368421
                    },
                    "percentageDAGsCancel": 21.052631578947366
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~a + ~b + 2 + ((a & b) * a + (a & b & ~a) * (~b & a) & (b - ~a) - 2)",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 4,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 52.63157894736842,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 11.11111111111111,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_O1": {
                    "expr": "((~b + 1 + (~b | a) & a) * (~a & b + 1 + (~b | a)) + (b + 1 + (~b | a) | a) * (b + 1 + (~b | a) & a) & b + -1 + a) + ~b + -1 + a",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 7,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 10.526315789473683,
                        "opsPercentages": {
                            "arithmetic": 47.05882352941176,
                            "mul": 5.88235294117647,
                            "bitwise": 47.05882352941176
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_O3": {
                    "expr": "((b + a) - 1 & (b & a) * a) - (b + a)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 4,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 81.57894736842105,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 14.285714285714285,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 33.33333333333333
                    }
                },
                "clang_default": {
                    "expr": "((a & (b ^ 0xffffffff | a) - (b ^ 0xffffffff)) * (a | (b ^ 0xffffffff | a) - (b ^ 0xffffffff)) + (a & ((b ^ 0xffffffff | a) - (b ^ 0xffffffff) ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff | a) - (b ^ 0xffffffff)) & (b - (a ^ 0xffffffff)) - 2) + ((b - (a ^ 0xffffffff)) - 2 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 15,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 10.526315789473683,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 5.88235294117647,
                            "bitwise": 64.70588235294117
                        },
                        "percentageDAGsCancel": 29.411764705882355
                    }
                },
                "msvc_default": {
                    "expr": "(((~b | a) - ~b & a) * ((~b | a) - ~b | a) + (~((~b | a) - ~b) & a) * (~a & (~b | a) - ~b) & (b - ~a) - 2) + ~((b - ~a) - 2)",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 10,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 10.526315789473683,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 5.88235294117647,
                            "bitwise": 64.70588235294117
                        },
                        "percentageDAGsCancel": 23.52941176470588
                    }
                },
                "gcc_O3": {
                    "expr": "((~b & a) * (a & b & ~a) + (a & b) * a & (b - ~a) - 2) + ~b + 2 + ~a",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 4,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 52.63157894736842,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 11.11111111111111,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                }
            }
        },
        {
            "num": 92,
            "gt": {
                "expr": "(((~((d&a)^c))+((c&(a^c))|(-a))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((((~ d | a) + d) + 1) & c) - ((((~ d | a) + d) + 1) | c)) - 1) ^ ~ ((((~ c | (((a - c) - ((a | ~ c) + (a | ~ c))) - 2)) - ~ c) & ~ (~ (a - 1))) + ~ (a - 1))) + ((((((((~ d | a) + d) + 1) & c) - ((((~ d | a) + d) + 1) | c)) - 1) | ((((~ c | (((a - c) - ((a | ~ c) + (a | ~ c))) - 2)) - ~ c) & ~ (~ (a - 1))) + ~ (a - 1))) << 1)) + 1",
                "attributes": {
                    "numOps": 68,
                    "nestedExprLevel": 41,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 44.11764705882353,
                        "mul": 0.0,
                        "bitwise": 55.88235294117647
                    },
                    "percentageDAGsCancel": 7.4074074074074066
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((a - 1 & ((a - c) + (~c | a) * -2) - 2 & c) - a | -((~d | a) + d) - 2 ^ c) * 2 + (-((~d | a) + d) - 2 ^ c ^ a + ~(a - 1 & ((a - c) + (~c | a) * -2) - 2 & c)) + 1",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 11,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 41.17647058823529,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 7.5,
                            "bitwise": 42.5
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "msvc_O1": {
                    "expr": "(~((((a - ((~c | a) * 2 + 2)) - c | ~c) + 1 + c & a - 1) + ~(a - 1)) ^ (((~d | a) + d + 1 & c) - (~d | a) + d + 1 | c) - 1) + ((((a - ((~c | a) * 2 + 2)) - c * 2 | ~c * 2) + ~c * -2 & a * 2 - 2) + ~(a - 1) * 2 | ((~d | a) + d * 2 + 2 & c * 2) - ((~d | a) + d + 1 | c * 2 + 2)) + 1",
                    "attributes": {
                        "numOps": 68,
                        "nestedExprLevel": 20,
                        "numDAGs": 47,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 44.11764705882353,
                            "mul": 14.705882352941178,
                            "bitwise": 41.17647058823529
                        },
                        "percentageDAGsCancel": 4.25531914893617
                    }
                },
                "clang_O3": {
                    "expr": "(a | -((~d | a) + d) - 2 ^ c) * 2 - (a ^ -((~d | a) + d) - 2 ^ c)",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 6,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 76.47058823529412,
                        "opsPercentages": {
                            "arithmetic": 43.75,
                            "mul": 6.25,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((d ^ 0xffffffff | a) + d + 1 & c) - ((d ^ 0xffffffff | a) + d + 1 | c)) - 1 ^ ((c ^ 0xffffffff | ((a - c) - ((a | c ^ 0xffffffff) + (a | c ^ 0xffffffff))) - 2) - (c ^ 0xffffffff) & a - 1) + (a - 1 ^ 0xffffffff) ^ 0xffffffff) + ((((d ^ 0xffffffff | a) + d + 1 & c) - ((d ^ 0xffffffff | a) + d + 1 | c)) - 1 | ((c ^ 0xffffffff | ((a - c) - ((a | c ^ 0xffffffff) + (a | c ^ 0xffffffff))) - 2) - (c ^ 0xffffffff) & a - 1) + (a - 1 ^ 0xffffffff)) * 2 + 1",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 21,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 5.88235294117647,
                        "opsPercentages": {
                            "arithmetic": 46.875,
                            "mul": 1.5625,
                            "bitwise": 51.5625
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "msvc_default": {
                    "expr": "((((~d | a) + 1 + d & c) - ((~d | a) + 1 + d | c)) - 1 ^ ~(((~c | ((a - c) - ((~c | a) + (~c | a))) - 2) - ~c & a - 1) + ~(a - 1))) + 1 + ((((~d | a) + 1 + d & c) - ((~d | a) + 1 + d | c)) - 1 | ((~c | ((a - c) - ((~c | a) + (~c | a))) - 2) - ~c & a - 1) + ~(a - 1)) * 2",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 21,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 5.88235294117647,
                        "opsPercentages": {
                            "arithmetic": 46.875,
                            "mul": 1.5625,
                            "bitwise": 51.5625
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "gcc_O3": {
                    "expr": "(~((a - c) + (~c | a) * -2) - 2 & c & a - 1 + a ^ -((~d | a) + d) - 2 ^ c) + 1 + (((a - c) + (~c | a) * -2) - 2 & c & a - 1 - a | -((~d | a) + d) - 2 ^ c) * 2",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 10,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 41.17647058823529,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 7.5,
                            "bitwise": 42.5
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                }
            }
        },
        {
            "num": 93,
            "gt": {
                "expr": "((-((e&e)*(c-e))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 25.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "~ (((((~ e | e) - ~ e) & ((c & ~ e) - (~ c & e))) * (((~ e | e) - ~ e) | ((c & ~ e) - (~ c & e))) + (((~ e | e) - ~ e) & ~ ((c & ~ e) - (~ c & e))) * (~ ((~ e | e) - ~ e) & ((c & ~ e) - (~ c & e)))) - 1)",
                "attributes": {
                    "numOps": 47,
                    "nestedExprLevel": 19,
                    "numDAGs": 18,
                    "opsPercentages": {
                        "arithmetic": 21.27659574468085,
                        "mul": 4.25531914893617,
                        "bitwise": 74.46808510638297
                    },
                    "percentageDAGsCancel": 5.555555555555555
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-((e + ~c & e) * ((~e & c) - (~c & e) & ~e) + ((~e & c) - (~c & e) & e) * ((~e & c) - (~c & e) | e))",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 8,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 44.680851063829785,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 7.6923076923076925,
                            "bitwise": 69.23076923076923
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "-((~(~e & c) - (~c & e) & e) * ((~e & c) - (~c & e) & ~e) + ((~e & c) - (~c & e) | e) * ((~e & c) - (~c & e) & e))",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 10,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 36.17021276595745,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 6.666666666666667,
                            "bitwise": 73.33333333333333
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "clang_O3": {
                    "expr": "-(((~e & c) - (~c & e) & ~e) * (~(~e & c) - (~c & e) & e) + ((~e & c) - (~c & e) | e) * ((~e & c) - (~c & e) & e))",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 10,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 36.17021276595745,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 6.666666666666667,
                            "bitwise": 73.33333333333333
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_default": {
                    "expr": "(((e ^ 0xffffffff | e) - (e ^ 0xffffffff) & (c & (e ^ 0xffffffff)) - ((c ^ 0xffffffff) & e)) * ((e ^ 0xffffffff | e) - (e ^ 0xffffffff) | (c & (e ^ 0xffffffff)) - ((c ^ 0xffffffff) & e)) + ((e ^ 0xffffffff | e) - (e ^ 0xffffffff) & ((c & (e ^ 0xffffffff)) - ((c ^ 0xffffffff) & e) ^ 0xffffffff)) * (((e ^ 0xffffffff | e) - (e ^ 0xffffffff) ^ 0xffffffff) & (c & (e ^ 0xffffffff)) - ((c ^ 0xffffffff) & e))) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 21,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 21.27659574468085,
                            "mul": 4.25531914893617,
                            "bitwise": 74.46808510638297
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_default": {
                    "expr": "~((-~e - 1 & (~e & c) - (~c & e)) * (-~e - 1 | (~e & c) - (~c & e)) + -1 + (-~e - 1 & ~((~e & c) - (~c & e))) * (~(-~e - 1) & (~e & c) - (~c & e)))",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 12,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 6.382978723404255,
                        "opsPercentages": {
                            "arithmetic": 34.090909090909086,
                            "mul": 4.545454545454546,
                            "bitwise": 61.36363636363637
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "gcc_O3": {
                    "expr": "-((~c + e & e) * (~e & (c & ~e) - (~c & e)) + ((c & ~e) - (~c & e) & e) * ((c & ~e) - (~c & e) | e))",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 8,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 44.680851063829785,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 7.6923076923076925,
                            "bitwise": 69.23076923076923
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                }
            }
        },
        {
            "num": 94,
            "gt": {
                "expr": "((-((c&(b+(c*c)))&((c&d)|(b&c)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 12.5,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "~ (((~ ((~ c | (((b ^ ~ ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + ((b | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) << 1)) + 1)) - ~ c) | ((((~ c | d) - ~ c) & ~ (((~ b | c) + b) + 1)) + (((~ b | c) + b) + 1))) + ((~ c | (((b ^ ~ ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + ((b | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) << 1)) + 1)) - ~ c)) + 1) + 1",
                "attributes": {
                    "numOps": 77,
                    "nestedExprLevel": 37,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 24.675324675324674,
                        "mul": 10.38961038961039,
                        "bitwise": 64.93506493506493
                    },
                    "percentageDAGsCancel": 19.35483870967742
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((c * c | b) * 2 + ~(c * c ^ b) + 1 & c) + (~((c * c | b) * 2 + ~(c * c ^ b) + 1 & c) | b + (~b | c) + 1 + (d & c & -((~b | c) + b) - 2)) )",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 10,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 55.84415584415584,
                        "opsPercentages": {
                            "arithmetic": 32.35294117647059,
                            "mul": 17.647058823529413,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((-2 - ((c + 1 + (~c | d) & ~(b + 1 + (~b | c))) + (~b | c) + b + 1 | ~(c + 1 + (~(c * c) ^ b) + 1 + (c * c * 2 | b * 2) | ~c))) - (~(c * c) ^ b) + 1 + (c * c * 2 | b * 2) | ~c) - c",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 12,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 41.55844155844156,
                        "opsPercentages": {
                            "arithmetic": 37.77777777777778,
                            "mul": 17.77777777777778,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 9.375
                    }
                },
                "clang_O3": {
                    "expr": "~(((-(~b | c) + b - 2 & d & c) + (~b | c) + b + 1 | ~(c * c | b) * 2 - (c * c ^ b) & c) + (c * c | b) * 2 - (c * c ^ b) & c)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 7,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 61.038961038961034,
                        "opsPercentages": {
                            "arithmetic": 30.0,
                            "mul": 20.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c ^ 0xffffffff | (b ^ c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) ^ 0xffffffff) + (b | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) * 2 + 1) - (c ^ 0xffffffff) ^ 0xffffffff | ((c ^ 0xffffffff | d) - (c ^ 0xffffffff) & ((b ^ 0xffffffff | c) + b + 1 ^ 0xffffffff)) + (b ^ 0xffffffff | c) + b + 1) + ((c ^ 0xffffffff | (b ^ c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) ^ 0xffffffff) + (b | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) * 2 + 1) - (c ^ 0xffffffff)) + 1 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 69,
                        "nestedExprLevel": 24,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 10.38961038961039,
                        "opsPercentages": {
                            "arithmetic": 27.536231884057973,
                            "mul": 14.492753623188406,
                            "bitwise": 57.971014492753625
                        },
                        "percentageDAGsCancel": 12.903225806451612
                    }
                },
                "msvc_default": {
                    "expr": "~((~((~c | (~(c * c) ^ b) + 1 + (c * c | b) * 2) - ~c) | (~b | c) + 1 + ((~c | d) - ~c & ~((~b | c) + 1 + b)) + b) + 1 + ((~c | (~(c * c) ^ b) + 1 + (c * c | b) * 2) - ~c)) + 1",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 13,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 41.55844155844156,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 13.333333333333334,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "gcc_O3": {
                    "expr": "~((b + (~b | c) + 1 + (c & d & -b + (~b | c) - 2) | ~~(c * c ^ b) + 1 + (c * c | b) * 2 & c) + ~(c * c ^ b) + 1 + (c * c | b) * 2 & c)",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 7,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 55.84415584415584,
                        "opsPercentages": {
                            "arithmetic": 32.35294117647059,
                            "mul": 17.647058823529413,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 12.0
                    }
                }
            }
        },
        {
            "num": 95,
            "gt": {
                "expr": "(((-(((b-b)^a)&(b+(b+(b|b)))))|((b&a)^b)))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 30.0
                }
            },
            "mba": {
                "expr": "(~ (((~ (((((b + ~ b) + 1) - a) - ((((b + ~ b) + 1) | ~ a) + (((b + ~ b) + 1) | ~ a))) - 2) | (((b | (((b ^ ~ (((b + b) + 1) + ((- b - 1) | (- b - 1)))) + ((b | (((b + b) + 1) + ((- b - 1) | (- b - 1)))) << 1)) + 1)) + (b | (((b ^ ~ (((b + b) + 1) + ((- b - 1) | (- b - 1)))) + ((b | (((b + b) + 1) + ((- b - 1) | (- b - 1)))) << 1)) + 1))) - (b ^ (((b ^ ~ (((b + b) + 1) + ((- b - 1) | (- b - 1)))) + ((b | (((b + b) + 1) + ((- b - 1) | (- b - 1)))) << 1)) + 1)))) - ~ (((((b + ~ b) + 1) - a) - ((((b + ~ b) + 1) | ~ a) + (((b + ~ b) + 1) | ~ a))) - 2)) - 1) & ~ (((((~ b | a) + b) + 1) | b) - ((((~ b | a) + b) + 1) & b))) + (((((~ b | a) + b) + 1) | b) - ((((~ b | a) + b) + 1) & b))",
                "attributes": {
                    "numOps": 136,
                    "nestedExprLevel": 82,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 61.029411764705884,
                        "mul": 0.0,
                        "bitwise": 38.970588235294116
                    },
                    "percentageDAGsCancel": 12.82051282051282
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(b + (~b | a) + 1 ^ b) + (-(-((a - 1) + ~a * 2) - 3 & ((~b + b * 2 + 1 | b) * 2 + (-b - 1 ^ b) + 1 | b) * 2 - ((~b + b * 2 + 1 | b) * 2 + (-b - 1 ^ b) + 1 ^ b)) & (-((~b | a) + b) - 2 ^ b))",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 12,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 65.44117647058823,
                        "opsPercentages": {
                            "arithmetic": 51.06382978723404,
                            "mul": 12.76595744680851,
                            "bitwise": 36.17021276595745
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_O1": {
                    "expr": "(((((~a * 2 - ((b * 2 | b) * 2 - (b * 2 ^ b) | ((~a * 2 - ~b) - b) + a)) - ~b) - b) + a & ~(b + 1 + (~b | a) | b - b + 1 + (~b | a) & b)) - b + 1 + (~b | a) & b) + b + 1 + (~b | a) | b",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 12,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 66.91176470588235,
                        "opsPercentages": {
                            "arithmetic": 42.22222222222222,
                            "mul": 11.11111111111111,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 8.823529411764707
                    }
                },
                "clang_O3": {
                    "expr": "(~b + (~b | a) + 1 ^ b & -((b * 2 | b) * 2 - (b * 2 ^ b) & a)) + b + (~b | a) + 1 ^ b",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 5,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 84.55882352941177,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 14.285714285714285,
                            "bitwise": 52.38095238095239
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "clang_default": {
                    "expr": "(((((((b + (b ^ 0xffffffff)) - a) - ((b + (b ^ 0xffffffff) + 1 | a ^ 0xffffffff) + (b + (b ^ 0xffffffff) + 1 | a ^ 0xffffffff))) - 1 ^ 0xffffffff | ((b | (b ^ b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) ^ 0xffffffff) + (b | b * 2 + 1 + (0xffffffff - b | 0xffffffff - b)) * 2 + 1) + (b | (b ^ b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) ^ 0xffffffff) + (b | b * 2 + 1 + (0xffffffff - b | 0xffffffff - b)) * 2 + 1)) - (b ^ (b ^ b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) ^ 0xffffffff) + (b | b * 2 + 1 + (0xffffffff - b | 0xffffffff - b)) * 2 + 1)) - ((((b + (b ^ 0xffffffff)) - a) - ((b + (b ^ 0xffffffff) + 1 | a ^ 0xffffffff) + (b + (b ^ 0xffffffff) + 1 | a ^ 0xffffffff))) - 1 ^ 0xffffffff)) - 1 ^ 0xffffffff) & (((b ^ 0xffffffff | a) + b + 1 | b) - ((b ^ 0xffffffff | a) + b + 1 & b) ^ 0xffffffff)) + (((b ^ 0xffffffff | a) + b + 1 | b) - ((b ^ 0xffffffff | a) + b + 1 & b))",
                    "attributes": {
                        "numOps": 122,
                        "nestedExprLevel": 35,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 10.294117647058822,
                        "opsPercentages": {
                            "arithmetic": 51.63934426229508,
                            "mul": 7.377049180327869,
                            "bitwise": 40.98360655737705
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(((~((((b + ~b) - a) - ((b + 1 + ~b | ~a) + (b + 1 + ~b | ~a))) - 1) | (((~(b * 2 + 1 + (0xffffffff - b | 0xffffffff - b)) ^ b) + 1 + (b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) | b) * 2 | b) + ((~(b * 2 + 1 + (0xffffffff - b | 0xffffffff - b)) ^ b) + 1 + (b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) | b) * 2 | b)) - ((~(b * 2 + 1 + (0xffffffff - b | 0xffffffff - b)) ^ b) + 1 + (b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) | b) * 2 ^ b)) - ~((((b + ~b) - a) - ((b + 1 + ~b | ~a) + (b + 1 + ~b | ~a))) - 1)) - 1) & ~(((~b | a) + 1 + b | b) - ((~b | a) + 1 + b & b))) + (((~b | a) + 1 + b | b) - ((~b | a) + 1 + b & b))",
                    "attributes": {
                        "numOps": 122,
                        "nestedExprLevel": 35,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 10.294117647058822,
                        "opsPercentages": {
                            "arithmetic": 51.63934426229508,
                            "mul": 7.377049180327869,
                            "bitwise": 40.98360655737705
                        },
                        "percentageDAGsCancel": 12.82051282051282
                    }
                },
                "gcc_O3": {
                    "expr": "(-(-((a - 1) + ~a * 2) - 3 & ((b - b * 2 + 1 ^ b) + 1 + (b * 2 + 1 + ~b | b) * 2 | b) * 2 - ((b - b * 2 + 1 ^ b) + 1 + (b * 2 + 1 + ~b | b) * 2 ^ b)) & (-(~b | a) + b - 2 ^ b)) + ((~b | a) + b + 1 ^ b)",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 11,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 63.970588235294116,
                        "opsPercentages": {
                            "arithmetic": 48.97959183673469,
                            "mul": 16.3265306122449,
                            "bitwise": 34.69387755102041
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 96,
            "gt": {
                "expr": "(((~(~((c+d)-(-c))))-(c|b)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 0.0,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((- (~ ((c | d) + (c & d)) + (~ c + 1)) - 1) + ~ ((c & ~ b) + b)) + 1",
                "attributes": {
                    "numOps": 15,
                    "nestedExprLevel": 8,
                    "numDAGs": 15,
                    "opsPercentages": {
                        "arithmetic": 53.333333333333336,
                        "mul": 0.0,
                        "bitwise": 46.666666666666664
                    },
                    "percentageDAGsCancel": 6.666666666666667
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(b + (~b & c)) + (c - ~(d + c))",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 46.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((((c | d) - (~b & c)) + (c & d)) - b) + c",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 6,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 46.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_O3": {
                    "expr": "(c * 2 + d) - ((~b & c) + b)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 60.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((c & (b ^ 0xffffffff)) + b ^ 0xffffffff) - (((c | d) + (c & d) ^ 0xffffffff) + (c ^ 0xffffffff) + 1)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 7,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 20.0,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 0.0,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~((~b & c) + b) - (~((c | d) + (c & d)) + 1 + ~c)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 5,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 20.0,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 0.0,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(d + c * 2) - ((c & ~b) + b)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 60.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                }
            }
        },
        {
            "num": 97,
            "gt": {
                "expr": "((-((e-a)|(e&(e*(e-e))))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 16.666666666666664,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "~ ((((e + ~ a) + 1) & ~ (((~ e | ((e & ((e & ~ e) - (~ e & e))) * (e | ((e & ~ e) - (~ e & e))) + (e & ~ ((e & ~ e) - (~ e & e))) * (~ e & ((e & ~ e) - (~ e & e))))) + e) + 1)) + (((~ e | ((e & ((e & ~ e) - (~ e & e))) * (e | ((e & ~ e) - (~ e & e))) + (e & ~ ((e & ~ e) - (~ e & e))) * (~ e & ((e & ~ e) - (~ e & e))))) + e) + 1)) + 1",
                "attributes": {
                    "numOps": 74,
                    "nestedExprLevel": 36,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 24.324324324324326,
                        "mul": 5.405405405405405,
                        "bitwise": 70.27027027027027
                    },
                    "percentageDAGsCancel": 47.82608695652174
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "a - e",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 98.64864864864865,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "a - e",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 98.64864864864865,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "a - e",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 98.64864864864865,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e + (a ^ 0xffffffff) + 1 & ((e ^ 0xffffffff | (e & (e & (e ^ 0xffffffff)) - ((e ^ 0xffffffff) & e)) * (e | (e & (e ^ 0xffffffff)) - ((e ^ 0xffffffff) & e)) + (e & ((e & (e ^ 0xffffffff)) - ((e ^ 0xffffffff) & e) ^ 0xffffffff)) * ((e ^ 0xffffffff) & (e & (e ^ 0xffffffff)) - ((e ^ 0xffffffff) & e))) + e + 1 ^ 0xffffffff)) + (e ^ 0xffffffff | (e & (e & (e ^ 0xffffffff)) - ((e ^ 0xffffffff) & e)) * (e | (e & (e ^ 0xffffffff)) - ((e ^ 0xffffffff) & e)) + (e & ((e & (e ^ 0xffffffff)) - ((e ^ 0xffffffff) & e) ^ 0xffffffff)) * ((e ^ 0xffffffff) & (e & (e ^ 0xffffffff)) - ((e ^ 0xffffffff) & e))) + e + 1 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 74,
                        "nestedExprLevel": 33,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 24.324324324324326,
                            "mul": 5.405405405405405,
                            "bitwise": 70.27027027027027
                        },
                        "percentageDAGsCancel": 40.0
                    }
                },
                "msvc_default": {
                    "expr": "~(~e + 1 + (e + 1 + ~a & ~(~e + 1 + e)) + e) + 1",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 81.08108108108108,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "gcc_O3": {
                    "expr": "a - e",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 98.64864864864865,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 98,
            "gt": {
                "expr": "((((-(e+(e+a)))|(-b))*((a&a)*a)))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 25.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "((((~ ((e | (((e | a) + (e | a)) - (e ^ a))) + (e & (((e | a) + (e | a)) - (e ^ a)))) + 1) & ~ (~ (b - 1))) + ~ (b - 1)) & ((((~ a | a) - ~ a) & a) * (((~ a | a) - ~ a) | a) + (((~ a | a) - ~ a) & ~ a) * (~ ((~ a | a) - ~ a) & a))) * ((((~ ((e | (((e | a) + (e | a)) - (e ^ a))) + (e & (((e | a) + (e | a)) - (e ^ a)))) + 1) & ~ (~ (b - 1))) + ~ (b - 1)) | ((((~ a | a) - ~ a) & a) * (((~ a | a) - ~ a) | a) + (((~ a | a) - ~ a) & ~ a) * (~ ((~ a | a) - ~ a) & a))) + ((((~ ((e | (((e | a) + (e | a)) - (e ^ a))) + (e & (((e | a) + (e | a)) - (e ^ a)))) + 1) & ~ (~ (b - 1))) + ~ (b - 1)) & ~ ((((~ a | a) - ~ a) & a) * (((~ a | a) - ~ a) | a) + (((~ a | a) - ~ a) & ~ a) * (~ ((~ a | a) - ~ a) & a))) * (~ (((~ ((e | (((e | a) + (e | a)) - (e ^ a))) + (e & (((e | a) + (e | a)) - (e ^ a)))) + 1) & ~ (~ (b - 1))) + ~ (b - 1)) & ((((~ a | a) - ~ a) & a) * (((~ a | a) - ~ a) | a) + (((~ a | a) - ~ a) & ~ a) * (~ ((~ a | a) - ~ a) & a)))",
                "attributes": {
                    "numOps": 197,
                    "nestedExprLevel": 98,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 28.934010152284262,
                        "mul": 5.0761421319796955,
                        "bitwise": 65.98984771573603
                    },
                    "percentageDAGsCancel": 20.588235294117645
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a * a & ~(b - 1 & -(e + ((e | a) * 2 - (e ^ a)))) + b) * ((b - 1 & -(e + ((e | a) * 2 - (e ^ a)))) - b & ~(a * a)) + ((b - 1 & -(e + ((e | a) * 2 - (e ^ a)))) - b & a * a) * (a * a | (b - 1 & -(e + ((e | a) * 2 - (e ^ a)))) - b)",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 21,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 75.1269035532995,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 20.408163265306122,
                            "bitwise": 36.734693877551024
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~a * a & (-((e & (a | e) * 2 - (a ^ e)) + ((a | e) * 2 - (a ^ e) | e)) & b - 1) + ~(b - 1)) * (~(-((e & (a | e) * 2 - (a ^ e)) + ((a | e) * 2 - (a ^ e) | e)) & b - 1) + ~(b - 1) & a * a) + ((-((e & (a | e) * 2 - (a ^ e)) + ((a | e) * 2 - (a ^ e) | e)) & b - 1) + ~(b - 1) | a * a) * ((-((e & (a | e) * 2 - (a ^ e)) + ((a | e) * 2 - (a ^ e) | e)) & b - 1) + ~(b - 1) & a * a)",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 30,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 58.88324873096447,
                        "opsPercentages": {
                            "arithmetic": 35.80246913580247,
                            "mul": 17.28395061728395,
                            "bitwise": 46.913580246913575
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "clang_O3": {
                    "expr": "(~(b - 1 & ((e ^ a) - e) + (e | a) * -2) - b & a) * (~a & (b - 1 & ((e ^ a) - e) + (e | a) * -2) - b) + ((b - 1 & ((e ^ a) - e) + (e | a) * -2) - b | a) * ((b - 1 & ((e ^ a) - e) + (e | a) * -2) - b & a)",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 17,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 77.15736040609137,
                        "opsPercentages": {
                            "arithmetic": 46.666666666666664,
                            "mul": 13.333333333333334,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 15.789473684210526
                    }
                },
                "clang_default": {
                    "expr": "((((e | ((e | a) + (e | a)) - (e ^ a)) + (e & ((e | a) + (e | a)) - (e ^ a)) ^ 0xffffffff) + 1 & b - 1) + (b - 1 ^ 0xffffffff) & ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) & a) * ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) | a) + ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) & (a ^ 0xffffffff)) * (((a ^ 0xffffffff | a) - (a ^ 0xffffffff) ^ 0xffffffff) & a)) * ((((e | ((e | a) + (e | a)) - (e ^ a)) + (e & ((e | a) + (e | a)) - (e ^ a)) ^ 0xffffffff) + 1 & b - 1) + (b - 1 ^ 0xffffffff) | ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) & a) * ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) | a) + ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) & (a ^ 0xffffffff)) * (((a ^ 0xffffffff | a) - (a ^ 0xffffffff) ^ 0xffffffff) & a)) + ((((e | ((e | a) + (e | a)) - (e ^ a)) + (e & ((e | a) + (e | a)) - (e ^ a)) ^ 0xffffffff) + 1 & b - 1) + (b - 1 ^ 0xffffffff) & (((a ^ 0xffffffff | a) - (a ^ 0xffffffff) & a) * ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) | a) + ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) & (a ^ 0xffffffff)) * (((a ^ 0xffffffff | a) - (a ^ 0xffffffff) ^ 0xffffffff) & a) ^ 0xffffffff)) * (((((e | ((e | a) + (e | a)) - (e ^ a)) + (e & ((e | a) + (e | a)) - (e ^ a)) ^ 0xffffffff ) + 1 & b - 1) + (b - 1 ^ 0xffffffff) ^ 0xffffffff) & ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) & a) * ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) | a) + ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) & (a ^ 0xffffffff)) * (((a ^ 0xffffffff | a) - (a ^ 0xffffffff) ^ 0xffffffff) & a))",
                    "attributes": {
                        "numOps": 189,
                        "nestedExprLevel": 79,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 4.060913705583756,
                        "opsPercentages": {
                            "arithmetic": 30.158730158730158,
                            "mul": 5.291005291005291,
                            "bitwise": 64.55026455026454
                        },
                        "percentageDAGsCancel": 24.242424242424242
                    }
                },
                "msvc_default": {
                    "expr": "((~((((e | a) + (e | a)) - (e ^ a) | e) + (((e | a) + (e | a)) - (e ^ a) & e)) + 1 & b - 1) + ~(b - 1) & (-~a - 1 & a) * (-~a - 1 | a) + (-~a - 1 & ~a) * (~(-~a - 1) & a)) * ((~((((e | a) + (e | a)) - (e ^ a) | e) + (((e | a) + (e | a)) - (e ^ a) & e)) + 1 & b - 1) + ~(b - 1) | (-~a - 1 & a) * (-~a - 1 | a) + (-~a - 1 & ~a) * (~(-~a - 1) & a)) + ((~((((e | a) + (e | a)) - (e ^ a) | e) + (((e | a) + (e | a)) - (e ^ a) & e)) + 1 & b - 1) + ~(b - 1) & ~((-~a - 1 & a) * (-~a - 1 | a) + (-~a - 1 & ~a) * (~(-~a - 1) & a))) * (~((~((((e | a) + (e | a)) - (e ^ a) | e) + (((e | a) + (e | a)) - (e ^ a) & e)) + 1 & b - 1) + ~(b - 1)) & (-~a - 1 & a) * (-~a - 1 | a) + (-~a - 1 & ~a) * (~(-~a - 1) & a))",
                    "attributes": {
                        "numOps": 173,
                        "nestedExprLevel": 52,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 12.18274111675127,
                        "opsPercentages": {
                            "arithmetic": 42.19653179190752,
                            "mul": 5.780346820809249,
                            "bitwise": 52.02312138728323
                        },
                        "percentageDAGsCancel": 30.303030303030305
                    }
                },
                "gcc_O3": {
                    "expr": "(~(e ^ a) - (e + (e | a) * 2) & b - 1 + b & a * a) * (~a * a & (e ^ a) - (e + (e | a) * 2) & b - 1 - b) + ((e ^ a) - (e + (e | a) * 2) & b - 1 - b | a * a) * ((e ^ a) - (e + (e | a) * 2) & b - 1 - b & a * a)",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 10,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 77.15736040609137,
                        "opsPercentages": {
                            "arithmetic": 37.77777777777778,
                            "mul": 22.22222222222222,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 99,
            "gt": {
                "expr": "(((((-b)&b)&c)-(-(a+c))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 0.0,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "((((~ (((~ (~ b + 1) | b) + (~ b + 1)) + 1) | c) + (((~ (~ b + 1) | b) + (~ b + 1)) + 1)) + 1) ^ (~ ((a ^ c) + ((a & c) << 1)) + 1)) - ((~ (((~ (((~ (~ b + 1) | b) + (~ b + 1)) + 1) | c) + (((~ (~ b + 1) | b) + (~ b + 1)) + 1)) + 1) & (~ ((a ^ c) + ((a & c) << 1)) + 1)) + (~ (((~ (((~ (~ b + 1) | b) + (~ b + 1)) + 1) | c) + (((~ (~ b + 1) | b) + (~ b + 1)) + 1)) + 1) & (~ ((a ^ c) + ((a & c) << 1)) + 1)))",
                "attributes": {
                    "numOps": 85,
                    "nestedExprLevel": 48,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 44.70588235294118,
                        "mul": 0.0,
                        "bitwise": 55.294117647058826
                    },
                    "percentageDAGsCancel": 9.523809523809524
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~b & b - 1) + ((-b | b) - 1 | c) + 2 ^ -((a & c) * 2 + (a ^ c))) + (-((a & c) * 2 + (a ^ c)) & -((~b & b - 1) + 1 + ((-b | b) - 1 | c)) - 2) * -2",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 11,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 58.82352941176471,
                        "opsPercentages": {
                            "arithmetic": 51.42857142857142,
                            "mul": 8.571428571428571,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "msvc_O1": {
                    "expr": "((a & c) * -2 - (a ^ c) ^ ~b + 3 + (~(~b + 2 + ~(~b + 1) | b) | c) + ~(~b + 1) | b) + (~~b + 3 + (~(~b + 2 + ~(~b + 1) | b) | c) + ~(~b + 1) | b & (a & c) * -2 - (a ^ c)) * -2",
                    "attributes": {
                        "numOps": 50,
                        "nestedExprLevel": 11,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 41.17647058823529,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 6.0,
                            "bitwise": 54.0
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "clang_O3": {
                    "expr": "(~b & b - 1 + -~b & b - 1 - 2 | c + 2 ^ -((c ^ a) + (c & a) * 2)) + (-(~b & b - 1 + -~b & b - 1 - 2 | c) - 3 & -((c ^ a) + (c & a) * 2)) * -2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 7,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 55.294117647058826,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 7.894736842105263,
                            "bitwise": 42.10526315789473
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "clang_default": {
                    "expr": "((((b ^ 0xffffffff) + 1 ^ 0xffffffff | b) + (b ^ 0xffffffff) + 2 ^ 0xffffffff | c) + ((b ^ 0xffffffff) + 1 ^ 0xffffffff | b) + (b ^ 0xffffffff) + 3 ^ ((a ^ c) + (a & c) * 2 ^ 0xffffffff) + 1) - ((((((b ^ 0xffffffff) + 1 ^ 0xffffffff | b) + (b ^ 0xffffffff) + 2 ^ 0xffffffff | c) + ((b ^ 0xffffffff) + 1 ^ 0xffffffff | b) + (b ^ 0xffffffff) + 3 ^ 0xffffffff) & ((a ^ c) + (a & c) * 2 ^ 0xffffffff) + 1) + (((((b ^ 0xffffffff) + 1 ^ 0xffffffff | b) + (b ^ 0xffffffff) + 2 ^ 0xffffffff | c) + ((b ^ 0xffffffff) + 1 ^ 0xffffffff | b) + (b ^ 0xffffffff) + 3 ^ 0xffffffff) & ((a ^ c) + (a & c) * 2 ^ 0xffffffff) + 1))",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 28,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 10.588235294117647,
                        "opsPercentages": {
                            "arithmetic": 38.15789473684211,
                            "mul": 3.9473684210526314,
                            "bitwise": 57.89473684210527
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "msvc_default": {
                    "expr": "((~((~(~b + 1) | b) + 2 + ~b) | c) + (~(~b + 1) | b) + 3 + ~b ^ ~((a ^ c) + (a & c) * 2) + 1) - ((~((~((~(~b + 1) | b) + 2 + ~b) | c) + (~(~b + 1) | b) + 3 + ~b) & ~((a ^ c) + (a & c) * 2) + 1) + (~((~((~(~b + 1) | b) + 2 + ~b) | c) + (~(~b + 1) | b) + 3 + ~b) & ~((a ^ c) + (a & c) * 2) + 1))",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 25,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 10.588235294117647,
                        "opsPercentages": {
                            "arithmetic": 38.15789473684211,
                            "mul": 3.9473684210526314,
                            "bitwise": 57.89473684210527
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "gcc_O3": {
                    "expr": "(((-b | b) - 1 | c) + 1 + (b - 1 & ~b) + 1 ^ -((c ^ a) + (c & a) * 2)) + (-((-b | b) - 1 | c) + 1 + (b - 1 & ~b) - 2 & -((c ^ a) + (c & a) * 2)) * -2",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 11,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 57.647058823529406,
                        "opsPercentages": {
                            "arithmetic": 52.77777777777778,
                            "mul": 8.333333333333332,
                            "bitwise": 38.88888888888889
                        },
                        "percentageDAGsCancel": 20.833333333333336
                    }
                }
            }
        },
        {
            "num": 100,
            "gt": {
                "expr": "((~(((~(a+((a^a)|a)))&d)+(c|c))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 37.5
                }
            },
            "mba": {
                "expr": "- ((((~ (- (((a ^ ~ ((((((a - a) - ((a | ~ a) << 1)) - 2) + a) + 1) + ((- (((a - a) - ((a | ~ a) << 1)) - 2) - 1) | (- a - 1)))) + ((a | ((((((a - a) - ((a | ~ a) << 1)) - 2) + a) + 1) + ((- (((a - a) - ((a | ~ a) << 1)) - 2) - 1) | (- a - 1)))) + (a | ((((((a - a) - ((a | ~ a) << 1)) - 2) + a) + 1) + ((- (((a - a) - ((a | ~ a) << 1)) - 2) - 1) | (- a - 1)))))) + 1) - 1) | d) - ~ (- (((a ^ ~ ((((((a - a) - ((a | ~ a) << 1)) - 2) + a) + 1) + ((- (((a - a) - ((a | ~ a) << 1)) - 2) - 1) | (- a - 1)))) + ((a | ((((((a - a) - ((a | ~ a) << 1)) - 2) + a) + 1) + ((- (((a - a) - ((a | ~ a) << 1)) - 2) - 1) | (- a - 1)))) + (a | ((((((a - a) - ((a | ~ a) << 1)) - 2) + a) + 1) + ((- (((a - a) - ((a | ~ a) << 1)) - 2) - 1) | (- a - 1)))))) + 1) - 1)) | (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + (((~ (- (((a ^ ~ ((((((a - a) - ((a | ~ a) << 1)) - 2) + a) + 1) + ((- (((a - a) - ((a | ~ a) << 1)) - 2) - 1) | (- a - 1)))) + ((a | ((((((a - a) - ((a | ~ a) << 1)) - 2) + a) + 1) + ((- (((a - a) - ((a | ~ a) << 1)) - 2) - 1) | (- a - 1)))) + (a | ((((((a - a) - ((a | ~ a) << 1)) - 2) + a) + 1) + ((- (((a - a) - ((a | ~ a) << 1)) - 2) - 1) | (- a - 1)))))) + 1) - 1) | d) - ~ (- (((a ^ ~ ((((((a - a) - ((a | ~ a) << 1)) - 2) + a) + 1) + ((- (((a - a) - ((a | ~ a) << 1)) - 2) - 1) | (- a - 1)))) + ((a | ((((((a - a) - ((a | ~ a) << 1)) - 2) + a) + 1) + ((- (((a - a) - ((a | ~ a) << 1)) - 2) - 1) | (- a - 1)))) + (a | ((((((a - a) - ((a | ~ a) << 1)) - 2) + a) + 1) + ((- (((a - a) - ((a | ~ a) << 1)) - 2) - 1) | (- a - 1)))))) + 1) - 1)) & (((c + c) + 1) + ((- c - 1) | (- c - 1))))) - 1",
                "attributes": {
                    "numOps": 305,
                    "nestedExprLevel": 188,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 63.934426229508205,
                        "mul": 0.0,
                        "bitwise": 36.0655737704918
                    },
                    "percentageDAGsCancel": 19.444444444444446
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(~c + c * 2 + 1 + (~(a * 2) & d))",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 97.04918032786885,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 22.22222222222222,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "~((a * 2 | d) + a * -2 | c) - ((a * 2 | d) + a * -2 & c)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 95.40983606557377,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 28.57142857142857,
                            "bitwise": 35.714285714285715
                        },
                        "percentageDAGsCancel": 22.22222222222222
                    }
                },
                "clang_O3": {
                    "expr": "~((~(a * 2) & d) + c)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 4,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 98.36065573770492,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((0xffffffff - ((a ^ a + (a | a ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((a | a ^ 0xffffffff) * -2 + -2) | 0xffffffff - a) ^ 0xffffffff) + (a | a + (a | a ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((a | a ^ 0xffffffff) * -2 + -2) | 0xffffffff - a)) + (a | a + (a | a ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((a | a ^ 0xffffffff) * -2 + -2) | 0xffffffff - a)) + 1) ^ 0xffffffff | d) - (0xffffffff - ((a ^ a + (a | a ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((a | a ^ 0xffffffff) * -2 + -2) | 0xffffffff - a) ^ 0xffffffff) + (a | a + (a | a ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((a | a ^ 0xffffffff) * -2 + -2) | 0xffffffff - a)) + (a | a + (a | a ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((a | a ^ 0xffffffff) * -2 + -2) | 0xffffffff - a)) + 1) ^ 0xffffffff) | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + ((0xffffffff - ((a ^ a + (a | a ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((a | a ^ 0xffffffff) * -2 + -2) | 0xffffffff - a) ^ 0xffffffff) + (a | a + (a | a ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((a | a ^ 0xffffffff) * -2 + -2) | 0xffffffff - a)) + (a | a + (a | a ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((a | a ^ 0xffffffff) * -2 + -2) | 0xffffffff - a)) + 1) ^ 0xffffffff | d) - (0xffffffff - ((a ^ a + (a | a ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((a | a ^ 0xffffffff) * -2 + -2) | 0xffffffff - a) ^ 0xffffffff) + (a | a + (a | a ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((a | a ^ 0xffffffff) * -2 + -2) | 0xffffffff - a)) + (a | a + (a | a ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((a | a ^ 0xffffffff) * -2 + -2) | 0xffffffff - a)) + 1) ^ 0xffffffff) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)))",
                    "attributes": {
                        "numOps": 261,
                        "nestedExprLevel": 50,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 14.426229508196723,
                        "opsPercentages": {
                            "arithmetic": 57.08812260536399,
                            "mul": 9.961685823754788,
                            "bitwise": 32.95019157088122
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (((~(a * -2 - 1) | d) - ~(a * -2 - 1) | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + ((~(a * -2 - 1) | d) - ~(a * -2 - 1) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)))",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 9,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 87.8688524590164,
                        "opsPercentages": {
                            "arithmetic": 56.75675675675676,
                            "mul": 16.216216216216218,
                            "bitwise": 27.027027027027028
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(c + (~(a * 2) & d))",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 4,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 98.36065573770492,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 101,
            "gt": {
                "expr": "((b&((-(-(b&b)))*((-a)^(a|(b*b))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 22.22222222222222,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "(~ b | (((~ (~ ((((~ b | b) + b) + 1) - 1)) + 1) & (((~ a + 1) | ((a & ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((b & b) * (b | b) + (b & ~ b) * (~ b & b)))) - ((~ a + 1) & ((a & ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((b & b) * (b | b) + (b & ~ b) * (~ b & b)))))) * ((~ (~ ((((~ b | b) + b) + 1) - 1)) + 1) | (((~ a + 1) | ((a & ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((b & b) * (b | b) + (b & ~ b) * (~ b & b)))) - ((~ a + 1) & ((a & ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((b & b) * (b | b) + (b & ~ b) * (~ b & b)))))) + ((~ (~ ((((~ b | b) + b) + 1) - 1)) + 1) & ~ (((~ a + 1) | ((a & ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((b & b) * (b | b) + (b & ~ b) * (~ b & b)))) - ((~ a + 1) & ((a & ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((b & b) * (b | b) + (b & ~ b) * (~ b & b)))))) * (~ (~ (~ ((((~ b | b) + b) + 1) - 1)) + 1) & (((~ a + 1) | ((a & ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((b & b) * (b | b) + (b & ~ b) * (~ b & b)))) - ((~ a + 1) & ((a & ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((b & b) * (b | b) + (b & ~ b) * (~ b & b)))))))) - ~ b",
                "attributes": {
                    "numOps": 241,
                    "nestedExprLevel": 103,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 22.40663900414938,
                        "mul": 14.107883817427386,
                        "bitwise": 63.48547717842323
                    },
                    "percentageDAGsCancel": 26.47058823529412
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b * b + (~(b * b) & a) ^ -a) & ~b) * ((b * b + (~(b * b) & a) ^ a - 1) & b) + ((b * b + (~(b * b) & a) ^ -a) & b) * (b * b + (~(b * b) & a) ^ -a | b) & b",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 13,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 84.64730290456431,
                        "opsPercentages": {
                            "arithmetic": 24.324324324324326,
                            "mul": 27.027027027027028,
                            "bitwise": 48.64864864864865
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "msvc_O1": {
                    "expr": "b + 1 + ((~(-a | (~(b * b) & a) + b * b) - (-a & (~(b * b) & a) + b * b) & b) * ((-a | (~(b * b) & a) + b * b) - (-a & (~(b * b) & a) + b * b) & ~b) + ((-a | (~(b * b) & a) + b * b) - (-a & (~(b * b) & a) + b * b) | b) * ((-a | (~(b * b) & a) + b * b) - (-a & (~(b * b) & a) + b * b) & b) | ~b )",
                    "attributes": {
                        "numOps": 73,
                        "nestedExprLevel": 23,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 69.70954356846472,
                        "opsPercentages": {
                            "arithmetic": 31.506849315068493,
                            "mul": 24.65753424657534,
                            "bitwise": 43.83561643835616
                        },
                        "percentageDAGsCancel": 9.523809523809524
                    }
                },
                "clang_O3": {
                    "expr": "((~(b * b) & a) + b * b ^ -a & ~b) * (~(~(b * b) & a) + b * b ^ -a & b) + ((~(b * b) & a) + b * b ^ -a | b) * ((~(b * b) & a) + b * b ^ -a & b) & b",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 10,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 84.23236514522821,
                        "opsPercentages": {
                            "arithmetic": 23.684210526315788,
                            "mul": 26.31578947368421,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(b ^ 0xffffffff | ((b ^ 0xffffffff | b) + b + 1 & ((a ^ 0xffffffff) + 1 | (a & (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff )) + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) - ((a ^ 0xffffffff) + 1 & (a & (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff )) + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b))) * ((b ^ 0xffffffff | b) + b + 1 | ((a ^ 0xffffffff) + 1 | (a & (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff )) + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) - ((a ^ 0xffffffff) + 1 & (a & (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff )) + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b))) + ((b ^ 0xffffffff | b) + b + 1 & (((a ^ 0xffffffff) + 1 | (a & (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff)) + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) - ((a ^ 0xffffffff) + 1 & (a & (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff)) + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) ^ 0xffffffff)) * (((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) & ((a ^ 0xffffffff) + 1 | (a & (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff )) + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) - ((a ^ 0xffffffff) + 1 & (a & (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff )) + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)))) - (b ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 193,
                        "nestedExprLevel": 65,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 19.91701244813278,
                        "opsPercentages": {
                            "arithmetic": 23.83419689119171,
                            "mul": 17.616580310880828,
                            "bitwise": 58.549222797927456
                        },
                        "percentageDAGsCancel": 17.24137931034483
                    }
                },
                "msvc_default": {
                    "expr": "(~b | (b & (~a + 1 | (~(b * b) & a) + b * b) - (~a + 1 & (~(b * b) & a) + b * b)) * (b | (~a + 1 | (~(b * b) & a) + b * b) - (~a + 1 & (~(b * b) & a) + b * b)) + (b & ~((~a + 1 | (~(b * b) & a) + b * b) - (~a + 1 & (~(b * b) & a) + b * b))) * (~b & (~a + 1 | (~(b * b) & a) + b * b) - (~a + 1 & (~(b * b) & a) + b * b))) - ~b",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 24,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 66.39004149377593,
                        "opsPercentages": {
                            "arithmetic": 27.160493827160494,
                            "mul": 22.22222222222222,
                            "bitwise": 50.617283950617285
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "gcc_O3": {
                    "expr": "((a - 1 ^ (~(b * b) & a) + b * b) & b) * (~b & -a ^ (~(b * b) & a) + b * b) + (-a ^ (~(b * b) & a) + b * b | b) * (-a ^ (~(b * b) & a) + b * b & b) & b",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 11,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 84.64730290456431,
                        "opsPercentages": {
                            "arithmetic": 24.324324324324326,
                            "mul": 27.027027027027028,
                            "bitwise": 48.64864864864865
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                }
            }
        },
        {
            "num": 102,
            "gt": {
                "expr": "(((b|b)&((~(((b|b)&d)-b))|(b&(b-b)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 22.22222222222222,
                        "mul": 0.0,
                        "bitwise": 77.77777777777779
                    },
                    "percentageDAGsCancel": 37.5
                }
            },
            "mba": {
                "expr": "(~ ((b & ~ b) + b) | (((((b - ((~ ((b & ~ b) + b) | d) - ~ ((b & ~ b) + b))) - 1) + ((~ b | ((b + ~ b) + 1)) - ~ b)) + 1) + ((- ((b - ((~ ((b & ~ b) + b) | d) - ~ ((b & ~ b) + b))) - 1) - 1) | (- ((~ b | ((b + ~ b) + 1)) - ~ b) - 1)))) - ~ ((b & ~ b) + b)",
                "attributes": {
                    "numOps": 56,
                    "nestedExprLevel": 29,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 46.42857142857143,
                        "mul": 0.0,
                        "bitwise": 53.57142857142857
                    },
                    "percentageDAGsCancel": 22.727272727272727
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~d & b) - 1 & b",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 92.85714285714286,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 0.0,
                            "bitwise": 75.0
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~b | d) + ~b + b | ~b) + 1 + b",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 82.14285714285714,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 0.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~d & b) - 1 & b",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 92.85714285714286,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 0.0,
                            "bitwise": 75.0
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "clang_default": {
                    "expr": "((b & (b ^ 0xffffffff)) + b ^ 0xffffffff | (b - (((b & (b ^ 0xffffffff)) + b ^ 0xffffffff | d) - ((b & (b ^ 0xffffffff)) + b ^ 0xffffffff))) + ((b ^ 0xffffffff | b + (b ^ 0xffffffff) + 1) - (b ^ 0xffffffff)) + (0xffffffff - ((b - (((b & (b ^ 0xffffffff)) + b ^ 0xffffffff | d) - ((b & (b ^ 0xffffffff)) + b ^ 0xffffffff))) + -1) | 0xffffffff - ((b ^ 0xffffffff | b + (b ^ 0xffffffff) + 1) - (b ^ 0xffffffff)))) - ((b & (b ^ 0xffffffff)) + b ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 26,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 5.357142857142857,
                        "opsPercentages": {
                            "arithmetic": 43.39622641509434,
                            "mul": 0.0,
                            "bitwise": 56.60377358490566
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "msvc_default": {
                    "expr": "(~b | (b - ((~b | d) - ~b)) + ((~b | b + 1 + ~b) - ~b) + (0xffffffff - ((b - ((~b | d) - ~b)) + -1) | 0xffffffff - ((~b | b + 1 + ~b) - ~b))) - ~b",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 11,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 37.5,
                        "opsPercentages": {
                            "arithmetic": 48.57142857142857,
                            "mul": 0.0,
                            "bitwise": 51.42857142857142
                        },
                        "percentageDAGsCancel": 23.52941176470588
                    }
                },
                "gcc_O3": {
                    "expr": "(~d & b) - 1 & b",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 92.85714285714286,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 0.0,
                            "bitwise": 75.0
                        },
                        "percentageDAGsCancel": 25.0
                    }
                }
            }
        },
        {
            "num": 103,
            "gt": {
                "expr": "(((-b)|(-(b|(-b)))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 0.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ b + 1) & ~ (~ ((b & ~ (~ b + 1)) + (~ b + 1)) + 1)) + (~ ((b & ~ (~ b + 1)) + (~ b + 1)) + 1)",
                "attributes": {
                    "numOps": 23,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 43.47826086956522,
                        "mul": 0.0,
                        "bitwise": 56.52173913043478
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "b + ~(b - 1 & b) + 1 + (-b & ((b - 1 & b) - b) - 1)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 47.82608695652174,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~(~b + 1 + (~~b + 1 & b)) + 1) & ~b + 1) + 1 + ~(~b + 1 + (~~b + 1 & b))",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 43.47826086956522,
                            "mul": 0.0,
                            "bitwise": 56.52173913043478
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "clang_O3": {
                    "expr": "(-b ^ b & -b) + b & -b",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 69.56521739130434,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((b ^ 0xffffffff) + 1 & (((b & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) + (b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((b & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) + (b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 11,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 43.47826086956522,
                            "mul": 0.0,
                            "bitwise": 56.52173913043478
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_default": {
                    "expr": "(~b + 1 & ~(~((~(~b + 1) & b) + 1 + ~b) + 1)) + 1 + ~((~(~b + 1) & b) + 1 + ~b)",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 8,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 43.47826086956522,
                            "mul": 0.0,
                            "bitwise": 56.52173913043478
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "gcc_O3": {
                    "expr": "((b - 1 & b - b) - 1 & -b) + (b - b - 1 & b)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 56.52173913043478,
                        "opsPercentages": {
                            "arithmetic": 70.0,
                            "mul": 0.0,
                            "bitwise": 30.0
                        },
                        "percentageDAGsCancel": 44.44444444444444
                    }
                }
            }
        },
        {
            "num": 104,
            "gt": {
                "expr": "((-((b|(d&b))-(d*b))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "~ ((((b & ~ (((~ d | b) + d) + 1)) + (((~ d | b) + d) + 1)) + ~ ((d & b) * (d | b) + (d & ~ b) * (~ d & b))) + 1) + 1",
                "attributes": {
                    "numOps": 25,
                    "nestedExprLevel": 12,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 36.0,
                        "mul": 8.0,
                        "bitwise": 56.00000000000001
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((d & b) * (d | b) + (~d & b) * (~b & d)) - ((-((~d | b) + d) - 2 & b) + d + (~d | b) + 1)",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 8,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 16.0,
                        "opsPercentages": {
                            "arithmetic": 38.095238095238095,
                            "mul": 9.523809523809524,
                            "bitwise": 52.38095238095239
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "(~b & d) * (~d & b) + (((-1 - (~(d + 1 + ~d | b) & b)) - ~d | b) - d) + (b | d) * (b & d)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 8,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 12.0,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 9.090909090909092,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "clang_O3": {
                    "expr": "~((-(~d | b) + d - 2 & b) + (~d | b) + d) + (d & ~b) * (~d & b) + (d | b) * (d & b)",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 6,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 16.0,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 9.523809523809524,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_default": {
                    "expr": "((b & ((d ^ 0xffffffff | b) + d + 1 ^ 0xffffffff)) + (d ^ 0xffffffff | b) + d + ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) ^ 0xffffffff) + 2 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 10,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 4.0,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 8.333333333333332,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "msvc_default": {
                    "expr": "~((~d | b) + (~((~d | b) + 1 + d) & b) + d + 2 + ~((d & b) * (d | b) + (~b & d) * (~d & b)) ) + 1",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 7,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 4.0,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 8.333333333333332,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "gcc_O3": {
                    "expr": "((~b & d) * (~d & b) + (d | b) * (d & b)) - ((~d | b) + d + 1 + (-(~d | b) + d - 2 & b))",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 7,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 16.0,
                        "opsPercentages": {
                            "arithmetic": 38.095238095238095,
                            "mul": 9.523809523809524,
                            "bitwise": 52.38095238095239
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                }
            }
        },
        {
            "num": 105,
            "gt": {
                "expr": "((((e+(-(d*c)))-((e&(c+d))-e))^(e+d)))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 11.11111111111111,
                        "bitwise": 22.22222222222222
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((((e ^ ~ (~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1))) + ((e | ~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1)) + (e | ~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1)))) + 1) & ~ ((((((~ e | ((c - ~ d) - 1)) + e) + 1) & ~ e) + ((((~ e | ((c - ~ d) - 1)) + e) + 1) & ~ e)) - ((((~ e | ((c - ~ d) - 1)) + e) + 1) ^ e))) + ((((e ^ ~ (~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1))) + ((e | ~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1)) + (e | ~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1)))) + 1) & ~ ((((((~ e | ((c - ~ d) - 1)) + e) + 1) & ~ e) + ((((~ e | ((c - ~ d) - 1)) + e) + 1) & ~ e)) - ((((~ e | ((c - ~ d) - 1)) + e) + 1) ^ e)))) - ((((e ^ ~ (~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1))) + ((e | ~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1)) + (e | ~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1)))) + 1) ^ ((((((~ e | ((c - ~ d) - 1)) + e) + 1) & ~ e) + ((((~ e | ((c - ~ d) - 1)) + e) + 1) & ~ e)) - ((((~ e | ((c - ~ d) - 1)) + e) + 1) ^ e)))) | ((e | d) + (e & d))) - (((((((e ^ ~ (~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1))) + ((e | ~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1)) + (e | ~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1)))) + 1) & ~ ((((((~ e | ((c - ~ d) - 1)) + e) + 1) & ~ e) + ((((~ e | ((c - ~ d) - 1)) + e) + 1) & ~ e)) - ((((~ e | ((c - ~ d) - 1)) + e) + 1) ^ e))) + ((((e ^ ~ (~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1))) + ((e | ~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1)) + (e | ~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1)))) + 1) & ~ ((((((~ e | ((c - ~ d) - 1)) + e) + 1) & ~ e) + ((((~ e | ((c - ~ d) - 1)) + e) + 1) & ~ e)) - ((((~ e | ((c - ~ d) - 1)) + e) + 1) ^ e)))) - ((((e ^ ~ (~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1))) + ((e | ~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1)) + (e | ~ (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) - 1)))) + 1) ^ ((((((~ e | ((c - ~ d) - 1)) + e) + 1) & ~ e) + ((((~ e | ((c - ~ d) - 1)) + e) + 1) & ~ e)) - ((((~ e | ((c - ~ d) - 1)) + e) + 1) ^ e)))) & ((e | d) + (e & d)))",
                "attributes": {
                    "numOps": 431,
                    "nestedExprLevel": 233,
                    "numDAGs": 38,
                    "opsPercentages": {
                        "arithmetic": 33.64269141531322,
                        "mul": 8.352668213457076,
                        "bitwise": 58.0046403712297
                    },
                    "percentageDAGsCancel": 10.526315789473683
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "d + e ^ ((e + (~e | (c - ~d) - 1) + 1 ^ e) + ~((~e & e + (~e | (c - ~d) - 1) + 1) * 2) & (-((~d & c) * (~c & d) + (d & c) * (d | c)) | e) * 2 + (((~d & c) * (~c & d) + (d & c) * (d | c)) - 1 ^ e) + 1) * 2 - ((-((~d & c) * (~c & d) + (d & c) * (d | c)) | e) * 2 + (((~d & c) * (~c & d) + (d & c) * (d | c)) - 1 ^ e) + 1 ^ (~e & e + (~e | (c - ~d) - 1) + 1) * 2 - (e + (~e | (c - ~d) - 1) + 1 ^ e))",
                    "attributes": {
                        "numOps": 95,
                        "nestedExprLevel": 29,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 77.9582366589327,
                        "opsPercentages": {
                            "arithmetic": 33.68421052631579,
                            "mul": 13.684210526315791,
                            "bitwise": 52.63157894736842
                        },
                        "percentageDAGsCancel": 8.823529411764707
                    }
                },
                "msvc_O1": {
                    "expr": "((~((c + d | ~e) + 1 + e & ~e) * 2 - ((c + d | ~e) + 1 + e ^ e) & ((c | d) * (c & d) + -1 + (~d & c) * (~c & d) ^ e) + 1 + (~(c | d) * (c & d) + -1 + (~d & c) * (~c & d) | e) * 2) * 2 - (((c + d | ~e) + 1 + e & ~e) * 2 - ((c + d | ~e) + 1 + e ^ e) ^ ((c | d) * (c & d) + -1 + (~d & c) * (~c & d) ^ e) + 1 + (~(c | d) * (c & d) + -1 + (~d & c) * (~c & d) | e) * 2) | (d | e) + (d & e)) - ((~((c + d | ~e) + 1 + e & ~e) * 2 - ((c + d | ~e) + 1 + e ^ e) & ((c | d) * (c & d) + -1 + (~d & c) * (~c & d) ^ e) + 1 + (~(c | d) * (c & d) + -1 + (~d & c) * (~c & d) | e) * 2) * 2 - (((c + d | ~e) + 1 + e & ~e) * 2 - ((c + d | ~e) + 1 + e ^ e) ^ ((c | d) * (c & d) + -1 + (~d & c) * (~c & d) ^ e) + 1 + (~(c | d) * (c & d) + -1 + (~d & c) * (~c & d) | e) * 2) & (d | e) + (d & e))",
                    "attributes": {
                        "numOps": 191,
                        "nestedExprLevel": 41,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 55.68445475638051,
                        "opsPercentages": {
                            "arithmetic": 34.031413612565444,
                            "mul": 13.612565445026178,
                            "bitwise": 52.35602094240838
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_O3": {
                    "expr": "e + d ^ (~(~e & e + (c + d | ~e) + 1) * 2 - (e + (c + d | ~e) + 1 ^ e) & (((d | c) * (d & c) + (~d & c) * (~c & d)) - 1 ^ e) + (-((d | c) * (d & c) + (~d & c) * (~c & d)) | e) * 2 + 1) * 2 - ((~e & e + (c + d | ~e) + 1) * 2 - (e + (c + d | ~e) + 1 ^ e) ^ (((d | c) * (d & c) + (~d & c) * (~c & d)) - 1 ^ e) + (-((d | c) * (d & c) + (~d & c) * (~c & d)) | e) * 2 + 1)",
                    "attributes": {
                        "numOps": 87,
                        "nestedExprLevel": 23,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 79.81438515081206,
                        "opsPercentages": {
                            "arithmetic": 32.18390804597701,
                            "mul": 14.942528735632186,
                            "bitwise": 52.87356321839081
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "clang_default": {
                    "expr": "((((e ^ ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1) + (e | ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1 ^ 0xffffffff) + (e | ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1 ^ 0xffffffff) + 1 & ((((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 & (e ^ 0xffffffff)) + ((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 & (e ^ 0xffffffff))) - ((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 ^ e) ^ 0xffffffff)) + ((e ^ ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1) + (e | ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1 ^ 0xffffffff) + (e | ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1 ^ 0xffffffff ) + 1 & ((((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 & (e ^ 0xffffffff)) + ((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 & (e ^ 0xffffffff))) - ((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 ^ e) ^ 0xffffffff))) - ((e ^ ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1) + (e | ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1 ^ 0xffffffff) + (e | ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1 ^ 0xffffffff ) + 1 ^ (((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 & (e ^ 0xffffffff)) + ((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 & (e ^ 0xffffffff))) - ((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 ^ e)) | (e | d) + (e & d)) - ((((e ^ ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1) + (e | ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1 ^ 0xffffffff) + (e | ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1 ^ 0xffffffff) + 1 & ((((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 & (e ^ 0xffffffff)) + ((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 & (e ^ 0xffffffff))) - ((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 ^ e) ^ 0xffffffff)) + ((e ^ ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1) + (e | ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1 ^ 0xffffffff) + (e | ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1 ^ 0xffffffff ) + 1 & ((((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 & (e ^ 0xffffffff)) + ((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 & (e ^ 0xffffffff))) - ((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 ^ e) ^ 0xffffffff))) - ((e ^ ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1) + (e | ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1 ^ 0xffffffff) + (e | ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) - 1 ^ 0xffffffff ) + 1 ^ (((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 & (e ^ 0xffffffff)) + ((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 & (e ^ 0xffffffff))) - ((e ^ 0xffffffff | (c - (d ^ 0xffffffff)) - 1) + e + 1 ^ e)) & (e | d) + (e & d))",
                    "attributes": {
                        "numOps": 419,
                        "nestedExprLevel": 180,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 2.784222737819025,
                        "opsPercentages": {
                            "arithmetic": 34.60620525059666,
                            "mul": 8.591885441527445,
                            "bitwise": 56.801909307875896
                        },
                        "percentageDAGsCancel": 8.108108108108109
                    }
                },
                "msvc_default": {
                    "expr": "(((((d & c) * (d | c) + -1 + (~c & d) * (~d & c) ^ e) + 1 + (~((d & c) * (d | c) + -1 + (~c & d) * (~d & c)) | e) + (~((d & c) * (d | c) + -1 + (~c & d) * (~d & c)) | e) & ~((((~e | (c - ~d) - 1) + 1 + e & ~e) + ((~e | (c - ~d) - 1) + 1 + e & ~e)) - ((~e | (c - ~d) - 1) + 1 + e ^ e))) + (((d & c) * (d | c) + -1 + (~c & d) * (~d & c) ^ e) + 1 + (~((d & c) * (d | c) + -1 + (~c & d) * (~d & c)) | e) + (~((d & c) * (d | c) + -1 + (~c & d) * (~d & c)) | e) & ~((((~e | (c - ~d) - 1) + 1 + e & ~e) + ((~e | (c - ~d) - 1) + 1 + e & ~e)) - ((~e | (c - ~d) - 1) + 1 + e ^ e)))) - (((d & c) * (d | c) + -1 + (~c & d) * (~d & c) ^ e) + 1 + (~((d & c) * (d | c) + -1 + (~c & d) * (~d & c)) | e) + (~((d & c) * (d | c) + -1 + (~c & d) * (~d & c)) | e) ^ (((~e | (c - ~d) - 1) + 1 + e & ~e) + ((~e | (c - ~d) - 1) + 1 + e & ~e)) - ((~e | (c - ~d) - 1) + 1 + e ^ e)) | (e | d) + (e & d)) - (((((d & c) * (d | c) + -1 + (~c & d) * (~d & c) ^ e) + 1 + (~((d & c) * (d | c) + -1 + (~c & d) * (~d & c)) | e) + (~((d & c) * (d | c) + -1 + (~c & d) * (~d & c)) | e) & ~((((~e | (c - ~d) - 1) + 1 + e & ~e) + ((~e | (c - ~d) - 1) + 1 + e & ~e)) - ((~e | (c - ~d) - 1) + 1 + e ^ e))) + (((d & c) * (d | c) + -1 + (~c & d) * (~d & c) ^ e) + 1 + (~((d & c) * (d | c) + -1 + (~c & d) * (~d & c)) | e) + (~((d & c) * (d | c) + -1 + (~c & d) * (~d & c)) | e) & ~((((~e | (c - ~d) - 1) + 1 + e & ~e) + ((~e | (c - ~d) - 1) + 1 + e & ~e)) - ((~e | (c - ~d) - 1) + 1 + e ^ e)))) - (((d & c) * (d | c) + -1 + (~c & d) * (~d & c) ^ e) + 1 + (~((d & c) * (d | c) + -1 + (~c & d) * (~d & c)) | e) + (~((d & c) * (d | c) + -1 + (~c & d) * (~d & c)) | e) ^ (((~e | (c - ~d) - 1) + 1 + e & ~e) + ((~e | (c - ~d) - 1) + 1 + e & ~e)) - ((~e | (c - ~d) - 1) + 1 + e ^ e)) & (e | d) + (e & d))",
                    "attributes": {
                        "numOps": 437,
                        "nestedExprLevel": 126,
                        "numDAGs": 38,
                        "percentDecreaseByOps": -1.3921113689095126,
                        "opsPercentages": {
                            "arithmetic": 37.29977116704806,
                            "mul": 8.237986270022883,
                            "bitwise": 54.46224256292906
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "gcc_O3": {
                    "expr": "(~(~e & e + 1 + ((c - ~d) - 1 | ~e)) * 2 + e + 1 + ((c - ~d) - 1 | ~e) ^ e & ((~c & d) * (~d & c) + (d & c) * (d | c) - 1 ^ e) + 1 + (-(~c & d) * (~d & c) + (d & c) * (d | c) | e) * 2) * 2 - ((~e & e + 1 + ((c - ~d) - 1 | ~e)) * 2 - e + 1 + ((c - ~d) - 1 | ~e) ^ e ^ ((~c & d) * (~d & c) + (d & c) * (d | c) - 1 ^ e) + 1 + (-(~c & d) * (~d & c) + (d & c) * (d | c) | e) * 2) ^ d + e",
                    "attributes": {
                        "numOps": 95,
                        "nestedExprLevel": 21,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 77.9582366589327,
                        "opsPercentages": {
                            "arithmetic": 33.68421052631579,
                            "mul": 13.684210526315791,
                            "bitwise": 52.63157894736842
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                }
            }
        },
        {
            "num": 106,
            "gt": {
                "expr": "((-(((d*e)|(e-d))+(e&((e*d)*(d-e))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 33.33333333333333,
                        "bitwise": 22.22222222222222
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ ((((((d & e) * (d | e) + (d & ~ e) * (~ d & e)) & ~ ((e & ~ d) - (~ e & d))) + ((e & ~ d) - (~ e & d))) | (((~ e | ((((e & d) * (e | d) + (e & ~ d) * (~ e & d)) & ((d + ~ e) + 1)) * (((e & d) * (e | d) + (e & ~ d) * (~ e & d)) | ((d + ~ e) + 1)) + (((e & d) * (e | d) + (e & ~ d) * (~ e & d)) & ~ ((d + ~ e) + 1)) * (~ ((e & d) * (e | d) + (e & ~ d) * (~ e & d)) & ((d + ~ e) + 1)))) + e) + 1)) + (((((d & e) * (d | e) + (d & ~ e) * (~ d & e)) & ~ ((e & ~ d) - (~ e & d))) + ((e & ~ d) - (~ e & d))) & (((~ e | ((((e & d) * (e | d) + (e & ~ d) * (~ e & d)) & ((d + ~ e) + 1)) * (((e & d) * (e | d) + (e & ~ d) * (~ e & d)) | ((d + ~ e) + 1)) + (((e & d) * (e | d) + (e & ~ d) * (~ e & d)) & ~ ((d + ~ e) + 1)) * (~ ((e & d) * (e | d) + (e & ~ d) * (~ e & d)) & ((d + ~ e) + 1)))) + e) + 1))) + 1",
                "attributes": {
                    "numOps": 171,
                    "nestedExprLevel": 71,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 23.391812865497073,
                        "mul": 14.035087719298245,
                        "bitwise": 62.57309941520468
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(e + (~e | (d + ~e + 1 & ~((~e & d) * (~d & e) + (e & d) * (e | d))) * ((e & d) * (e | d) + (~e & d) * (~d & e) & (e - d) - 1) + ((e & d) * (e | d) + (~e & d) * (~d & e) & d + ~e + 1) * (d + ~e + 1 | (e & d) * (e | d) + (~e & d) * (~d & e))) + 1 + ((d & e) * (d | e) + (~d & e) * (~e & d) & d + ~e) + ((~d & e) - (~e & d)))",
                    "attributes": {
                        "numOps": 79,
                        "nestedExprLevel": 21,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 53.80116959064327,
                        "opsPercentages": {
                            "arithmetic": 26.582278481012654,
                            "mul": 15.18987341772152,
                            "bitwise": 58.22784810126582
                        },
                        "percentageDAGsCancel": 8.571428571428571
                    }
                },
                "msvc_O1": {
                    "expr": "-((((~(~d & e - ~e & d) & ~e & d * ~d & e + (d | e) * (d & e)) - ~e & d) + ~d & e | ((~~e & d * ~d & e + (d | e) * (d & e) & d + 1 + ~e) * (~d + 1 + ~e & ~e & d * ~d & e + (d | e) * (d & e)) + (d + 1 + ~e | ~e & d * ~d & e + (d | e) * (d & e)) * (d + 1 + ~e & ~e & d * ~d & e + (d | e) * (d & e)) | ~e) + e + 1) + (((~(~d & e - ~e & d) & ~e & d * ~d & e + (d | e) * (d & e)) - ~e & d) + ~d & e & ((~~e & d * ~d & e + (d | e) * (d & e) & d + 1 + ~e) * (~d + 1 + ~e & ~e & d * ~d & e + (d | e) * (d & e)) + (d + 1 + ~e | ~e & d * ~d & e + (d | e) * (d & e)) * (d + 1 + ~e & ~e & d * ~d & e + (d | e) * (d & e)) | ~e) + e + 1))",
                    "attributes": {
                        "numOps": 170,
                        "nestedExprLevel": 28,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 0.5847953216374269,
                        "opsPercentages": {
                            "arithmetic": 23.52941176470588,
                            "mul": 14.117647058823529,
                            "bitwise": 62.35294117647059
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_O3": {
                    "expr": "~(((~~e & d * (~d & e) + (e | d) * (e & d) & d) * (~d & ~e & d * (~d & e) + (e | d) * (e & d)) + (~e & d * (~d & e) + (e | d) * (e & d) | d) * (~e & d * (~d & e) + (e | d) * (e & d) & d) | ~e) + e) - ((~(~d & e) - ~e & d & ~e & d * (~d & e) + (e | d) * (e & d)) + (~d & e) - ~e & d)",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 16,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 57.89473684210527,
                        "opsPercentages": {
                            "arithmetic": 15.277777777777779,
                            "mul": 16.666666666666664,
                            "bitwise": 68.05555555555556
                        },
                        "percentageDAGsCancel": 25.806451612903224
                    }
                },
                "clang_default": {
                    "expr": "((((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e) & ((e & (d ^ 0xffffffff)) - ((e ^ 0xffffffff) & d) ^ 0xffffffff)) + ((e & (d ^ 0xffffffff)) - ((e ^ 0xffffffff) & d)) | (e ^ 0xffffffff | ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) & d + (e ^ 0xffffffff) + 1) * ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) | d + (e ^ 0xffffffff) + 1) + ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) & (d + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) ^ 0xffffffff) & d + (e ^ 0xffffffff) + 1)) + e + 1) + (((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e) & ((e & (d ^ 0xffffffff)) - ((e ^ 0xffffffff) & d) ^ 0xffffffff)) + ((e & (d ^ 0xffffffff)) - ((e ^ 0xffffffff) & d)) & (e ^ 0xffffffff | ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) & d + (e ^ 0xffffffff) + 1) * ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) | d + (e ^ 0xffffffff) + 1) + ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) & (d + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) ^ 0xffffffff) & d + (e ^ 0xffffffff) + 1)) + e + 1) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 171,
                        "nestedExprLevel": 68,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 23.391812865497073,
                            "mul": 14.035087719298245,
                            "bitwise": 62.57309941520468
                        },
                        "percentageDAGsCancel": 2.564102564102564
                    }
                },
                "msvc_default": {
                    "expr": "~((((d & e) * (d | e) + (~e & d) * (~d & e) & ~((~d & e) - (~e & d))) + ((~d & e) - (~e & d)) | (~e | ((e & d) * (e | d) + (~d & e) * (~e & d) & d + 1 + ~e) * ((e & d) * (e | d) + (~d & e) * (~e & d) | d + 1 + ~e) + ((e & d) * (e | d) + (~d & e) * (~e & d) & ~(d + 1 + ~e)) * (~((e & d) * (e | d) + (~d & e) * (~e & d)) & d + 1 + ~e)) + 1 + e) + (((d & e) * (d | e) + (~e & d) * (~d & e) & ~((~d & e) - (~e & d))) + ((~d & e) - (~e & d)) & (~e | ((e & d) * (e | d) + (~d & e) * (~e & d) & d + 1 + ~e) * ((e & d) * (e | d) + (~d & e) * (~e & d) | d + 1 + ~e) + ((e & d) * (e | d) + (~d & e) * (~e & d) & ~(d + 1 + ~e)) * (~((e & d) * (e | d) + (~d & e) * (~e & d)) & d + 1 + ~e)) + 1 + e )) + 1",
                    "attributes": {
                        "numOps": 171,
                        "nestedExprLevel": 46,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 23.391812865497073,
                            "mul": 14.035087719298245,
                            "bitwise": 62.57309941520468
                        },
                        "percentageDAGsCancel": 10.81081081081081
                    }
                },
                "gcc_O3": {
                    "expr": "-(e + 1 + (((e - d) - 1 & (d & e) * (d | e) + (~e & d) * (~d & e)) * (~(d & e) * (d | e) + (~e & d) * (~d & e) & ~e + d + 1) + ((d & e) * (d | e) + (~e & d) * (~d & e) & ~e + d + 1) * (~e + d + 1 | (d & e) * (d | e) + (~e & d) * (~d & e)) | ~e) + ((d & e) * (d | e) + (~e & d) * (~d & e) & ~e + d) + ((~d & e) - (~e & d)))",
                    "attributes": {
                        "numOps": 79,
                        "nestedExprLevel": 20,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 53.80116959064327,
                        "opsPercentages": {
                            "arithmetic": 26.582278481012654,
                            "mul": 15.18987341772152,
                            "bitwise": 58.22784810126582
                        },
                        "percentageDAGsCancel": 6.451612903225806
                    }
                }
            }
        },
        {
            "num": 107,
            "gt": {
                "expr": "(((((b+d)+b)*d)-b))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 25.0,
                        "bitwise": 0.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((((((b | d) << 1) - (b ^ d)) | b) << 1) - ((((b | d) << 1) - (b ^ d)) ^ b)) & d) * (((((((b | d) << 1) - (b ^ d)) | b) << 1) - ((((b | d) << 1) - (b ^ d)) ^ b)) | d) + (((((((b | d) << 1) - (b ^ d)) | b) << 1) - ((((b | d) << 1) - (b ^ d)) ^ b)) & ~ d) * (~ ((((((b | d) << 1) - (b ^ d)) | b) << 1) - ((((b | d) << 1) - (b ^ d)) ^ b)) & d)) & ~ b) << 1) - (((((((((b | d) << 1) - (b ^ d)) | b) << 1) - ((((b | d) << 1) - (b ^ d)) ^ b)) & d) * (((((((b | d) << 1) - (b ^ d)) | b) << 1) - ((((b | d) << 1) - (b ^ d)) ^ b)) | d) + (((((((b | d) << 1) - (b ^ d)) | b) << 1) - ((((b | d) << 1) - (b ^ d)) ^ b)) & ~ d) * (~ ((((((b | d) << 1) - (b ^ d)) | b) << 1) - ((((b | d) << 1) - (b ^ d)) ^ b)) & d)) ^ b)",
                "attributes": {
                    "numOps": 119,
                    "nestedExprLevel": 94,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 22.689075630252102,
                        "mul": 3.361344537815126,
                        "bitwise": 73.94957983193278
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~b & (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) & d) * (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) | d) + (((b | d) * 2 - (b ^ d) ^ b) + ~(((b | d) * 2 - (b ^ d) | b) * 2) & d) * (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) & ~d)) * 2 - ((((b | d) * 2 - (b ^ d) ^ b) + ~(((b | d) * 2 - (b ^ d) | b) * 2) & d) * (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) & ~d) + (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) & d) * (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) | d) ^ b)",
                    "attributes": {
                        "numOps": 119,
                        "nestedExprLevel": 45,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 22.689075630252102,
                            "mul": 24.369747899159663,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_O1": {
                    "expr": "(~b * 2 & (((b | d) * 2 - (b ^ d) * 2 | b * 2) - ((b | d) * 2 - (b ^ d) ^ b) & d) * (((b | d) * 2 - (b ^ d) * 2 | b * 2) - ((b | d) * 2 - (b ^ d) ^ b) | d) + (~d & ((b | d) * 2 - (b ^ d) * 2 | b * 2) - ((b | d) * 2 - (b ^ d) ^ b)) * (~((b | d) * 2 - (b ^ d) * 2 | b * 2) - ((b | d) * 2 - (b ^ d) ^ b) & d) * 2) - ((((b | d) * 2 - (b ^ d) * 2 | b * 2) - ((b | d) * 2 - (b ^ d) ^ b) & d) * (((b | d) * 2 - (b ^ d) * 2 | b * 2) - ((b | d) * 2 - (b ^ d) ^ b) | d) + (~d & ((b | d) * 2 - (b ^ d) * 2 | b * 2) - ((b | d) * 2 - (b ^ d) ^ b)) * (~((b | d) * 2 - (b ^ d) * 2 | b * 2) - ((b | d) * 2 - (b ^ d) ^ b) & d) ^ b)",
                    "attributes": {
                        "numOps": 128,
                        "nestedExprLevel": 43,
                        "numDAGs": 27,
                        "percentDecreaseByOps": -7.563025210084033,
                        "opsPercentages": {
                            "arithmetic": 21.09375,
                            "mul": 29.6875,
                            "bitwise": 49.21875
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "clang_O3": {
                    "expr": "(~b & (~((d | b) * 2 - (d ^ b) | b) * 2 - ((d | b) * 2 - (d ^ b) ^ b) & d) * (~d & ((d | b) * 2 - (d ^ b) | b) * 2 - ((d | b) * 2 - (d ^ b) ^ b)) + (((d | b) * 2 - (d ^ b) | b) * 2 - ((d | b) * 2 - (d ^ b) ^ b) | d) * (((d | b) * 2 - (d ^ b) | b) * 2 - ((d | b) * 2 - (d ^ b) ^ b) & d)) * 2 - ((~((d | b) * 2 - (d ^ b) | b) * 2 - ((d | b) * 2 - (d ^ b) ^ b) & d) * (~d & ((d | b) * 2 - (d ^ b) | b) * 2 - ((d | b) * 2 - (d ^ b) ^ b)) + (((d | b) * 2 - (d ^ b) | b) * 2 - ((d | b) * 2 - (d ^ b) ^ b) | d) * (((d | b) * 2 - (d ^ b) | b) * 2 - ((d | b) * 2 - (d ^ b) ^ b) & d) ^ b)",
                    "attributes": {
                        "numOps": 119,
                        "nestedExprLevel": 43,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 22.689075630252102,
                            "mul": 24.369747899159663,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) & d) * (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) | d) + (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) & (d ^ 0xffffffff)) * ((((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) ^ 0xffffffff) & d) & (b ^ 0xffffffff)) * 2 - ((((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) & d) * (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) | d) + (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) & (d ^ 0xffffffff)) * ((((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) ^ 0xffffffff) & d) ^ b )",
                    "attributes": {
                        "numOps": 119,
                        "nestedExprLevel": 45,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 22.689075630252102,
                            "mul": 24.369747899159663,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) & d) * (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) | d) + (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) & ~d) * (~(((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b)) & d) & ~b) * 2 - ((((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) & d) * (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) | d) + (((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b) & ~d) * (~(((b | d) * 2 - (b ^ d) | b) * 2 - ((b | d) * 2 - (b ^ d) ^ b)) & d) ^ b)",
                    "attributes": {
                        "numOps": 119,
                        "nestedExprLevel": 45,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 22.689075630252102,
                            "mul": 24.369747899159663,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~b & ((b | d) * 2 - (b ^ d) ^ b + ~((b | d) * 2 - (b ^ d) | b) * 2 & d) * (~d & ((b | d) * 2 - (b ^ d) | b) * 2 - (b | d) * 2 - (b ^ d) ^ b) + (((b | d) * 2 - (b ^ d) | b) * 2 - (b | d) * 2 - (b ^ d) ^ b & d) * (((b | d) * 2 - (b ^ d) | b) * 2 - (b | d) * 2 - (b ^ d) ^ b | d)) * 2 - (((b | d) * 2 - (b ^ d) ^ b + ~((b | d) * 2 - (b ^ d) | b) * 2 & d) * (~d & ((b | d) * 2 - (b ^ d) | b) * 2 - (b | d) * 2 - (b ^ d) ^ b) + (((b | d) * 2 - (b ^ d) | b) * 2 - (b | d) * 2 - (b ^ d) ^ b & d) * (((b | d) * 2 - (b ^ d) | b) * 2 - (b | d) * 2 - (b ^ d) ^ b | d) ^ b)",
                    "attributes": {
                        "numOps": 119,
                        "nestedExprLevel": 35,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 22.689075630252102,
                            "mul": 24.369747899159663,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 108,
            "gt": {
                "expr": "(((-((c*d)&(c+c)))^(~(~(-(d|d))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 11.11111111111111,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "(~ (((~ ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) | ((c ^ c) + ((c & c) + (c & c)))) - ~ ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - 1) | (- ((((d + d) + 1) + ((- d - 1) | (- d - 1))) - 1) - 1)) - (~ (((~ ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) | ((c ^ c) + ((c & c) + (c & c)))) - ~ ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - 1) & (- ((((d + d) + 1) + ((- d - 1) | (- d - 1))) - 1) - 1))",
                "attributes": {
                    "numOps": 83,
                    "nestedExprLevel": 39,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 39.75903614457831,
                        "mul": 9.63855421686747,
                        "bitwise": 50.602409638554214
                    },
                    "percentageDAGsCancel": 13.333333333333334
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(~d + d * 2 + 1) ^ -((~c & d) * (~d & c) + (c & d) * (c | d) & c * 2)",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 4,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 78.3132530120482,
                        "opsPercentages": {
                            "arithmetic": 27.77777777777778,
                            "mul": 22.22222222222222,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "msvc_O1": {
                    "expr": "(~((~((c | d) * (c & d) + (~d & c) * (~c & d)) | c * 2) + (c | d) * (c & d) + (~d & c) * (~c & d)) | -d) - (~((~((c | d) * (c & d) + (~d & c) * (~c & d)) | c * 2) + (c | d) * (c & d) + (~d & c) * (~c & d)) & -d)",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 17,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 38.55421686746988,
                        "opsPercentages": {
                            "arithmetic": 17.647058823529413,
                            "mul": 19.607843137254903,
                            "bitwise": 62.745098039215684
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "clang_O3": {
                    "expr": "-d ^ -(c * 2 & (~c & d) * (~d & c) + (d | c) * (d & c))",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 83.13253012048193,
                        "opsPercentages": {
                            "arithmetic": 21.428571428571427,
                            "mul": 21.428571428571427,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) ^ 0xffffffff | c * 2) - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) ^ 0xffffffff)) - 1 ^ 0xffffffff | 0xffffffff - (d * 2 + (0xffffffff - d | 0xffffffff - d))) - (((((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) ^ 0xffffffff | c * 2) - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) ^ 0xffffffff)) - 1 ^ 0xffffffff) & 0xffffffff - (d * 2 + (0xffffffff - d | 0xffffffff - d)))",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 25,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 21.686746987951807,
                        "opsPercentages": {
                            "arithmetic": 26.153846153846157,
                            "mul": 18.461538461538463,
                            "bitwise": 55.38461538461539
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "msvc_default": {
                    "expr": "(~(((~((c & d) * (c | d) + (~d & c) * (~c & d)) | c * 2) - ~((c & d) * (c | d) + (~d & c) * (~c & d))) - 1) | 0xffffffff - (d * 2 + (0xffffffff - d | 0xffffffff - d))) - (~(((~((c & d) * (c | d) + (~d & c) * (~c & d)) | c * 2) - ~((c & d) * (c | d) + (~d & c) * (~c & d))) - 1) & 0xffffffff - (d * 2 + (0xffffffff - d | 0xffffffff - d)))",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 24,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 21.686746987951807,
                        "opsPercentages": {
                            "arithmetic": 26.153846153846157,
                            "mul": 18.461538461538463,
                            "bitwise": 55.38461538461539
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "gcc_O3": {
                    "expr": "-((~c & d) * (~d & c) + (c & d) * (c | d) & c * 2) ^ -(~d + 1 + d * 2)",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 5,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 78.3132530120482,
                        "opsPercentages": {
                            "arithmetic": 27.77777777777778,
                            "mul": 22.22222222222222,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                }
            }
        },
        {
            "num": 109,
            "gt": {
                "expr": "(((((-a)+((a-a)+a))|(~(a^a)))&(d+(d|e))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "(~ ((((((~ a + 1) ^ ~ (((((a + ~ a) + 1) | a) + (((a + ~ a) + 1) | a)) - (((a + ~ a) + 1) ^ a))) + (((~ a + 1) | (((((a + ~ a) + 1) | a) + (((a + ~ a) + 1) | a)) - (((a + ~ a) + 1) ^ a))) << 1)) + 1) & ~ ((a & a) + ~ (a | a))) + ((a & a) + ~ (a | a))) | ((d ^ (((d + e) + 1) + ((- d - 1) | (- e - 1)))) + ((d & (((d + e) + 1) + ((- d - 1) | (- e - 1)))) << 1))) - ~ ((((((~ a + 1) ^ ~ (((((a + ~ a) + 1) | a) + (((a + ~ a) + 1) | a)) - (((a + ~ a) + 1) ^ a))) + (((~ a + 1) | (((((a + ~ a) + 1) | a) + (((a + ~ a) + 1) | a)) - (((a + ~ a) + 1) ^ a))) << 1)) + 1) & ~ ((a & a) + ~ (a | a))) + ((a & a) + ~ (a | a)))",
                "attributes": {
                    "numOps": 122,
                    "nestedExprLevel": 68,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 50.81967213114754,
                        "mul": 0.0,
                        "bitwise": 49.18032786885246
                    },
                    "percentageDAGsCancel": 30.555555555555557
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(d & e) + e + d + 1 & d) * 2 + (~(d & e) + e + d + 1 ^ d)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 88.52459016393442,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 7.142857142857142,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "(((-1 - d) * 2 | (-1 - e) * 2) + (e + 1 + d) * 2 & d * 2) + ((d - (d & e)) + e ^ d)",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 7,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 85.24590163934425,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 22.22222222222222,
                            "bitwise": 22.22222222222222
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~d & e) + d * 2",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 96.72131147540983,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((a ^ 0xffffffff) + 1 ^ ((a + (a ^ 0xffffffff) + 1 | a) + (a + (a ^ 0xffffffff) + 1 | a)) - (a + (a ^ 0xffffffff) + 1 ^ a) ^ 0xffffffff) + ((a ^ 0xffffffff) + 1 | ((a + (a ^ 0xffffffff) + 1 | a) + (a + (a ^ 0xffffffff) + 1 | a)) - (a + (a ^ 0xffffffff) + 1 ^ a)) * 2 + 1 & (a + (a ^ 0xffffffff) ^ 0xffffffff)) + a + (a ^ 0xffffffff) ^ 0xffffffff | (d ^ d + e + 1 + (0xffffffff - d | 0xffffffff - e)) + (d & d + e + 1 + (0xffffffff - d | 0xffffffff - e)) * 2) - ((((a ^ 0xffffffff) + 1 ^ ((a + (a ^ 0xffffffff) + 1 | a) + (a + (a ^ 0xffffffff) + 1 | a)) - (a + (a ^ 0xffffffff) + 1 ^ a) ^ 0xffffffff) + ((a ^ 0xffffffff) + 1 | ((a + (a ^ 0xffffffff) + 1 | a) + (a + (a ^ 0xffffffff) + 1 | a)) - (a + (a ^ 0xffffffff) + 1 ^ a)) * 2 + 1 & (a + (a ^ 0xffffffff) ^ 0xffffffff)) + a + (a ^ 0xffffffff) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 110,
                        "nestedExprLevel": 31,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 9.836065573770492,
                        "opsPercentages": {
                            "arithmetic": 52.72727272727272,
                            "mul": 2.727272727272727,
                            "bitwise": 44.54545454545455
                        },
                        "percentageDAGsCancel": 16.129032258064516
                    }
                },
                "msvc_default": {
                    "expr": "(~(((~a + 1 ^ ~(((a + 1 + ~a | a) + (a + 1 + ~a | a)) - (a + 1 + ~a ^ a))) + 1 + (~a + 1 | ((a + 1 + ~a | a) + (a + 1 + ~a | a)) - (a + 1 + ~a ^ a)) * 2 & ~(a + ~a)) + a + ~a) | (d + e + 1 + (0xffffffff - d | 0xffffffff - e) ^ d) + (d + e + 1 + (0xffffffff - d | 0xffffffff - e) & d) * 2) - ~(((~a + 1 ^ ~(((a + 1 + ~a | a) + (a + 1 + ~a | a)) - (a + 1 + ~a ^ a))) + 1 + (~a + 1 | ((a + 1 + ~a | a) + (a + 1 + ~a | a)) - (a + 1 + ~a ^ a)) * 2 & ~(a + ~a)) + a + ~a)",
                    "attributes": {
                        "numOps": 110,
                        "nestedExprLevel": 24,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 9.836065573770492,
                        "opsPercentages": {
                            "arithmetic": 52.72727272727272,
                            "mul": 2.727272727272727,
                            "bitwise": 44.54545454545455
                        },
                        "percentageDAGsCancel": 31.25
                    }
                },
                "gcc_O3": {
                    "expr": "((e + d) - (d & e) ^ d) + ((e + d) - (d & e) & d) * 2",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 5,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 91.80327868852459,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 10.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                }
            }
        },
        {
            "num": 110,
            "gt": {
                "expr": "(((-(d-a))&((d-d)-a)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 80.0,
                        "mul": 0.0,
                        "bitwise": 20.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "((~ (~ ((d + ~ a) + 1) + 1) | (((((d & ~ d) - (~ d & d)) & ~ a) << 1) - (((d & ~ d) - (~ d & d)) ^ a))) + (~ ((d + ~ a) + 1) + 1)) + 1",
                "attributes": {
                    "numOps": 29,
                    "nestedExprLevel": 16,
                    "numDAGs": 17,
                    "opsPercentages": {
                        "arithmetic": 37.93103448275862,
                        "mul": 0.0,
                        "bitwise": 62.06896551724138
                    },
                    "percentageDAGsCancel": 35.294117647058826
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a - d) + (~a + d | -a) + 1",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 75.86206896551724,
                        "opsPercentages": {
                            "arithmetic": 71.42857142857143,
                            "mul": 0.0,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~(d + -a) + 1) | -a) + 2 + ~(d + -a)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 58.620689655172406,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(a - d) + (-a | ~(a - d)) + 1",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 75.86206896551724,
                        "opsPercentages": {
                            "arithmetic": 71.42857142857143,
                            "mul": 0.0,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((d + (a ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | ((d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d) & (a ^ 0xffffffff)) * 2 - ((d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d) ^ a)) + (d + (a ^ 0xffffffff) + 1 ^ 0xffffffff) + 2",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 12,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 3.4482758620689653,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 3.571428571428571,
                            "bitwise": 60.71428571428571
                        },
                        "percentageDAGsCancel": 35.294117647058826
                    }
                },
                "msvc_default": {
                    "expr": "(~(~(d + 1 + ~a) + 1) | -a) + 2 + ~(d + 1 + ~a)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 51.724137931034484,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~a + d | -a) + 1 + (a - d)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 75.86206896551724,
                        "opsPercentages": {
                            "arithmetic": 71.42857142857143,
                            "mul": 0.0,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 111,
            "gt": {
                "expr": "((((d+e)|((e+e)^d))*(d-e)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 16.666666666666664,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((d | e) + (d & e)) + (((((e ^ e) + ((e & e) << 1)) - d) - ((((e ^ e) + ((e & e) << 1)) | ~ d) + (((e ^ e) + ((e & e) << 1)) | ~ d))) - 2)) + 1) + ((- ((d | e) + (d & e)) - 1) | (- (((((e ^ e) + ((e & e) << 1)) - d) - ((((e ^ e) + ((e & e) << 1)) | ~ d) + (((e ^ e) + ((e & e) << 1)) | ~ d))) - 2) - 1))) & (((d & ~ e) + (d & ~ e)) - (d ^ e))) * ((((((d | e) + (d & e)) + (((((e ^ e) + ((e & e) << 1)) - d) - ((((e ^ e) + ((e & e) << 1)) | ~ d) + (((e ^ e) + ((e & e) << 1)) | ~ d))) - 2)) + 1) + ((- ((d | e) + (d & e)) - 1) | (- (((((e ^ e) + ((e & e) << 1)) - d) - ((((e ^ e) + ((e & e) << 1)) | ~ d) + (((e ^ e) + ((e & e) << 1)) | ~ d))) - 2) - 1))) | (((d & ~ e) + (d & ~ e)) - (d ^ e))) + ((((((d | e) + (d & e)) + (((((e ^ e) + ((e & e) << 1)) - d) - ((((e ^ e) + ((e & e) << 1)) | ~ d) + (((e ^ e) + ((e & e) << 1)) | ~ d))) - 2)) + 1) + ((- ((d | e) + (d & e)) - 1) | (- (((((e ^ e) + ((e & e) << 1)) - d) - ((((e ^ e) + ((e & e) << 1)) | ~ d) + (((e ^ e) + ((e & e) << 1)) | ~ d))) - 2) - 1))) & ~ (((d & ~ e) + (d & ~ e)) - (d ^ e))) * (~ (((((d | e) + (d & e)) + (((((e ^ e) + ((e & e) << 1)) - d) - ((((e ^ e) + ((e & e) << 1)) | ~ d) + (((e ^ e) + ((e & e) << 1)) | ~ d))) - 2)) + 1) + ((- ((d | e) + (d & e)) - 1) | (- (((((e ^ e) + ((e & e) << 1)) - d) - ((((e ^ e) + ((e & e) << 1)) | ~ d) + (((e ^ e) + ((e & e) << 1)) | ~ d))) - 2) - 1))) & (((d & ~ e) + (d & ~ e)) - (d ^ e)))",
                "attributes": {
                    "numOps": 253,
                    "nestedExprLevel": 154,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 39.920948616600796,
                        "mul": 0.7905138339920948,
                        "bitwise": 59.28853754940712
                    },
                    "percentageDAGsCancel": 11.428571428571429
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~((1 - ((e * 2 - d) + (~d | e * 2) * -2) | ~(e + d)) + e * 3 + (~d | e * 2) * -2 + -1) & (~e & d) * 2 - (d ^ e)) * (e * 3 + (~d | e * 2) * -2 + -1 + (1 - ((e * 2 - d) + (~d | e * 2) * -2) | ~(e + d)) & (d ^ e) + ~((~e & d) * 2)) + (e * 3 + (~d | e * 2) * -2 + -1 + (1 - ((e * 2 - d) + (~d | e * 2) * -2) | ~(e + d)) & (~e & d) * 2 - (d ^ e)) * (e * 3 + (~d | e * 2) * -2 + -1 + (1 - ((e * 2 - d) + (~d | e * 2) * -2) | ~(e + d)) | (~e & d) * 2 - (d ^ e))",
                    "attributes": {
                        "numOps": 117,
                        "nestedExprLevel": 25,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 53.75494071146245,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 25.64102564102564,
                            "bitwise": 35.8974358974359
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~e & d) * 2 - (d ^ e) & ((d | e) - 1) + (((d + 1 + ~d | e * 2 * 2 + e * -2 | ~(d | e) - (d & e)) + (e - ~d | e * 2) * 2) - d) + (d & e)) * (~((d | e) - 1) + (((d + 1 + ~d | e * 2 * 2 + e * -2 | ~(d | e) - (d & e)) + (e - ~d | e * 2) * 2) - d) + (d & e) & (~e & d) * 2 - (d ^ e)) + (((d | e) - 1) + (((d + 1 + ~d | e * 2 * 2 + e * -2 | ~(d | e) - (d & e)) + (e - ~d | e * 2) * 2) - d) + (d & e) | (~e & d) * 2 - (d ^ e)) * (((d | e) - 1) + (((d + 1 + ~d | e * 2 * 2 + e * -2 | ~(d | e) - (d & e)) + (e - ~d | e * 2) * 2) - d) + (d & e) & (~e & d) * 2 - (d ^ e))",
                    "attributes": {
                        "numOps": 133,
                        "nestedExprLevel": 33,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 47.43083003952569,
                        "opsPercentages": {
                            "arithmetic": 36.84210526315789,
                            "mul": 19.548872180451127,
                            "bitwise": 43.609022556390975
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "clang_O3": {
                    "expr": "(-((e * 2 - d) + (~d | e * 2) * -2 + e + d + 1 - (e * 2 - d) + (~d | e * 2) * -2 | ~(e + d)) & (~e & d) * 2 - (e ^ d)) * (~(~e & d) * 2 - (e ^ d) & (1 - (e * 2 - d) + (~d | e * 2) * -2 | ~(e + d) + (e * 2 - d) + (~d | e * 2) * -2 + e + d) - 1) + ((1 - (e * 2 - d) + (~d | e * 2) * -2 | ~(e + d) + (e * 2 - d) + (~d | e * 2) * -2 + e + d) - 1 | (~e & d) * 2 - (e ^ d)) * ((1 - (e * 2 - d) + (~d | e * 2) * -2 | ~(e + d) + (e * 2 - d) + (~d | e * 2) * -2 + e + d) - 1 & (~e & d) * 2 - (e ^ d))",
                    "attributes": {
                        "numOps": 124,
                        "nestedExprLevel": 22,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 50.988142292490124,
                        "opsPercentages": {
                            "arithmetic": 42.74193548387097,
                            "mul": 24.193548387096776,
                            "bitwise": 33.064516129032256
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((d | e) + (d & e) + ((e * 2 - d) - ((e * 2 | d ^ 0xffffffff) + (e * 2 | d ^ 0xffffffff))) + -1 + (0xffffffff - ((d | e) + (d & e)) | 0xffffffff - (((e * 2 - d) - ((e * 2 | d ^ 0xffffffff) + (e * 2 | d ^ 0xffffffff))) + -2)) & ((d & (e ^ 0xffffffff)) + (d & (e ^ 0xffffffff))) - (d ^ e)) * ((d | e) + (d & e) + ((e * 2 - d) - ((e * 2 | d ^ 0xffffffff) + (e * 2 | d ^ 0xffffffff))) + -1 + (0xffffffff - ((d | e) + (d & e)) | 0xffffffff - (((e * 2 - d) - ((e * 2 | d ^ 0xffffffff) + (e * 2 | d ^ 0xffffffff))) + -2)) | ((d & (e ^ 0xffffffff)) + (d & (e ^ 0xffffffff))) - (d ^ e)) + ((d | e) + (d & e) + ((e * 2 - d) - ((e * 2 | d ^ 0xffffffff) + (e * 2 | d ^ 0xffffffff))) + -1 + (0xffffffff - ((d | e) + (d & e)) | 0xffffffff - (((e * 2 - d) - ((e * 2 | d ^ 0xffffffff) + (e * 2 | d ^ 0xffffffff))) + -2)) & (((d & (e ^ 0xffffffff)) + (d & (e ^ 0xffffffff))) - (d ^ e) ^ 0xffffffff)) * (((d | e) + (d & e) + ((e * 2 - d) - ((e * 2 | d ^ 0xffffffff) + (e * 2 | d ^ 0xffffffff))) + -1 + (0xffffffff - ((d | e) + (d & e)) | 0xffffffff - (((e * 2 - d) - ((e * 2 | d ^ 0xffffffff) + (e * 2 | d ^ 0xffffffff))) + -2)) ^ 0xffffffff) & ((d & (e ^ 0xffffffff)) + (d & (e ^ 0xffffffff))) - (d ^ e))",
                    "attributes": {
                        "numOps": 177,
                        "nestedExprLevel": 67,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 30.039525691699602,
                        "opsPercentages": {
                            "arithmetic": 41.24293785310734,
                            "mul": 14.689265536723164,
                            "bitwise": 44.06779661016949
                        },
                        "percentageDAGsCancel": 3.125
                    }
                },
                "msvc_default": {
                    "expr": "((d | e) + (d & e) + ((e * 2 - d) - ((e * 2 | ~d) + (e * 2 | ~d))) + -1 + (0xffffffff - ((d | e) + (d & e)) | 0xffffffff - (((e * 2 - d) - ((e * 2 | ~d) + (e * 2 | ~d))) + -2)) & ~(((~e & d) + (~e & d)) - (d ^ e))) * (~((d | e) + (d & e) + ((e * 2 - d) - ((e * 2 | ~d) + (e * 2 | ~d))) + -1 + (0xffffffff - ((d | e) + (d & e)) | 0xffffffff - (((e * 2 - d) - ((e * 2 | ~d) + (e * 2 | ~d))) + -2)) ) & ((~e & d) + (~e & d)) - (d ^ e)) + ((d | e) + (d & e) + ((e * 2 - d) - ((e * 2 | ~d) + (e * 2 | ~d))) + -1 + (0xffffffff - ((d | e) + (d & e)) | 0xffffffff - (((e * 2 - d) - ((e * 2 | ~d) + (e * 2 | ~d))) + -2)) & ((~e & d) + (~e & d)) - (d ^ e)) * ((d | e) + (d & e) + ((e * 2 - d) - ((e * 2 | ~d) + (e * 2 | ~d))) + -1 + (0xffffffff - ((d | e) + (d & e)) | 0xffffffff - (((e * 2 - d) - ((e * 2 | ~d) + (e * 2 | ~d))) + -2)) | ((~e & d) + (~e & d)) - (d ^ e))",
                    "attributes": {
                        "numOps": 177,
                        "nestedExprLevel": 60,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 30.039525691699602,
                        "opsPercentages": {
                            "arithmetic": 41.24293785310734,
                            "mul": 14.689265536723164,
                            "bitwise": 44.06779661016949
                        },
                        "percentageDAGsCancel": 9.375
                    }
                },
                "gcc_O3": {
                    "expr": "(~(~e & d) * 2 + (d ^ e) & ((d + e) - 1) + (e * 2 - d) + (~d | e * 2) * -2 + (~(d + e) | 1 - (e * 2 - d) + (~d | e * 2) * -2)) * (~((d + e) - 1) + (e * 2 - d) + (~d | e * 2) * -2 + (~(d + e) | 1 - (e * 2 - d) + (~d | e * 2) * -2) & (~e & d) * 2 - (d ^ e)) + (((d + e) - 1) + (e * 2 - d) + (~d | e * 2) * -2 + (~(d + e) | 1 - (e * 2 - d) + (~d | e * 2) * -2) | (~e & d) * 2 - (d ^ e)) * (((d + e) - 1) + (e * 2 - d) + (~d | e * 2) * -2 + (~(d + e) | 1 - (e * 2 - d) + (~d | e * 2) * -2) & (~e & d) * 2 - (d ^ e))",
                    "attributes": {
                        "numOps": 125,
                        "nestedExprLevel": 26,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 50.59288537549407,
                        "opsPercentages": {
                            "arithmetic": 42.4,
                            "mul": 24.0,
                            "bitwise": 33.6
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 112,
            "gt": {
                "expr": "(((-(~((e|d)&e)))-(-((d|a)&(~a)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "((((~ (((e + d) + 1) + ((- e - 1) | (- d - 1))) | e) - ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) + 1) ^ ~ (((((d & ~ a) + a) | a) - a) - 1)) - ((~ (((~ (((e + d) + 1) + ((- e - 1) | (- d - 1))) | e) - ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) + 1) & ~ (((((d & ~ a) + a) | a) - a) - 1)) << 1)",
                "attributes": {
                    "numOps": 61,
                    "nestedExprLevel": 35,
                    "numDAGs": 24,
                    "opsPercentages": {
                        "arithmetic": 63.934426229508205,
                        "mul": 0.0,
                        "bitwise": 36.0655737704918
                    },
                    "percentageDAGsCancel": 4.166666666666666
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((d + e + 1 + ~(e & d) & e) + 1 ^ (~(a + (~a & d)) | a) + 1) + ((~(a + (~a & d)) | a) + 1 & -(d + e + 1 + ~(e & d) & e) - 2) * -2",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 10,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 47.540983606557376,
                        "opsPercentages": {
                            "arithmetic": 46.875,
                            "mul": 3.125,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "msvc_O1": {
                    "expr": "(e + 3 + (~(d + 1 + ~(d & e) + e) | e) + ~(d & e) + d ^ ~((((~a & d) + a | a) - a) - 1)) + (~e + 3 + (~(d + 1 + ~(d & e) + e) | e) + ~(d & e) + d & ~((((~a & d) + a | a) - a) - 1)) * -2",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 16,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 24.59016393442623,
                        "opsPercentages": {
                            "arithmetic": 47.82608695652174,
                            "mul": 2.1739130434782608,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(e + 1 ^ -((d & ~a) + a & ~a)) + (0x7ffffffe - e & -((d & ~a) + a & ~a)) * -2",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 68.85245901639344,
                        "opsPercentages": {
                            "arithmetic": 42.10526315789473,
                            "mul": 5.263157894736842,
                            "bitwise": 52.63157894736842
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_default": {
                    "expr": "(((e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff | e) - (e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff)) + 1 ^ (((d & (a ^ 0xffffffff)) + a | a) - a) - 1 ^ 0xffffffff) + ((((e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff | e) - (e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff)) + 1 ^ 0xffffffff) & ((((d & (a ^ 0xffffffff)) + a | a) - a) - 1 ^ 0xffffffff)) * -2",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 18,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 11.475409836065573,
                        "opsPercentages": {
                            "arithmetic": 59.25925925925925,
                            "mul": 1.8518518518518516,
                            "bitwise": 38.88888888888889
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "msvc_default": {
                    "expr": "(((~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) | e) - ~(e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + 1 ^ ~((((~a & d) + a | a) - a) - 1)) + (~(((~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) | e) - ~(e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + 1) & ~((((~a & d) + a | a) - a) - 1)) * -2",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 19,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 11.475409836065573,
                        "opsPercentages": {
                            "arithmetic": 59.25925925925925,
                            "mul": 1.8518518518518516,
                            "bitwise": 38.88888888888889
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "gcc_O3": {
                    "expr": "(e + 1 ^ (~((~a & d) + a) | a) + 1) + (-e - 2 & (~((~a & d) + a) | a) + 1) * -2",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 8,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 67.21311475409836,
                        "opsPercentages": {
                            "arithmetic": 45.0,
                            "mul": 5.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 113,
            "gt": {
                "expr": "((-((-(b&e))&(~(b+b)))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (~ ((((~ b | e) + b) + 1) - 1) - (~ ((((~ b | e) + b) + 1) - 1) & ((b ^ b) + ((b & b) + (b & b))))) + 1",
                "attributes": {
                    "numOps": 21,
                    "nestedExprLevel": 12,
                    "numDAGs": 14,
                    "opsPercentages": {
                        "arithmetic": 47.61904761904761,
                        "mul": 0.0,
                        "bitwise": 52.38095238095239
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(b + (~b | e) | b * 2) + 1",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 71.42857142857143,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 16.666666666666664,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(b * 2 & ~((~b | e) + b)) - ~((~b | e) + b)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 5,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 47.61904761904761,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 9.090909090909092,
                            "bitwise": 63.63636363636363
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(b * 2 | (~b | e) + b) + 1",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 71.42857142857143,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 16.666666666666664,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b ^ 0xffffffff | e) + b ^ 0xffffffff) - (((b ^ 0xffffffff | e) + b ^ 0xffffffff) & b * 2) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 6,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 38.095238095238095,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 7.6923076923076925,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~(~((~b | e) + b) - (~((~b | e) + b) & b * 2)) + 1",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 6,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 38.095238095238095,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 7.6923076923076925,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~b | e) + b | b * 2) + 1",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 71.42857142857143,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 16.666666666666664,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 114,
            "gt": {
                "expr": "(((b-(b|e))&((-((-b)^e))-(-(e-e)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 0.0,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "(~ (((b & ~ ((b & ~ e) + e)) + (b & ~ ((b & ~ e) + e))) - (b ^ ((b & ~ e) + e))) | (((~ (((~ (b - 1) - e) - ((~ (b - 1) | ~ e) << 1)) - 2) + 1) & ~ (~ ((e & ~ e) - (~ e & e)) + 1)) - (~ (~ (((~ (b - 1) - e) - ((~ (b - 1) | ~ e) << 1)) - 2) + 1) & (~ ((e & ~ e) - (~ e & e)) + 1)))) - ~ (((b & ~ ((b & ~ e) + e)) + (b & ~ ((b & ~ e) + e))) - (b ^ ((b & ~ e) + e)))",
                "attributes": {
                    "numOps": 79,
                    "nestedExprLevel": 40,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 35.44303797468354,
                        "mul": 0.0,
                        "bitwise": 64.55696202531645
                    },
                    "percentageDAGsCancel": 23.333333333333332
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~e | -b) * 2 + b + e + 2 & (~(e + (~e & b)) & b) * 2 - (e + (~e & b) ^ b)",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 5,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 75.9493670886076,
                        "opsPercentages": {
                            "arithmetic": 36.84210526315789,
                            "mul": 10.526315789473683,
                            "bitwise": 52.63157894736842
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~e & b) + e & b) * 2 + 1 + (((((~(b - 1) | ~e) * 2 + 2) - ~(b - 1)) + e | ~((~(~e & b) + e & b) * 2 - (~e & b) + e ^ b)) - (~e & b) + e ^ b)",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 12,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 54.43037974683544,
                        "opsPercentages": {
                            "arithmetic": 36.11111111111111,
                            "mul": 8.333333333333332,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 13.043478260869565
                    }
                },
                "clang_O3": {
                    "expr": "b + e + (-b | ~e) * 2 + 2 & (~(~e & b) + e & b) * 2 - ((~e & b) + e ^ b)",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 4,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 75.9493670886076,
                        "opsPercentages": {
                            "arithmetic": 36.84210526315789,
                            "mul": 10.526315789473683,
                            "bitwise": 52.63157894736842
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b & ((b & (e ^ 0xffffffff)) + e ^ 0xffffffff)) + (b & ((b & (e ^ 0xffffffff)) + e ^ 0xffffffff))) - (b ^ (b & (e ^ 0xffffffff)) + e) ^ 0xffffffff | (((((b - 1 ^ 0xffffffff) - e) + (b - 1 ^ 0xffffffff | e ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) + 1 & (((e & (e ^ 0xffffffff)) - ((e ^ 0xffffffff) & e) ^ 0xffffffff) + 1 ^ 0xffffffff)) - ((((((b - 1 ^ 0xffffffff) - e) + (b - 1 ^ 0xffffffff | e ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) + 1 ^ 0xffffffff) & ((e & (e ^ 0xffffffff)) - ((e ^ 0xffffffff) & e) ^ 0xffffffff) + 1) ) - (((b & ((b & (e ^ 0xffffffff)) + e ^ 0xffffffff)) + (b & ((b & (e ^ 0xffffffff)) + e ^ 0xffffffff))) - (b ^ (b & (e ^ 0xffffffff)) + e) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 40,
                        "numDAGs": 31,
                        "percentDecreaseByOps": -2.5316455696202533,
                        "opsPercentages": {
                            "arithmetic": 37.03703703703704,
                            "mul": 2.4691358024691357,
                            "bitwise": 60.49382716049383
                        },
                        "percentageDAGsCancel": 19.35483870967742
                    }
                },
                "msvc_default": {
                    "expr": "(~(((~((~e & b) + e) & b) + (~((~e & b) + e) & b)) - ((~e & b) + e ^ b)) | ~(((~(b - 1) - e) + (~(b - 1) | ~e) * -2) - 2) + 1) - ~(((~((~e & b) + e) & b) + (~((~e & b) + e) & b)) - ((~e & b) + e ^ b))",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 21,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 37.9746835443038,
                        "opsPercentages": {
                            "arithmetic": 36.734693877551024,
                            "mul": 2.0408163265306123,
                            "bitwise": 61.224489795918366
                        },
                        "percentageDAGsCancel": 19.047619047619047
                    }
                },
                "gcc_O3": {
                    "expr": "b + e + 2 + (-b | ~e) * 2 & (~(~e & b) + e & b) * 2 - ((~e & b) + e ^ b)",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 4,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 75.9493670886076,
                        "opsPercentages": {
                            "arithmetic": 36.84210526315789,
                            "mul": 10.526315789473683,
                            "bitwise": 52.63157894736842
                        },
                        "percentageDAGsCancel": 12.5
                    }
                }
            }
        },
        {
            "num": 115,
            "gt": {
                "expr": "((((e+b)|(b|e))*((-b)^e)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 16.666666666666664,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((e ^ ~ b) + ((e | b) + (e | b))) + 1) & ~ ((b & ~ e) + e)) + ((b & ~ e) + e)) & ((((~ b + 1) - e) - (((~ b + 1) | ~ e) + ((~ b + 1) | ~ e))) - 2)) * ((((((e ^ ~ b) + ((e | b) + (e | b))) + 1) & ~ ((b & ~ e) + e)) + ((b & ~ e) + e)) | ((((~ b + 1) - e) - (((~ b + 1) | ~ e) + ((~ b + 1) | ~ e))) - 2)) + ((((((e ^ ~ b) + ((e | b) + (e | b))) + 1) & ~ ((b & ~ e) + e)) + ((b & ~ e) + e)) & ~ ((((~ b + 1) - e) - (((~ b + 1) | ~ e) + ((~ b + 1) | ~ e))) - 2)) * (~ (((((e ^ ~ b) + ((e | b) + (e | b))) + 1) & ~ ((b & ~ e) + e)) + ((b & ~ e) + e)) & ((((~ b + 1) - e) - (((~ b + 1) | ~ e) + ((~ b + 1) | ~ e))) - 2))",
                "attributes": {
                    "numOps": 129,
                    "nestedExprLevel": 62,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 41.08527131782946,
                        "mul": 1.550387596899225,
                        "bitwise": 57.36434108527132
                    },
                    "percentageDAGsCancel": 3.7037037037037033
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((-e - b) + (~e | -b) * -2) - 2 & ~(e + (~e & b) + ((e | b) * 2 + ~(b ^ e) + 1 & ~(e + (~e & b))))) * (((e | b) * 2 + ~(b ^ e) + 1 & ~(e + (~e & b))) + e + (~e & b) & (~e | -b) * 2 + b + e + 1) + (((e | b) * 2 + ~(b ^ e) + 1 & ~(e + (~e & b))) + e + (~e & b) & ((-e - b) + (~e | -b) * -2) - 2) * (((-e - b) + (~e | -b) * -2) - 2 | ((e | b) * 2 + ~(b ^ e) + 1 & ~(e + (~e & b))) + e + (~e & b))",
                    "attributes": {
                        "numOps": 102,
                        "nestedExprLevel": 27,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 20.930232558139537,
                        "opsPercentages": {
                            "arithmetic": 42.15686274509804,
                            "mul": 9.803921568627452,
                            "bitwise": 48.03921568627451
                        },
                        "percentageDAGsCancel": 2.941176470588235
                    }
                },
                "msvc_O1": {
                    "expr": "(~((b | e) * 2 + 1 + (~b ^ e) & ~(~e & b + e)) + ~e & b + e & ((~b + (~b + 1 | ~e) * -2) - e) - 1) * (~((~b + (~b + 1 | ~e) * -2) - e) - 1 & ((b | e) * 2 + 1 + (~b ^ e) & ~(~e & b + e)) + ~e & b + e) + (((~b + (~b + 1 | ~e) * -2) - e) - 1 | ((b | e) * 2 + 1 + (~b ^ e) & ~(~e & b + e)) + ~e & b + e) * (((~b + (~b + 1 | ~e) * -2) - e) - 1 & ((b | e) * 2 + 1 + (~b ^ e) & ~(~e & b + e)) + ~e & b + e)",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 22,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 15.503875968992247,
                        "opsPercentages": {
                            "arithmetic": 37.61467889908257,
                            "mul": 9.174311926605505,
                            "bitwise": 53.21100917431193
                        },
                        "percentageDAGsCancel": 2.941176470588235
                    }
                },
                "clang_O3": {
                    "expr": "(~(~(~e & b) + e & (e | b) * 2 - (e ^ b)) + (~e & b) + e & (-b - e) + (~e | -b) * -2 - 2) * (1 - (-b - e) + (~e | -b) * -2 & (~(~e & b) + e & (e | b) * 2 - (e ^ b)) + (~e & b) + e) + ((~(~e & b) + e & (e | b) * 2 - (e ^ b)) + (~e & b) + e | (-b - e) + (~e | -b) * -2 - 2) * ((~(~e & b) + e & (e | b) * 2 - (e ^ b)) + (~e & b) + e & (-b - e) + (~e | -b) * -2 - 2)",
                    "attributes": {
                        "numOps": 96,
                        "nestedExprLevel": 21,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 25.581395348837212,
                        "opsPercentages": {
                            "arithmetic": 42.70833333333333,
                            "mul": 10.416666666666668,
                            "bitwise": 46.875
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e ^ b ^ 0xffffffff) + (e | b) + (e | b) + 1 & ((b & (e ^ 0xffffffff)) + e ^ 0xffffffff)) + (b & (e ^ 0xffffffff)) + e & (((b ^ 0xffffffff) - e) - (((b ^ 0xffffffff) + 1 | e ^ 0xffffffff) + ((b ^ 0xffffffff) + 1 | e ^ 0xffffffff))) - 1) * (((e ^ b ^ 0xffffffff) + (e | b) + (e | b) + 1 & ((b & (e ^ 0xffffffff)) + e ^ 0xffffffff)) + (b & (e ^ 0xffffffff)) + e | (((b ^ 0xffffffff) - e) - (((b ^ 0xffffffff) + 1 | e ^ 0xffffffff) + ((b ^ 0xffffffff) + 1 | e ^ 0xffffffff))) - 1) + (((e ^ b ^ 0xffffffff) + (e | b) + (e | b) + 1 & ((b & (e ^ 0xffffffff)) + e ^ 0xffffffff)) + (b & (e ^ 0xffffffff)) + e & ((((b ^ 0xffffffff) - e) - (((b ^ 0xffffffff) + 1 | e ^ 0xffffffff) + ((b ^ 0xffffffff) + 1 | e ^ 0xffffffff))) - 1 ^ 0xffffffff)) * ((((e ^ b ^ 0xffffffff) + (e | b) + (e | b) + 1 & ((b & (e ^ 0xffffffff)) + e ^ 0xffffffff)) + (b & (e ^ 0xffffffff)) + e ^ 0xffffffff) & (((b ^ 0xffffffff) - e) - (((b ^ 0xffffffff) + 1 | e ^ 0xffffffff) + ((b ^ 0xffffffff) + 1 | e ^ 0xffffffff))) - 1)",
                    "attributes": {
                        "numOps": 125,
                        "nestedExprLevel": 48,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 3.10077519379845,
                        "opsPercentages": {
                            "arithmetic": 39.2,
                            "mul": 1.6,
                            "bitwise": 59.199999999999996
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~e & b) + ((~b ^ e) + 1 + (e | b) + (e | b) & ~((~e & b) + e)) + e & ~(((~b - e) - ((~b + 1 | ~e) + (~b + 1 | ~e))) - 1)) * (~((~e & b) + ((~b ^ e) + 1 + (e | b) + (e | b) & ~((~e & b) + e)) + e) & ((~b - e) - ((~b + 1 | ~e) + (~b + 1 | ~e))) - 1) + ((~e & b) + ((~b ^ e) + 1 + (e | b) + (e | b) & ~((~e & b) + e)) + e & ((~b - e) - ((~b + 1 | ~e) + (~b + 1 | ~e))) - 1) * ((~e & b) + ((~b ^ e) + 1 + (e | b) + (e | b) & ~((~e & b) + e)) + e | ((~b - e) - ((~b + 1 | ~e) + (~b + 1 | ~e))) - 1)",
                    "attributes": {
                        "numOps": 125,
                        "nestedExprLevel": 31,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 3.10077519379845,
                        "opsPercentages": {
                            "arithmetic": 39.2,
                            "mul": 1.6,
                            "bitwise": 59.199999999999996
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~e | -b * 2 + b + 1 + e & (~(b ^ e) + 1 + (b | e) * 2 & ~(~e & b) + e) + (~e & b) + e) * (~(~(b ^ e) + 1 + (b | e) * 2 & ~(~e & b) + e) + (~e & b) + e & ((-b - e) + ~e | -b * -2) - 2) + ((~(b ^ e) + 1 + (b | e) * 2 & ~(~e & b) + e) + (~e & b) + e | ((-b - e) + ~e | -b * -2) - 2) * ((~(b ^ e) + 1 + (b | e) * 2 & ~(~e & b) + e) + (~e & b) + e & ((-b - e) + ~e | -b * -2) - 2)",
                    "attributes": {
                        "numOps": 102,
                        "nestedExprLevel": 21,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 20.930232558139537,
                        "opsPercentages": {
                            "arithmetic": 42.15686274509804,
                            "mul": 9.803921568627452,
                            "bitwise": 48.03921568627451
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 116,
            "gt": {
                "expr": "((~(((a&a)^(a-a))-(~(-(a+(b|b)))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 0.0,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 44.44444444444444
                }
            },
            "mba": {
                "expr": "((((a - ~ ((b & ~ b) + b)) - 1) - 1) - ((((((~ a | a) + a) + 1) - ((a + ~ a) + 1)) - (((((~ a | a) + a) + 1) | ~ ((a + ~ a) + 1)) + ((((~ a | a) + a) + 1) | ~ ((a + ~ a) + 1)))) - 2)) - 1",
                "attributes": {
                    "numOps": 38,
                    "nestedExprLevel": 22,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 57.89473684210527,
                        "mul": 0.0,
                        "bitwise": 42.10526315789473
                    },
                    "percentageDAGsCancel": 28.57142857142857
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-3 - ~b",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 1,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 92.10526315789474,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "b + -2",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 94.73684210526315,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "b + -2",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 94.73684210526315,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((a + (a ^ 0xffffffff)) - (a ^ 0xffffffff | a)) + ((a ^ 0xffffffff | a) + a + 1 | a + (a ^ 0xffffffff) + 1 ^ 0xffffffff) + ((a ^ 0xffffffff | a) + a + 1 | a + (a ^ 0xffffffff) + 1 ^ 0xffffffff)) - ((b & (b ^ 0xffffffff)) + b ^ 0xffffffff)) + -1",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 13,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 15.789473684210526,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "msvc_default": {
                    "expr": "(a - ~b) + (((a | ~(a + 1 + ~a)) + (a | ~(a + 1 + ~a))) - (-2 - ~a)) + -2",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 6,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 47.368421052631575,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "gcc_O3": {
                    "expr": "b + -2",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 94.73684210526315,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 117,
            "gt": {
                "expr": "((-((c+c)&(c|b))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (((~ ((c | c) + (c & c)) | (((c + b) + 1) + ((- c - 1) | (- b - 1)))) - ~ ((c | c) + (c & c))) - 1)",
                "attributes": {
                    "numOps": 20,
                    "nestedExprLevel": 12,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 55.00000000000001,
                        "mul": 0.0,
                        "bitwise": 45.0
                    },
                    "percentageDAGsCancel": 18.75
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(c * 2 & b + c + 1 + ~(c & b))",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 60.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 12.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(((b - (b & c)) + c | ~(c * 2)) + c * 2)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 5,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 55.00000000000001,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 22.22222222222222,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_O3": {
                    "expr": "-(c * 2 & (b | c))",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 3,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 80.0,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "clang_default": {
                    "expr": "((c * 2 ^ 0xffffffff | c + b + 1 + (0xffffffff - c | 0xffffffff - b)) - (c * 2 ^ 0xffffffff)) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 30.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 14.285714285714285,
                            "bitwise": 35.714285714285715
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~(((~(c * 2) | c + b + 1 + (0xffffffff - c | 0xffffffff - b)) - ~(c * 2)) - 1)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 30.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 14.285714285714285,
                            "bitwise": 35.714285714285715
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-((b + c) - (c & b) & c * 2)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 70.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 118,
            "gt": {
                "expr": "((((c-(-a))|(e*c))+(a^(e*e))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 28.57142857142857,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((((c & ~ (~ a + 1)) << 1) - (c ^ (~ a + 1))) + ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) + 1) + ((- (((c & ~ (~ a + 1)) << 1) - (c ^ (~ a + 1))) - 1) | (- ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) - 1))) ^ ~ (((a - ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) - ((a | ~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) << 1)) - 2)) + ((((((((c & ~ (~ a + 1)) << 1) - (c ^ (~ a + 1))) + ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) + 1) + ((- (((c & ~ (~ a + 1)) << 1) - (c ^ (~ a + 1))) - 1) | (- ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) - 1))) | (((a - ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) - ((a | ~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) << 1)) - 2)) + (((((((c & ~ (~ a + 1)) << 1) - (c ^ (~ a + 1))) + ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) + 1) + ((- (((c & ~ (~ a + 1)) << 1) - (c ^ (~ a + 1))) - 1) | (- ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) - 1))) | (((a - ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) - ((a | ~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) << 1)) - 2)))) + 1",
                "attributes": {
                    "numOps": 211,
                    "nestedExprLevel": 99,
                    "numDAGs": 43,
                    "opsPercentages": {
                        "arithmetic": 29.85781990521327,
                        "mul": 11.374407582938389,
                        "bitwise": 58.767772511848335
                    },
                    "percentageDAGsCancel": 13.953488372093023
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((a - e * e) + (~(e * e) | a) * -2) - 2 | (~e & c) * (~c & e) + (e & c) * (e | c) + ((a - 1 & c) * 2 - (-a ^ c)) + 1 + (~((~e & c) * (~c & e) + (e & c) * (e | c)) | ((-a ^ c) + (a - 1 & c) * -2) - 1)) * 2 + ((~e & c) * (~c & e) + (e & c) * (e | c) + ((a - 1 & c) * 2 - (-a ^ c)) + 1 + (~((~e & c) * (~c & e) + (e & c) * (e | c)) | ((-a ^ c) + (a - 1 & c) * -2) - 1) ^ (~(e * e) | a) * 2 + ~a + e * e + 2) + 1",
                    "attributes": {
                        "numOps": 97,
                        "nestedExprLevel": 27,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 54.02843601895735,
                        "opsPercentages": {
                            "arithmetic": 36.08247422680412,
                            "mul": 19.587628865979383,
                            "bitwise": 44.329896907216494
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((a + (~(e * e) | a) * -2) - e * e) - 2 | (~e & c) * (~c & e) + 1 + ((((-a ^ c + ~-a & c * -2) - 1 | ~(~e & c) * (~c & e) - (c | e) * (c & e)) + ~-a & c * 2) - -a ^ c) + (c | e) * (c & e)) * 2 + 1 + (~((a + (~(e * e) | a) * -2) - e * e) - 2 ^ (~e & c) * (~c & e) + 1 + ((((-a ^ c + ~-a & c * -2) - 1 | ~(~e & c) * (~c & e) - (c | e) * (c & e)) + ~-a & c * 2) - -a ^ c) + (c | e) * (c & e))",
                    "attributes": {
                        "numOps": 102,
                        "nestedExprLevel": 24,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 51.65876777251185,
                        "opsPercentages": {
                            "arithmetic": 35.294117647058826,
                            "mul": 18.627450980392158,
                            "bitwise": 46.07843137254902
                        },
                        "percentageDAGsCancel": 2.380952380952381
                    }
                },
                "clang_O3": {
                    "expr": "(1 - (a - e * e) + (~(e * e) | a) * -2 ^ (~e & c) * (~c & e) + (e | c) * (e & c) | (a - 1 & c) * 2 - (-a ^ c)) + ((a - e * e) + (~(e * e) | a) * -2 - 2 | (~e & c) * (~c & e) + (e | c) * (e & c) | (a - 1 & c) * 2 - (-a ^ c)) * 2 + 1",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 12,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 73.93364928909952,
                        "opsPercentages": {
                            "arithmetic": 32.72727272727273,
                            "mul": 23.636363636363637,
                            "bitwise": 43.63636363636363
                        },
                        "percentageDAGsCancel": 3.125
                    }
                },
                "clang_default": {
                    "expr": "(((c & ((a ^ 0xffffffff) + 1 ^ 0xffffffff)) * 2 - (c ^ (a ^ 0xffffffff) + 1)) + (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) + 1 + (0xffffffff - ((c & ((a ^ 0xffffffff) + 1 ^ 0xffffffff)) * 2 - (c ^ (a ^ 0xffffffff) + 1)) | 0xffffffff - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c))) ^ ((a - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e))) + (a | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) + (((c & ((a ^ 0xffffffff) + 1 ^ 0xffffffff)) * 2 - (c ^ (a ^ 0xffffffff) + 1)) + (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) + 1 + (0xffffffff - ((c & ((a ^ 0xffffffff) + 1 ^ 0xffffffff)) * 2 - (c ^ (a ^ 0xffffffff) + 1)) | 0xffffffff - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c))) | ((a - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e))) + (a | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff) * -2) - 2) + (((c & ((a ^ 0xffffffff) + 1 ^ 0xffffffff)) * 2 - (c ^ (a ^ 0xffffffff) + 1)) + (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) + 1 + (0xffffffff - ((c & ((a ^ 0xffffffff) + 1 ^ 0xffffffff)) * 2 - (c ^ (a ^ 0xffffffff) + 1)) | 0xffffffff - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c))) | ((a - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e))) + (a | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff) * -2) - 2) + 1",
                    "attributes": {
                        "numOps": 196,
                        "nestedExprLevel": 77,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 7.109004739336493,
                        "opsPercentages": {
                            "arithmetic": 30.612244897959183,
                            "mul": 16.83673469387755,
                            "bitwise": 52.55102040816326
                        },
                        "percentageDAGsCancel": 7.317073170731707
                    }
                },
                "msvc_default": {
                    "expr": "(((~(~a + 1) & c) * 2 - (~a + 1 ^ c)) + (e & c) * (e | c) + (~c & e) * (~e & c) + 1 + (0xffffffff - ((~(~a + 1) & c) * 2 - (~a + 1 ^ c)) | 0xffffffff - ((e & c) * (e | c) + (~c & e) * (~e & c))) ^ ~(((a - e * e) + (~(e * e) | a) * -2) - 2)) + 1 + (((~(~a + 1) & c) * 2 - (~a + 1 ^ c)) + (e & c) * (e | c) + (~c & e) * (~e & c) + 1 + (0xffffffff - ((~(~a + 1) & c) * 2 - (~a + 1 ^ c)) | 0xffffffff - ((e & c) * (e | c) + (~c & e) * (~e & c))) | ((a - e * e) + (~(e * e) | a) * -2) - 2) + (((~(~a + 1) & c) * 2 - (~a + 1 ^ c)) + (e & c) * (e | c) + (~c & e) * (~e & c) + 1 + (0xffffffff - ((~(~a + 1) & c) * 2 - (~a + 1 ^ c)) | 0xffffffff - ((e & c) * (e | c) + (~c & e) * (~e & c))) | ((a - e * e) + (~(e * e) | a) * -2) - 2)",
                    "attributes": {
                        "numOps": 160,
                        "nestedExprLevel": 48,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 24.170616113744074,
                        "opsPercentages": {
                            "arithmetic": 33.75,
                            "mul": 16.875,
                            "bitwise": 49.375
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~e * e | a) * 2 + 2 + ~a + e * e ^ (((-a ^ c) + a - 1 & c * -2) - 1 | ~(~c & e) * (~e & c) + (c & e) * (c | e)) + (~c & e) * (~e & c) + (c & e) * (c | e) + 1 + (a - 1 & c * 2 - (-a ^ c))) + 1 + (((a - e * e) + (~e * e | a) * -2) - 2 | (((-a ^ c) + a - 1 & c * -2) - 1 | ~(~c & e) * (~e & c) + (c & e) * (c | e)) + (~c & e) * (~e & c) + (c & e) * (c | e) + 1 + (a - 1 & c * 2 - (-a ^ c))) * 2",
                    "attributes": {
                        "numOps": 97,
                        "nestedExprLevel": 20,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 54.02843601895735,
                        "opsPercentages": {
                            "arithmetic": 36.08247422680412,
                            "mul": 19.587628865979383,
                            "bitwise": 44.329896907216494
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 119,
            "gt": {
                "expr": "((((-a)&(~a))-((e*((a-a)^a))-(a-a))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 11.11111111111111,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(((~ (a - 1) | a) - a) ^ ((((e & (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) * (e | (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) + (e & ~ (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) * (~ e & (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2))) ^ (((a & ~ a) << 1) - (a ^ a))) - ((~ ((e & (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) * (e | (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) + (e & ~ (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) * (~ e & (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2))) & (((a & ~ a) << 1) - (a ^ a))) + (~ ((e & (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) * (e | (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) + (e & ~ (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) * (~ e & (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2))) & (((a & ~ a) << 1) - (a ^ a)))))) - ((~ ((~ (a - 1) | a) - a) & ((((e & (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) * (e | (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) + (e & ~ (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) * (~ e & (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2))) ^ (((a & ~ a) << 1) - (a ^ a))) - ((~ ((e & (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) * (e | (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) + (e & ~ (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) * (~ e & (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2))) & (((a & ~ a) << 1) - (a ^ a))) + (~ ((e & (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) * (e | (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) + (e & ~ (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2)) * (~ e & (((((a & ~ a) - (~ a & a)) - a) - ((((a & ~ a) - (~ a & a)) | ~ a) + (((a & ~ a) - (~ a & a)) | ~ a))) - 2))) & (((a & ~ a) << 1) - (a ^ a)))))) << 1)",
                "attributes": {
                    "numOps": 663,
                    "nestedExprLevel": 354,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 28.50678733031674,
                        "mul": 1.809954751131222,
                        "bitwise": 69.68325791855203
                    },
                    "percentageDAGsCancel": 37.142857142857146
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-a & ~a ^ (~a * 2 + a + 1 & e) * ((~a * -2 - a) - 2 & ~e) + ((~a * -2 - a) - 2 & e) * ((~a * -2 - a) - 2 | e)) + ((~a * 2 + a + 1 & e) * ((~a * -2 - a) - 2 & ~e) + ((~a * -2 - a) - 2 & e) * ((~a * -2 - a) - 2 | e) & (a - 1 | a)) * -2",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 10,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 90.34690799396682,
                        "opsPercentages": {
                            "arithmetic": 43.75,
                            "mul": 20.3125,
                            "bitwise": 35.9375
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "msvc_O1": {
                    "expr": "((-a | a) - a ^ (a & e) * (a | e) + (~e & a) * (~a & e)) - (~(-a | a) - a * 2 & (a & e) * (a | e) + (~e & a) * (~a & e) * 2)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 8,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 95.47511312217195,
                        "opsPercentages": {
                            "arithmetic": 23.333333333333332,
                            "mul": 20.0,
                            "bitwise": 56.666666666666664
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "clang_O3": {
                    "expr": "(~a & -a ^ (~e & a) * (~a & e) + (a | e) * (a & e)) + ((a - 1 | a) & (~e & a) * (~a & e) + (a | e) * (a & e)) * -2",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 8,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 95.77677224736048,
                        "opsPercentages": {
                            "arithmetic": 21.428571428571427,
                            "mul": 17.857142857142858,
                            "bitwise": 60.71428571428571
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "clang_default": {
                    "expr": "((a - 1 ^ 0xffffffff | a) - a ^ ((e & ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff ))) - 2) * (e | ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff ))) - 2) + (e & (((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2 ^ 0xffffffff)) * ((e ^ 0xffffffff) & ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff ))) - 2) ^ (a & (a ^ 0xffffffff)) * 2) - ((((e & ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2) * (e | ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2) + (e & (((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2 ^ 0xffffffff)) * ((e ^ 0xffffffff) & ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2) ^ 0xffffffff) & (a & (a ^ 0xffffffff)) * 2) + (((e & ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2) * (e | ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2) + (e & (((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2 ^ 0xffffffff)) * ((e ^ 0xffffffff) & ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2) ^ 0xffffffff) & (a & (a ^ 0xffffffff)) * 2))) + (((a - 1 ^ 0xffffffff | a) - a ^ 0xffffffff) & ((e & ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff ))) - 2) * (e | ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff ))) - 2) + (e & (((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2 ^ 0xffffffff)) * ((e ^ 0xffffffff) & ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff ))) - 2) ^ (a & (a ^ 0xffffffff)) * 2) - ((((e & ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2) * (e | ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2) + (e & (((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2 ^ 0xffffffff)) * ((e ^ 0xffffffff) & ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2) ^ 0xffffffff) & (a & (a ^ 0xffffffff)) * 2) + (((e & ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2) * (e | ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2) + (e & (((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2 ^ 0xffffffff)) * ((e ^ 0xffffffff) & ((((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) - a) - (((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) | a ^ 0xffffffff))) - 2) ^ 0xffffffff) & (a & (a ^ 0xffffffff)) * 2))) * -2",
                    "attributes": {
                        "numOps": 652,
                        "nestedExprLevel": 341,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 1.6591251885369533,
                        "opsPercentages": {
                            "arithmetic": 28.22085889570552,
                            "mul": 2.9141104294478524,
                            "bitwise": 68.86503067484662
                        },
                        "percentageDAGsCancel": 23.52941176470588
                    }
                },
                "msvc_default": {
                    "expr": "((~(a - 1) | a) - a ^ ((-(~a + ~a) - a) - 2 & e) * ((-(~a + ~a) - a) - 2 | e) + (~((-(~a + ~a) - a) - 2) & e) * (~e & (-(~a + ~a) - a) - 2)) + (~((~(a - 1) | a) - a) & ((-(~a + ~a) - a) - 2 & e) * ((-(~a + ~a) - a) - 2 | e) + (~((-(~a + ~a) - a) - 2) & e) * (~e & (-(~a + ~a) - a) - 2)) * -2",
                    "attributes": {
                        "numOps": 80,
                        "nestedExprLevel": 25,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 87.93363499245852,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 6.25,
                            "bitwise": 43.75
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "gcc_O3": {
                    "expr": "(-a & ~a ^ (~a * 2 + 1 + a & e) * (~e & (-a + ~a * -2) - 2) + ((-a + ~a * -2) - 2 | e) * ((-a + ~a * -2) - 2 & e)) + ((~a * 2 + 1 + a & e) * (~e & (-a + ~a * -2) - 2) + ((-a + ~a * -2) - 2 | e) * ((-a + ~a * -2) - 2 & e) & (a - 1 | a)) * -2",
                    "attributes": {
                        "numOps": 70,
                        "nestedExprLevel": 10,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 89.44193061840122,
                        "opsPercentages": {
                            "arithmetic": 48.57142857142857,
                            "mul": 18.571428571428573,
                            "bitwise": 32.857142857142854
                        },
                        "percentageDAGsCancel": 12.5
                    }
                }
            }
        },
        {
            "num": 120,
            "gt": {
                "expr": "(((-(c+a))&((-(d&(-d)))|(c^d))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ (~ ((c - ~ a) - 1) + 1) | ((((~ ((~ d | ~ (d - 1)) - ~ d) + 1) + ((c | d) - (c & d))) + 1) + ((- (~ ((~ d | ~ (d - 1)) - ~ d) + 1) - 1) | (- ((c | d) - (c & d)) - 1)))) + (~ ((c - ~ a) - 1) + 1)) + 1",
                "attributes": {
                    "numOps": 44,
                    "nestedExprLevel": 24,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 52.27272727272727,
                        "mul": 0.0,
                        "bitwise": 47.72727272727273
                    },
                    "percentageDAGsCancel": 3.7037037037037033
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~a + ~c + ((c - ~a) - 2 | (~(c ^ d) | (-d & d) - 1) + ((c ^ d) - (-d & d)) + 1) + 3",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 6,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 52.27272727272727,
                        "opsPercentages": {
                            "arithmetic": 52.38095238095239,
                            "mul": 0.0,
                            "bitwise": 47.61904761904761
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(c + a) + 2 + ((((((c & d) - (c | d)) - 1 | d + (-d | ~d)) + ~(d + (-d | ~d) + 1)) - (c & d)) + (c | d) + 2 | ~(~(c + a) + 1))",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 11,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 31.818181818181817,
                        "opsPercentages": {
                            "arithmetic": 53.333333333333336,
                            "mul": 0.0,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((((d ^ c) - (-d & d)) + (~(d ^ c) | (-d & d) - 1) + 1 | (a + c) - 1) - (c + a)) + 1",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 8,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 59.09090909090909,
                        "opsPercentages": {
                            "arithmetic": 61.111111111111114,
                            "mul": 0.0,
                            "bitwise": 38.88888888888889
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) + 1 ^ 0xffffffff | ((d ^ 0xffffffff | d - 1 ^ 0xffffffff) - (d ^ 0xffffffff) ^ 0xffffffff) + ((c | d) - (c & d)) + 2 + (0xffffffff - (((d ^ 0xffffffff | d - 1 ^ 0xffffffff) - (d ^ 0xffffffff) ^ 0xffffffff) + 1) | 0xffffffff - ((c | d) - (c & d)))) + ((c - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) + 2",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 17,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 9.090909090909092,
                        "opsPercentages": {
                            "arithmetic": 47.5,
                            "mul": 0.0,
                            "bitwise": 52.5
                        },
                        "percentageDAGsCancel": 8.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(~((c - ~a) - 1) + 1) | ~((~d | ~(d - 1)) - ~d) + ((c | d) - (c & d)) + 2 + (0xffffffff - (~((~d | ~(d - 1)) - ~d) + 1) | 0xffffffff - ((c | d) - (c & d)))) + 2 + ~((c - ~a) - 1)",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 16,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 9.090909090909092,
                        "opsPercentages": {
                            "arithmetic": 47.5,
                            "mul": 0.0,
                            "bitwise": 52.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((((-d & d) - 1 | ~(c ^ d)) + 1 + ((c ^ d) - (-d & d)) | (c - 1) + a) - c) - a) + 1",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 9,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 59.09090909090909,
                        "opsPercentages": {
                            "arithmetic": 61.111111111111114,
                            "mul": 0.0,
                            "bitwise": 38.88888888888889
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                }
            }
        },
        {
            "num": 121,
            "gt": {
                "expr": "(((b*b)&((~(~(b^c)))|(c|c))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 14.285714285714285,
                        "bitwise": 85.71428571428571
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "(~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b)) | (((- (((b & c) - (b | c)) - 1) - 1) & ~ (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + (((c + c) + 1) + ((- c - 1) | (- c - 1))))) - ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))",
                "attributes": {
                    "numOps": 47,
                    "nestedExprLevel": 22,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 46.808510638297875,
                        "mul": 8.51063829787234,
                        "bitwise": 44.680851063829785
                    },
                    "percentageDAGsCancel": 23.076923076923077
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "b * b & ((b ^ c) & -c - 1) + ~c + c * 2 + 1",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 76.59574468085107,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 18.181818181818183,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 18.181818181818183
                    }
                },
                "msvc_O1": {
                    "expr": "b * b + 1 + (((b | c) - (b & c) & ~c) + c | ~(b * b))",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 74.46808510638297,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 16.666666666666664,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~c & b) + c & b * b",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 89.36170212765957,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff | (0xffffffff - (((b & c) - (b | c)) + -1) & (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff)) + c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 14,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 17.02127659574468,
                        "opsPercentages": {
                            "arithmetic": 41.02564102564102,
                            "mul": 15.384615384615385,
                            "bitwise": 43.58974358974359
                        },
                        "percentageDAGsCancel": 12.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(b * b) | (0xffffffff - (((b & c) - (b | c)) + -1) & ~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c))) + c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - ~(b * b)",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 9,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 42.5531914893617,
                        "opsPercentages": {
                            "arithmetic": 51.85185185185185,
                            "mul": 14.814814814814813,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "gcc_O3": {
                    "expr": "((b ^ c) & c - c * 2 + 1) + ~c + c * 2 + 1 & b * b",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 74.46808510638297,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 25.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 122,
            "gt": {
                "expr": "(((a^(a*a))^(~((d^a)|a))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 16.666666666666664,
                        "bitwise": 83.33333333333334
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((a - ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) - ((a | ~ ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) << 1)) - 2) | (- ((((d | a) - (d & a)) & ~ a) + a) - 1)) - ((((a - ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) - ((a | ~ ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) << 1)) - 2) & (- ((((d | a) - (d & a)) & ~ a) + a) - 1))",
                "attributes": {
                    "numOps": 67,
                    "nestedExprLevel": 35,
                    "numDAGs": 24,
                    "opsPercentages": {
                        "arithmetic": 28.35820895522388,
                        "mul": 11.940298507462686,
                        "bitwise": 59.70149253731343
                    },
                    "percentageDAGsCancel": 20.833333333333336
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(a * a) | a) * 2 + ~a + a * a + 2 ^ ((d ^ a) & ~a) + a",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 79.1044776119403,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 21.428571428571427,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_O1": {
                    "expr": "(~((a | d) - (a & d) & ~a) - a | ((1 - a) * a + (~(a * a) | a) * -2) - 2) - (~((a | d) - (a & d) & ~a) - a & ((1 - a) * a + (~(a * a) | a) * -2) - 2)",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 12,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 47.76119402985074,
                        "opsPercentages": {
                            "arithmetic": 37.142857142857146,
                            "mul": 17.142857142857142,
                            "bitwise": 45.714285714285715
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "clang_O3": {
                    "expr": "(a * a - a) + (~(a * a) | a) * 2 + 1 ^ (~a & d) + a",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 82.08955223880598,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 25.0,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((a - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a))) + (a | a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ 0xffffffff ) * -2) - 2 | 0xffffffff - (((d | a) - (d & a) & (a ^ 0xffffffff)) + a)) - (((a - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a))) + (a | a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ 0xffffffff) * -2) - 2 & 0xffffffff - (((d | a) - (d & a) & (a ^ 0xffffffff)) + a) )",
                    "attributes": {
                        "numOps": 59,
                        "nestedExprLevel": 26,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 11.940298507462686,
                        "opsPercentages": {
                            "arithmetic": 32.20338983050847,
                            "mul": 16.94915254237288,
                            "bitwise": 50.847457627118644
                        },
                        "percentageDAGsCancel": 18.181818181818183
                    }
                },
                "msvc_default": {
                    "expr": "(((a - a * a) + (~(a * a) | a) * -2) - 2 | 0xffffffff - (((d | a) - (d & a) & ~a) + a)) - (((a - a * a) + (~(a * a) | a) * -2) - 2 & 0xffffffff - (((d | a) - (d & a) & ~a) + a))",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 13,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 47.76119402985074,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 17.142857142857142,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "a * a + ~a + 2 + (~(a * a) | a) * 2 ^ ((d ^ a) & ~a) + a",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 79.1044776119403,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 21.428571428571427,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                }
            }
        },
        {
            "num": 123,
            "gt": {
                "expr": "(((c^e)^(~(~c))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 0.0,
                        "bitwise": 100.0
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "((((c - e) - ((c | ~ e) << 1)) - 2) | (- (- c - 1) - 1)) - ((((c - e) - ((c | ~ e) << 1)) - 2) & (- (- c - 1) - 1))",
                "attributes": {
                    "numOps": 23,
                    "nestedExprLevel": 12,
                    "numDAGs": 13,
                    "opsPercentages": {
                        "arithmetic": 65.21739130434783,
                        "mul": 0.0,
                        "bitwise": 34.78260869565217
                    },
                    "percentageDAGsCancel": 15.384615384615385
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((c - e) + (~e | c) * -2) - 2 ^ c",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 65.21739130434783,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 12.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_O1": {
                    "expr": "(((c + (~e | c) * -2) - e) - 2 | c) - (((c + (~e | c) * -2) - e) - 2 & c)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 8,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 26.08695652173913,
                        "opsPercentages": {
                            "arithmetic": 52.94117647058824,
                            "mul": 11.76470588235294,
                            "bitwise": 35.294117647058826
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_O3": {
                    "expr": "((c - e) + (~e | c) * -2) - 2 ^ c",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 65.21739130434783,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 12.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_default": {
                    "expr": "(((c - e) + (c | e ^ 0xffffffff) * -2) - 2 | 0xffffffff - (-1 - c)) - (((c - e) + (c | e ^ 0xffffffff) * -2) - 2 & 0xffffffff - (-1 - c))",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 8,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 65.21739130434783,
                            "mul": 8.695652173913043,
                            "bitwise": 26.08695652173913
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((c - e) + (~e | c) * -2) - 2 | 0xffffffff - (-1 - c)) - (((c - e) + (~e | c) * -2) - 2 & 0xffffffff - (-1 - c))",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 8,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 65.21739130434783,
                            "mul": 8.695652173913043,
                            "bitwise": 26.08695652173913
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((c - e) + (~e | c) * -2) - 2 ^ c",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 65.21739130434783,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 12.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 12.5
                    }
                }
            }
        },
        {
            "num": 124,
            "gt": {
                "expr": "((((-((d|a)-(a&e)))-(d*a))&((e^(a+a))|d)))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 10.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "(~ ((~ (((((d & ~ a) + a) & ~ ((~ a | e) - ~ a)) - (~ ((d & ~ a) + a) & ((~ a | e) - ~ a))) - 1) ^ ((d & a) * (d | a) + (d & ~ a) * (~ d & a))) - ((~ (~ (((((d & ~ a) + a) & ~ ((~ a | e) - ~ a)) - (~ ((d & ~ a) + a) & ((~ a | e) - ~ a))) - 1)) & ((d & a) * (d | a) + (d & ~ a) * (~ d & a))) + (~ (~ (((((d & ~ a) + a) & ~ ((~ a | e) - ~ a)) - (~ ((d & ~ a) + a) & ((~ a | e) - ~ a))) - 1)) & ((d & a) * (d | a) + (d & ~ a) * (~ d & a))))) | (((((e - ((a - ~ a) - 1)) - ((e | ~ ((a - ~ a) - 1)) + (e | ~ ((a - ~ a) - 1)))) - 2) & ~ d) + d)) - ~ ((~ (((((d & ~ a) + a) & ~ ((~ a | e) - ~ a)) - (~ ((d & ~ a) + a) & ((~ a | e) - ~ a))) - 1) ^ ((d & a) * (d | a) + (d & ~ a) * (~ d & a))) - ((~ (~ (((((d & ~ a) + a) & ~ ((~ a | e) - ~ a)) - (~ ((d & ~ a) + a) & ((~ a | e) - ~ a))) - 1)) & ((d & a) * (d | a) + (d & ~ a) * (~ d & a))) + (~ (~ (((((d & ~ a) + a) & ~ ((~ a | e) - ~ a)) - (~ ((d & ~ a) + a) & ((~ a | e) - ~ a))) - 1)) & ((d & a) * (d | a) + (d & ~ a) * (~ d & a)))))",
                "attributes": {
                    "numOps": 218,
                    "nestedExprLevel": 93,
                    "numDAGs": 37,
                    "opsPercentages": {
                        "arithmetic": 26.605504587155966,
                        "mul": 5.5045871559633035,
                        "bitwise": 67.88990825688074
                    },
                    "percentageDAGsCancel": 8.108108108108109
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((~d & a) * (~a & d) + (d & a) * (d | a) & -((e & a & ~(a + (~a & d))) + (e & a | ~(a + (~a & d)))) - 2) * 2 + (-((e & a & ~(a + (~a & d))) + (e & a | ~(a + (~a & d)))) - 2 ^ (~d & a) * (~a & d) + (d & a) * (d | a))) & (((e - ((a - ~a) + -1)) + (~a * 2 + 1 | e) * -2) - 2 & ~d) + d",
                    "attributes": {
                        "numOps": 70,
                        "nestedExprLevel": 23,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 67.88990825688074,
                        "opsPercentages": {
                            "arithmetic": 31.428571428571427,
                            "mul": 10.0,
                            "bitwise": 58.57142857142858
                        },
                        "percentageDAGsCancel": 2.7777777777777777
                    }
                },
                "msvc_O1": {
                    "expr": "~((~a + 1 + (~a | e) & a + (~a & d)) - (~a + (~a & d) & a + 1 + (~a | e))) - 1 ^ (~d & a) * (~a & d) + (a | d) * (a & d) + 1 + ((e + -1 + ((~a + (~(a * 2) | e) * -2) - a) & ~d) + d | ~(~((~a + 1 + (~a | e) & a + (~a & d)) - (~a + (~a & d) & a + 1 + (~a | e))) - 1 ^ (~d & a) * (~a & d) + (a | d) * (a & d) + (~d & a) * (~a & d) + (a | d) * (a & d) & ((~a + 1 + (~a | e) & a + (~a & d)) - (~a + (~a & d) & a + 1 + (~a | e))) - 1 * -2)) + (~d & a) * (~a & d) + (a | d) * (a & d) & ((~a + 1 + (~a | e) & a + (~a & d)) - (~a + (~a & d) & a + 1 + (~a | e))) - 1 * -2",
                    "attributes": {
                        "numOps": 146,
                        "nestedExprLevel": 35,
                        "numDAGs": 47,
                        "percentDecreaseByOps": 33.02752293577982,
                        "opsPercentages": {
                            "arithmetic": 33.56164383561644,
                            "mul": 8.21917808219178,
                            "bitwise": 58.21917808219178
                        },
                        "percentageDAGsCancel": 4.25531914893617
                    }
                },
                "clang_O3": {
                    "expr": "~((~(e & a) + (~a & d) + a ^ (~d & a) * (~a & d) + (d | a) * (d & a)) + ((~d & a) * (~a & d) + (d | a) * (d & a) & ~(e & a) + (~a & d) + a) * 2) & ((e + a * -2 + (~(a * 2) | e) * -2) - 2 & ~d) + d",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 14,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 77.52293577981652,
                        "opsPercentages": {
                            "arithmetic": 26.53061224489796,
                            "mul": 16.3265306122449,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_default": {
                    "expr": "(((((d & (a ^ 0xffffffff)) + a & ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) ^ 0xffffffff)) - (((d & (a ^ 0xffffffff)) + a ^ 0xffffffff) & (a ^ 0xffffffff | e) - (a ^ 0xffffffff))) - 1 ^ 0xffffffff ^ (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a)) - (((((d & (a ^ 0xffffffff)) + a & ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) ^ 0xffffffff)) - (((d & (a ^ 0xffffffff)) + a ^ 0xffffffff) & (a ^ 0xffffffff | e) - (a ^ 0xffffffff))) - 1 & (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a)) + ((((d & (a ^ 0xffffffff)) + a & ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) ^ 0xffffffff)) - (((d & (a ^ 0xffffffff)) + a ^ 0xffffffff) & (a ^ 0xffffffff | e) - (a ^ 0xffffffff))) - 1 & (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a))) ^ 0xffffffff | (((e - ((a - (a ^ 0xffffffff)) + -1)) - ((e | (a - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) + (e | (a - (a ^ 0xffffffff)) - 1 ^ 0xffffffff))) - 2 & (d ^ 0xffffffff)) + d) - (((((d & (a ^ 0xffffffff)) + a & ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) ^ 0xffffffff)) - (((d & (a ^ 0xffffffff)) + a ^ 0xffffffff) & (a ^ 0xffffffff | e) - (a ^ 0xffffffff))) - 1 ^ 0xffffffff ^ (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a)) - (((((d & (a ^ 0xffffffff)) + a & ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) ^ 0xffffffff)) - (((d & (a ^ 0xffffffff)) + a ^ 0xffffffff) & (a ^ 0xffffffff | e) - (a ^ 0xffffffff))) - 1 & (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a)) + ((((d & (a ^ 0xffffffff)) + a & ((a ^ 0xffffffff | e) - (a ^ 0xffffffff) ^ 0xffffffff)) - (((d & (a ^ 0xffffffff)) + a ^ 0xffffffff) & (a ^ 0xffffffff | e) - (a ^ 0xffffffff))) - 1 & (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a))) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 211,
                        "nestedExprLevel": 95,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 3.211009174311927,
                        "opsPercentages": {
                            "arithmetic": 27.96208530805687,
                            "mul": 5.687203791469194,
                            "bitwise": 66.35071090047393
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_default": {
                    "expr": "(~((~((((~a & d) + a & ~((~a | e) - ~a)) - (~((~a & d) + a) & (~a | e) - ~a)) - 1) ^ (d & a) * (d | a) + (~a & d) * (~d & a)) - (((((~a & d) + a & ~((~a | e) - ~a)) - (~((~a & d) + a) & (~a | e) - ~a)) - 1 & (d & a) * (d | a) + (~a & d) * (~d & a)) + ((((~a & d) + a & ~((~a | e) - ~a)) - (~((~a & d) + a) & (~a | e) - ~a)) - 1 & (d & a) * (d | a) + (~a & d) * (~d & a) ))) | (((e - ((a - ~a) + -1)) - ((~((a - ~a) - 1) | e) + (~((a - ~a) - 1) | e))) - 2 & ~d) + d) - ~((~((((~a & d) + a & ~((~a | e) - ~a)) - (~((~a & d) + a) & (~a | e) - ~a)) - 1) ^ (d & a) * (d | a) + (~a & d) * (~d & a)) - (((((~a & d) + a & ~((~a | e) - ~a)) - (~((~a & d) + a) & (~a | e) - ~a)) - 1 & (d & a) * (d | a) + (~a & d) * (~d & a) ) + ((((~a & d) + a & ~((~a | e) - ~a)) - (~((~a & d) + a) & (~a | e) - ~a)) - 1 & (d & a) * (d | a) + (~a & d) * (~d & a))))",
                    "attributes": {
                        "numOps": 211,
                        "nestedExprLevel": 71,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 3.211009174311927,
                        "opsPercentages": {
                            "arithmetic": 27.96208530805687,
                            "mul": 5.687203791469194,
                            "bitwise": 66.35071090047393
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "gcc_O3": {
                    "expr": "(((~a - a) + e + (~a * 2 + 1 | e) * -2) - 1 & ~d) + d & ~(((a & d) * (a | d) + (~d & a) * (~a & d) ^ (((~a & d) + a) - (a & e)) - 1) + ((((~a & d) + a) - (a & e)) - 1 & (a & d) * (a | d) + (~d & a) * (~a & d)) * 2)",
                    "attributes": {
                        "numOps": 50,
                        "nestedExprLevel": 17,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 77.06422018348624,
                        "opsPercentages": {
                            "arithmetic": 32.0,
                            "mul": 14.000000000000002,
                            "bitwise": 54.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 125,
            "gt": {
                "expr": "((((d*d)&(c-e))|(~(-((c&d)|((-d)&c))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 10.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "((((~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | ((c ^ e) - ((~ c & e) + (~ c & e)))) - ~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) + ((((((~ c | d) + c) + 1) & ~ ((~ (~ (d - 1)) | c) - ~ (~ (d - 1)))) + ((~ (~ (d - 1)) | c) - ~ (~ (d - 1)))) - 1)) + 1) + ((- ((~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | ((c ^ e) - ((~ c & e) + (~ c & e)))) - ~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - 1) | (- ((((((~ c | d) + c) + 1) & ~ ((~ (~ (d - 1)) | c) - ~ (~ (d - 1)))) + ((~ (~ (d - 1)) | c) - ~ (~ (d - 1)))) - 1) - 1))",
                "attributes": {
                    "numOps": 114,
                    "nestedExprLevel": 55,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 32.45614035087719,
                        "mul": 7.017543859649122,
                        "bitwise": 60.526315789473685
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-((-d & c) + (c + (~c | d) + 1 & ~(-d & c))) | ~(d * d & (c ^ e) + (~c & e) * -2)) + (-d & c) + (c + (~c | d) + 1 & ~(-d & c)) + ((c ^ e) + (~c & e) * -2 & d * d)",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 11,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 62.28070175438597,
                        "opsPercentages": {
                            "arithmetic": 39.53488372093023,
                            "mul": 9.30232558139535,
                            "bitwise": 51.162790697674424
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "msvc_O1": {
                    "expr": "(c ^ e) + (~c & e) * -2 | ~(d * d) + 2 + (d - 1) * d + (((d - ~((d - 1 | c - d) + 1) & c + 1 + (~c | d)) - d - 1 | c) - 1 | (~(d * d) - (c ^ e) + (~c & e) * -2 | ~(d * d)) - 1) + ~((d - 1 | c - d) + 1) & c + 1 + (~c | d) + d - 1 | c",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 13,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 47.368421052631575,
                            "mul": 10.526315789473683,
                            "bitwise": 42.10526315789473
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(-(~(-d & c) & (~c | d) + c + 1) + (-d & c) | ~(e ^ c) + (~c & e) * -2 & d * d) + (e ^ c) + (~c & e) * -2 & d * d + (~(-d & c) & (~c | d) + c + 1) + (-d & c)",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 9,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 62.28070175438597,
                        "opsPercentages": {
                            "arithmetic": 39.53488372093023,
                            "mul": 9.30232558139535,
                            "bitwise": 51.162790697674424
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_default": {
                    "expr": "((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff | (c ^ e) - (((c ^ 0xffffffff) & e) + ((c ^ 0xffffffff) & e))) - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff)) + ((c ^ 0xffffffff | d) + c + 1 & ((d - 1 | c) - (d - 1) ^ 0xffffffff)) + ((d - 1 | c) - (d - 1)) + (0xffffffff - ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff | (c ^ e) - (((c ^ 0xffffffff) & e) + ((c ^ 0xffffffff) & e))) - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff)) | 0xffffffff - (((c ^ 0xffffffff | d) + c + 1 & ((d - 1 | c) - (d - 1) ^ 0xffffffff)) + ((d - 1 | c) - (d - 1)) + -1))",
                    "attributes": {
                        "numOps": 87,
                        "nestedExprLevel": 35,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 23.684210526315788,
                        "opsPercentages": {
                            "arithmetic": 39.08045977011494,
                            "mul": 9.195402298850574,
                            "bitwise": 51.724137931034484
                        },
                        "percentageDAGsCancel": 9.67741935483871
                    }
                },
                "msvc_default": {
                    "expr": "((~(d * d) | (c ^ e) - ((~c & e) + (~c & e))) - ~(d * d)) + ((~c | d) + 1 + c & ~((d - 1 | c) - (d + -1))) + ((d - 1 | c) - (d + -1)) + (0xffffffff - ((~(d * d) | (c ^ e) - ((~c & e) + (~c & e))) - ~(d * d)) | 0xffffffff - ((((~c | d) + 1 + c & ~((d - 1 | c) - (d + -1))) - 1) + ((d - 1 | c) - (d + -1))))",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 24,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 42.10526315789473,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 6.0606060606060606,
                            "bitwise": 43.93939393939394
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(e ^ c) + (e & ~c) * -2 & d * d + (c + 1 + (~c | d) & ~(-d & c)) + (-d & c) + (~(e ^ c) + (e & ~c) * -2 & d * d | -(c + 1 + (~c | d) & ~(-d & c)) + (-d & c))",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 9,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 62.28070175438597,
                        "opsPercentages": {
                            "arithmetic": 39.53488372093023,
                            "mul": 9.30232558139535,
                            "bitwise": 51.162790697674424
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                }
            }
        },
        {
            "num": 126,
            "gt": {
                "expr": "(((e^(-c))+(e^(-e))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 0.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((e | (~ c + 1)) - (e & (~ c + 1))) ^ ~ (((e - (~ e + 1)) - ((e | ~ (~ e + 1)) + (e | ~ (~ e + 1)))) - 2)) + ((((e | (~ c + 1)) - (e & (~ c + 1))) | (((e - (~ e + 1)) - ((e | ~ (~ e + 1)) + (e | ~ (~ e + 1)))) - 2)) << 1)) + 1",
                "attributes": {
                    "numOps": 48,
                    "nestedExprLevel": 24,
                    "numDAGs": 19,
                    "opsPercentages": {
                        "arithmetic": 45.83333333333333,
                        "mul": 0.0,
                        "bitwise": 54.166666666666664
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((e - (e - 1 | e)) + -1) * 2 | -c ^ e) * 2 + (((e - (e - 1 | e)) + -1) * 2 ^ c - 1 ^ e) + 1",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 8,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 56.25,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 14.285714285714285,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "msvc_O1": {
                    "expr": "(e - (e - 1 | e) * -2 + 1 ^ (~c + 1 | e) - ~c + 1 & e) + 1 + ((~c * 2 + 2 | e * 2) + ~c + 1 & e * -2 | e - (e - 1 | e) * 4 - 4)",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 5,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 31.25,
                        "opsPercentages": {
                            "arithmetic": 48.484848484848484,
                            "mul": 15.151515151515152,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "clang_O3": {
                    "expr": "(e - (e - 1 | e) * -2 + 1 ^ -c ^ e) + (e - (e - 1 | e) * 2 + 0x7ffffffe | -c ^ e) * 2 + 1",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 4,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 58.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 55.00000000000001,
                            "mul": 15.0,
                            "bitwise": 30.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e | (c ^ 0xffffffff) + 1) - (e & (c ^ 0xffffffff) + 1) ^ ((e - ((e ^ 0xffffffff) + 1)) - ((e | (e ^ 0xffffffff) + 1 ^ 0xffffffff) + (e | (e ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) + ((e | (c ^ 0xffffffff) + 1) - (e & (c ^ 0xffffffff) + 1) | ((e - ((e ^ 0xffffffff) + 1)) - ((e | (e ^ 0xffffffff) + 1 ^ 0xffffffff) + (e | (e ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2) * 2 + 1",
                    "attributes": {
                        "numOps": 48,
                        "nestedExprLevel": 20,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 45.83333333333333,
                            "mul": 2.083333333333333,
                            "bitwise": 52.083333333333336
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "msvc_default": {
                    "expr": "((~c + 1 | e) - (~c + 1 & e) ^ ~(((e - (~e + 1)) - ((~(~e + 1) | e) + (~(~e + 1) | e))) - 2)) + 1 + ((~c + 1 | e) - (~c + 1 & e) | ((e - (~e + 1)) - ((~(~e + 1) | e) + (~(~e + 1) | e))) - 2) * 2",
                    "attributes": {
                        "numOps": 48,
                        "nestedExprLevel": 17,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 45.83333333333333,
                            "mul": 2.083333333333333,
                            "bitwise": 52.083333333333336
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "gcc_O3": {
                    "expr": "(c - 1 ^ e ^ (e - (e - 1 | e)) * 2 - 2) + 1 + (-c ^ e | (e - (e - 1 | e)) * 2 - 2) * 2",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 60.416666666666664,
                        "opsPercentages": {
                            "arithmetic": 52.63157894736842,
                            "mul": 15.789473684210526,
                            "bitwise": 31.57894736842105
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                }
            }
        },
        {
            "num": 127,
            "gt": {
                "expr": "(((~b)+((e*b)&(~((e^b)|b)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 14.285714285714285,
                        "mul": 14.285714285714285,
                        "bitwise": 71.42857142857143
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((- b - 1) ^ (((e & b) * (e | b) + (e & ~ b) * (~ e & b)) - (((e & b) * (e | b) + (e & ~ b) * (~ e & b)) & ((((e | b) - (e & b)) & ~ b) + b)))) + (((- b - 1) & (((e & b) * (e | b) + (e & ~ b) * (~ e & b)) - (((e & b) * (e | b) + (e & ~ b) * (~ e & b)) & ((((e | b) - (e & b)) & ~ b) + b)))) + ((- b - 1) & (((e & b) * (e | b) + (e & ~ b) * (~ e & b)) - (((e & b) * (e | b) + (e & ~ b) * (~ e & b)) & ((((e | b) - (e & b)) & ~ b) + b)))))",
                "attributes": {
                    "numOps": 89,
                    "nestedExprLevel": 41,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 25.842696629213485,
                        "mul": 13.48314606741573,
                        "bitwise": 60.67415730337079
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~e & b) * (~b & e) + (e & b) * (e | b) & ~(b + ((e ^ b) & ~b)) & ~b) * 2 + ((~((~e & b) * (~b & e) + (e & b) * (e | b)) | ((e ^ b) & ~b) + b) ^ b)",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 13,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 60.67415730337079,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 14.285714285714285,
                            "bitwise": 71.42857142857143
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((b & e) * (b | e) - (((b | e) - (b & e) & ~b) + b & (b & e) * (b | e) + (~e & b) * (~b & e))) + (~e & b) * (~b & e) ^ ~b) + (((b & e) * (b | e) - (((b | e) - (b & e) & ~b) + b & (b & e) * (b | e) + (~e & b) * (~b & e))) + (~e & b) * (~b & e) & ~b) * 2",
                    "attributes": {
                        "numOps": 58,
                        "nestedExprLevel": 19,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 34.831460674157306,
                        "opsPercentages": {
                            "arithmetic": 18.96551724137931,
                            "mul": 15.517241379310345,
                            "bitwise": 65.51724137931035
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "clang_O3": {
                    "expr": "(~((~b & e) + b) & (~e & b) * (~b & e) + (e | b) * (e & b) ^ ~b) + (~((~b & e) + b) & (~e & b) * (~b & e) + (e | b) * (e & b) & ~b) * 2",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 10,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 61.79775280898876,
                        "opsPercentages": {
                            "arithmetic": 14.705882352941178,
                            "mul": 14.705882352941178,
                            "bitwise": 70.58823529411765
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - b ^ ((e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b)) - ((e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b) & ((e | b) - (e & b) & (b ^ 0xffffffff)) + b)) + (0xffffffff - b & ((e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b)) - ((e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b) & ((e | b) - (e & b) & (b ^ 0xffffffff)) + b)) + (0xffffffff - b & ((e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b)) - ((e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b) & ((e | b) - (e & b) & (b ^ 0xffffffff)) + b))",
                    "attributes": {
                        "numOps": 86,
                        "nestedExprLevel": 35,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 3.3707865168539324,
                        "opsPercentages": {
                            "arithmetic": 23.25581395348837,
                            "mul": 13.953488372093023,
                            "bitwise": 62.7906976744186
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - b ^ ((e & b) * (e | b) + (~b & e) * (~e & b)) - ((e & b) * (e | b) + (~b & e) * (~e & b) & ((e | b) - (e & b) & ~b) + b)) + (0xffffffff - b & ((e & b) * (e | b) + (~b & e) * (~e & b)) - ((e & b) * (e | b) + (~b & e) * (~e & b) & ((e | b) - (e & b) & ~b) + b)) + (0xffffffff - b & ((e & b) * (e | b) + (~b & e) * (~e & b)) - ((e & b) * (e | b) + (~b & e) * (~e & b) & ((e | b) - (e & b) & ~b) + b))",
                    "attributes": {
                        "numOps": 86,
                        "nestedExprLevel": 28,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 3.3707865168539324,
                        "opsPercentages": {
                            "arithmetic": 23.25581395348837,
                            "mul": 13.953488372093023,
                            "bitwise": 62.7906976744186
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~(~e & b) * (~b & e) + (e | b) * (e & b) | ((e ^ b) & ~b) + b) ^ b) + (~((e ^ b) & ~b) + b & (~e & b) * (~b & e) + (e | b) * (e & b) & ~b) * 2",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 11,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 60.67415730337079,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 14.285714285714285,
                            "bitwise": 71.42857142857143
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                }
            }
        },
        {
            "num": 128,
            "gt": {
                "expr": "((-((~b)|(~(~((b&b)*b))))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 14.285714285714285,
                        "mul": 14.285714285714285,
                        "bitwise": 71.42857142857143
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "~ (((- b - 1) & ~ (- (- ((((~ b | b) - ~ b) & b) * (((~ b | b) - ~ b) | b) + (((~ b | b) - ~ b) & ~ b) * (~ ((~ b | b) - ~ b) & b)) - 1) - 1)) + (- (- ((((~ b | b) - ~ b) & b) * (((~ b | b) - ~ b) | b) + (((~ b | b) - ~ b) & ~ b) * (~ ((~ b | b) - ~ b) & b)) - 1) - 1)) + 1",
                "attributes": {
                    "numOps": 65,
                    "nestedExprLevel": 26,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 33.84615384615385,
                        "mul": 6.153846153846154,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 27.27272727272727
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(b * b) & b) + 1",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 3,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 93.84615384615384,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((b * b | b) - b * b) + 1",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 92.3076923076923,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 40.0,
                            "bitwise": 20.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(b * b) & b) + 1",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 3,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 93.84615384615384,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((0xffffffff - b & (0xffffffff - (-1 - (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) & b) * ((b ^ 0xffffffff | b) - (b ^ 0xffffffff) | b) + ((b ^ 0xffffffff | b) - (b ^ 0xffffffff) & (b ^ 0xffffffff)) * (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) & b))) ^ 0xffffffff)) + (-1 - (-1 - (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) & b) * ((b ^ 0xffffffff | b) - (b ^ 0xffffffff) | b) + ((b ^ 0xffffffff | b) - (b ^ 0xffffffff) & (b ^ 0xffffffff)) * (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) & b)))) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 27,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 3.076923076923077,
                        "opsPercentages": {
                            "arithmetic": 31.746031746031743,
                            "mul": 6.349206349206349,
                            "bitwise": 61.904761904761905
                        },
                        "percentageDAGsCancel": 28.57142857142857
                    }
                },
                "msvc_default": {
                    "expr": "~(((0xffffffff - b & ~(0xffffffff - (-1 - ((-~b - 1 & b) * (-~b - 1 | b) + (-~b - 1 & ~b) * (~(-~b - 1) & b))))) - 1) - (-1 - ((-~b - 1 & b) * (-~b - 1 | b) + (-~b - 1 & ~b) * (~(-~b - 1) & b)))) + 1",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 14,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 16.923076923076923,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 7.4074074074074066,
                            "bitwise": 42.592592592592595
                        },
                        "percentageDAGsCancel": 28.57142857142857
                    }
                },
                "gcc_O3": {
                    "expr": "(~(b * b) & b) + 1",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 3,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 93.84615384615384,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 129,
            "gt": {
                "expr": "((~((d-c)|(~(d&d)))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "- ((((d ^ c) - ((~ d & c) + (~ d & c))) & ~ (- ((~ d | d) - ~ d) - 1)) + (- ((~ d | d) - ~ d) - 1)) - 1",
                "attributes": {
                    "numOps": 24,
                    "nestedExprLevel": 11,
                    "numDAGs": 14,
                    "opsPercentages": {
                        "arithmetic": 45.83333333333333,
                        "mul": 0.0,
                        "bitwise": 54.166666666666664
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~d & c) * 2 + ~(d ^ c) & d",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 70.83333333333334,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 14.285714285714285,
                            "bitwise": 71.42857142857143
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "d - ((c ^ d) + (~d & c) * -2 & d)",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 12.5,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((d ^ c) + (~d & c) * -2) & d",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 12.5,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((d ^ c) - (((d ^ 0xffffffff) & c) + ((d ^ 0xffffffff) & c)) & (0xffffffff - ((d ^ 0xffffffff | d) - (d ^ 0xffffffff)) ^ 0xffffffff)) + (-1 - ((d ^ 0xffffffff | d) - (d ^ 0xffffffff))))",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 12,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 4.166666666666666,
                        "opsPercentages": {
                            "arithmetic": 43.47826086956522,
                            "mul": 0.0,
                            "bitwise": 56.52173913043478
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((((d ^ c) - ((~d & c) + (~d & c)) & ~(0xffffffff - (-1 - ~d))) - 1) - (-1 - ~d))",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 8,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 16.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 55.00000000000001,
                            "mul": 0.0,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "gcc_O3": {
                    "expr": "~(c ^ d) + (~d & c) * 2 & d",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 70.83333333333334,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 14.285714285714285,
                            "bitwise": 71.42857142857143
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 130,
            "gt": {
                "expr": "((-((~(-(e-(a&a))))&(-(e&(-c))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 0.0,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "~ (((~ (((e & ~ (((~ a | a) + a) + 1)) - (~ e & (((~ a | a) + a) + 1))) - 1) | (~ (((~ e | (~ c + 1)) + e) + 1) + 1)) + (((e & ~ (((~ a | a) + a) + 1)) - (~ e & (((~ a | a) + a) + 1))) - 1)) + 1) + 1",
                "attributes": {
                    "numOps": 42,
                    "nestedExprLevel": 25,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 45.23809523809524,
                        "mul": 0.0,
                        "bitwise": 54.761904761904766
                    },
                    "percentageDAGsCancel": 4.3478260869565215
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((~a & e) - (~e & a)) + -1 + (a + ~e + 1 | ~(e + (~e | -c))))",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 7,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 57.14285714285714,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 0.0,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_O1": {
                    "expr": "(~e & a - (~((-c | ~e) + e) | ~e & a - (~a & e))) - (~a & e)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 6,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 59.523809523809526,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 0.0,
                            "bitwise": 70.58823529411765
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "clang_O3": {
                    "expr": "((~e | -c) + e | a - e) + 1",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 83.33333333333334,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((e & ((a ^ 0xffffffff | a) + a + 1 ^ 0xffffffff)) - ((e ^ 0xffffffff) & (a ^ 0xffffffff | a) + a + 1)) - 1 ^ 0xffffffff | ((e ^ 0xffffffff | (c ^ 0xffffffff) + 1) + e + 1 ^ 0xffffffff) + 1) + ((e & ((a ^ 0xffffffff | a) + a + 1 ^ 0xffffffff)) - ((e ^ 0xffffffff) & (a ^ 0xffffffff | a) + a + 1)) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 15,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 4.761904761904762,
                        "opsPercentages": {
                            "arithmetic": 42.5,
                            "mul": 0.0,
                            "bitwise": 57.49999999999999
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~((~(((~a & e) - (~e & a)) - 1) | ~((~e | ~c + 1) + 1 + e) + 1) + ((~a & e) - (~e & a))) + 1",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 42.857142857142854,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 0.0,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~e & a) - (~a & e)) - (~((-c | ~e) + e) | ~e + 1 + a)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 64.28571428571429,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 0.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 131,
            "gt": {
                "expr": "((((~(d|c))-(d^c))*(((c|c)&((d|c)|c))^d)))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 10.0,
                        "mul": 10.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "(((((- ((d & ~ c) + c) - 1) & ~ ((d | c) - (d & c))) + ((- ((d & ~ c) + c) - 1) & ~ ((d | c) - (d & c)))) - ((- ((d & ~ c) + c) - 1) ^ ((d | c) - (d & c)))) & ((((((~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) | (((((d + c) + 1) + ((- d - 1) | (- c - 1))) & ~ c) + c)) + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) - d) - (((((~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) | (((((d + c) + 1) + ((- d - 1) | (- c - 1))) & ~ c) + c)) + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) | ~ d) + ((((~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) | (((((d + c) + 1) + ((- d - 1) | (- c - 1))) & ~ c) + c)) + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) | ~ d))) - 2)) * (((((- ((d & ~ c) + c) - 1) & ~ ((d | c) - (d & c))) + ((- ((d & ~ c) + c) - 1) & ~ ((d | c) - (d & c)))) - ((- ((d & ~ c) + c) - 1) ^ ((d | c) - (d & c)))) | ((((((~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) | (((((d + c) + 1) + ((- d - 1) | (- c - 1))) & ~ c) + c)) + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) - d) - (((((~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) | (((((d + c) + 1) + ((- d - 1) | (- c - 1))) & ~ c) + c)) + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) | ~ d) + ((((~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) | (((((d + c) + 1) + ((- d - 1) | (- c - 1))) & ~ c) + c)) + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) | ~ d))) - 2)) + (((((- ((d & ~ c) + c) - 1) & ~ ((d | c) - (d & c))) + ((- ((d & ~ c) + c) - 1) & ~ ((d | c) - (d & c)))) - ((- ((d & ~ c) + c) - 1) ^ ((d | c) - (d & c)))) & ~ ((((((~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) | (((((d + c) + 1) + ((- d - 1) | (- c - 1))) & ~ c) + c)) + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) - d) - (((((~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) | (((((d + c) + 1) + ((- d - 1) | (- c - 1))) & ~ c) + c)) + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) | ~ d) + ((((~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) | (((((d + c) + 1) + ((- d - 1) | (- c - 1))) & ~ c) + c)) + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) | ~ d))) - 2)) * (~ ((((- ((d & ~ c) + c) - 1) & ~ ((d | c) - (d & c))) + ((- ((d & ~ c) + c) - 1) & ~ ((d | c) - (d & c)))) - ((- ((d & ~ c) + c) - 1) ^ ((d | c) - (d & c)))) & ((((((~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) | (((((d + c) + 1) + ((- d - 1) | (- c - 1))) & ~ c) + c)) + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) - d) - (((((~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) | (((((d + c) + 1) + ((- d - 1) | (- c - 1))) & ~ c) + c)) + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) | ~ d) + ((((~ (((c + c) + 1) + ((- c - 1) | (- c - 1))) | (((((d + c) + 1) + ((- d - 1) | (- c - 1))) & ~ c) + c)) + (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + 1) | ~ d))) - 2))",
                "attributes": {
                    "numOps": 537,
                    "nestedExprLevel": 301,
                    "numDAGs": 46,
                    "opsPercentages": {
                        "arithmetic": 67.22532588454376,
                        "mul": 0.37243947858473,
                        "bitwise": 32.402234636871505
                    },
                    "percentageDAGsCancel": 6.521739130434782
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~c + c * 2 + (-c - 1 | c + (c + d + 1 + ~(d & c) & ~c))) - d) + (~d | ~c + c * 2 + (-c - 1 | c + (c + d + 1 + ~(d & c) & ~c)) + 2) * -2 & ~(~(d ^ c | (~c & d) + c) * 2) + ~(d ^ c ^ (~c & d) + c)) * (~(d ^ c | (~c & d) + c) * 2 - ~(d ^ c ^ (~c & d) + c) & (~d | ~c + c * 2 + (-c - 1 | c + (c + d + 1 + ~(d & c) & ~c)) + 2) * 2 + (d - (~c + c * 2 + 1 + (-c - 1 | c + (c + d + 1 + ~(d & c) & ~c))))) + (~(d ^ c | (~c & d) + c) * 2 - ~(d ^ c ^ (~c & d) + c) & ((~c + c * 2 + (-c - 1 | c + (c + d + 1 + ~(d & c) & ~c))) - d ) + (~d | ~c + c * 2 + (-c - 1 | c + (c + d + 1 + ~(d & c) & ~c)) + 2) * -2) * (((~c + c * 2 + (-c - 1 | c + (c + d + 1 + ~(d & c) & ~c)) ) - d) + (~d | ~c + c * 2 + (-c - 1 | c + (c + d + 1 + ~(d & c) & ~c)) + 2) * -2 | ~(d ^ c | (~c & d) + c) * 2 - ~(d ^ c ^ (~c & d) + c))",
                    "attributes": {
                        "numOps": 212,
                        "nestedExprLevel": 43,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 60.52141527001862,
                        "opsPercentages": {
                            "arithmetic": 43.86792452830189,
                            "mul": 8.49056603773585,
                            "bitwise": 47.64150943396226
                        },
                        "percentageDAGsCancel": 6.8181818181818175
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~(c | d) - (c & d) & ~(~c & d) - c) * 2 - (~(~c & d) - c ^ (c | d) - (c & d)) & ((((c - (c & d)) + d & ~c) + c | ~c + (c + 1 + ((c - (c & d)) + d & ~c) + c | ~c | ~d) * -2) - d) + c + -1) * (~((((c - (c & d)) + d & ~c) + c | ~c + (c + 1 + ((c - (c & d)) + d & ~c) + c | ~c | ~d) * -2) - d) + c + -1 & (~(c | d) - (c & d) & ~(~c & d) - c) * 2 - (~(~c & d) - c ^ (c | d) - (c & d))) + (((((c - (c & d)) + d & ~c) + c | ~c + (c + 1 + ((c - (c & d)) + d & ~c) + c | ~c | ~d) * -2) - d) + c + -1 | (~(c | d) - (c & d) & ~(~c & d) - c) * 2 - (~(~c & d) - c ^ (c | d) - (c & d))) * (((((c - (c & d)) + d & ~c) + c | ~c + (c + 1 + ((c - (c & d)) + d & ~c) + c | ~c | ~d) * -2) - d) + c + -1 & (~(c | d) - (c & d) & ~(~c & d) - c) * 2 - (~(~c & d) - c ^ (c | d) - (c & d)))",
                    "attributes": {
                        "numOps": 193,
                        "nestedExprLevel": 50,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 64.05959031657356,
                        "opsPercentages": {
                            "arithmetic": 39.89637305699482,
                            "mul": 5.181347150259067,
                            "bitwise": 54.92227979274611
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(~(d ^ c) & ~(~c & d) + c) * 2 - (d ^ c ^ ~(~c & d) + c) & (c + ((~c & d) + c | ~c) + 1 - d) + (~d | c + ((~c & d) + c | ~c) + 1) * -2 - 2) * (1 - (c + ((~c & d) + c | ~c) + 1 - d) + (~d | c + ((~c & d) + c | ~c) + 1) * -2 & (~(d ^ c) & ~(~c & d) + c) * 2 - (d ^ c ^ ~(~c & d) + c)) + ((c + ((~c & d) + c | ~c) + 1 - d) + (~d | c + ((~c & d) + c | ~c) + 1) * -2 - 2 | (~(d ^ c) & ~(~c & d) + c) * 2 - (d ^ c ^ ~(~c & d) + c)) * ((c + ((~c & d) + c | ~c) + 1 - d) + (~d | c + ((~c & d) + c | ~c) + 1) * -2 - 2 & (~(d ^ c) & ~(~c & d) + c) * 2 - (d ^ c ^ ~(~c & d) + c))",
                    "attributes": {
                        "numOps": 152,
                        "nestedExprLevel": 34,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 71.69459962756052,
                        "opsPercentages": {
                            "arithmetic": 34.868421052631575,
                            "mul": 6.578947368421052,
                            "bitwise": 58.55263157894737
                        },
                        "percentageDAGsCancel": 3.0303030303030303
                    }
                },
                "clang_default": {
                    "expr": "(((0xffffffff - ((d & (c ^ 0xffffffff)) + c) & ((d | c) - (d & c) ^ 0xffffffff)) + (0xffffffff - ((d & (c ^ 0xffffffff)) + c) & ((d | c) - (d & c) ^ 0xffffffff))) - (0xffffffff - ((d & (c ^ 0xffffffff)) + c) ^ (d | c) - (d & c)) & (((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & (c ^ 0xffffffff)) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c)) - d) - (((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & (c ^ 0xffffffff)) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c) + 2 | d ^ 0xffffffff) + ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & (c ^ 0xffffffff)) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c) + 2 | d ^ 0xffffffff))) * (((0xffffffff - ((d & (c ^ 0xffffffff)) + c) & ((d | c) - (d & c) ^ 0xffffffff)) + (0xffffffff - ((d & (c ^ 0xffffffff)) + c) & ((d | c) - (d & c) ^ 0xffffffff))) - (0xffffffff - ((d & (c ^ 0xffffffff)) + c) ^ (d | c) - (d & c)) | (((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & (c ^ 0xffffffff)) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c)) - d) - (((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & (c ^ 0xffffffff)) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c) + 2 | d ^ 0xffffffff) + ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & (c ^ 0xffffffff)) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c) + 2 | d ^ 0xffffffff))) + (((0xffffffff - ((d & (c ^ 0xffffffff)) + c) & ((d | c) - (d & c) ^ 0xffffffff)) + (0xffffffff - ((d & (c ^ 0xffffffff)) + c) & ((d | c) - (d & c) ^ 0xffffffff))) - (0xffffffff - ((d & (c ^ 0xffffffff)) + c) ^ (d | c) - (d & c)) & ((((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & (c ^ 0xffffffff)) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c)) - d) - (((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & (c ^ 0xffffffff)) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c) + 2 | d ^ 0xffffffff) + ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & (c ^ 0xffffffff)) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c) + 2 | d ^ 0xffffffff)) ^ 0xffffffff)) * ((((0xffffffff - ((d & (c ^ 0xffffffff)) + c) & ((d | c) - (d & c) ^ 0xffffffff)) + (0xffffffff - ((d & (c ^ 0xffffffff)) + c) & ((d | c) - (d & c) ^ 0xffffffff))) - (0xffffffff - ((d & (c ^ 0xffffffff)) + c) ^ (d | c) - (d & c)) ^ 0xffffffff) & (((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & (c ^ 0xffffffff)) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c)) - d) - (((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & (c ^ 0xffffffff)) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c) + 2 | d ^ 0xffffffff) + ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & (c ^ 0xffffffff)) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c) + 2 | d ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 433,
                        "nestedExprLevel": 124,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 19.366852886405958,
                        "opsPercentages": {
                            "arithmetic": 53.81062355658198,
                            "mul": 6.0046189376443415,
                            "bitwise": 40.184757505773675
                        },
                        "percentageDAGsCancel": 2.3255813953488373
                    }
                },
                "msvc_default": {
                    "expr": "(((0xffffffff - ((~c & d) + c) & ~((d | c) - (d & c))) + (0xffffffff - ((~c & d) + c) & ~((d | c) - (d & c)))) - (0xffffffff - ((~c & d) + c) ^ (d | c) - (d & c)) & (((~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & ~c) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c)) - d) - (((~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & ~c) + c) + c * 2 + 2 + (0xffffffff - c | 0xffffffff - c) | ~d) + ((~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & ~c) + c) + c * 2 + 2 + (0xffffffff - c | 0xffffffff - c) | ~d) )) * (((0xffffffff - ((~c & d) + c) & ~((d | c) - (d & c))) + (0xffffffff - ((~c & d) + c) & ~((d | c) - (d & c)))) - (0xffffffff - ((~c & d) + c) ^ (d | c) - (d & c)) | (((~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & ~c) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c)) - d) - (((~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & ~c) + c) + c * 2 + 2 + (0xffffffff - c | 0xffffffff - c) | ~d) + ((~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & ~c) + c) + c * 2 + 2 + (0xffffffff - c | 0xffffffff - c) | ~d))) + (((0xffffffff - ((~c & d) + c) & ~((d | c) - (d & c))) + (0xffffffff - ((~c & d) + c) & ~((d | c) - (d & c)))) - (0xffffffff - ((~c & d) + c) ^ (d | c) - (d & c)) & ~((((~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & ~c) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c)) - d) - (((~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & ~c) + c) + c * 2 + 2 + (0xffffffff - c | 0xffffffff - c) | ~d) + ((~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & ~c) + c) + c * 2 + 2 + (0xffffffff - c | 0xffffffff - c) | ~d )))) * (~(((0xffffffff - ((~c & d) + c) & ~((d | c) - (d & c))) + (0xffffffff - ((~c & d) + c) & ~((d | c) - (d & c)))) - (0xffffffff - ((~c & d) + c) ^ (d | c) - (d & c))) & (((~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & ~c) + c) + c * 2 + (0xffffffff - c | 0xffffffff - c)) - d) - (((~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & ~c) + c) + c * 2 + 2 + (0xffffffff - c | 0xffffffff - c) | ~d) + ((~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) | (d + c + 1 + (0xffffffff - d | 0xffffffff - c) & ~c) + c) + c * 2 + 2 + (0xffffffff - c | 0xffffffff - c) | ~d)))",
                    "attributes": {
                        "numOps": 433,
                        "nestedExprLevel": 123,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 19.366852886405958,
                        "opsPercentages": {
                            "arithmetic": 53.81062355658198,
                            "mul": 6.0046189376443415,
                            "bitwise": 40.184757505773675
                        },
                        "percentageDAGsCancel": 2.272727272727273
                    }
                },
                "gcc_O3": {
                    "expr": "(~d | (((c + d) - (c & d) & ~c) + c | c - c * 2 + 1) + ~c + c * 2 + 1 + 1 * 2 + (d - (((c + d) - (c & d) & ~c) + c | c - c * 2 + 1) + ~c + c * 2 + 1) & ~((~c & d) + c | c ^ d) * 2 - ~((~c & d) + c ^ c ^ d)) * (~~((~c & d) + c | c ^ d) * 2 + ~((~c & d) + c ^ c ^ d) & (((((c + d) - (c & d) & ~c) + c | c - c * 2 + 1) + ~c + c * 2 + 1 + 1 - d) + ~d | (((c + d) - (c & d) & ~c) + c | c - c * 2 + 1) + ~c + c * 2 + 1 + 1 * -2) - 2) + (~((~c & d) + c | c ^ d) * 2 - ~((~c & d) + c ^ c ^ d) & (((((c + d) - (c & d) & ~c) + c | c - c * 2 + 1) + ~c + c * 2 + 1 + 1 - d) + ~d | (((c + d) - (c & d) & ~c) + c | c - c * 2 + 1) + ~c + c * 2 + 1 + 1 * -2) - 2) * (~((~c & d) + c | c ^ d) * 2 - ~((~c & d) + c ^ c ^ d) | (((((c + d) - (c & d) & ~c) + c | c - c * 2 + 1) + ~c + c * 2 + 1 + 1 - d) + ~d | (((c + d) - (c & d) & ~c) + c | c - c * 2 + 1) + ~c + c * 2 + 1 + 1 * -2) - 2)",
                    "attributes": {
                        "numOps": 217,
                        "nestedExprLevel": 44,
                        "numDAGs": 50,
                        "percentDecreaseByOps": 59.5903165735568,
                        "opsPercentages": {
                            "arithmetic": 45.16129032258064,
                            "mul": 11.981566820276496,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 6.0
                    }
                }
            }
        },
        {
            "num": 132,
            "gt": {
                "expr": "((((~(-e))&(a^(~e)))^(e-(e+a))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 0.0,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((~ (e - 1) | ((a | (- e - 1)) - (a & (- e - 1)))) + (e - 1)) + 1) | ((e + ~ (((e ^ ~ a) + ((e | a) + (e | a))) + 1)) + 1)) - ((((~ (e - 1) | ((a | (- e - 1)) - (a & (- e - 1)))) + (e - 1)) + 1) & ((e + ~ (((e ^ ~ a) + ((e | a) + (e | a))) + 1)) + 1))",
                "attributes": {
                    "numOps": 49,
                    "nestedExprLevel": 29,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 59.183673469387756,
                        "mul": 0.0,
                        "bitwise": 40.816326530612244
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "e + (a ^ e) + (e | a) * -2 ^ e + (-e | ~(e ^ a))",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 75.51020408163265,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 8.333333333333332,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~((~a ^ e) + (a | e) * 2) + e | ((~e | a) - (~e & a) | -e) + e) - (~((~a ^ e) + (a | e) * 2) + e & ((~e | a) - (~e & a) | -e) + e)",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 11,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 32.6530612244898,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 6.0606060606060606,
                            "bitwise": 60.60606060606061
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "clang_O3": {
                    "expr": "(e ^ a) + e + (a | e) * -2 ^ (~(e ^ a) | -e) + e",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 75.51020408163265,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 8.333333333333332,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e - 1 ^ 0xffffffff | (a | 0xffffffff - e) - (a & 0xffffffff - e)) + e | e + ((e ^ a ^ 0xffffffff) + (e | a) + (e | a) + 1 ^ 0xffffffff) + 1) - ((e - 1 ^ 0xffffffff | (a | 0xffffffff - e) - (a & 0xffffffff - e)) + e & e + ((e ^ a ^ 0xffffffff) + (e | a) + (e | a) + 1 ^ 0xffffffff) + 1)",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 12,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 16.3265306122449,
                        "opsPercentages": {
                            "arithmetic": 51.21951219512195,
                            "mul": 0.0,
                            "bitwise": 48.78048780487805
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~(e - 1) | (0xffffffff - e | a) - (0xffffffff - e & a)) + e | e + 1 + ~((~a ^ e) + 1 + (e | a) + (e | a))) - ((~(e - 1) | (0xffffffff - e | a) - (0xffffffff - e & a)) + e & e + 1 + ~((~a ^ e) + 1 + (e | a) + (e | a)))",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 12,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 16.3265306122449,
                        "opsPercentages": {
                            "arithmetic": 51.21951219512195,
                            "mul": 0.0,
                            "bitwise": 48.78048780487805
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "gcc_O3": {
                    "expr": "(-e | ~(e ^ a)) + e ^ e + (e ^ a) + (a | e) * -2",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 75.51020408163265,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 8.333333333333332,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 133,
            "gt": {
                "expr": "(((~d)|(~(-b))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((- d - 1) & ~ (b - 1)) + (b - 1)",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 4,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 71.42857142857143,
                        "mul": 0.0,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "b + -1 + (~d & -b)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 14.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "b + -1 + (-b & ~d)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 14.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "b + (-b & ~d) + -1",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 14.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - d & (b - 1 ^ 0xffffffff)) + b + -1",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 71.42857142857143,
                            "mul": 0.0,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((0xffffffff - d & ~(b - 1)) - 1) + b",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 4,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 14.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "b + -1 + (~d & -b)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 14.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 134,
            "gt": {
                "expr": "(((-((c&e)|(c+e)))|((e*e)-((c+e)^e))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 11.11111111111111,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ ((((((~ c | e) - ~ c) + ((c | e) + (c & e))) + 1) + ((- ((~ c | e) - ~ c) - 1) | (- ((c | e) + (c & e)) - 1))) - 1) + ((((e & e) * (e | e) + (e & ~ e) * (~ e & e)) + ~ (((((c | e) + (c | e)) - (c ^ e)) | e) - ((((c | e) + (c | e)) - (c ^ e)) & e))) + 1)) + 1) + ((- (~ ((((((~ c | e) - ~ c) + ((c | e) + (c & e))) + 1) + ((- ((~ c | e) - ~ c) - 1) | (- ((c | e) + (c & e)) - 1))) - 1)) - 1) | (- ((((e & e) * (e | e) + (e & ~ e) * (~ e & e)) + ~ (((((c | e) + (c | e)) - (c ^ e)) | e) - ((((c | e) + (c | e)) - (c ^ e)) & e))) + 1) - 1))",
                "attributes": {
                    "numOps": 106,
                    "nestedExprLevel": 62,
                    "numDAGs": 41,
                    "opsPercentages": {
                        "arithmetic": 44.339622641509436,
                        "mul": 3.7735849056603774,
                        "bitwise": 51.886792452830186
                    },
                    "percentageDAGsCancel": 12.195121951219512
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-(e * e + ((c ^ e) + ~((c | e) * 2) ^ e)) - 2 | (e & c) + e + c + ~(e & c & e + c)) + ((c ^ e) + ~((c | e) * 2) ^ e) + e * e + ((e + c & e & c) - ((e & c) + e + c + 1)) + 3",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 11,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 64.15094339622641,
                        "opsPercentages": {
                            "arithmetic": 47.368421052631575,
                            "mul": 10.526315789473683,
                            "bitwise": 42.10526315789473
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_O1": {
                    "expr": "(((c | e * 2 - (c ^ e) | e) - (c | e * 2 - (c ^ e) & e) - e * e) - 1 | c + 1 + ((~c - ~c | e) - 1 | ~c | e - (c & e)) + ~c | e + (c & e) + c | e) + ~c + 1 + ((~c - ~c | e) - 1 | ~c | e - (c & e)) + ~c | e + (c & e) + c | e + e * e + ~(c | e * 2 - (c ^ e) | e) - (c | e * 2 - (c ^ e) & e) + 2",
                    "attributes": {
                        "numOps": 71,
                        "nestedExprLevel": 12,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 33.0188679245283,
                        "opsPercentages": {
                            "arithmetic": 39.436619718309856,
                            "mul": 8.450704225352112,
                            "bitwise": 52.112676056338024
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "clang_O3": {
                    "expr": "(e * e - (e + c | e & c + (e | c) * 2 - (c ^ e) ^ e)) + (~(e * e - (e | c) * 2 - (c ^ e) ^ e) | e + c | e & c - 1) + 1",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 7,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 75.47169811320755,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 15.384615384615385,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c ^ 0xffffffff | e) - (c ^ 0xffffffff)) + (c | e) + (c & e) + (0xffffffff - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff)) | 0xffffffff - ((c | e) + (c & e))) ^ 0xffffffff) + e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + ((((c | e) + (c | e)) - (c ^ e) | e) - (((c | e) + (c | e)) - (c ^ e) & e) ^ 0xffffffff) + 2 + (0xffffffff - (((c ^ 0xffffffff | e) - (c ^ 0xffffffff)) + (c | e) + (c & e) + (0xffffffff - ((c ^ 0xffffffff | e) - (c ^ 0xffffffff)) | 0xffffffff - ((c | e) + (c & e))) ^ 0xffffffff) | 0xffffffff - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + ((((c | e) + (c | e)) - (c ^ e) | e) - (((c | e) + (c | e)) - (c ^ e) & e) ^ 0xffffffff) + 1))",
                    "attributes": {
                        "numOps": 91,
                        "nestedExprLevel": 40,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 14.150943396226415,
                        "opsPercentages": {
                            "arithmetic": 39.56043956043956,
                            "mul": 4.395604395604396,
                            "bitwise": 56.043956043956044
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_default": {
                    "expr": "~(((~c | e) - ~c) + (c | e) + (c & e) + (0xffffffff - ((~c | e) - ~c) | 0xffffffff - ((c | e) + (c & e)))) + e * e + ~((((c | e) + (c | e)) - (c ^ e) | e) - (((c | e) + (c | e)) - (c ^ e) & e)) + 2 + (0xffffffff - ~(((~c | e) - ~c) + (c | e) + (c & e) + (0xffffffff - ((~c | e) - ~c) | 0xffffffff - ((c | e) + (c & e)))) | 0xffffffff - (e * e + 1 + ~((((c | e) + (c | e)) - (c ^ e) | e) - (((c | e) + (c | e)) - (c ^ e) & e))))",
                    "attributes": {
                        "numOps": 79,
                        "nestedExprLevel": 32,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 25.471698113207548,
                        "opsPercentages": {
                            "arithmetic": 43.037974683544306,
                            "mul": 2.5316455696202533,
                            "bitwise": 54.43037974683544
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "gcc_O3": {
                    "expr": "(~((e | c) * 2) + (c ^ e) ^ e) + e * e + 3 + (e & c & e + c - (e & c) + 1 + e + c) + ((e & c) + 1 + e + c + -1 + ~e & c & e + c | -(~((e | c) * 2) + (c ^ e) ^ e) + e * e - 2)",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 9,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 61.32075471698113,
                        "opsPercentages": {
                            "arithmetic": 51.21951219512195,
                            "mul": 9.75609756097561,
                            "bitwise": 39.02439024390244
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 135,
            "gt": {
                "expr": "((((c&e)^((c+e)&(c|c)))|((c-e)|(e-c))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 8,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "((((((((~ c | e) + c) + 1) - (((~ ((c | e) + (c & e)) | (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + ((c | e) + (c & e))) + 1)) - (((((~ c | e) + c) + 1) | ~ (((~ ((c | e) + (c & e)) | (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + ((c | e) + (c & e))) + 1)) << 1)) - 2) + ((((((c & ~ e) + (c & ~ e)) - (c ^ e)) + (((e & ~ c) + (e & ~ c)) - (e ^ c))) + 1) + ((- (((c & ~ e) + (c & ~ e)) - (c ^ e)) - 1) | (- (((e & ~ c) + (e & ~ c)) - (e ^ c)) - 1)))) + 1) + ((- ((((((~ c | e) + c) + 1) - (((~ ((c | e) + (c & e)) | (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + ((c | e) + (c & e))) + 1)) - (((((~ c | e) + c) + 1) | ~ (((~ ((c | e) + (c & e)) | (((c + c) + 1) + ((- c - 1) | (- c - 1)))) + ((c | e) + (c & e))) + 1)) << 1)) - 2) - 1) | (- ((((((c & ~ e) + (c & ~ e)) - (c ^ e)) + (((e & ~ c) + (e & ~ c)) - (e ^ c))) + 1) + ((- (((c & ~ e) + (c & ~ e)) - (c ^ e)) - 1) | (- (((e & ~ c) + (e & ~ c)) - (e ^ c)) - 1))) - 1))",
                "attributes": {
                    "numOps": 180,
                    "nestedExprLevel": 105,
                    "numDAGs": 48,
                    "opsPercentages": {
                        "arithmetic": 52.77777777777778,
                        "mul": 0.0,
                        "bitwise": 47.22222222222222
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~((((e ^ c) + (~c & e) * -2) - 1 | ((c ^ e) + (~e & c) * -2) - 1) + ((~e & c) * 2 - (c ^ e)) + ((~c & e) * 2 - (e ^ c)) + 1) | ((-((~(e + c) | ~c + c * 2 + 1) + e + c) - 2 | c + (~c | e) + 1) * 2 - ((~c | e) + (-e - (~(e + c) | ~c + c * 2 + 1)))) + 1) + (((e ^ c) + (~c & e) * -2) - 1 | ((c ^ e) + (~e & c) * -2) - 1) + ((~e & c) * 2 - (c ^ e)) + ((~c & e) * 2 - (e ^ c)) + (~c | e) + (-e - (~(e + c) | ~c + c * 2 + 1)) + (-((~(e + c) | ~c + c * 2 + 1) + e + c) - 2 | c + (~c | e) + 1) * -2",
                    "attributes": {
                        "numOps": 121,
                        "nestedExprLevel": 35,
                        "numDAGs": 50,
                        "percentDecreaseByOps": 32.77777777777778,
                        "opsPercentages": {
                            "arithmetic": 47.107438016528924,
                            "mul": 11.570247933884298,
                            "bitwise": 41.32231404958678
                        },
                        "percentageDAGsCancel": 6.0
                    }
                },
                "msvc_O1": {
                    "expr": "((((((c | e + 1 + ((~(c | e + 1 + ~(c & e + c | e) | c + c & e) * 2 | (c + ~c | e) * 2 + 2 - ~c | e) - c) + ~(c & e + c | e) | c + c & e | (((c ^ e - ~c & e) - ~e & c) * 2 + -2) - (c ^ e + ~c & e * -2) - 1 | (c ^ e + ~e & c * -2) - 1) + ((~c & e - c ^ e) + ~e & c) * 2) - ~(c | e + 1 + ~(c & e + c | e) | c + c & e) * 2 | (c + ~c | e) * 2 + 2 ) - ~(c & e + c | e) | c) - c & e) - c | e) + ~c | e + (c ^ e + ~c & e * -2) - 1 | (c ^ e + ~e & c * -2) - 1 + c",
                    "attributes": {
                        "numOps": 118,
                        "nestedExprLevel": 19,
                        "numDAGs": 68,
                        "percentDecreaseByOps": 34.44444444444444,
                        "opsPercentages": {
                            "arithmetic": 39.83050847457627,
                            "mul": 8.47457627118644,
                            "bitwise": 51.69491525423729
                        },
                        "percentageDAGsCancel": 8.823529411764707
                    }
                },
                "clang_O3": {
                    "expr": "(~c & e) * 2 - (c ^ e) | (~e & c) * 2 - (c ^ e) + ((~c | e + c) - (~(e + c) | c) + e + c) + (0x7ffffffe - (~(e + c) | c) + e + c | ~c | e + c + 1) * -2 + (~(~c & e) * 2 - (c ^ e) | (~e & c) * 2 - (c ^ e) | 1 - ((~c | e + c) - (~(e + c) | c) + e + c) + (0x7ffffffe - (~(e + c) | c) + e + c | ~c | e + c + 1) * -2) + -1",
                    "attributes": {
                        "numOps": 75,
                        "nestedExprLevel": 15,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 58.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 46.666666666666664,
                            "mul": 8.0,
                            "bitwise": 45.33333333333333
                        },
                        "percentageDAGsCancel": 2.7027027027027026
                    }
                },
                "clang_default": {
                    "expr": "(((c ^ 0xffffffff | e) + c) - (((c | e) + (c & e) ^ 0xffffffff | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (c | e) + (c & e) + 1)) + ((c ^ 0xffffffff | e) + c + 1 | ((c | e) + (c & e) ^ 0xffffffff | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (c | e) + (c & e) + 1 ^ 0xffffffff) * -2 + (((c & (e ^ 0xffffffff)) + (c & (e ^ 0xffffffff))) - (c ^ e)) + (((e & (c ^ 0xffffffff)) + (e & (c ^ 0xffffffff))) - (e ^ c)) + (0xffffffff - (((c & (e ^ 0xffffffff)) + (c & (e ^ 0xffffffff))) - (c ^ e)) | 0xffffffff - (((e & (c ^ 0xffffffff)) + (e & (c ^ 0xffffffff))) - (e ^ c))) + 1 + (0xffffffff - ((((c ^ 0xffffffff | e) + c) - (((c | e) + (c & e) ^ 0xffffffff | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (c | e) + (c & e) + 1)) + ((c ^ 0xffffffff | e) + c + 1 | ((c | e) + (c & e) ^ 0xffffffff | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + (c | e) + (c & e) + 1 ^ 0xffffffff) * -2 + -1) | 0xffffffff - ((((c & (e ^ 0xffffffff)) + (c & (e ^ 0xffffffff))) - (c ^ e)) + (((e & (c ^ 0xffffffff)) + (e & (c ^ 0xffffffff))) - (e ^ c)) + 1 + (0xffffffff - (((c & (e ^ 0xffffffff)) + (c & (e ^ 0xffffffff))) - (c ^ e)) | 0xffffffff - (((e & (c ^ 0xffffffff)) + (e & (c ^ 0xffffffff))) - (e ^ c)))))",
                    "attributes": {
                        "numOps": 165,
                        "nestedExprLevel": 66,
                        "numDAGs": 48,
                        "percentDecreaseByOps": 8.333333333333332,
                        "opsPercentages": {
                            "arithmetic": 46.06060606060606,
                            "mul": 3.6363636363636362,
                            "bitwise": 50.303030303030305
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "msvc_default": {
                    "expr": "(((~c | e) + c) - ((~((c | e) + (c & e)) | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + 1 + (c | e) + (c & e))) + ((~c | e) + 1 + c | ~((~((c | e) + (c & e)) | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + 1 + (c | e) + (c & e))) * -2 + (((~e & c) + (~e & c)) - (c ^ e)) + (((~c & e) + (~c & e)) - (e ^ c)) + (0xffffffff - (((~e & c) + (~e & c)) - (c ^ e)) | 0xffffffff - (((~c & e) + (~c & e)) - (e ^ c))) + 1 + (0xffffffff - ((((~c | e) + c) - ((~((c | e) + (c & e)) | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + 1 + (c | e) + (c & e))) + ((~c | e) + 1 + c | ~((~((c | e) + (c & e)) | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) + 1 + (c | e) + (c & e))) * -2 + -1) | 0xffffffff - ((((~e & c) + (~e & c)) - (c ^ e)) + (((~c & e) + (~c & e)) - (e ^ c)) + 1 + (0xffffffff - (((~e & c) + (~e & c)) - (c ^ e)) | 0xffffffff - (((~c & e) + (~c & e)) - (e ^ c)))))",
                    "attributes": {
                        "numOps": 165,
                        "nestedExprLevel": 57,
                        "numDAGs": 49,
                        "percentDecreaseByOps": 8.333333333333332,
                        "opsPercentages": {
                            "arithmetic": 46.06060606060606,
                            "mul": 3.6363636363636362,
                            "bitwise": 50.303030303030305
                        },
                        "percentageDAGsCancel": 4.081632653061225
                    }
                },
                "gcc_O3": {
                    "expr": "((~c | e) + c - (~c + 1 + c * 2 | ~(c + e)) + c + e) + ((~c | e) + c + 1 | -(~c + 1 + c * 2 | ~(c + e)) + c + e - 2) * -2 + -1 + ((c ^ e + (~e & c) * -2) - 1 | (c ^ e + (~c & e) * -2) - 1) + (~e & c) * 2 + c ^ e * -2 + 1 + (~c & e) * 2 + (~((c ^ e + (~e & c) * -2) - 1 | (c ^ e + (~c & e) * -2) - 1) + (~e & c) * 2 + c ^ e * -2 + 1 + (~c & e) * 2 | 1 - ((~c | e) + c - (~c + 1 + c * 2 | ~(c + e)) + c + e) + ((~c | e) + c + 1 | -(~c + 1 + c * 2 | ~(c + e)) + c + e - 2) * -2)",
                    "attributes": {
                        "numOps": 127,
                        "nestedExprLevel": 19,
                        "numDAGs": 52,
                        "percentDecreaseByOps": 29.444444444444446,
                        "opsPercentages": {
                            "arithmetic": 49.60629921259843,
                            "mul": 12.598425196850393,
                            "bitwise": 37.79527559055118
                        },
                        "percentageDAGsCancel": 1.9230769230769231
                    }
                }
            }
        },
        {
            "num": 136,
            "gt": {
                "expr": "(((~c)|(c*(b+c))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 25.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((- c - 1) & ~ ((c & ((b - ~ c) - 1)) * (c | ((b - ~ c) - 1)) + (c & ~ ((b - ~ c) - 1)) * (~ c & ((b - ~ c) - 1)))) + ((c & ((b - ~ c) - 1)) * (c | ((b - ~ c) - 1)) + (c & ~ ((b - ~ c) - 1)) * (~ c & ((b - ~ c) - 1)))",
                "attributes": {
                    "numOps": 47,
                    "nestedExprLevel": 21,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 44.680851063829785,
                        "mul": 8.51063829787234,
                        "bitwise": 46.808510638297875
                    },
                    "percentageDAGsCancel": 6.25
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~c + ~b + 1 & c) * ((b - ~c) - 1 & ~c) + ((b - ~c) - 1 & c) * ((b - ~c) - 1 | c) + ~((~c + ~b + 1 & c) * ((b - ~c) - 1 & ~c) + ((b - ~c) - 1 & c) * ((b - ~c) - 1 | c) | c)",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 9,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 4.25531914893617,
                        "opsPercentages": {
                            "arithmetic": 42.22222222222222,
                            "mul": 8.88888888888889,
                            "bitwise": 48.888888888888886
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~((b + c | c) * (b + c & c) + (~c & b + c) * (~b + c & c) | c) + (b + c | c) * (b + c & c) + (~c & b + c) * (~b + c & c)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 6,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 38.297872340425535,
                        "opsPercentages": {
                            "arithmetic": 37.93103448275862,
                            "mul": 13.793103448275861,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(b + c & ~c) * (~b + c & c) + (b + c | c) * (b + c & c) + ~(c | (b + c & ~c) * (~b + c & c) + (b + c | c) * (b + c & c))",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 38.297872340425535,
                        "opsPercentages": {
                            "arithmetic": 37.93103448275862,
                            "mul": 13.793103448275861,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 21.428571428571427
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - c & ((c & (b - (c ^ 0xffffffff)) - 1) * (c | (b - (c ^ 0xffffffff)) - 1) + (c & ((b - (c ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((c ^ 0xffffffff) & (b - (c ^ 0xffffffff)) - 1) ^ 0xffffffff)) + (c & (b - (c ^ 0xffffffff)) - 1) * (c | (b - (c ^ 0xffffffff)) - 1) + (c & ((b - (c ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((c ^ 0xffffffff) & (b - (c ^ 0xffffffff)) - 1)",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 22,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 2.127659574468085,
                        "opsPercentages": {
                            "arithmetic": 43.47826086956522,
                            "mul": 8.695652173913043,
                            "bitwise": 47.82608695652174
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - c & ~(((b - ~c) - 1 & c) * ((b - ~c) - 1 | c) + (~((b - ~c) - 1) & c) * (~c & (b - ~c) - 1))) + ((b - ~c) - 1 & c) * ((b - ~c) - 1 | c) + (~((b - ~c) - 1) & c) * (~c & (b - ~c) - 1)",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 14,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 2.127659574468085,
                        "opsPercentages": {
                            "arithmetic": 43.47826086956522,
                            "mul": 8.695652173913043,
                            "bitwise": 47.82608695652174
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~c - b & c) * (~c & c + b) + (c + b | c) * (c + b & c) + ~(c | (~c - b & c) * (~c & c + b) + (c + b | c) * (c + b & c))",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 6,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 38.297872340425535,
                        "opsPercentages": {
                            "arithmetic": 37.93103448275862,
                            "mul": 13.793103448275861,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 137,
            "gt": {
                "expr": "(((((d&a)-d)|(e+d))|(e*d)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 16.666666666666664,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "((((((((((~ d | a) - ~ d) & ~ d) + (((~ d | a) - ~ d) & ~ d)) - (((~ d | a) - ~ d) ^ d)) + (((e | d) + (e | d)) - (e ^ d))) + 1) + ((- (((((~ d | a) - ~ d) & ~ d) + (((~ d | a) - ~ d) & ~ d)) - (((~ d | a) - ~ d) ^ d)) - 1) | (- (((e | d) + (e | d)) - (e ^ d)) - 1))) + ((e & d) * (e | d) + (e & ~ d) * (~ e & d))) + 1) + ((- ((((((((~ d | a) - ~ d) & ~ d) + (((~ d | a) - ~ d) & ~ d)) - (((~ d | a) - ~ d) ^ d)) + (((e | d) + (e | d)) - (e ^ d))) + 1) + ((- (((((~ d | a) - ~ d) & ~ d) + (((~ d | a) - ~ d) & ~ d)) - (((~ d | a) - ~ d) ^ d)) - 1) | (- (((e | d) + (e | d)) - (e ^ d)) - 1))) - 1) | (- ((e & d) * (e | d) + (e & ~ d) * (~ e & d)) - 1))",
                "attributes": {
                    "numOps": 138,
                    "nestedExprLevel": 68,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 36.95652173913043,
                        "mul": 2.898550724637681,
                        "bitwise": 60.14492753623188
                    },
                    "percentageDAGsCancel": 8.823529411764707
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((~e & d) * (~d & e) + (e & d) * (e | d) & ((~d & a & d) * 2 - (~a & d)) + ((e | d) * 2 - (e ^ d)) + 1 + (((e ^ d) + (e | d) * -2) - 1 | ((~a & d) + (~d & a & d) * -2) - 1)) + (~e & d) * (~d & e) + (e & d) * (e | d) + ((~d & a & d) * 2 - (~a & d)) + ((e | d) * 2 - (e ^ d)) + (((e ^ d) + (e | d) * -2) - 1 | ((~a & d) + (~d & a & d) * -2) - 1) + 2",
                    "attributes": {
                        "numOps": 82,
                        "nestedExprLevel": 24,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 40.57971014492754,
                        "opsPercentages": {
                            "arithmetic": 31.70731707317073,
                            "mul": 14.634146341463413,
                            "bitwise": 53.65853658536586
                        },
                        "percentageDAGsCancel": 10.81081081081081
                    }
                },
                "msvc_O1": {
                    "expr": "d + 1 + (~d | a) & ~d * 2 + 2 + (((((d ^ e - 2) + ((d + 1 + (~d | a) ^ d + d + 1 + (~d | a) & ~d * -2) - (d ^ e + d | e * -2) - 1 | (d + 1 + (~d | a) ^ d + d + 1 + (~d | a) & ~d * -2) - 1) + d | e * -2 | ~(~e & d) * (~d & e) - (d & e) * d | e) + ((d & e) + 2) * d | e) - d + 1 + (~d | a) ^ d) - d ^ e) + (~e & d) * (~d & e) + (d ^ e + d | e * -2) - 1 | (d + 1 + (~d | a) ^ d + d + 1 + (~d | a) & ~d * -2) - 1",
                    "attributes": {
                        "numOps": 106,
                        "nestedExprLevel": 16,
                        "numDAGs": 53,
                        "percentDecreaseByOps": 23.18840579710145,
                        "opsPercentages": {
                            "arithmetic": 41.509433962264154,
                            "mul": 10.377358490566039,
                            "bitwise": 48.113207547169814
                        },
                        "percentageDAGsCancel": 3.7735849056603774
                    }
                },
                "clang_O3": {
                    "expr": "(~e & d) * (~d & e) + (e & d) * (e | d) | ((e | d) * 2 - ((~a & d) + (e ^ d))) + (~((e | d) * 2 - (e ^ d)) | (~a & d) - 1) + 1",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 10,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 79.71014492753623,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 14.285714285714285,
                            "bitwise": 60.71428571428571
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "clang_default": {
                    "expr": "((((d ^ 0xffffffff | a) - (d ^ 0xffffffff) & (d ^ 0xffffffff)) + ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) & (d ^ 0xffffffff))) - ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) ^ d)) + (((e | d) + (e | d)) - (e ^ d)) + (0xffffffff - ((((d ^ 0xffffffff | a) - (d ^ 0xffffffff) & (d ^ 0xffffffff)) + ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) & (d ^ 0xffffffff))) - ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) ^ d)) | 0xffffffff - (((e | d) + (e | d)) - (e ^ d))) + (e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) + 2 + (0xffffffff - (((((d ^ 0xffffffff | a) - (d ^ 0xffffffff) & (d ^ 0xffffffff)) + ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) & (d ^ 0xffffffff))) - ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) ^ d)) + (((e | d) + (e | d)) - (e ^ d)) + 1 + (0xffffffff - ((((d ^ 0xffffffff | a) - (d ^ 0xffffffff) & (d ^ 0xffffffff)) + ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) & (d ^ 0xffffffff))) - ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) ^ d)) | 0xffffffff - (((e | d) + (e | d)) - (e ^ d)))) | 0xffffffff - ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d)))",
                    "attributes": {
                        "numOps": 131,
                        "nestedExprLevel": 57,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 5.072463768115942,
                        "opsPercentages": {
                            "arithmetic": 33.587786259541986,
                            "mul": 3.0534351145038165,
                            "bitwise": 63.358778625954194
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_default": {
                    "expr": "((((~d | a) - ~d & ~d) + ((~d | a) - ~d & ~d)) - ((~d | a) - ~d ^ d)) + (((e | d) + (e | d)) - (e ^ d)) + (0xffffffff - ((((~d | a) - ~d & ~d) + ((~d | a) - ~d & ~d)) - ((~d | a) - ~d ^ d)) | 0xffffffff - (((e | d) + (e | d)) - (e ^ d))) + (e & d) * (e | d) + (~d & e) * (~e & d) + 2 + (0xffffffff - (((((~d | a) - ~d & ~d) + ((~d | a) - ~d & ~d)) - ((~d | a) - ~d ^ d)) + (((e | d) + (e | d)) - (e ^ d)) + 1 + (0xffffffff - ((((~d | a) - ~d & ~d) + ((~d | a) - ~d & ~d)) - ((~d | a) - ~d ^ d)) | 0xffffffff - (((e | d) + (e | d)) - (e ^ d)))) | 0xffffffff - ((e & d) * (e | d) + (~d & e) * (~e & d)) )",
                    "attributes": {
                        "numOps": 131,
                        "nestedExprLevel": 42,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 5.072463768115942,
                        "opsPercentages": {
                            "arithmetic": 33.587786259541986,
                            "mul": 3.0534351145038165,
                            "bitwise": 63.358778625954194
                        },
                        "percentageDAGsCancel": 9.375
                    }
                },
                "gcc_O3": {
                    "expr": "((d & e) * d | e + (~d & e) * (~e & d) + (((d ^ e) + d | e * -2) - 1 | (~a & d) - 1) + 1 + ((d | e * 2 - (d ^ e)) - (~a & d))) - ((((d ^ e) + d | e * -2) - 1 | (~a & d) - 1) + 1 + ((d | e * 2 - (d ^ e)) - (~a & d)) & (d & e) * d | e + (~d & e) * (~e & d))",
                    "attributes": {
                        "numOps": 59,
                        "nestedExprLevel": 18,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 57.2463768115942,
                        "opsPercentages": {
                            "arithmetic": 33.89830508474576,
                            "mul": 13.559322033898304,
                            "bitwise": 52.54237288135594
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 138,
            "gt": {
                "expr": "((((b|b)&a)|(b*a)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 25.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "((((~ ((b & ~ b) + b) | a) + ((b & ~ b) + b)) + 1) & ~ ((b & a) * (b | a) + (b & ~ a) * (~ b & a))) + ((b & a) * (b | a) + (b & ~ a) * (~ b & a))",
                "attributes": {
                    "numOps": 31,
                    "nestedExprLevel": 13,
                    "numDAGs": 18,
                    "opsPercentages": {
                        "arithmetic": 22.58064516129032,
                        "mul": 12.903225806451612,
                        "bitwise": 64.51612903225806
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~b & a) * (~a & b) + (b & a) * (b | a) + (b + (~b | a) + 1 & ~((~b & a) * (~a & b) + (b & a) * (b | a)))",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 7,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 19.35483870967742,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 16.0,
                            "bitwise": 64.0
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "msvc_O1": {
                    "expr": "(b + 1 + (~b | a) & ~((a | b) * (a & b) + (~a & b) * (~b & a))) + (a | b) * (a & b) + (~a & b) * (~b & a)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 7,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 19.35483870967742,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 16.0,
                            "bitwise": 64.0
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "clang_O3": {
                    "expr": "(~(~b & a) * (~a & b) + (b | a) * (b & a) & b + (~b | a) + 1) + (~b & a) * (~a & b) + (b | a) * (b & a)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 7,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 19.35483870967742,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 16.0,
                            "bitwise": 64.0
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "clang_default": {
                    "expr": "(((b & (b ^ 0xffffffff)) + b ^ 0xffffffff | a) + (b & (b ^ 0xffffffff)) + b + 1 & ((b & a) * (b | a) + (b & (a ^ 0xffffffff)) * ((b ^ 0xffffffff) & a) ^ 0xffffffff)) + (b & a) * (b | a) + (b & (a ^ 0xffffffff)) * ((b ^ 0xffffffff) & a)",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 13,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 22.58064516129032,
                            "mul": 12.903225806451612,
                            "bitwise": 64.51612903225806
                        },
                        "percentageDAGsCancel": 15.0
                    }
                },
                "msvc_default": {
                    "expr": "((~b | a) + b + 1 & ~((b & a) * (b | a) + (~a & b) * (~b & a))) + (b & a) * (b | a) + (~a & b) * (~b & a)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 7,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 19.35483870967742,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 16.0,
                            "bitwise": 64.0
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "gcc_O3": {
                    "expr": "(b + 1 + (~b | a) & ~(~a & b) * (~b & a) + (b & a) * (b | a)) + (~a & b) * (~b & a) + (b & a) * (b | a)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 7,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 19.35483870967742,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 16.0,
                            "bitwise": 64.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 139,
            "gt": {
                "expr": "(((-(a^(~(b+c))))^((a^b)&c)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 28.57142857142857,
                        "mul": 0.0,
                        "bitwise": 71.42857142857143
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ (((a - (- ((b | c) + (b & c)) - 1)) - ((a | ~ (- ((b | c) + (b & c)) - 1)) + (a | ~ (- ((b | c) + (b & c)) - 1)))) - 2) + 1) | (((~ (((a - b) - ((a | ~ b) + (a | ~ b))) - 2) | c) + (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) + 1)) - ((~ (((a - (- ((b | c) + (b & c)) - 1)) - ((a | ~ (- ((b | c) + (b & c)) - 1)) + (a | ~ (- ((b | c) + (b & c)) - 1)))) - 2) + 1) & (((~ (((a - b) - ((a | ~ b) + (a | ~ b))) - 2) | c) + (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) + 1))",
                "attributes": {
                    "numOps": 93,
                    "nestedExprLevel": 57,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 52.68817204301075,
                        "mul": 0.0,
                        "bitwise": 47.31182795698925
                    },
                    "percentageDAGsCancel": 7.6923076923076925
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((a - b) + (~b | a) * -2 + ((~b | a) * 2 + ~a + b + 2 | c)) - 1 ^ (c + b | a) * 2 + ~a + ~(c + b) + 3",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 6,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 72.04301075268818,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 11.538461538461538,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(a + -1 + (((((~b | a) * 2 - a) + 1 + b | c) + (~b | a) * -2) - b) | ((((~(~(b | c) - (b & c)) | a) * 2 - (b & c)) - (b | c)) - a) + 1) - (a + -1 + (((((~b | a) * 2 - a) + 1 + b | c) + (~b | a) * -2) - b) & ((((~(~(b | c) - (b & c)) | a) * 2 - (b & c)) - (b | c)) - a) + 1)",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 27,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 34.40860215053764,
                        "opsPercentages": {
                            "arithmetic": 47.540983606557376,
                            "mul": 9.836065573770492,
                            "bitwise": 42.62295081967213
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((a - b) + (~b | a) * -2 + (1 - (a - b) + (~b | a) * -2 | c)) - 1 ^ ((c + b | a) * 2 - (c + b + a)) + 1",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 7,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 74.19354838709677,
                        "opsPercentages": {
                            "arithmetic": 58.333333333333336,
                            "mul": 12.5,
                            "bitwise": 29.166666666666668
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((a - (-1 - ((b | c) + (b & c)))) - ((a | 0xffffffff - ((b | c) + (b & c)) ^ 0xffffffff) + (a | 0xffffffff - ((b | c) + (b & c)) ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 | ((((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2 ^ 0xffffffff | c) + ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff)))) - 1) - ((((a - (-1 - ((b | c) + (b & c)))) - ((a | 0xffffffff - ((b | c) + (b & c)) ^ 0xffffffff) + (a | 0xffffffff - ((b | c) + (b & c)) ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 & ((((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2 ^ 0xffffffff | c) + ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff)) )) - 1)",
                    "attributes": {
                        "numOps": 87,
                        "nestedExprLevel": 45,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 6.451612903225806,
                        "opsPercentages": {
                            "arithmetic": 49.42528735632184,
                            "mul": 0.0,
                            "bitwise": 50.57471264367817
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(((a - (-1 - ((b | c) + (b & c)))) - ((~(0xffffffff - ((b | c) + (b & c))) | a) + (~(0xffffffff - ((b | c) + (b & c))) | a))) - 2) + 1 | ((~(((a - b) - ((~b | a) + (~b | a))) - 2) | c) - 1) + ((a - b) - ((~b | a) + (~b | a)))) - (~(((a - (-1 - ((b | c) + (b & c)))) - ((~(0xffffffff - ((b | c) + (b & c))) | a) + (~(0xffffffff - ((b | c) + (b & c))) | a))) - 2) + 1 & ((~(((a - b) - ((~b | a) + (~b | a))) - 2) | c) - 1) + ((a - b) - ((~b | a) + (~b | a))))",
                    "attributes": {
                        "numOps": 87,
                        "nestedExprLevel": 51,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 6.451612903225806,
                        "opsPercentages": {
                            "arithmetic": 49.42528735632184,
                            "mul": 0.0,
                            "bitwise": 50.57471264367817
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((~b | a) * 2 + 2 + ~a + b | c) - 1) + (a - b) + (~b | a) * -2 ^ ~(b + c) + ~a + 3 + (b + c | a) * 2",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 6,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 72.04301075268818,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 11.538461538461538,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                }
            }
        },
        {
            "num": 140,
            "gt": {
                "expr": "((((-c)*(a^c))-((a*a)+(~a))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 28.57142857142857,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((~ c + 1) & (((a - c) - ((a | ~ c) << 1)) - 2)) * ((~ c + 1) | (((a - c) - ((a | ~ c) << 1)) - 2)) + ((~ c + 1) & ~ (((a - c) - ((a | ~ c) << 1)) - 2)) * (~ (~ c + 1) & (((a - c) - ((a | ~ c) << 1)) - 2))) & ~ ((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ (- a - 1)) + ((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & (- a - 1)) << 1))) + ((((~ c + 1) & (((a - c) - ((a | ~ c) << 1)) - 2)) * ((~ c + 1) | (((a - c) - ((a | ~ c) << 1)) - 2)) + ((~ c + 1) & ~ (((a - c) - ((a | ~ c) << 1)) - 2)) * (~ (~ c + 1) & (((a - c) - ((a | ~ c) << 1)) - 2))) & ~ ((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ (- a - 1)) + ((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & (- a - 1)) << 1)))) - ((((~ c + 1) & (((a - c) - ((a | ~ c) << 1)) - 2)) * ((~ c + 1) | (((a - c) - ((a | ~ c) << 1)) - 2)) + ((~ c + 1) & ~ (((a - c) - ((a | ~ c) << 1)) - 2)) * (~ (~ c + 1) & (((a - c) - ((a | ~ c) << 1)) - 2))) ^ ((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ (- a - 1)) + ((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & (- a - 1)) << 1)))",
                "attributes": {
                    "numOps": 208,
                    "nestedExprLevel": 87,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 35.57692307692308,
                        "mul": 8.653846153846153,
                        "bitwise": 55.769230769230774
                    },
                    "percentageDAGsCancel": 17.142857142857142
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((a * a ^ a) + (~a & a * a) * -2 & (-c & ((a - c) + (~c | a) * -2) - 2) * (((a - c) + (~c | a) * -2) - 2 | -c) + (((a - c) + (~c | a) * -2) - 2 & c - 1) * (-c & (~c | a) * 2 + ~a + c + 2)) * 2 - ((-c & ((a - c) + (~c | a) * -2) - 2) * (((a - c) + (~c | a) * -2) - 2 | -c) + (((a - c) + (~c | a) * -2) - 2 & c - 1) * (-c & (~c | a) * 2 + ~a + c + 2) ^ (~a & a * a) * 2 + ~(a * a ^ a))",
                    "attributes": {
                        "numOps": 98,
                        "nestedExprLevel": 26,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 52.88461538461539,
                        "opsPercentages": {
                            "arithmetic": 44.89795918367347,
                            "mul": 19.387755102040817,
                            "bitwise": 35.714285714285715
                        },
                        "percentageDAGsCancel": 3.0303030303030303
                    }
                },
                "msvc_O1": {
                    "expr": "(~((-1 - a) * 2 & a * a * 2) + (~a ^ a * a) & (~c + 1 & ((a + (~c | a) * -2) - c) - 2) * (~c + 1 | ((a + (~c | a) * -2) - c) - 2) + (~((a + (~c | a) * -2) - c) - 2 & ~c + 1) * (~~c + 1 & ((a + (~c | a) * -2) - c) - 2)) * 2 - (((-1 - a) * 2 & a * a * 2) + (~a ^ a * a) ^ (~c + 1 & ((a + (~c | a) * -2) - c) - 2) * (~c + 1 | ((a + (~c | a) * -2) - c) - 2) + (~((a + (~c | a) * -2) - c) - 2 & ~c + 1) * (~~c + 1 & ((a + (~c | a) * -2) - c) - 2))",
                    "attributes": {
                        "numOps": 115,
                        "nestedExprLevel": 32,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 44.71153846153847,
                        "opsPercentages": {
                            "arithmetic": 42.608695652173914,
                            "mul": 18.26086956521739,
                            "bitwise": 39.130434782608695
                        },
                        "percentageDAGsCancel": 2.941176470588235
                    }
                },
                "clang_O3": {
                    "expr": "(~(a * a ^ ~a) + (~a & a * a) * 2 & (c - 1 & (a - c) + (~c | a) * -2 - 2) * (1 - (a - c) + (~c | a) * -2 & -c) + ((a - c) + (~c | a) * -2 - 2 | -c) * ((a - c) + (~c | a) * -2 - 2 & -c)) * 2 - ((c - 1 & (a - c) + (~c | a) * -2 - 2) * (1 - (a - c) + (~c | a) * -2 & -c) + ((a - c) + (~c | a) * -2 - 2 | -c) * ((a - c) + (~c | a) * -2 - 2 & -c) ^ (a * a ^ ~a) + (~a & a * a) * 2)",
                    "attributes": {
                        "numOps": 99,
                        "nestedExprLevel": 21,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 52.40384615384615,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 19.19191919191919,
                            "bitwise": 35.35353535353536
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((c ^ 0xffffffff) + 1 & ((a - c) + (a | c ^ 0xffffffff) * -2) - 2) * ((c ^ 0xffffffff) + 1 | ((a - c) + (a | c ^ 0xffffffff) * -2) - 2) + ((c ^ 0xffffffff) + 1 & (((a - c) + (a | c ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * (((c ^ 0xffffffff) + 1 ^ 0xffffffff) & ((a - c) + (a | c ^ 0xffffffff) * -2) - 2) & ((a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ 0xffffffff - a) + (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & 0xffffffff - a) * 2 ^ 0xffffffff)) + (((c ^ 0xffffffff) + 1 & ((a - c) + (a | c ^ 0xffffffff) * -2) - 2 ) * ((c ^ 0xffffffff) + 1 | ((a - c) + (a | c ^ 0xffffffff) * -2) - 2) + ((c ^ 0xffffffff) + 1 & (((a - c) + (a | c ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * (((c ^ 0xffffffff) + 1 ^ 0xffffffff) & ((a - c) + (a | c ^ 0xffffffff) * -2) - 2) & ((a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ 0xffffffff - a) + (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & 0xffffffff - a) * 2 ^ 0xffffffff))) - (((c ^ 0xffffffff) + 1 & ((a - c) + (a | c ^ 0xffffffff) * -2) - 2 ) * ((c ^ 0xffffffff) + 1 | ((a - c) + (a | c ^ 0xffffffff) * -2) - 2) + ((c ^ 0xffffffff) + 1 & (((a - c) + (a | c ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * (((c ^ 0xffffffff) + 1 ^ 0xffffffff) & ((a - c) + (a | c ^ 0xffffffff) * -2) - 2) ^ (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ 0xffffffff - a) + (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & 0xffffffff - a) * 2)",
                    "attributes": {
                        "numOps": 202,
                        "nestedExprLevel": 68,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 2.8846153846153846,
                        "opsPercentages": {
                            "arithmetic": 39.603960396039604,
                            "mul": 16.33663366336634,
                            "bitwise": 44.05940594059406
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_default": {
                    "expr": "(((~c + 1 & ((a - c) + (~c | a) * -2) - 2) * (~c + 1 | ((a - c) + (~c | a) * -2) - 2) + (~c + 1 & ~(((a - c) + (~c | a) * -2) - 2)) * (~(~c + 1) & ((a - c) + (~c | a) * -2) - 2) & ~((a * a ^ 0xffffffff - a) + (a * a & 0xffffffff - a) * 2)) + ((~c + 1 & ((a - c) + (~c | a) * -2) - 2) * (~c + 1 | ((a - c) + (~c | a) * -2) - 2) + (~c + 1 & ~(((a - c) + (~c | a) * -2) - 2)) * (~(~c + 1) & ((a - c) + (~c | a) * -2) - 2) & ~((a * a ^ 0xffffffff - a) + (a * a & 0xffffffff - a) * 2))) - ((~c + 1 & ((a - c) + (~c | a) * -2) - 2) * (~c + 1 | ((a - c) + (~c | a) * -2) - 2) + (~c + 1 & ~(((a - c) + (~c | a) * -2) - 2)) * (~(~c + 1) & ((a - c) + (~c | a) * -2) - 2) ^ (a * a ^ 0xffffffff - a) + (a * a & 0xffffffff - a) * 2)",
                    "attributes": {
                        "numOps": 166,
                        "nestedExprLevel": 49,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 20.192307692307693,
                        "opsPercentages": {
                            "arithmetic": 44.57831325301205,
                            "mul": 16.265060240963855,
                            "bitwise": 39.1566265060241
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(a ^ a * a + ~a & a * a * -2 & ((~c | a) * 2 + 2 + ~a + c & -c) * (c - 1 & ((a - c) + (~c | a) * -2) - 2) + (-c & ((a - c) + (~c | a) * -2) - 2) * (-c | ((a - c) + (~c | a) * -2) - 2)) * 2 - (~a & a * a * 2 + ~a ^ a * a ^ ((~c | a) * 2 + 2 + ~a + c & -c) * (c - 1 & ((a - c) + (~c | a) * -2) - 2) + (-c & ((a - c) + (~c | a) * -2) - 2) * (-c | ((a - c) + (~c | a) * -2) - 2))",
                    "attributes": {
                        "numOps": 98,
                        "nestedExprLevel": 23,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 52.88461538461539,
                        "opsPercentages": {
                            "arithmetic": 44.89795918367347,
                            "mul": 19.387755102040817,
                            "bitwise": 35.714285714285715
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                }
            }
        },
        {
            "num": 141,
            "gt": {
                "expr": "(((~((b*d)^(d*d)))-b))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 40.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) & ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - (((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | ((d & d) * (d | d) + (d & ~ d) * (~ d & d)))) - 1) ^ b) - ((~ (((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) & ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - (((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | ((d & d) * (d | d) + (d & ~ d) * (~ d & d)))) - 1) & b) + (~ (((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) & ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - (((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | ((d & d) * (d | d) + (d & ~ d) * (~ d & d)))) - 1) & b))",
                "attributes": {
                    "numOps": 127,
                    "nestedExprLevel": 53,
                    "numDAGs": 25,
                    "opsPercentages": {
                        "arithmetic": 15.748031496062993,
                        "mul": 18.89763779527559,
                        "bitwise": 65.35433070866141
                    },
                    "percentageDAGsCancel": 24.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(d * d ^ (b & d) * (b | d) + (~b & d) * (~d & b) ^ b) + ((d * d ^ (b & d) * (b | d) + (~b & d) * (~d & b)) & b) * -2",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 8,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 77.95275590551181,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 25.0,
                            "bitwise": 60.71428571428571
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((d * d & (b | d) * (b & d) + (~d & b) * (~b & d)) - (d * d | (b | d) * (b & d) + (~d & b) * (~b & d))) - 1 ^ b) + (~((d * d & (b | d) * (b & d) + (~d & b) * (~b & d)) - (d * d | (b | d) * (b & d) + (~d & b) * (~b & d))) - 1 & b) * -2",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 17,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 57.48031496062992,
                        "opsPercentages": {
                            "arithmetic": 18.51851851851852,
                            "mul": 24.074074074074073,
                            "bitwise": 57.407407407407405
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~(d * d ^ (~b & d) * (~d & b) + (d | b) * (d & b) ^ b) + (d * d ^ (~b & d) * (~d & b) + (d | b) * (d & b) & b) * -2",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 7,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 77.95275590551181,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 25.0,
                            "bitwise": 60.71428571428571
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_default": {
                    "expr": "((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) & d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)) - ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d))) - 1 ^ b) - ((((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) & d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)) - ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d))) - 1 ^ 0xffffffff) & b) + (((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) & d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)) - ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d))) - 1 ^ 0xffffffff) & b))",
                    "attributes": {
                        "numOps": 115,
                        "nestedExprLevel": 47,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 9.448818897637794,
                        "opsPercentages": {
                            "arithmetic": 17.391304347826086,
                            "mul": 20.869565217391305,
                            "bitwise": 61.73913043478261
                        },
                        "percentageDAGsCancel": 13.043478260869565
                    }
                },
                "msvc_default": {
                    "expr": "((((b & d) * (b | d) + (~d & b) * (~b & d) & d * d) - ((b & d) * (b | d) + (~d & b) * (~b & d) | d * d)) - 1 ^ b) - ((~((((b & d) * (b | d) + (~d & b) * (~b & d) & d * d) - ((b & d) * (b | d) + (~d & b) * (~b & d) | d * d)) - 1) & b) + (~((((b & d) * (b | d) + (~d & b) * (~b & d) & d * d) - ((b & d) * (b | d) + (~d & b) * (~b & d) | d * d)) - 1) & b))",
                    "attributes": {
                        "numOps": 79,
                        "nestedExprLevel": 28,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 37.79527559055118,
                        "opsPercentages": {
                            "arithmetic": 17.72151898734177,
                            "mul": 22.78481012658228,
                            "bitwise": 59.49367088607595
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "gcc_O3": {
                    "expr": "~((~d & b) * (~b & d) + (b & d) * (b | d) ^ d * d ^ b) + ((~d & b) * (~b & d) + (b & d) * (b | d) ^ d * d & b) * -2",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 7,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 77.95275590551181,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 25.0,
                            "bitwise": 60.71428571428571
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 142,
            "gt": {
                "expr": "(((~b)|(e|(c-b))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((- b - 1) & ~ ((e & ~ (((c & ~ b) + (c & ~ b)) - (c ^ b))) + (((c & ~ b) + (c & ~ b)) - (c ^ b)))) + ((e & ~ (((c & ~ b) + (c & ~ b)) - (c ^ b))) + (((c & ~ b) + (c & ~ b)) - (c ^ b)))",
                "attributes": {
                    "numOps": 39,
                    "nestedExprLevel": 19,
                    "numDAGs": 13,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((c ^ b) + ~((~b & c) * 2) & e) + ((~b & c) * 2 - (c ^ b)) + ~(((c ^ b) + ~((~b & c) * 2) & e) + ((~b & c) * 2 - (c ^ b)) | b)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 10,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 25.64102564102564,
                        "opsPercentages": {
                            "arithmetic": 24.137931034482758,
                            "mul": 13.793103448275861,
                            "bitwise": 62.06896551724138
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "msvc_O1": {
                    "expr": "(~((~((~b & c) * 2 - b ^ c) & e - b ^ c) + (~b & c) * 2 | b) - b ^ c) + ~((~b & c) * 2 - b ^ c) & e + (~b & c) * 2",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 8,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 25.64102564102564,
                        "opsPercentages": {
                            "arithmetic": 24.137931034482758,
                            "mul": 13.793103448275861,
                            "bitwise": 62.06896551724138
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "clang_O3": {
                    "expr": "(~(~b & c) * 2 - (c ^ b) & e) + (~b & c) * 2 - (c ^ b) + ~(b | (~(~b & c) * 2 - (c ^ b) & e) + (~b & c) * 2 - (c ^ b))",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 8,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 25.64102564102564,
                        "opsPercentages": {
                            "arithmetic": 24.137931034482758,
                            "mul": 13.793103448275861,
                            "bitwise": 62.06896551724138
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - b & ((e & (((c & (b ^ 0xffffffff)) + (c & (b ^ 0xffffffff))) - (c ^ b) ^ 0xffffffff)) + (((c & (b ^ 0xffffffff)) + (c & (b ^ 0xffffffff))) - (c ^ b) ) ^ 0xffffffff)) + (e & (((c & (b ^ 0xffffffff)) + (c & (b ^ 0xffffffff))) - (c ^ b) ^ 0xffffffff)) + (((c & (b ^ 0xffffffff)) + (c & (b ^ 0xffffffff))) - (c ^ b))",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 25,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 2.564102564102564,
                        "opsPercentages": {
                            "arithmetic": 31.57894736842105,
                            "mul": 0.0,
                            "bitwise": 68.42105263157895
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - b & ~((~(((~b & c) + (~b & c)) - (c ^ b)) & e) + (((~b & c) + (~b & c)) - (c ^ b)))) + (~(((~b & c) + (~b & c)) - (c ^ b)) & e) + (((~b & c) + (~b & c)) - (c ^ b))",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 18,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 2.564102564102564,
                        "opsPercentages": {
                            "arithmetic": 31.57894736842105,
                            "mul": 0.0,
                            "bitwise": 68.42105263157895
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "gcc_O3": {
                    "expr": "(~(~b & c) * 2 + (c ^ b) & e) + ((~b & c) * 2 - (c ^ b)) + ~(b | (~(~b & c) * 2 + (c ^ b) & e) + ((~b & c) * 2 - (c ^ b)))",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 10,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 25.64102564102564,
                        "opsPercentages": {
                            "arithmetic": 24.137931034482758,
                            "mul": 13.793103448275861,
                            "bitwise": 62.06896551724138
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 143,
            "gt": {
                "expr": "((((c+a)+a)*((-(a-e))&e)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 16.666666666666664,
                        "bitwise": 16.666666666666664
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((c | a) + (c & a)) ^ ~ a) + ((((c | a) + (c & a)) | a) << 1)) + 1) & ((~ (~ (((a ^ e) - ((~ a & e) << 1)) - 1)) | e) - ~ (~ (((a ^ e) - ((~ a & e) << 1)) - 1)))) * ((((((c | a) + (c & a)) ^ ~ a) + ((((c | a) + (c & a)) | a) << 1)) + 1) | ((~ (~ (((a ^ e) - ((~ a & e) << 1)) - 1)) | e) - ~ (~ (((a ^ e) - ((~ a & e) << 1)) - 1)))) + ((((((c | a) + (c & a)) ^ ~ a) + ((((c | a) + (c & a)) | a) << 1)) + 1) & ~ ((~ (~ (((a ^ e) - ((~ a & e) << 1)) - 1)) | e) - ~ (~ (((a ^ e) - ((~ a & e) << 1)) - 1)))) * (~ (((((c | a) + (c & a)) ^ ~ a) + ((((c | a) + (c & a)) | a) << 1)) + 1) & ((~ (~ (((a ^ e) - ((~ a & e) << 1)) - 1)) | e) - ~ (~ (((a ^ e) - ((~ a & e) << 1)) - 1))))",
                "attributes": {
                    "numOps": 129,
                    "nestedExprLevel": 82,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 28.68217054263566,
                        "mul": 1.550387596899225,
                        "bitwise": 69.76744186046511
                    },
                    "percentageDAGsCancel": 3.7037037037037033
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~a & e) * 2 + ~(a ^ e) + 1 & e & ((a + c ^ a) + (a + c | a) * -2) - 1) * ((a + c | a) * 2 + ~(a + c ^ a) + 1 & ~((~a & e) * 2 + ~(a ^ e) + 1 & e)) + ((a + c | a) * 2 + ~(a + c ^ a) + 1 & (~a & e) * 2 + ~(a ^ e) + 1 & e) * ((~a & e) * 2 + ~(a ^ e) + 1 & e | (a + c | a) * 2 + ~(a + c ^ a) + 1)",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 15,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 44.18604651162791,
                        "opsPercentages": {
                            "arithmetic": 36.11111111111111,
                            "mul": 13.88888888888889,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "msvc_O1": {
                    "expr": "((((((a ^ e) + ~a & e * -2) - 1 | e) + ~a & e * 2) - (a ^ e)) + 1 & (~a ^ (a | c) + (a & c)) + 1 + ((a | c) + (a & c) * 2 | a * 2)) * ((((((a ^ e) + ~a & e * -2) - 1 | e) + ~a & e * 2) - (a ^ e)) + 1 | (~a ^ (a | c) + (a & c)) + 1 + ((a | c) + (a & c) * 2 | a * 2)) + (~(((((a ^ e) + ~a & e * -2) - 1 | e) + ~a & e * 2) - (a ^ e)) + 1 & (~a ^ (a | c) + (a & c)) + 1 + ((a | c) + (a & c) * 2 | a * 2)) * (~(~a ^ (a | c) + (a & c)) + 1 + ((a | c) + (a & c) * 2 | a * 2) & (((((a ^ e) + ~a & e * -2) - 1 | e) + ~a & e * 2) - (a ^ e)) + 1)",
                    "attributes": {
                        "numOps": 121,
                        "nestedExprLevel": 41,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 6.2015503875969,
                        "opsPercentages": {
                            "arithmetic": 33.88429752066116,
                            "mul": 14.87603305785124,
                            "bitwise": 51.2396694214876
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "clang_O3": {
                    "expr": "(-(c + a ^ ~a + c + a | a * 2) - 2 & e) * (~e & c + a ^ ~a + c + a | a * 2 + 1) + (e | c + a ^ ~a + c + a | a * 2 + 1) * (e & c + a ^ ~a + c + a | a * 2 + 1)",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 4,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 68.21705426356588,
                        "opsPercentages": {
                            "arithmetic": 43.90243902439025,
                            "mul": 14.634146341463413,
                            "bitwise": 41.46341463414634
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "clang_default": {
                    "expr": "(((c | a) + (c & a) ^ a ^ 0xffffffff) + ((c | a) + (c & a) | a) * 2 + 1 & (((a ^ e) + ((a ^ 0xffffffff) & e) * -2) - 1 | e) - ((a ^ e) + ((a ^ 0xffffffff) & e) * -2 + -1)) * (((c | a) + (c & a) ^ a ^ 0xffffffff) + ((c | a) + (c & a) | a) * 2 + 1 | (((a ^ e) + ((a ^ 0xffffffff) & e) * -2) - 1 | e) - ((a ^ e) + ((a ^ 0xffffffff) & e) * -2 + -1)) + (((c | a) + (c & a) ^ a ^ 0xffffffff) + ((c | a) + (c & a) | a) * 2 + 1 & ((((a ^ e) + ((a ^ 0xffffffff) & e) * -2) - 1 | e) - ((a ^ e) + ((a ^ 0xffffffff) & e) * -2 + -1) ^ 0xffffffff)) * ((((c | a) + (c & a) ^ a ^ 0xffffffff) + ((c | a) + (c & a) | a) * 2 + 1 ^ 0xffffffff) & (((a ^ e) + ((a ^ 0xffffffff) & e) * -2) - 1 | e) - ((a ^ e) + ((a ^ 0xffffffff) & e) * -2 + -1))",
                    "attributes": {
                        "numOps": 125,
                        "nestedExprLevel": 44,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 3.10077519379845,
                        "opsPercentages": {
                            "arithmetic": 39.2,
                            "mul": 11.200000000000001,
                            "bitwise": 49.6
                        },
                        "percentageDAGsCancel": 13.793103448275861
                    }
                },
                "msvc_default": {
                    "expr": "(((c | a) + (c & a) ^ ~a) + 1 + ((c | a) + (c & a) | a) * 2 & (((a ^ e) + (~a & e) * -2) - 1 | e) - ((a ^ e) + (~a & e) * -2 + -1)) * (((c | a) + (c & a) ^ ~a) + 1 + ((c | a) + (c & a) | a) * 2 | (((a ^ e) + (~a & e) * -2) - 1 | e) - ((a ^ e) + (~a & e) * -2 + -1)) + (((c | a) + (c & a) ^ ~a) + 1 + ((c | a) + (c & a) | a) * 2 & ~((((a ^ e) + (~a & e) * -2) - 1 | e) - ((a ^ e) + (~a & e) * -2 + -1))) * (~(((c | a) + (c & a) ^ ~a) + 1 + ((c | a) + (c & a) | a) * 2) & (((a ^ e) + (~a & e) * -2) - 1 | e) - ((a ^ e) + (~a & e) * -2 + -1))",
                    "attributes": {
                        "numOps": 125,
                        "nestedExprLevel": 43,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 3.10077519379845,
                        "opsPercentages": {
                            "arithmetic": 39.2,
                            "mul": 11.200000000000001,
                            "bitwise": 49.6
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "gcc_O3": {
                    "expr": "((c + a ^ a + c + a | a * -2) - 1 & e) * (~e & c + a | a * 2 - c + a ^ a) + (c + a | a * 2 - c + a ^ a & e) * (c + a | a * 2 - c + a ^ a | e)",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 4,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 73.64341085271317,
                        "opsPercentages": {
                            "arithmetic": 44.11764705882353,
                            "mul": 17.647058823529413,
                            "bitwise": 38.23529411764706
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                }
            }
        },
        {
            "num": 144,
            "gt": {
                "expr": "((-((((a-d)+a)-(-d))^((-a)-(~(d-d))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 80.0,
                        "mul": 0.0,
                        "bitwise": 20.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "~ (((((((((a + ~ d) + 1) - ~ a) - 1) + ~ (~ (d - 1))) + 1) - (((~ (a - 1) & ~ (~ d + d)) << 1) - (~ (a - 1) ^ (~ d + d)))) - ((((((((a + ~ d) + 1) - ~ a) - 1) + ~ (~ (d - 1))) + 1) | ~ (((~ (a - 1) & ~ (~ d + d)) << 1) - (~ (a - 1) ^ (~ d + d)))) + (((((((a + ~ d) + 1) - ~ a) - 1) + ~ (~ (d - 1))) + 1) | ~ (((~ (a - 1) & ~ (~ d + d)) << 1) - (~ (a - 1) ^ (~ d + d)))))) - 2) + 1",
                "attributes": {
                    "numOps": 82,
                    "nestedExprLevel": 43,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a - 2 | d + ((a + ~d) - ~a)) * 2 + ~(((a * 2 + ~d) - ~a) + (d - 1)) + 3",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 6,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 78.04878048780488,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 11.11111111111111,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(a - 2 | a * 2) * 2 + a * -3 + 3",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 2,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 90.2439024390244,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 37.5,
                            "bitwise": 12.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(a * 2 - 4 | a * 4) + a * -3 + 3",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 2,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 90.2439024390244,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 37.5,
                            "bitwise": 12.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((((a + (d ^ 0xffffffff)) - (a ^ 0xffffffff)) + d) - (((a - 1 ^ 0xffffffff) & ((d ^ 0xffffffff) + d ^ 0xffffffff)) * 2 - (a - 1 ^ 0xffffffff ^ (d ^ 0xffffffff) + d))) - ((((a + (d ^ 0xffffffff)) - (a ^ 0xffffffff)) + d | ((a - 1 ^ 0xffffffff) & ((d ^ 0xffffffff) + d ^ 0xffffffff)) * 2 - (a - 1 ^ 0xffffffff ^ (d ^ 0xffffffff) + d) ^ 0xffffffff) + (((a + (d ^ 0xffffffff)) - (a ^ 0xffffffff)) + d | ((a - 1 ^ 0xffffffff) & ((d ^ 0xffffffff) + d ^ 0xffffffff)) * 2 - (a - 1 ^ 0xffffffff ^ (d ^ 0xffffffff) + d) ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 28,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 21.951219512195124,
                        "opsPercentages": {
                            "arithmetic": 45.3125,
                            "mul": 4.6875,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_default": {
                    "expr": "~((((((a + ~d) - ~a) + d) - ((~(a - 1) & ~(~d + d)) * 2 - (~(a - 1) ^ ~d + d)) ) - ((((a + ~d) - ~a) + d | ~((~(a - 1) & ~(~d + d)) * 2 - (~(a - 1) ^ ~d + d))) + (((a + ~d) - ~a) + d | ~((~(a - 1) & ~(~d + d)) * 2 - (~(a - 1) ^ ~d + d))))) - 2) + 1",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 24,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 21.951219512195124,
                        "opsPercentages": {
                            "arithmetic": 45.3125,
                            "mul": 4.6875,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "gcc_O3": {
                    "expr": "~(a * 3 - 1) + 3 + (a * 2 | a - 2) * 2",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 2,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 89.02439024390245,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 33.33333333333333,
                            "bitwise": 22.22222222222222
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 145,
            "gt": {
                "expr": "(((-(((e&e)+e)-(~a)))+(-(~(~(a*a))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 11,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 10.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "((~ ((((((((~ e | e) + e) + 1) | e) + ((((~ e | e) + e) + 1) & e)) & ~ (- a - 1)) << 1) - ((((((~ e | e) + e) + 1) | e) + ((((~ e | e) + e) + 1) & e)) ^ (- a - 1))) + 1) | ((- ((a & a) * (a | a) + (a & ~ a) * (~ a & a)) - 1) + 1)) + ((~ ((((((((~ e | e) + e) + 1) | e) + ((((~ e | e) + e) + 1) & e)) & ~ (- a - 1)) << 1) - ((((((~ e | e) + e) + 1) | e) + ((((~ e | e) + e) + 1) & e)) ^ (- a - 1))) + 1) & ((- ((a & a) * (a | a) + (a & ~ a) * (~ a & a)) - 1) + 1))",
                "attributes": {
                    "numOps": 93,
                    "nestedExprLevel": 55,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 44.086021505376344,
                        "mul": 4.301075268817205,
                        "bitwise": 51.61290322580645
                    },
                    "percentageDAGsCancel": 30.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(e * 2 ^ a) + ~((e * 2 & a) * 2) + 1) - a * a",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 88.17204301075269,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 36.36363636363637,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(-(a * a) | (~a ^ e * 2) - (e * 4 & a * 2)) + (-(a * a) & (~a ^ e * 2) - (e * 4 & a * 2))",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 77.41935483870968,
                        "opsPercentages": {
                            "arithmetic": 23.809523809523807,
                            "mul": 38.095238095238095,
                            "bitwise": 38.095238095238095
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(e * 2 ^ a) - a * a) + (e * 2 & a) * -2",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 89.24731182795699,
                        "opsPercentages": {
                            "arithmetic": 30.0,
                            "mul": 40.0,
                            "bitwise": 30.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((((e ^ 0xffffffff | e) + e + 1 | e) + ((e ^ 0xffffffff | e) + e + 1 & e) & (0xffffffff - a ^ 0xffffffff)) * 2 - (((e ^ 0xffffffff | e) + e + 1 | e) + ((e ^ 0xffffffff | e) + e + 1 & e) ^ 0xffffffff - a) ^ 0xffffffff) + 1 | -(a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a))) + (((((e ^ 0xffffffff | e) + e + 1 | e) + ((e ^ 0xffffffff | e) + e + 1 & e) & (0xffffffff - a ^ 0xffffffff)) * 2 - (((e ^ 0xffffffff | e) + e + 1 | e) + ((e ^ 0xffffffff | e) + e + 1 & e) ^ 0xffffffff - a) ^ 0xffffffff) + 1 & -(a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a)))",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 26,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 12.903225806451612,
                        "opsPercentages": {
                            "arithmetic": 40.74074074074074,
                            "mul": 7.4074074074074066,
                            "bitwise": 51.85185185185185
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_default": {
                    "expr": "(~((e * 2 & ~(0xffffffff - a)) * 2 - (e * 2 ^ 0xffffffff - a)) + 1 | -(a * a)) + (~((e * 2 & ~(0xffffffff - a)) * 2 - (e * 2 ^ 0xffffffff - a)) + 1 & -(a * a))",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 10,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 68.81720430107528,
                        "opsPercentages": {
                            "arithmetic": 37.93103448275862,
                            "mul": 27.586206896551722,
                            "bitwise": 34.48275862068966
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~((e * 2 & a) * 2) - (e * 2 ^ a)) - a * a",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 90.32258064516128,
                        "opsPercentages": {
                            "arithmetic": 22.22222222222222,
                            "mul": 44.44444444444444,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 146,
            "gt": {
                "expr": "(((-(-(~b)))&(-(b-d))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 0.0,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ (~ ((b + 1) - 1)) | (~ ((b & ~ d) - (~ b & d)) + 1)) - ~ (~ ((b + 1) - 1))",
                "attributes": {
                    "numOps": 17,
                    "nestedExprLevel": 10,
                    "numDAGs": 13,
                    "opsPercentages": {
                        "arithmetic": 41.17647058823529,
                        "mul": 0.0,
                        "bitwise": 58.82352941176471
                    },
                    "percentageDAGsCancel": 15.384615384615385
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~b & d + ~b + 1",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 1,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 70.58823529411765,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 0.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~b & d) - (~d & b) | b) - b",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 58.82352941176471,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 0.0,
                            "bitwise": 71.42857142857143
                        },
                        "percentageDAGsCancel": 28.57142857142857
                    }
                },
                "clang_O3": {
                    "expr": "d - b & ~b",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 1,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 82.35294117647058,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(b | ((b & (d ^ 0xffffffff)) - ((b ^ 0xffffffff) & d) ^ 0xffffffff) + 1) - b",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 6,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 47.05882352941176,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(b | ~((~d & b) - (~b & d)) + 1) - b",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 47.05882352941176,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "d + ~b + 1 & ~b",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 1,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 70.58823529411765,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 0.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 147,
            "gt": {
                "expr": "(((a-(c*c))|((c*c)|a)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 40.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((a ^ ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) - ((~ a & ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) << 1)) + ((((c & c) * (c | c) + (c & ~ c) * (~ c & c)) & ~ a) + a)) + 1) + ((- ((a ^ ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) - ((~ a & ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) << 1)) - 1) | (- ((((c & c) * (c | c) + (c & ~ c) * (~ c & c)) & ~ a) + a) - 1))",
                "attributes": {
                    "numOps": 78,
                    "nestedExprLevel": 36,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 21.794871794871796,
                        "mul": 15.384615384615385,
                        "bitwise": 62.82051282051282
                    },
                    "percentageDAGsCancel": 21.73913043478261
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(a + (c * c & ~a)) | ((c * c & ~a) * 2 - (c * c ^ a)) - 1) + a + (c * c & ~a) + (c * c ^ a) + (c * c & ~a) * -2 + 1",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 62.82051282051282,
                        "opsPercentages": {
                            "arithmetic": 31.03448275862069,
                            "mul": 27.586206896551722,
                            "bitwise": 41.37931034482759
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "a + 1 + (((~a * 2 & c * c * 2 - (c * c ^ a)) - 1 | ~~a & c * c - a) - ~a * 2 & c * c * 2) + ~a & c * c + (c * c ^ a)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 5,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 61.53846153846154,
                        "opsPercentages": {
                            "arithmetic": 26.666666666666668,
                            "mul": 33.33333333333333,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "clang_O3": {
                    "expr": "~a & c * c + a | (c * c ^ a) + ~a & c * c * -2",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 2,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 83.33333333333334,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 30.76923076923077,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(a ^ c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) + ((a ^ 0xffffffff) & c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) * -2 + (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) & (a ^ 0xffffffff)) + a + 1 + (0xffffffff - ((a ^ c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) + ((a ^ 0xffffffff) & c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) * -2) | 0xffffffff - ((c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) & (a ^ 0xffffffff)) + a))",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 24,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 15.384615384615385,
                        "opsPercentages": {
                            "arithmetic": 25.757575757575758,
                            "mul": 21.21212121212121,
                            "bitwise": 53.03030303030303
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_default": {
                    "expr": "(c * c & ~a) + (c * c ^ a) + (~a & c * c) * -2 + a + 1 + (0xffffffff - ((c * c ^ a) + (~a & c * c) * -2) | 0xffffffff - ((c * c & ~a) + a))",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 7,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 61.53846153846154,
                        "opsPercentages": {
                            "arithmetic": 36.666666666666664,
                            "mul": 26.666666666666668,
                            "bitwise": 36.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~a & c * c * 2 - c * c ^ a) - 1 | ~(~a & c * c + a)) + ~a & c * c + a + 1 + c * c ^ a + ~a & c * c * -2",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 3,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 62.82051282051282,
                        "opsPercentages": {
                            "arithmetic": 31.03448275862069,
                            "mul": 27.586206896551722,
                            "bitwise": 41.37931034482759
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 148,
            "gt": {
                "expr": "((((d*a)&((~((-a)^a))&a))-(((-a)-e)&e)))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 10.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((~ ((d & a) * (d | a) + (d & ~ a) * (~ d & a)) | (((~ (((~ a + 1) & a) + ~ ((~ a + 1) | a)) | a) + (((~ a + 1) & a) + ~ ((~ a + 1) | a))) + 1)) + ((d & a) * (d | a) + (d & ~ a) * (~ d & a))) + 1) ^ ((~ ((~ (a - 1) & ~ e) - (~ (~ (a - 1)) & e)) | e) - ~ ((~ (a - 1) & ~ e) - (~ (~ (a - 1)) & e)))) - ((~ (((~ ((d & a) * (d | a) + (d & ~ a) * (~ d & a)) | (((~ (((~ a + 1) & a) + ~ ((~ a + 1) | a)) | a) + (((~ a + 1) & a) + ~ ((~ a + 1) | a))) + 1)) + ((d & a) * (d | a) + (d & ~ a) * (~ d & a))) + 1) & ((~ ((~ (a - 1) & ~ e) - (~ (~ (a - 1)) & e)) | e) - ~ ((~ (a - 1) & ~ e) - (~ (~ (a - 1)) & e)))) + (~ (((~ ((d & a) * (d | a) + (d & ~ a) * (~ d & a)) | (((~ (((~ a + 1) & a) + ~ ((~ a + 1) | a)) | a) + (((~ a + 1) & a) + ~ ((~ a + 1) | a))) + 1)) + ((d & a) * (d | a) + (d & ~ a) * (~ d & a))) + 1) & ((~ ((~ (a - 1) & ~ e) - (~ (~ (a - 1)) & e)) | e) - ~ ((~ (a - 1) & ~ e) - (~ (~ (a - 1)) & e)))))",
                "attributes": {
                    "numOps": 199,
                    "nestedExprLevel": 90,
                    "numDAGs": 37,
                    "opsPercentages": {
                        "arithmetic": 29.64824120603015,
                        "mul": 6.030150753768844,
                        "bitwise": 64.321608040201
                    },
                    "percentageDAGsCancel": 5.405405405405405
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~d & a) * (~a & d) + (d & a) * (d | a) + (~((~d & a) * (~a & d) + (d & a) * (d | a)) | ~(-a | a) + (-a & a) + (-a | a) + 1) + 1 ^ ~(e + (a - 1)) & e) + (~(e + (a - 1)) & e & -((~d & a) * (~a & d) + (d & a) * (d | a) + (~((~d & a) * (~a & d) + (d & a) * (d | a)) | ~(-a | a) + (-a & a) + (-a | a) + 1)) - 2) * -2",
                    "attributes": {
                        "numOps": 78,
                        "nestedExprLevel": 21,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 60.80402010050251,
                        "opsPercentages": {
                            "arithmetic": 34.61538461538461,
                            "mul": 11.538461538461538,
                            "bitwise": 53.84615384615385
                        },
                        "percentageDAGsCancel": 9.67741935483871
                    }
                },
                "msvc_O1": {
                    "expr": "(((~(~(a - 1 | e) - a - 1 & e) | e) - a - 1 & e) + ~(a - 1 | e) + 1 ^ (a | d) * (a & d) + 1 + (~(~a + 1 | a) + 1 + (~(~a + 1 & a + ~(~a + 1 | a)) | a) + ~a + 1 & a | ~((~d & a) * (~a & d) + (a | d) * (a & d))) + (~d & a) * (~a & d)) + (~(a | d) * (a & d) + 1 + (~(~a + 1 | a) + 1 + (~(~a + 1 & a + ~(~a + 1 | a)) | a) + ~a + 1 & a | ~((~d & a) * (~a & d) + (a | d) * (a & d))) + (~d & a) * (~a & d) & ((~(~(a - 1 | e) - a - 1 & e) | e) - a - 1 & e) + ~(a - 1 | e) + 1) * -2",
                    "attributes": {
                        "numOps": 122,
                        "nestedExprLevel": 27,
                        "numDAGs": 49,
                        "percentDecreaseByOps": 38.69346733668342,
                        "opsPercentages": {
                            "arithmetic": 34.42622950819672,
                            "mul": 7.377049180327869,
                            "bitwise": 58.19672131147541
                        },
                        "percentageDAGsCancel": 8.16326530612245
                    }
                },
                "clang_O3": {
                    "expr": "((~d & a) * (~a & d) + (d | a) * (d & a) + -a & a | ~(~d & a) * (~a & d) + (d | a) * (d & a) + 1 ^ e) + (-(-a & a | ~(~d & a) * (~a & d) + (d | a) * (d & a) + (~d & a) * (~a & d) + (d | a) * (d & a)) - 2 & e) * -2",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 12,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 72.8643216080402,
                        "opsPercentages": {
                            "arithmetic": 24.074074074074073,
                            "mul": 16.666666666666664,
                            "bitwise": 59.25925925925925
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "clang_default": {
                    "expr": "(((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) ^ 0xffffffff | (((a ^ 0xffffffff) + 1 & a) + (((a ^ 0xffffffff) + 1 | a) ^ 0xffffffff) ^ 0xffffffff | a) + ((a ^ 0xffffffff) + 1 & a) + (((a ^ 0xffffffff) + 1 | a) ^ 0xffffffff) + 1) + (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) + 1 ^ (((a - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) - (a - 1 & e) ^ 0xffffffff | e) - (((a - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) - (a - 1 & e) ^ 0xffffffff )) - (((((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) ^ 0xffffffff | (((a ^ 0xffffffff) + 1 & a) + (((a ^ 0xffffffff) + 1 | a) ^ 0xffffffff) ^ 0xffffffff | a) + ((a ^ 0xffffffff) + 1 & a) + (((a ^ 0xffffffff) + 1 | a) ^ 0xffffffff) + 1) + (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) + 1 ^ 0xffffffff) & (((a - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) - (a - 1 & e) ^ 0xffffffff | e) - (((a - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) - (a - 1 & e) ^ 0xffffffff)) + ((((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) ^ 0xffffffff | (((a ^ 0xffffffff) + 1 & a) + (((a ^ 0xffffffff) + 1 | a) ^ 0xffffffff) ^ 0xffffffff | a) + ((a ^ 0xffffffff) + 1 & a) + (((a ^ 0xffffffff) + 1 | a) ^ 0xffffffff) + 1) + (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) + 1 ^ 0xffffffff) & (((a - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) - (a - 1 & e) ^ 0xffffffff | e) - (((a - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) - (a - 1 & e) ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 187,
                        "nestedExprLevel": 68,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 6.030150753768844,
                        "opsPercentages": {
                            "arithmetic": 31.550802139037433,
                            "mul": 6.417112299465241,
                            "bitwise": 62.03208556149733
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_default": {
                    "expr": "((~((d & a) * (d | a) + (~a & d) * (~d & a) ) | (~((~a + 1 & a) + ~(~a + 1 | a)) | a) + 1 + (~a + 1 & a) + ~(~a + 1 | a)) + 1 + (d & a) * (d | a) + (~a & d) * (~d & a) ^ (~((~(a - 1) & ~e) - (a - 1 & e)) | e) - ~((~(a - 1) & ~e) - (a - 1 & e))) - ((~((~((d & a) * (d | a) + (~a & d) * (~d & a)) | (~((~a + 1 & a) + ~(~a + 1 | a)) | a) + 1 + (~a + 1 & a) + ~(~a + 1 | a)) + 1 + (d & a) * (d | a) + (~a & d) * (~d & a)) & (~((~(a - 1) & ~e) - (a - 1 & e)) | e) - ~((~(a - 1) & ~e) - (a - 1 & e))) + (~((~((d & a) * (d | a) + (~a & d) * (~d & a)) | (~((~a + 1 & a) + ~(~a + 1 | a)) | a) + 1 + (~a + 1 & a) + ~(~a + 1 | a)) + 1 + (d & a) * (d | a) + (~a & d) * (~d & a)) & (~((~(a - 1) & ~e) - (a - 1 & e)) | e) - ~((~(a - 1) & ~e) - (a - 1 & e))))",
                    "attributes": {
                        "numOps": 187,
                        "nestedExprLevel": 58,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 6.030150753768844,
                        "opsPercentages": {
                            "arithmetic": 31.550802139037433,
                            "mul": 6.417112299465241,
                            "bitwise": 62.03208556149733
                        },
                        "percentageDAGsCancel": 7.894736842105263
                    }
                },
                "gcc_O3": {
                    "expr": "((-a & a | ~(~a & d) * (~d & a) + (d | a) * (d & a)) + (~a & d) * (~d & a) + (d | a) * (d & a) + 1 ^ e) + (-(-a & a | ~(~a & d) * (~d & a) + (d | a) * (d & a)) + (~a & d) * (~d & a) + (d | a) * (d & a) - 2 & e) * -2",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 13,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 72.8643216080402,
                        "opsPercentages": {
                            "arithmetic": 24.074074074074073,
                            "mul": 16.666666666666664,
                            "bitwise": 59.25925925925925
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 149,
            "gt": {
                "expr": "(((~(b|(b*b)))^(~((b*(-e))^(e-(-b))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 20.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((- ((b & ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) - 1) | (((((b & (~ e + 1)) * (b | (~ e + 1)) + (b & ~ (~ e + 1)) * (~ b & (~ e + 1))) & ((e + ~ (~ b + 1)) + 1)) - (((b & (~ e + 1)) * (b | (~ e + 1)) + (b & ~ (~ e + 1)) * (~ b & (~ e + 1))) | ((e + ~ (~ b + 1)) + 1))) - 1)) - ((- ((b & ~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) - 1) & (((((b & (~ e + 1)) * (b | (~ e + 1)) + (b & ~ (~ e + 1)) * (~ b & (~ e + 1))) & ((e + ~ (~ b + 1)) + 1)) - (((b & (~ e + 1)) * (b | (~ e + 1)) + (b & ~ (~ e + 1)) * (~ b & (~ e + 1))) | ((e + ~ (~ b + 1)) + 1))) - 1))",
                "attributes": {
                    "numOps": 145,
                    "nestedExprLevel": 58,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 32.41379310344827,
                        "mul": 11.03448275862069,
                        "bitwise": 56.55172413793104
                    },
                    "percentageDAGsCancel": 14.705882352941178
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "e + b ^ (-e & b) * (-e | b) + (e - 1 & b) * (-e & ~b) ^ (~(b * b) & b) + b * b",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 5,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 86.20689655172413,
                        "opsPercentages": {
                            "arithmetic": 35.0,
                            "mul": 20.0,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_O1": {
                    "expr": "((b * b | ~b) - b * b | (((-e & b) * (-e | b) + (~-e & b) * (-e & ~b) & b + e) - (b + e | (-e & b) * (-e | b) + (~-e & b) * (-e & ~b))) - 1) - ((b * b | ~b) - b * b & (((-e & b) * (-e | b) + (~-e & b) * (-e & ~b) & b + e) - (b + e | (-e & b) * (-e | b) + (~-e & b) * (-e & ~b))) - 1)",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 17,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 46.89655172413793,
                        "opsPercentages": {
                            "arithmetic": 40.25974025974026,
                            "mul": 15.584415584415584,
                            "bitwise": 44.15584415584416
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "e + b ^ (~(b * b) & b) + b * b ^ (-e & ~b) * (e - 1 & b) + (-e | b) * (-e & b)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 5,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 86.20689655172413,
                        "opsPercentages": {
                            "arithmetic": 35.0,
                            "mul": 20.0,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - ((b & (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff)) + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) | (((b & (e ^ 0xffffffff) + 1) * (b | (e ^ 0xffffffff) + 1) + (b & ((e ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (e ^ 0xffffffff) + 1) & e + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1) - ((b & (e ^ 0xffffffff) + 1) * (b | (e ^ 0xffffffff) + 1) + (b & ((e ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (e ^ 0xffffffff) + 1) | e + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - 1) - (0xffffffff - ((b & (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff)) + b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) & (((b & (e ^ 0xffffffff) + 1) * (b | (e ^ 0xffffffff) + 1) + (b & ((e ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (e ^ 0xffffffff) + 1) & e + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1) - ((b & (e ^ 0xffffffff) + 1) * (b | (e ^ 0xffffffff) + 1) + (b & ((e ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (e ^ 0xffffffff) + 1) | e + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - 1)",
                    "attributes": {
                        "numOps": 135,
                        "nestedExprLevel": 52,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 6.896551724137931,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 11.851851851851853,
                            "bitwise": 54.81481481481482
                        },
                        "percentageDAGsCancel": 15.625
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - ((~(b * b) & b) + b * b) | (((~e + 1 & b) * (~e + 1 | b) + (~(~e + 1) & b) * (~b & ~e + 1) & e + 1 + ~(~b + 1)) - ((~e + 1 & b) * (~e + 1 | b) + (~(~e + 1) & b) * (~b & ~e + 1) | e + 1 + ~(~b + 1) )) - 1) - (0xffffffff - ((~(b * b) & b) + b * b) & (((~e + 1 & b) * (~e + 1 | b) + (~(~e + 1) & b) * (~b & ~e + 1) & e + 1 + ~(~b + 1)) - ((~e + 1 & b) * (~e + 1 | b) + (~(~e + 1) & b) * (~b & ~e + 1) | e + 1 + ~(~b + 1))) - 1)",
                    "attributes": {
                        "numOps": 111,
                        "nestedExprLevel": 26,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 23.448275862068964,
                        "opsPercentages": {
                            "arithmetic": 36.93693693693694,
                            "mul": 10.81081081081081,
                            "bitwise": 52.25225225225225
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "gcc_O3": {
                    "expr": "(e - 1 & b) * (~b & -e) + (-e | b) * (-e & b) ^ (~(b * b) & b) + b * b ^ b + e",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 5,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 86.20689655172413,
                        "opsPercentages": {
                            "arithmetic": 35.0,
                            "mul": 20.0,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 150,
            "gt": {
                "expr": "(((((b^b)-c)-e)+((c*e)|(b-b))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 14.285714285714285,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 28.57142857142857
                }
            },
            "mba": {
                "expr": "((((((((((b - b) - ((b | ~ b) << 1)) - 2) & ~ c) - (~ (((b - b) - ((b | ~ b) << 1)) - 2) & c)) & ~ e) << 1) - ((((((b - b) - ((b | ~ b) << 1)) - 2) & ~ c) - (~ (((b - b) - ((b | ~ b) << 1)) - 2) & c)) ^ e)) ^ ~ ((((c & e) * (c | e) + (c & ~ e) * (~ c & e)) & ~ (((b & ~ b) << 1) - (b ^ b))) + (((b & ~ b) << 1) - (b ^ b)))) + ((((((((((b - b) - ((b | ~ b) << 1)) - 2) & ~ c) - (~ (((b - b) - ((b | ~ b) << 1)) - 2) & c)) & ~ e) << 1) - ((((((b - b) - ((b | ~ b) << 1)) - 2) & ~ c) - (~ (((b - b) - ((b | ~ b) << 1)) - 2) & c)) ^ e)) | ((((c & e) * (c | e) + (c & ~ e) * (~ c & e)) & ~ (((b & ~ b) << 1) - (b ^ b))) + (((b & ~ b) << 1) - (b ^ b)))) << 1)) + 1",
                "attributes": {
                    "numOps": 128,
                    "nestedExprLevel": 71,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 31.25,
                        "mul": 3.125,
                        "bitwise": 65.625
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~c & e) * (~e & c) + (c & e) * (c | e) | (~e & -c) * 2 - (-c ^ e)) * 2 + ((c & e) * (c | e) + (~c & e) * (~e & c) ^ (-c ^ e) + ~((~e & -c) * 2)) + 1",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 10,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 70.3125,
                        "opsPercentages": {
                            "arithmetic": 26.31578947368421,
                            "mul": 18.421052631578945,
                            "bitwise": 55.26315789473685
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~e * 2 & c * -2) - (-c ^ e) ^ ~(~c & e) * (~e & c) + (c | e) * (c & e)) + 1 + ((~e << 2 & c * -4) + (-c ^ e) * -2 | (~c & e) * (~e & c) + (c | e) * (c & e) * 2)",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 9,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 67.1875,
                        "opsPercentages": {
                            "arithmetic": 26.190476190476193,
                            "mul": 21.428571428571427,
                            "bitwise": 52.38095238095239
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_O3": {
                    "expr": "((~e & c) * (~c & e) + (e | c) * (e & c) | (~e & -c) * 2 - (-c ^ e)) * 2 - ((~e & c) * (~c & e) + (e | c) * (e & c) ^ (~e & -c) * 2 - (-c ^ e))",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 71.875,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 19.444444444444446,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((b | b ^ 0xffffffff) * -2 - 2 & (c ^ 0xffffffff)) - (((b | b ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) & c) & (e ^ 0xffffffff)) * 2 - (((b | b ^ 0xffffffff) * -2 - 2 & (c ^ 0xffffffff)) - (((b | b ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) & c) ^ e) ^ ((c & e) * (c | e) + (c & (e ^ 0xffffffff)) * ((c ^ 0xffffffff) & e) & ((b & (b ^ 0xffffffff)) * 2 ^ 0xffffffff)) + (b & (b ^ 0xffffffff)) * 2 ^ 0xffffffff) + ((((b | b ^ 0xffffffff) * -2 - 2 & (c ^ 0xffffffff)) - (((b | b ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) & c) & (e ^ 0xffffffff)) * 2 - (((b | b ^ 0xffffffff) * -2 - 2 & (c ^ 0xffffffff)) - (((b | b ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) & c) ^ e) | ((c & e) * (c | e) + (c & (e ^ 0xffffffff)) * ((c ^ 0xffffffff) & e) & ((b & (b ^ 0xffffffff)) * 2 ^ 0xffffffff)) + (b & (b ^ 0xffffffff)) * 2 ) * 2 + 1",
                    "attributes": {
                        "numOps": 112,
                        "nestedExprLevel": 40,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 12.5,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 16.964285714285715,
                            "bitwise": 58.03571428571429
                        },
                        "percentageDAGsCancel": 15.151515151515152
                    }
                },
                "msvc_default": {
                    "expr": "((-c & ~e) * 2 - (-c ^ e) ^ ~((c & e) * (c | e) + (~e & c) * (~c & e))) + 1 + ((-c & ~e) * 2 - (-c ^ e) | (c & e) * (c | e) + (~e & c) * (~c & e)) * 2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 10,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 70.3125,
                        "opsPercentages": {
                            "arithmetic": 26.31578947368421,
                            "mul": 18.421052631578945,
                            "bitwise": 55.26315789473685
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~(~e & -c) * 2 + -c ^ e ^ (~c & e) * (~e & c) + (c & e) * (c | e)) + 1 + ((~e & -c) * 2 - -c ^ e | (~c & e) * (~e & c) + (c & e) * (c | e)) * 2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 8,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 70.3125,
                        "opsPercentages": {
                            "arithmetic": 26.31578947368421,
                            "mul": 18.421052631578945,
                            "bitwise": 55.26315789473685
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                }
            }
        },
        {
            "num": 151,
            "gt": {
                "expr": "((((b^b)|(e+b))^(-(((e|e)|(e*e))^(-e)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 10.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((((((b - b) - ((b | ~ b) + (b | ~ b))) - 2) + (((e ^ ~ b) + ((e | b) << 1)) + 1)) + 1) + ((- (((b - b) - ((b | ~ b) + (b | ~ b))) - 2) - 1) | (- (((e ^ ~ b) + ((e | b) << 1)) + 1) - 1))) | (~ (((((((((e + e) + 1) + ((- e - 1) | (- e - 1))) + ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + 1) + ((- (((e + e) + 1) + ((- e - 1) | (- e - 1))) - 1) | (- ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) - 1))) - (~ e + 1)) - ((((((((e + e) + 1) + ((- e - 1) | (- e - 1))) + ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + 1) + ((- (((e + e) + 1) + ((- e - 1) | (- e - 1))) - 1) | (- ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) - 1))) | ~ (~ e + 1)) + (((((((e + e) + 1) + ((- e - 1) | (- e - 1))) + ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + 1) + ((- (((e + e) + 1) + ((- e - 1) | (- e - 1))) - 1) | (- ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) - 1))) | ~ (~ e + 1)))) - 2) + 1)) - (((((((b - b) - ((b | ~ b) + (b | ~ b))) - 2) + (((e ^ ~ b) + ((e | b) << 1)) + 1)) + 1) + ((- (((b - b) - ((b | ~ b) + (b | ~ b))) - 2) - 1) | (- (((e ^ ~ b) + ((e | b) << 1)) + 1) - 1))) & (~ (((((((((e + e) + 1) + ((- e - 1) | (- e - 1))) + ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + 1) + ((- (((e + e) + 1) + ((- e - 1) | (- e - 1))) - 1) | (- ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) - 1))) - (~ e + 1)) - ((((((((e + e) + 1) + ((- e - 1) | (- e - 1))) + ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + 1) + ((- (((e + e) + 1) + ((- e - 1) | (- e - 1))) - 1) | (- ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) - 1))) | ~ (~ e + 1)) + (((((((e + e) + 1) + ((- e - 1) | (- e - 1))) + ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + 1) + ((- (((e + e) + 1) + ((- e - 1) | (- e - 1))) - 1) | (- ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) - 1))) | ~ (~ e + 1)))) - 2) + 1))",
                "attributes": {
                    "numOps": 359,
                    "nestedExprLevel": 178,
                    "numDAGs": 53,
                    "opsPercentages": {
                        "arithmetic": 53.760445682451255,
                        "mul": 6.685236768802229,
                        "bitwise": 39.55431754874652
                    },
                    "percentageDAGsCancel": 18.867924528301888
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(e - 1 | e * e + e * 2 + ~e + 2 + (~(e * e) | -e - 1)) * 2 + ~(e * e + e * 3 + ~e + 2 + (~(e * e) | -e - 1)) + 3 ^ (e | b) * 2 + ~(b ^ e) + 1",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 7,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 89.69359331476323,
                        "opsPercentages": {
                            "arithmetic": 45.94594594594595,
                            "mul": 21.62162162162162,
                            "bitwise": 32.432432432432435
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~b ^ e) + (b | e) * 2 + 1 | (((((e + 1) * e + 1 + ~(e * e & e) | e - 1) * 2 - ~(e * e & e)) - (e + 1) * e) - e) + 1) - ((~b ^ e) + (b | e) * 2 + 1 & (((((e + 1) * e + 1 + ~(e * e & e) | e - 1) * 2 - ~(e * e & e)) - (e + 1) * e) - e) + 1)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 17,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 85.23676880222841,
                        "opsPercentages": {
                            "arithmetic": 43.39622641509434,
                            "mul": 22.641509433962266,
                            "bitwise": 33.9622641509434
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "clang_O3": {
                    "expr": "((e - 1 | e * e | e) * 2 - (e * e | e + e)) + 2 ^ (b | e) * 2 - (e ^ b)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 4,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 95.82172701949861,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 26.666666666666668,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((e ^ b ^ 0xffffffff) + (e | b) * 2) - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff))) + (0xffffffff - (-2 - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff))) | 0xffffffff - ((e ^ b ^ 0xffffffff) + (e | b) * 2 + 1)) | (((e * 2 + (0xffffffff - e | 0xffffffff - e) + e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + (0xffffffff - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | 0xffffffff - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)))) - ((e ^ 0xffffffff) + 1)) - ((e * 2 + (0xffffffff - e | 0xffffffff - e) + e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + 2 + (0xffffffff - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | 0xffffffff - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e))) | (e ^ 0xffffffff) + 1 ^ 0xffffffff) + (e * 2 + (0xffffffff - e | 0xffffffff - e) + e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + 2 + (0xffffffff - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | 0xffffffff - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e))) | (e ^ 0xffffffff) + 1 ^ 0xffffffff)) ^ 0xffffffff) + 1) - ((((e ^ b ^ 0xffffffff) + (e | b) * 2) - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff))) + (0xffffffff - (-2 - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff))) | 0xffffffff - ((e ^ b ^ 0xffffffff) + (e | b) * 2 + 1)) & (((e * 2 + (0xffffffff - e | 0xffffffff - e) + e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + (0xffffffff - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | 0xffffffff - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)))) - ((e ^ 0xffffffff) + 1)) - ((e * 2 + (0xffffffff - e | 0xffffffff - e) + e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + 2 + (0xffffffff - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | 0xffffffff - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e))) | (e ^ 0xffffffff) + 1 ^ 0xffffffff) + (e * 2 + (0xffffffff - e | 0xffffffff - e) + e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + 2 + (0xffffffff - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | 0xffffffff - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e))) | (e ^ 0xffffffff) + 1 ^ 0xffffffff)) ^ 0xffffffff) + 1)",
                    "attributes": {
                        "numOps": 273,
                        "nestedExprLevel": 85,
                        "numDAGs": 47,
                        "percentDecreaseByOps": 23.955431754874652,
                        "opsPercentages": {
                            "arithmetic": 43.58974358974359,
                            "mul": 14.652014652014653,
                            "bitwise": 41.75824175824176
                        },
                        "percentageDAGsCancel": 6.382978723404255
                    }
                },
                "msvc_default": {
                    "expr": "((~b ^ e) + (e | b) * 2 + 1 | ~(((e * 2 + (0xffffffff - e | 0xffffffff - e) + e * e + (0xffffffff - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | 0xffffffff - e * e)) - (~e + 1)) - ((e * 2 + (0xffffffff - e | 0xffffffff - e) + e * e + 2 + (0xffffffff - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | 0xffffffff - e * e) | ~(~e + 1)) + (e * 2 + (0xffffffff - e | 0xffffffff - e) + e * e + 2 + (0xffffffff - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | 0xffffffff - e * e) | ~(~e + 1)))) + 1) - ((~b ^ e) + (e | b) * 2 + 1 & ~(((e * 2 + (0xffffffff - e | 0xffffffff - e) + e * e + (0xffffffff - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | 0xffffffff - e * e)) - (~e + 1)) - ((e * 2 + (0xffffffff - e | 0xffffffff - e) + e * e + 2 + (0xffffffff - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | 0xffffffff - e * e) | ~(~e + 1)) + (e * 2 + (0xffffffff - e | 0xffffffff - e) + e * e + 2 + (0xffffffff - (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | 0xffffffff - e * e) | ~(~e + 1)))) + 1)",
                    "attributes": {
                        "numOps": 157,
                        "nestedExprLevel": 35,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 56.26740947075209,
                        "opsPercentages": {
                            "arithmetic": 56.68789808917197,
                            "mul": 16.560509554140125,
                            "bitwise": 26.751592356687897
                        },
                        "percentageDAGsCancel": 3.125
                    }
                },
                "gcc_O3": {
                    "expr": "~(e * e + 1 + e + (~(e * e) | -e - 1) + e) + 3 + (e - 1 | e * e + 1 + e + (~(e * e) | -e - 1)) * 2 ^ ~(b ^ e) + 1 + (b | e) * 2",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 7,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 91.08635097493037,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 18.75,
                            "bitwise": 31.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 152,
            "gt": {
                "expr": "(((-(~((a-(~e))-(e^e))))-(e-(e|e))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 0.0,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "((((((((a & ~ (- e - 1)) + (a & ~ (- e - 1))) - (a ^ (- e - 1))) + ~ (((e - e) - ((e | ~ e) << 1)) - 2)) + 1) + 1) & ~ (((e & ~ ((e & ~ e) + e)) << 1) - (e ^ ((e & ~ e) + e)))) << 1) - (((((((a & ~ (- e - 1)) + (a & ~ (- e - 1))) - (a ^ (- e - 1))) + ~ (((e - e) - ((e | ~ e) << 1)) - 2)) + 1) + 1) ^ (((e & ~ ((e & ~ e) + e)) << 1) - (e ^ ((e & ~ e) + e))))",
                "attributes": {
                    "numOps": 73,
                    "nestedExprLevel": 39,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 47.94520547945205,
                        "mul": 0.0,
                        "bitwise": 52.054794520547944
                    },
                    "percentageDAGsCancel": 31.03448275862069
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((a & e) * 2 - ~(e ^ a)) + 1) * 2 - (((a & e) * 2 - ~(e ^ a)) + 1)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 7,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 80.82191780821918,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 21.428571428571427,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((a & e) * 2 - (~e ^ a)) + 1",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 91.78082191780823,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 16.666666666666664,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "clang_O3": {
                    "expr": "(e ^ a) + (e & a) * 2 + 2",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 93.15068493150685,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 20.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "clang_default": {
                    "expr": "((((a & (0xffffffff - e ^ 0xffffffff)) + (a & (0xffffffff - e ^ 0xffffffff))) - (a ^ 0xffffffff - e)) + ((e | e ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) + 2 & ((e & ((e & (e ^ 0xffffffff)) + e ^ 0xffffffff)) * 2 - (e ^ (e & (e ^ 0xffffffff)) + e) ^ 0xffffffff)) * 2 - ((((a & (0xffffffff - e ^ 0xffffffff)) + (a & (0xffffffff - e ^ 0xffffffff))) - (a ^ 0xffffffff - e)) + ((e | e ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) + 2 ^ (e & ((e & (e ^ 0xffffffff)) + e ^ 0xffffffff)) * 2 - (e ^ (e & (e ^ 0xffffffff)) + e))",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 27,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 13.698630136986301,
                        "opsPercentages": {
                            "arithmetic": 39.682539682539684,
                            "mul": 7.936507936507936,
                            "bitwise": 52.38095238095239
                        },
                        "percentageDAGsCancel": 26.923076923076923
                    }
                },
                "msvc_default": {
                    "expr": "((((~(0xffffffff - e) & a) + (~(0xffffffff - e) & a)) - (0xffffffff - e ^ a)) + 1) * 2 - ((((~(0xffffffff - e) & a) + (~(0xffffffff - e) & a)) - (0xffffffff - e ^ a)) + 1)",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 13,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 67.12328767123287,
                        "opsPercentages": {
                            "arithmetic": 54.166666666666664,
                            "mul": 4.166666666666666,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(a ^ e) + 2 + (e & a) * 2",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 93.15068493150685,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 20.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                }
            }
        },
        {
            "num": 153,
            "gt": {
                "expr": "(((c*(((a*c)^c)|a))+(a-a)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 33.33333333333333,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "(((c & (((((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - c) - ((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c) + (((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c))) - 2) & ~ a) + a)) * (c | (((((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - c) - ((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c) + (((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c))) - 2) & ~ a) + a)) + (c & ~ (((((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - c) - ((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c) + (((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c))) - 2) & ~ a) + a)) * (~ c & (((((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - c) - ((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c) + (((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c))) - 2) & ~ a) + a))) ^ ((a ^ a) - ((~ a & a) << 1))) + ((((c & (((((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - c) - ((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c) + (((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c))) - 2) & ~ a) + a)) * (c | (((((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - c) - ((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c) + (((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c))) - 2) & ~ a) + a)) + (c & ~ (((((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - c) - ((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c) + (((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c))) - 2) & ~ a) + a)) * (~ c & (((((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - c) - ((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c) + (((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ~ c))) - 2) & ~ a) + a))) & ((a ^ a) - ((~ a & a) << 1))) << 1)",
                "attributes": {
                    "numOps": 336,
                    "nestedExprLevel": 155,
                    "numDAGs": 32,
                    "opsPercentages": {
                        "arithmetic": 20.535714285714285,
                        "mul": 15.476190476190476,
                        "bitwise": 63.988095238095234
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a + (((((~a & c) * (~c & a) + (a & c) * (a | c)) - c) + (~c | (a & c) * (a | c) + (~a & c) * (~c & a)) * -2) - 2 & ~a) & ~c) * (~(a + (((((~a & c) * (~c & a) + (a & c) * (a | c)) - c) + (~c | (a & c) * (a | c) + (~a & c) * (~c & a)) * -2) - 2 & ~a)) & c) + (a + (((((~a & c) * (~c & a) + (a & c) * (a | c)) - c) + (~c | (a & c) * (a | c) + (~a & c) * (~c & a)) * -2) - 2 & ~a) & c) * (a + (((((~a & c) * (~c & a) + (a & c) * (a | c)) - c) + (~c | (a & c) * (a | c) + (~a & c) * (~c & a)) * -2) - 2 & ~a) | c)",
                    "attributes": {
                        "numOps": 121,
                        "nestedExprLevel": 42,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 63.988095238095234,
                        "opsPercentages": {
                            "arithmetic": 23.96694214876033,
                            "mul": 18.181818181818183,
                            "bitwise": 57.85123966942148
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "msvc_O1": {
                    "expr": "(~((((~a & c) * (~c & a) - (((~a & c) * (~c & a) + (a | c) * (a & c) | ~c) * 2 + 2)) - c) + (a | c) * (a & c) & ~a) + a & c) * (((((~a & c) * (~c & a) - (((~a & c) * (~c & a) + (a | c) * (a & c) | ~c) * 2 + 2)) - c) + (a | c) * (a & c) & ~a) + a & ~c) + (((((~a & c) * (~c & a) - (((~a & c) * (~c & a) + (a | c) * (a & c) | ~c) * 2 + 2)) - c) + (a | c) * (a & c) & ~a) + a | c) * (((((~a & c) * (~c & a) - (((~a & c) * (~c & a) + (a | c) * (a & c) | ~c) * 2 + 2)) - c) + (a | c) * (a & c) & ~a) + a & c)",
                    "attributes": {
                        "numOps": 117,
                        "nestedExprLevel": 41,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 65.17857142857143,
                        "opsPercentages": {
                            "arithmetic": 21.367521367521366,
                            "mul": 18.803418803418804,
                            "bitwise": 59.82905982905983
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "clang_O3": {
                    "expr": "(a & ~c) * (~a & c) + (a | c) * (a & c)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 97.32142857142857,
                        "opsPercentages": {
                            "arithmetic": 11.11111111111111,
                            "mul": 22.22222222222222,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 22.22222222222222
                    }
                },
                "clang_default": {
                    "expr": "((c & (((((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) - c ) - (((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff) + ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) + a) * (c | (((((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) - c ) - (((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff) + ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) + a) + (c & ((((((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) - c) - (((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff) + ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) + a ^ 0xffffffff)) * ((c ^ 0xffffffff) & (((((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) - c) - (((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff) + ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) + a) ^ ((a ^ 0xffffffff) & a) * -2) + ((c & (((((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) - c ) - (((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff) + ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) + a) * (c | (((((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) - c ) - (((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff) + ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) + a) + (c & ((((((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) - c) - (((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff) + ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) + a ^ 0xffffffff)) * ((c ^ 0xffffffff) & (((((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) - c) - (((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff) + ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | c ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) + a) & ((a ^ 0xffffffff) & a) * -2) * 2",
                    "attributes": {
                        "numOps": 334,
                        "nestedExprLevel": 152,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 0.5952380952380952,
                        "opsPercentages": {
                            "arithmetic": 20.65868263473054,
                            "mul": 16.46706586826347,
                            "bitwise": 62.874251497005986
                        },
                        "percentageDAGsCancel": 19.35483870967742
                    }
                },
                "msvc_default": {
                    "expr": "((((((a & c) * (a | c) + (~c & a) * (~a & c)) - c) - (((a & c) * (a | c) + (~c & a) * (~a & c) | ~c) + ((a & c) * (a | c) + (~c & a) * (~a & c) | ~c))) - 2 & ~a) + a & c) * ((((((a & c) * (a | c) + (~c & a) * (~a & c)) - c) - (((a & c) * (a | c) + (~c & a) * (~a & c) | ~c) + ((a & c) * (a | c) + (~c & a) * (~a & c) | ~c))) - 2 & ~a) + a | c) + (~((((((a & c) * (a | c) + (~c & a) * (~a & c)) - c) - (((a & c) * (a | c) + (~c & a) * (~a & c) | ~c) + ((a & c) * (a | c) + (~c & a) * (~a & c) | ~c))) - 2 & ~a) + a) & c) * (~c & (((((a & c) * (a | c) + (~c & a) * (~a & c) ) - c) - (((a & c) * (a | c) + (~c & a) * (~a & c) | ~c) + ((a & c) * (a | c) + (~c & a) * (~a & c) | ~c))) - 2 & ~a) + a)",
                    "attributes": {
                        "numOps": 161,
                        "nestedExprLevel": 58,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 52.083333333333336,
                        "opsPercentages": {
                            "arithmetic": 20.496894409937887,
                            "mul": 16.149068322981368,
                            "bitwise": 63.35403726708074
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "gcc_O3": {
                    "expr": "(~a & c) * (~c & a) + (a | c) * (a & c)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 97.32142857142857,
                        "opsPercentages": {
                            "arithmetic": 11.11111111111111,
                            "mul": 22.22222222222222,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                }
            }
        },
        {
            "num": 154,
            "gt": {
                "expr": "((~(((c*a)*(c-(e^a)))|(~((a*e)-(e&c))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 30.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "- ((((((c & a) * (c | a) + (c & ~ a) * (~ c & a)) & ((c + ~ (((e - a) - ((e | ~ a) + (e | ~ a))) - 2)) + 1)) * (((c & a) * (c | a) + (c & ~ a) * (~ c & a)) | ((c + ~ (((e - a) - ((e | ~ a) + (e | ~ a))) - 2)) + 1)) + (((c & a) * (c | a) + (c & ~ a) * (~ c & a)) & ~ ((c + ~ (((e - a) - ((e | ~ a) + (e | ~ a))) - 2)) + 1)) * (~ ((c & a) * (c | a) + (c & ~ a) * (~ c & a)) & ((c + ~ (((e - a) - ((e | ~ a) + (e | ~ a))) - 2)) + 1))) & ~ (~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e)) + ((~ e | c) - ~ e))) + (~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e)) + ((~ e | c) - ~ e))) - 1",
                "attributes": {
                    "numOps": 124,
                    "nestedExprLevel": 55,
                    "numDAGs": 43,
                    "opsPercentages": {
                        "arithmetic": 30.64516129032258,
                        "mul": 11.29032258064516,
                        "bitwise": 58.06451612903226
                    },
                    "percentageDAGsCancel": 4.651162790697675
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((c & e) + ~((~a & e) * (~e & a) + (a & e) * (a | e)) + (((c & a) * (c | a) + (~c & a) * (~a & c) & c + (~a | e) * 2 + ~e + a + 3) * (c + (~a | e) * 2 + ~e + a + 3 | (c & a) * (c | a) + (~c & a) * (~a & c)) + (c + (~a | e) * 2 + ~e + a + 3 & ~((~c & a) * (~a & c) + (c & a) * (c | a))) * ((c & a) * (c | a) + (~c & a) * (~a & c) & -((~a | e) * 2 + ~e + a + 2 + c) - 2) & ((a & e) * (a | e) + (~a & e) * (~e & a)) - (c & e)))",
                    "attributes": {
                        "numOps": 104,
                        "nestedExprLevel": 24,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 16.129032258064516,
                        "opsPercentages": {
                            "arithmetic": 26.923076923076923,
                            "mul": 17.307692307692307,
                            "bitwise": 55.769230769230774
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "msvc_O1": {
                    "expr": "(((~e & a) * (~a & e) - ((~(~c & a) * (~a & c) + (a | c) * (a & c) & (((~a | e) * 2 + 2) - e) + a + c) * (~(((~a | e) * 2 + 2) - e) + a + c & (~c & a) * (~a & c) + (a | c) * (a & c)) + ((~c & a) * (~a & c) + (a | c) * (a & c) | (((~a | e) * 2 + 2) - e) + a + c) * ((~c & a) * (~a & c) + (a | c) * (a & c) & (((~a | e) * 2 + 2) - e) + a + c) & ~((((~e | c) - (~e & a) * (~a & e)) - (a | e) * (a & e)) + e))) - (~e | c)) + (a | e) * (a & e) + ~e",
                    "attributes": {
                        "numOps": 103,
                        "nestedExprLevel": 32,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 16.93548387096774,
                        "opsPercentages": {
                            "arithmetic": 27.184466019417474,
                            "mul": 17.475728155339805,
                            "bitwise": 55.33980582524271
                        },
                        "percentageDAGsCancel": 8.88888888888889
                    }
                },
                "clang_O3": {
                    "expr": "(~a & e) * (~e & a) + (e | a) * (e & a) - (((~a & e) * (~e & a) + (e | a) * (e & a) - (e & c) & (~(~c & a) * (~a & c) + (c | a) * (c & a) & (a + c) - e + (~a | e) * 2 + 2) * (-((a + c) - e + (~a | e) * 2) - 3 & (~c & a) * (~a & c) + (c | a) * (c & a)) + ((a + c) - e + (~a | e) * 2 + 2 | (~c & a) * (~a & c) + (c | a) * (c & a)) * ((a + c) - e + (~a | e) * 2 + 2 & (~c & a) * (~a & c) + (c | a) * (c & a))) + (e & c))",
                    "attributes": {
                        "numOps": 97,
                        "nestedExprLevel": 25,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 21.774193548387096,
                        "opsPercentages": {
                            "arithmetic": 27.835051546391753,
                            "mul": 18.556701030927837,
                            "bitwise": 53.608247422680414
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) & c + (((e - a) - ((e | a ^ 0xffffffff) + (e | a ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1) * ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) | c + (((e - a) - ((e | a ^ 0xffffffff) + (e | a ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1) + ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) & (c + (((e - a) - ((e | a ^ 0xffffffff) + (e | a ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) ^ 0xffffffff) & c + (((e - a) - ((e | a ^ 0xffffffff) + (e | a ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1) & (((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff) + ((e ^ 0xffffffff | c) - (e ^ 0xffffffff)) ^ 0xffffffff)) + ((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff) + ((e ^ 0xffffffff | c) - (e ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 124,
                        "nestedExprLevel": 50,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 30.64516129032258,
                            "mul": 11.29032258064516,
                            "bitwise": 58.06451612903226
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((((c & a) * (c | a) + (~a & c) * (~c & a) & c + 1 + ~(((e - a) - ((~a | e) + (~a | e))) - 2)) * ((c & a) * (c | a) + (~a & c) * (~c & a) | c + 1 + ~(((e - a) - ((~a | e) + (~a | e))) - 2)) + ((c & a) * (c | a) + (~a & c) * (~c & a) & ~(c + 1 + ~(((e - a) - ((~a | e) + (~a | e))) - 2))) * (~((c & a) * (c | a) + (~a & c) * (~c & a)) & c + 1 + ~(((e - a) - ((~a | e) + (~a | e))) - 2)) & ~(~((a & e) * (a | e) + (~e & a) * (~a & e)) + ((~e | c) - ~e))) + ~((a & e) * (a | e) + (~e & a) * (~a & e)) + ((~e | c) - ~e))",
                    "attributes": {
                        "numOps": 124,
                        "nestedExprLevel": 43,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 30.64516129032258,
                            "mul": 11.29032258064516,
                            "bitwise": 58.06451612903226
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "gcc_O3": {
                    "expr": "~(((-~e + a + 2 + (~a | e) * 2 + c - 2 & (~c & a) * (~a & c) + (c & a) * (c | a)) * (~(~c & a) * (~a & c) + (c & a) * (c | a) & ~e + a + 2 + (~a | e) * 2 + c + 1) + ((~c & a) * (~a & c) + (c & a) * (c | a) | ~e + a + 2 + (~a | e) * 2 + c + 1) * ((~c & a) * (~a & c) + (c & a) * (c | a) & ~e + a + 2 + (~a | e) * 2 + c + 1) & (a & e) * (a | e) + (~e & a) * (~a & e) - (c & e)) + ~(a & e) * (a | e) + (~e & a) * (~a & e) + (c & e))",
                    "attributes": {
                        "numOps": 107,
                        "nestedExprLevel": 21,
                        "numDAGs": 49,
                        "percentDecreaseByOps": 13.709677419354838,
                        "opsPercentages": {
                            "arithmetic": 28.971962616822427,
                            "mul": 16.822429906542055,
                            "bitwise": 54.20560747663551
                        },
                        "percentageDAGsCancel": 2.0408163265306123
                    }
                }
            }
        },
        {
            "num": 155,
            "gt": {
                "expr": "(((~((e&e)+(b-b)))^((b^b)+b)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 0.0,
                        "bitwise": 57.14285714285714
                    },
                    "percentageDAGsCancel": 71.42857142857143
                }
            },
            "mba": {
                "expr": "((- (((((~ e | e) + e) + 1) ^ ((b ^ b) - ((~ b & b) + (~ b & b)))) + (((((~ e | e) + e) + 1) & ((b ^ b) - ((~ b & b) + (~ b & b)))) << 1)) - 1) | ((((b | b) - (b & b)) - ~ b) - 1)) - ((- (((((~ e | e) + e) + 1) ^ ((b ^ b) - ((~ b & b) + (~ b & b)))) + (((((~ e | e) + e) + 1) & ((b ^ b) - ((~ b & b) + (~ b & b)))) << 1)) - 1) & ((((b | b) - (b & b)) - ~ b) - 1))",
                "attributes": {
                    "numOps": 71,
                    "nestedExprLevel": 41,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 40.845070422535215,
                        "mul": 0.0,
                        "bitwise": 59.154929577464785
                    },
                    "percentageDAGsCancel": 56.52173913043478
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(e ^ b)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 97.1830985915493,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 100.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~e | b) - (~e & b)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 92.95774647887323,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 0.0,
                            "bitwise": 80.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~(b ^ e)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 97.1830985915493,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 100.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - (((e ^ 0xffffffff | e) + e + 1 ^ -(((b ^ 0xffffffff) & b) + ((b ^ 0xffffffff) & b))) + ((e ^ 0xffffffff | e) + e + 1 & -(((b ^ 0xffffffff) & b) + ((b ^ 0xffffffff) & b))) * 2) | 0xffffffff - (b ^ 0xffffffff)) - (0xffffffff - (((e ^ 0xffffffff | e) + e + 1 ^ -(((b ^ 0xffffffff) & b) + ((b ^ 0xffffffff) & b))) + ((e ^ 0xffffffff | e) + e + 1 & -(((b ^ 0xffffffff) & b) + ((b ^ 0xffffffff) & b))) * 2) & 0xffffffff - (b ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 23,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 19.718309859154928,
                        "opsPercentages": {
                            "arithmetic": 40.35087719298245,
                            "mul": 3.508771929824561,
                            "bitwise": 56.14035087719298
                        },
                        "percentageDAGsCancel": 35.294117647058826
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - e | 0xffffffff - ~b) - (0xffffffff - e & 0xffffffff - ~b)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 87.32394366197182,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 0.0,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(e ^ b)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 97.1830985915493,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 100.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 156,
            "gt": {
                "expr": "(((((a&d)-((d^c)|c))&(d-d))-((d^(-c))*d)))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 10.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "((((~ ((((~ a | d) - ~ a) ^ (((((d - c) - ((d | ~ c) + (d | ~ c))) - 2) & ~ c) + c)) - ((~ ((~ a | d) - ~ a) & (((((d - c) - ((d | ~ c) + (d | ~ c))) - 2) & ~ c) + c)) + (~ ((~ a | d) - ~ a) & (((((d - c) - ((d | ~ c) + (d | ~ c))) - 2) & ~ c) + c)))) | (((d & ~ d) << 1) - (d ^ d))) + ((((~ a | d) - ~ a) ^ (((((d - c) - ((d | ~ c) + (d | ~ c))) - 2) & ~ c) + c)) - ((~ ((~ a | d) - ~ a) & (((((d - c) - ((d | ~ c) + (d | ~ c))) - 2) & ~ c) + c)) + (~ ((~ a | d) - ~ a) & (((((d - c) - ((d | ~ c) + (d | ~ c))) - 2) & ~ c) + c))))) + 1) + ~ (((((d - ~ (c - 1)) - ((d | ~ (~ (c - 1))) << 1)) - 2) & d) * ((((d - ~ (c - 1)) - ((d | ~ (~ (c - 1))) << 1)) - 2) | d) + ((((d - ~ (c - 1)) - ((d | ~ (~ (c - 1))) << 1)) - 2) & ~ d) * (~ (((d - ~ (c - 1)) - ((d | ~ (~ (c - 1))) << 1)) - 2) & d))) + 1",
                "attributes": {
                    "numOps": 165,
                    "nestedExprLevel": 90,
                    "numDAGs": 44,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 1.2121212121212122,
                        "bitwise": 58.78787878787879
                    },
                    "percentageDAGsCancel": 11.363636363636363
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(((c - 1 | d) * 2 + ~(c + d) + 2 & d) * ((d + c + (c - 1 | d) * -2) - 2 & ~d) + ((d + c + (c - 1 | d) * -2) - 2 & d) * ((d + c + (c - 1 | d) * -2) - 2 | d))",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 11,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 77.57575757575758,
                        "opsPercentages": {
                            "arithmetic": 56.75675675675676,
                            "mul": 16.216216216216218,
                            "bitwise": 27.027027027027028
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "c + ((d - ((~c | d) * 2 + 2)) - c & ~c) ^ (~a | d) + a + 1 + 2 + ~((~d & d + -2 + (c - (c * 2 - 2 | d * 2))) * (~d + -2 + (c - (c * 2 - 2 | d * 2)) & d) + (d + -2 + (c - (c * 2 - 2 | d * 2)) | d) * (d + -2 + (c - (c * 2 - 2 | d * 2)) & d)) + ~(c + ((d - ((~c | d) * 2 + 2)) - c & ~c) ^ (~a | d) + a + 1 + ~(~a | d) + a + 1 & c + ((d - ((~c | d) * 2 + 2)) - c & ~c) * -2) + ~(~a | d) + a + 1 & c + ((d - ((~c | d) * 2 + 2)) - c & ~c) * -2",
                    "attributes": {
                        "numOps": 110,
                        "nestedExprLevel": 27,
                        "numDAGs": 48,
                        "percentDecreaseByOps": 33.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 47.27272727272727,
                            "mul": 14.545454545454545,
                            "bitwise": 38.18181818181819
                        },
                        "percentageDAGsCancel": 2.083333333333333
                    }
                },
                "clang_O3": {
                    "expr": "-((1 - d + c + (c - 1 | d) * -2 & d) * (d + c + (c - 1 | d) * -2 - 2 & ~d) + (d + c + (c - 1 | d) * -2 - 2 | d) * (d + c + (c - 1 | d) * -2 - 2 & d))",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 7,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 77.57575757575758,
                        "opsPercentages": {
                            "arithmetic": 59.45945945945946,
                            "mul": 16.216216216216218,
                            "bitwise": 24.324324324324326
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((a ^ 0xffffffff | d) - (a ^ 0xffffffff) ^ (((d - c) - ((d | c ^ 0xffffffff) + (d | c ^ 0xffffffff)) ) - 2 & (c ^ 0xffffffff)) + c) - ((((a ^ 0xffffffff | d) - (a ^ 0xffffffff) ^ 0xffffffff) & (((d - c) - ((d | c ^ 0xffffffff) + (d | c ^ 0xffffffff))) - 2 & (c ^ 0xffffffff)) + c) + (((a ^ 0xffffffff | d) - (a ^ 0xffffffff) ^ 0xffffffff) & (((d - c) - ((d | c ^ 0xffffffff) + (d | c ^ 0xffffffff)) ) - 2 & (c ^ 0xffffffff)) + c)) ^ 0xffffffff | (d & (d ^ 0xffffffff)) * 2) + (((a ^ 0xffffffff | d) - (a ^ 0xffffffff) ^ (((d - c) - ((d | c ^ 0xffffffff) + (d | c ^ 0xffffffff)) ) - 2 & (c ^ 0xffffffff)) + c) - ((((a ^ 0xffffffff | d) - (a ^ 0xffffffff) ^ 0xffffffff) & (((d - c) - ((d | c ^ 0xffffffff) + (d | c ^ 0xffffffff)) ) - 2 & (c ^ 0xffffffff)) + c) + (((a ^ 0xffffffff | d) - (a ^ 0xffffffff) ^ 0xffffffff) & (((d - c) - ((d | c ^ 0xffffffff) + (d | c ^ 0xffffffff))) - 2 & (c ^ 0xffffffff)) + c))) + ((((d - (c - 1 ^ 0xffffffff)) + (d | c - 1) * -2) - 2 & d) * (((d - (c - 1 ^ 0xffffffff)) + (d | c - 1) * -2) - 2 | d) + (((d - (c - 1 ^ 0xffffffff)) + (d | c - 1) * -2) - 2 & (d ^ 0xffffffff)) * ((((d - (c - 1 ^ 0xffffffff)) + (d | c - 1) * -2) - 2 ^ 0xffffffff) & d) ^ 0xffffffff) + 2",
                    "attributes": {
                        "numOps": 158,
                        "nestedExprLevel": 64,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 4.242424242424243,
                        "opsPercentages": {
                            "arithmetic": 43.037974683544306,
                            "mul": 4.430379746835443,
                            "bitwise": 52.53164556962025
                        },
                        "percentageDAGsCancel": 14.634146341463413
                    }
                },
                "msvc_default": {
                    "expr": "~(((~a | d) - ~a ^ (((d - c) - ((~c | d) + (~c | d))) - 2 & ~c) + c) - ((~((~a | d) - ~a) & (((d - c) - ((~c | d) + (~c | d))) - 2 & ~c) + c) + (~((~a | d) - ~a) & (((d - c) - ((~c | d) + (~c | d))) - 2 & ~c) + c))) + (((~a | d) - ~a ^ (((d - c) - ((~c | d) + (~c | d))) - 2 & ~c) + c) - ((~((~a | d) - ~a) & (((d - c) - ((~c | d) + (~c | d))) - 2 & ~c) + c) + (~((~a | d) - ~a) & (((d - c) - ((~c | d) + (~c | d))) - 2 & ~c) + c))) + 2 + ~((((d - ~(c - 1)) + (c - 1 | d) * -2) - 2 & d) * (((d - ~(c - 1)) + (c - 1 | d) * -2) - 2 | d) + (((d - ~(c - 1)) + (c - 1 | d) * -2) - 2 & ~d) * (~(((d - ~(c - 1)) + (c - 1 | d) * -2) - 2) & d))",
                    "attributes": {
                        "numOps": 154,
                        "nestedExprLevel": 57,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 6.666666666666667,
                        "opsPercentages": {
                            "arithmetic": 44.15584415584416,
                            "mul": 3.896103896103896,
                            "bitwise": 51.94805194805194
                        },
                        "percentageDAGsCancel": 2.631578947368421
                    }
                },
                "gcc_O3": {
                    "expr": "-((c - 1 | d * 2 + 2 + ~(d + c) & d) * (~d & (d + c + c - 1 | d * -2) - 2) + ((d + c + c - 1 | d * -2) - 2 | d) * ((d + c + c - 1 | d * -2) - 2 & d))",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 7,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 77.57575757575758,
                        "opsPercentages": {
                            "arithmetic": 56.75675675675676,
                            "mul": 16.216216216216218,
                            "bitwise": 27.027027027027028
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 157,
            "gt": {
                "expr": "(((-((c-c)|((c+c)|c)))&(-((d*d)+c))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 11.11111111111111,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "(~ (~ (((((c + ~ c) + 1) & ~ ((((c ^ c) + ((c & c) << 1)) & ~ c) + c)) + ((((c ^ c) + ((c & c) << 1)) & ~ c) + c)) - 1)) | (~ ((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) - ~ c) - 1) + 1)) - ~ (~ (((((c + ~ c) + 1) & ~ ((((c ^ c) + ((c & c) << 1)) & ~ c) + c)) + ((((c ^ c) + ((c & c) << 1)) & ~ c) + c)) - 1))",
                "attributes": {
                    "numOps": 62,
                    "nestedExprLevel": 35,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 33.87096774193548,
                        "mul": 3.225806451612903,
                        "bitwise": 62.903225806451616
                    },
                    "percentageDAGsCancel": 31.03448275862069
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(c + (c * 2 & ~c)) & ~c + ~(d * d) + 2",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 82.25806451612904,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 18.181818181818183,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((-(d * d + c) | c + -1 + c * 2 & ~c) - c * 2 & ~c) - c) + 1",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 5,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 74.19354838709677,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 18.75,
                            "bitwise": 31.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-((c * 2 & ~c) + c) & -(d * d + c)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 85.48387096774194,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 22.22222222222222,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c + (c ^ 0xffffffff) + 1 & ((c * 2 & (c ^ 0xffffffff)) + c ^ 0xffffffff)) + (c * 2 & (c ^ 0xffffffff)) + c) - 1 | (((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)) - (c ^ 0xffffffff)) - 1 ^ 0xffffffff) + 1) - ((c + (c ^ 0xffffffff) + 1 & ((c * 2 & (c ^ 0xffffffff)) + c ^ 0xffffffff)) + (c * 2 & (c ^ 0xffffffff)) + c + -1)",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 19,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 27.419354838709676,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 13.333333333333334,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 16.0
                    }
                },
                "msvc_default": {
                    "expr": "(((c * 2 & ~c) - 1) + (c + 1 + ~c & ~((c * 2 & ~c) + c)) + c | ~((d * d - ~c) - 1) + 1) - (((c * 2 & ~c) - 1) + (c + 1 + ~c & ~((c * 2 & ~c) + c)) + c)",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 11,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 38.70967741935484,
                        "opsPercentages": {
                            "arithmetic": 42.10526315789473,
                            "mul": 13.157894736842104,
                            "bitwise": 44.73684210526316
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "gcc_O3": {
                    "expr": "~c + 2 + ~(d * d) & -((c * 2 & ~c) + c)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 82.25806451612904,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 18.181818181818183,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 158,
            "gt": {
                "expr": "((((d&(-e))|(d*e))&(e^(e|d))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 14.285714285714285,
                        "mul": 14.285714285714285,
                        "bitwise": 71.42857142857143
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ (((((~ d | ~ (e - 1)) + d) + 1) & ~ ((d & e) * (d | e) + (d & ~ e) * (~ d & e))) + ((d & e) * (d | e) + (d & ~ e) * (~ d & e))) | ((e | (((e + d) + 1) + ((- e - 1) | (- d - 1)))) - (e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))))) - ~ (((((~ d | ~ (e - 1)) + d) + 1) & ~ ((d & e) * (d | e) + (d & ~ e) * (~ d & e))) + ((d & e) * (d | e) + (d & ~ e) * (~ d & e)))",
                "attributes": {
                    "numOps": 77,
                    "nestedExprLevel": 35,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 36.36363636363637,
                        "mul": 10.38961038961039,
                        "bitwise": 53.246753246753244
                    },
                    "percentageDAGsCancel": 3.225806451612903
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~d & e) * (~e & d) + (d & e) * (d | e) + (d + (~d | -e) + 1 & ~((~d & e) * (~e & d) + (d & e) * (d | e))) & (~(e & d) + d + e + 1 ^ e)",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 9,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 57.14285714285714,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 12.121212121212121,
                            "bitwise": 60.60606060606061
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "msvc_O1": {
                    "expr": "(d | e) * (d & e) + 1 + (((d - (d & e)) + e | e) - ((d - (d & e)) + e & e) | ~(d + 1 + (-e | ~d) & ~((d | e) * (d & e) + (~e & d) * (~d & e)) + (~e & d) * (~d & e) + (d | e) * (d & e))) + d + 1 + (-e | ~d) & ~((d | e) * (d & e) + (~e & d) * (~d & e)) + (~e & d) * (~d & e)",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 17,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 15.584415584415584,
                        "opsPercentages": {
                            "arithmetic": 29.230769230769234,
                            "mul": 12.307692307692308,
                            "bitwise": 58.46153846153847
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_O3": {
                    "expr": "(~(~d & e) * (~e & d) + (e | d) * (e & d) & d + (-e | ~d) + 1) + (~d & e) * (~e & d) + (e | d) * (e & d) & ~e & d",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 62.33766233766234,
                        "opsPercentages": {
                            "arithmetic": 20.689655172413794,
                            "mul": 13.793103448275861,
                            "bitwise": 65.51724137931035
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d ^ 0xffffffff | e - 1 ^ 0xffffffff) + d + 1 & ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e) ^ 0xffffffff)) + (d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e) ^ 0xffffffff | (e | e + d + 1 + (0xffffffff - e | 0xffffffff - d)) - (e & e + d + 1 + (0xffffffff - e | 0xffffffff - d))) - (((d ^ 0xffffffff | e - 1 ^ 0xffffffff) + d + 1 & ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e) ^ 0xffffffff)) + (d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 73,
                        "nestedExprLevel": 22,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 5.194805194805195,
                        "opsPercentages": {
                            "arithmetic": 32.87671232876712,
                            "mul": 10.95890410958904,
                            "bitwise": 56.16438356164384
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "msvc_default": {
                    "expr": "(~(((~d | ~(e - 1)) + 1 + d & ~((d & e) * (d | e) + (~e & d) * (~d & e))) + (d & e) * (d | e) + (~e & d) * (~d & e)) | (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | e) - (e + d + 1 + (0xffffffff - e | 0xffffffff - d) & e)) - ~(((~d | ~(e - 1)) + 1 + d & ~((d & e) * (d | e) + (~e & d) * (~d & e) )) + (d & e) * (d | e) + (~e & d) * (~d & e))",
                    "attributes": {
                        "numOps": 73,
                        "nestedExprLevel": 20,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 5.194805194805195,
                        "opsPercentages": {
                            "arithmetic": 32.87671232876712,
                            "mul": 10.95890410958904,
                            "bitwise": 56.16438356164384
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "gcc_O3": {
                    "expr": "(d + 1 + (-e | ~d) & ~(~e & d) * (~d & e) + (e | d) * (e & d)) + (~e & d) * (~d & e) + (e | d) * (e & d) & ((d - (e & d)) + e ^ e)",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 9,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 59.74025974025974,
                        "opsPercentages": {
                            "arithmetic": 25.806451612903224,
                            "mul": 12.903225806451612,
                            "bitwise": 61.29032258064516
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                }
            }
        },
        {
            "num": 159,
            "gt": {
                "expr": "((((c^b)+a)^((c|c)-(b+c))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "((((((c - b) - ((c | ~ b) + (c | ~ b))) - 2) - ~ a) - 1) | ((((c & ~ c) + c) & ~ (((b ^ ~ c) + ((b | c) << 1)) + 1)) - (~ ((c & ~ c) + c) & (((b ^ ~ c) + ((b | c) << 1)) + 1)))) - ((((((c - b) - ((c | ~ b) + (c | ~ b))) - 2) - ~ a) - 1) & ((((c & ~ c) + c) & ~ (((b ^ ~ c) + ((b | c) << 1)) + 1)) - (~ ((c & ~ c) + c) & (((b ^ ~ c) + ((b | c) << 1)) + 1))))",
                "attributes": {
                    "numOps": 71,
                    "nestedExprLevel": 38,
                    "numDAGs": 25,
                    "opsPercentages": {
                        "arithmetic": 38.028169014084504,
                        "mul": 0.0,
                        "bitwise": 61.97183098591549
                    },
                    "percentageDAGsCancel": 8.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((c ^ b) + (b | c) * -2) - 1 & c) - (~c & (b | c) * 2 + ~(c ^ b) + 1) ^ (((c - b) + (~b | c) * -2) - ~a) - 3",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 9,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 63.38028169014085,
                        "opsPercentages": {
                            "arithmetic": 42.30769230769231,
                            "mul": 11.538461538461538,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "msvc_O1": {
                    "expr": "((~(~c ^ b) + (b | c) * 2 + 1 & c) - ((~c ^ b) + (b | c) * 2 + 1 & ~c) | ((a - ((~b | c) * 2 + 2)) - b) + c) - ((~(~c ^ b) + (b | c) * 2 + 1 & c) - ((~c ^ b) + (b | c) * 2 + 1 & ~c) & ((a - ((~b | c) * 2 + 2)) - b) + c)",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 18,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 28.169014084507044,
                        "opsPercentages": {
                            "arithmetic": 37.254901960784316,
                            "mul": 11.76470588235294,
                            "bitwise": 50.98039215686274
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "clang_O3": {
                    "expr": "(-(~c ^ b + (b | c) * 2) - 2 & c) - (~c ^ b + (b | c) * 2 + 1 & ~c) ^ ((a - b) + c + (~b | c) * -2) - 2",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 6,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 63.38028169014085,
                        "opsPercentages": {
                            "arithmetic": 42.30769230769231,
                            "mul": 11.538461538461538,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((c - b) - ((c | b ^ 0xffffffff) + (c | b ^ 0xffffffff))) - (a ^ 0xffffffff)) - 3 | ((c & (c ^ 0xffffffff)) + c & ((b ^ c ^ 0xffffffff) + (b | c) * 2 + 1 ^ 0xffffffff)) - (((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) & (b ^ c ^ 0xffffffff) + (b | c) * 2 + 1)) - ((((c - b) - ((c | b ^ 0xffffffff) + (c | b ^ 0xffffffff))) - (a ^ 0xffffffff)) - 3 & ((c & (c ^ 0xffffffff)) + c & ((b ^ c ^ 0xffffffff) + (b | c) * 2 + 1 ^ 0xffffffff)) - (((c & (c ^ 0xffffffff)) + c ^ 0xffffffff) & (b ^ c ^ 0xffffffff) + (b | c) * 2 + 1))",
                    "attributes": {
                        "numOps": 69,
                        "nestedExprLevel": 28,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 2.8169014084507045,
                        "opsPercentages": {
                            "arithmetic": 36.231884057971016,
                            "mul": 5.797101449275362,
                            "bitwise": 57.971014492753625
                        },
                        "percentageDAGsCancel": 16.0
                    }
                },
                "msvc_default": {
                    "expr": "((((c - b) - ((~b | c) + (~b | c))) - ~a) - 3 | (c & ~((~c ^ b) + 1 + (b | c) * 2)) - (~c & (~c ^ b) + 1 + (b | c) * 2)) - ((((c - b) - ((~b | c) + (~b | c))) - ~a) - 3 & (c & ~((~c ^ b) + 1 + (b | c) * 2)) - (~c & (~c ^ b) + 1 + (b | c) * 2))",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 21,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 19.718309859154928,
                        "opsPercentages": {
                            "arithmetic": 36.84210526315789,
                            "mul": 7.017543859649122,
                            "bitwise": 56.14035087719298
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(c - b) + (~b | c) * -2 + -2 + a ^ (((c ^ b) + (c | b) * -2) - 1 & c) - ((c | b) * 2 - (c ^ b) & ~c)",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 7,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 66.19718309859155,
                        "opsPercentages": {
                            "arithmetic": 45.83333333333333,
                            "mul": 12.5,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 160,
            "gt": {
                "expr": "((((e&(~a))|(b-a))|(~((e|b)-e))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "((((((e | a) - a) + (((b & ~ a) << 1) - (b ^ a))) + 1) + ((- ((e | a) - a) - 1) | (- (((b & ~ a) << 1) - (b ^ a)) - 1))) & ~ (~ (((e + b) + 1) + ((- e - 1) | (- b - 1))) + e)) + (~ (((e + b) + 1) + ((- e - 1) | (- b - 1))) + e)",
                "attributes": {
                    "numOps": 45,
                    "nestedExprLevel": 26,
                    "numDAGs": 28,
                    "opsPercentages": {
                        "arithmetic": 62.22222222222222,
                        "mul": 0.0,
                        "bitwise": 37.77777777777778
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(e & b) + (-1 - b) + ((~a & e) + ((~a & b) * 2 - (b ^ a)) + 1 + (((b ^ a) + (~a & b) * -2) - 1 | ~e | a) & ~((e & b) + (-1 - b)))",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 10,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 31.11111111111111,
                        "opsPercentages": {
                            "arithmetic": 45.16129032258064,
                            "mul": 6.451612903225806,
                            "bitwise": 48.38709677419355
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "msvc_O1": {
                    "expr": "(((((((a ^ b) + (~a & b) * -2) - 1 | (a - (a | e)) - 1) + (~a & b) * 2) - (a ^ b) ) - a) + (a | e) + 1 & ~(~((b - (b & e)) + e) + e)) + ~((b - (b & e)) + e) + e",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 17,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 24.444444444444443,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 5.88235294117647,
                            "bitwise": 44.11764705882353
                        },
                        "percentageDAGsCancel": 11.538461538461538
                    }
                },
                "clang_O3": {
                    "expr": "(((~a & b) * 2 - (b ^ a) | ~a & e) & (b | e) - e) + ~(b | e) + e",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 5,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 26.666666666666668,
                            "mul": 6.666666666666667,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "clang_default": {
                    "expr": "(((e | a) - a) + ((b & (a ^ 0xffffffff)) * 2 - (b ^ a)) + 1 + (0xffffffff - ((e | a) - a) | 0xffffffff - ((b & (a ^ 0xffffffff)) * 2 - (b ^ a))) & ((e + b + 1 + (0xffffffff - e | 0xffffffff - b) ^ 0xffffffff) + e ^ 0xffffffff)) + (e + b + 1 + (0xffffffff - e | 0xffffffff - b) ^ 0xffffffff) + e",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 15,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 13.333333333333334,
                        "opsPercentages": {
                            "arithmetic": 56.41025641025641,
                            "mul": 5.128205128205128,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "msvc_default": {
                    "expr": "(((e | a) - a) + ((~a & b) * 2 - (b ^ a)) + 1 + (0xffffffff - ((e | a) - a) | 0xffffffff - ((~a & b) * 2 - (b ^ a))) & ~(~(e + b + 1 + (0xffffffff - e | 0xffffffff - b)) + e)) + e + ~(e + b + 1 + (0xffffffff - e | 0xffffffff - b))",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 13,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 13.333333333333334,
                        "opsPercentages": {
                            "arithmetic": 56.41025641025641,
                            "mul": 5.128205128205128,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~e | a | ((a ^ b) + ~a & b * -2) - 1) + (~a & e) + 1 + (~a & b * 2 - (a ^ b)) & ~(e & b) - (b + 1)) + (e & b) - (b + 1)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 9,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 35.55555555555556,
                        "opsPercentages": {
                            "arithmetic": 41.37931034482759,
                            "mul": 6.896551724137931,
                            "bitwise": 51.724137931034484
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                }
            }
        },
        {
            "num": 161,
            "gt": {
                "expr": "((-(((a*d)*d)*a)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 75.0,
                        "bitwise": 0.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (((((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & d) * (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | d) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & ~ d) * (~ ((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & d)) & a) * (((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & d) * (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | d) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & ~ d) * (~ ((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & d)) | a) + (((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & d) * (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | d) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & ~ d) * (~ ((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & d)) & ~ a) * (~ ((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & d) * (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | d) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & ~ d) * (~ ((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & d)) & a)) - 1)",
                "attributes": {
                    "numOps": 191,
                    "nestedExprLevel": 75,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 11.518324607329843,
                        "mul": 21.98952879581152,
                        "bitwise": 66.49214659685863
                    },
                    "percentageDAGsCancel": 7.4074074074074066
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-((~((~((~a & d) * (~d & a) + (a & d) * (a | d) ) & d) * ((a & d) * (a | d) + (~a & d) * (~d & a) & ~d) + ((~a & d) * (~d & a) + (a & d) * (a | d) & d) * ((~a & d) * (~d & a) + (a & d) * (a | d) | d)) & a) * (((~a & d) * (~d & a) + (a & d) * (a | d) & d) * ((~a & d) * (~d & a) + (a & d) * (a | d) | d) + (~((~a & d) * (~d & a) + (a & d) * (a | d)) & d) * ((a & d) * (a | d) + (~a & d) * (~d & a) & ~d) & ~a) + ((~((~a & d) * (~d & a) + (a & d) * (a | d)) & d) * ((a & d) * (a | d) + (~a & d) * (~d & a) & ~d) + ((~a & d) * (~d & a) + (a & d) * (a | d) & d) * ((~a & d) * (~d & a) + (a & d) * (a | d) | d) & a) * ((~((~a & d) * (~d & a) + (a & d) * (a | d)) & d) * ((a & d) * (a | d) + (~a & d) * (~d & a) & ~d) + ((~a & d) * (~d & a) + (a & d) * (a | d) & d) * ((~a & d) * (~d & a) + (a & d) * (a | d) | d) | a))",
                    "attributes": {
                        "numOps": 190,
                        "nestedExprLevel": 59,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 0.5235602094240838,
                        "opsPercentages": {
                            "arithmetic": 11.578947368421053,
                            "mul": 22.105263157894736,
                            "bitwise": 66.3157894736842
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "msvc_O1": {
                    "expr": "-((~((~d & a) * (~a & d) + (a | d) * (a & d) & d) * ((~d & a) * (~a & d) + (a | d) * (a & d) | d) + (~(~d & a) * (~a & d) + (a | d) * (a & d) & d) * ((~d & a) * (~a & d) + (a | d) * (a & d) & ~d) & a) * (((~d & a) * (~a & d) + (a | d) * (a & d) & d) * ((~d & a) * (~a & d) + (a | d) * (a & d) | d) + (~(~d & a) * (~a & d) + (a | d) * (a & d) & d) * ((~d & a) * (~a & d) + (a | d) * (a & d) & ~d) & ~a) + (((~d & a) * (~a & d) + (a | d) * (a & d) & d) * ((~d & a) * (~a & d) + (a | d) * (a & d) | d) + (~(~d & a) * (~a & d) + (a | d) * (a & d) & d) * ((~d & a) * (~a & d) + (a | d) * (a & d) & ~d) | a) * (((~d & a) * (~a & d) + (a | d) * (a & d) & d) * ((~d & a) * (~a & d) + (a | d) * (a & d) | d) + (~(~d & a) * (~a & d) + (a | d) * (a & d) & d) * ((~d & a) * (~a & d) + (a | d) * (a & d) & ~d) & a))",
                    "attributes": {
                        "numOps": 190,
                        "nestedExprLevel": 54,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 0.5235602094240838,
                        "opsPercentages": {
                            "arithmetic": 11.578947368421053,
                            "mul": 22.105263157894736,
                            "bitwise": 66.3157894736842
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_O3": {
                    "expr": "-((~(~(~a & d) * (~d & a) + (d | a) * (d & a) & d) * (~d & (~a & d) * (~d & a) + (d | a) * (d & a)) + ((~a & d) * (~d & a) + (d | a) * (d & a) | d) * ((~a & d) * (~d & a) + (d | a) * (d & a) & d) & a) * (~a & (~(~a & d) * (~d & a) + (d | a) * (d & a) & d) * (~d & (~a & d) * (~d & a) + (d | a) * (d & a)) + ((~a & d) * (~d & a) + (d | a) * (d & a) | d) * ((~a & d) * (~d & a) + (d | a) * (d & a) & d)) + ((~(~a & d) * (~d & a) + (d | a) * (d & a) & d) * (~d & (~a & d) * (~d & a) + (d | a) * (d & a)) + ((~a & d) * (~d & a) + (d | a) * (d & a) | d) * ((~a & d) * (~d & a) + (d | a) * (d & a) & d) | a) * ((~(~a & d) * (~d & a) + (d | a) * (d & a) & d) * (~d & (~a & d) * (~d & a) + (d | a) * (d & a)) + ((~a & d) * (~d & a) + (d | a) * (d & a) | d) * ((~a & d) * (~d & a) + (d | a) * (d & a) & d) & a))",
                    "attributes": {
                        "numOps": 190,
                        "nestedExprLevel": 54,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 0.5235602094240838,
                        "opsPercentages": {
                            "arithmetic": 11.578947368421053,
                            "mul": 22.105263157894736,
                            "bitwise": 66.3157894736842
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_default": {
                    "expr": "((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) & d) * ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | d) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) & (d ^ 0xffffffff)) * (((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ 0xffffffff) & d) & a) * (((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) & d) * ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | d) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) & (d ^ 0xffffffff)) * (((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ 0xffffffff) & d) | a) + (((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) & d) * ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | d) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) & (d ^ 0xffffffff)) * (((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ 0xffffffff) & d) & (a ^ 0xffffffff)) * ((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) & d) * ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | d) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) & (d ^ 0xffffffff)) * (((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ 0xffffffff) & d) ^ 0xffffffff) & a)) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 191,
                        "nestedExprLevel": 81,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 11.518324607329843,
                            "mul": 21.98952879581152,
                            "bitwise": 66.49214659685863
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "msvc_default": {
                    "expr": "~((((a & d) * (a | d) + (~d & a) * (~a & d) & d) * ((a & d) * (a | d) + (~d & a) * (~a & d) | d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & ~d) * (~((a & d) * (a | d) + (~d & a) * (~a & d)) & d) & a) * (((a & d) * (a | d) + (~d & a) * (~a & d) & d) * ((a & d) * (a | d) + (~d & a) * (~a & d) | d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & ~d) * (~((a & d) * (a | d) + (~d & a) * (~a & d)) & d) | a) + -1 + (((a & d) * (a | d) + (~d & a) * (~a & d) & d) * ((a & d) * (a | d) + (~d & a) * (~a & d) | d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & ~d) * (~((a & d) * (a | d) + (~d & a) * (~a & d)) & d) & ~a) * (~(((a & d) * (a | d) + (~d & a) * (~a & d) & d) * ((a & d) * (a | d) + (~d & a) * (~a & d) | d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & ~d) * (~((a & d) * (a | d) + (~d & a) * (~a & d)) & d)) & a))",
                    "attributes": {
                        "numOps": 192,
                        "nestedExprLevel": 59,
                        "numDAGs": 28,
                        "percentDecreaseByOps": -0.5235602094240838,
                        "opsPercentages": {
                            "arithmetic": 11.979166666666668,
                            "mul": 21.875,
                            "bitwise": 66.14583333333334
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "gcc_O3": {
                    "expr": "-((~(~(a & d) * (a | d) + (~d & a) * (~a & d) & d) * (~d & (a & d) * (a | d) + (~d & a) * (~a & d)) + ((a & d) * (a | d) + (~d & a) * (~a & d) | d) * ((a & d) * (a | d) + (~d & a) * (~a & d) & d) & a) * (~a & (~(a & d) * (a | d) + (~d & a) * (~a & d) & d) * (~d & (a & d) * (a | d) + (~d & a) * (~a & d)) + ((a & d) * (a | d) + (~d & a) * (~a & d) | d) * ((a & d) * (a | d) + (~d & a) * (~a & d) & d)) + ((~(a & d) * (a | d) + (~d & a) * (~a & d) & d) * (~d & (a & d) * (a | d) + (~d & a) * (~a & d)) + ((a & d) * (a | d) + (~d & a) * (~a & d) | d) * ((a & d) * (a | d) + (~d & a) * (~a & d) & d) | a) * ((~(a & d) * (a | d) + (~d & a) * (~a & d) & d) * (~d & (a & d) * (a | d) + (~d & a) * (~a & d)) + ((a & d) * (a | d) + (~d & a) * (~a & d) | d) * ((a & d) * (a | d) + (~d & a) * (~a & d) & d) & a))",
                    "attributes": {
                        "numOps": 190,
                        "nestedExprLevel": 54,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 0.5235602094240838,
                        "opsPercentages": {
                            "arithmetic": 11.578947368421053,
                            "mul": 22.105263157894736,
                            "bitwise": 66.3157894736842
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 162,
            "gt": {
                "expr": "((~((e+e)+(e|d))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "- ((((e - ~ e) - 1) - ~ ((e & ~ d) + d)) - 1) - 1",
                "attributes": {
                    "numOps": 11,
                    "nestedExprLevel": 6,
                    "numDAGs": 11,
                    "opsPercentages": {
                        "arithmetic": 63.63636363636363,
                        "mul": 0.0,
                        "bitwise": 36.36363636363637
                    },
                    "percentageDAGsCancel": 9.090909090909092
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(d + (~d & e)) - ((e - ~e) + -1)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 18.181818181818183,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 0.0,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~((~d & e) + d) + e * -2",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 36.36363636363637,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 14.285714285714285,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((~d & e) + d) + e * -2",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 36.36363636363637,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 14.285714285714285,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((e - (e ^ 0xffffffff)) - ((e & (d ^ 0xffffffff)) + d ^ 0xffffffff)) + -2)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 7,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 63.63636363636363,
                            "mul": 0.0,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (((e - ~e) - ~((~d & e) + d)) + -2)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 63.63636363636363,
                            "mul": 0.0,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~((~d & e) + d) + e * -2",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 36.36363636363637,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 14.285714285714285,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 163,
            "gt": {
                "expr": "((((~(d*e))*(d^(d^(e&e))))*(d^(d&d))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 33.33333333333333,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 55.55555555555556
                }
            },
            "mba": {
                "expr": "((((- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) & (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2)) * ((- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) | (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2)) + ((- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) & ~ (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2)) * (~ (- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) & (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2))) & ((d | ((~ d | d) - ~ d)) - (d & ((~ d | d) - ~ d)))) * ((((- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) & (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2)) * ((- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) | (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2)) + ((- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) & ~ (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2)) * (~ (- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) & (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2))) | ((d | ((~ d | d) - ~ d)) - (d & ((~ d | d) - ~ d)))) + ((((- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) & (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2)) * ((- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) | (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2)) + ((- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) & ~ (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2)) * (~ (- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) & (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2))) & ~ ((d | ((~ d | d) - ~ d)) - (d & ((~ d | d) - ~ d)))) * (~ (((- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) & (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2)) * ((- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) | (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2)) + ((- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) & ~ (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2)) * (~ (- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) & (((d - (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) - ((d | ~ (((d - (((~ e | e) + e) + 1)) - ((d | ~ (((~ e | e) + e) + 1)) + (d | ~ (((~ e | e) + e) + 1)))) - 2)) << 1)) - 2))) & ((d | ((~ d | d) - ~ d)) - (d & ((~ d | d) - ~ d))))",
                "attributes": {
                    "numOps": 1001,
                    "nestedExprLevel": 574,
                    "numDAGs": 49,
                    "opsPercentages": {
                        "arithmetic": 43.256743256743256,
                        "mul": 4.195804195804196,
                        "bitwise": 52.547452547452544
                    },
                    "percentageDAGsCancel": 22.448979591836736
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) & (e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff ) * -2) * (0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) | (e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) * -2) + (0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) & ((e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) * -2 ^ 0xffffffff)) * ((0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) ^ 0xffffffff) & (e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff ) * -2) & (d | (d ^ 0xffffffff | d) - (d ^ 0xffffffff)) - (d & (d ^ 0xffffffff | d) - (d ^ 0xffffffff))) * ((0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) & (e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff ) * -2) * (0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) | (e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) * -2) + (0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) & ((e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) * -2 ^ 0xffffffff)) * ((0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) ^ 0xffffffff) & (e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff ) * -2) | (d | (d ^ 0xffffffff | d) - (d ^ 0xffffffff)) - (d & (d ^ 0xffffffff | d) - (d ^ 0xffffffff))) + ((0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) & (e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff ) * -2) * (0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) | (e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) * -2) + (0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) & ((e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) * -2 ^ 0xffffffff)) * ((0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) ^ 0xffffffff) & (e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff ) * -2) & ((d | (d ^ 0xffffffff | d) - (d ^ 0xffffffff)) - (d & (d ^ 0xffffffff | d) - (d ^ 0xffffffff)) ^ 0xffffffff)) * (((0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) & (e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) * -2) * (0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) | (e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) * -2) + (0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) & ((e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) * -2 ^ 0xffffffff)) * ((0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) ^ 0xffffffff) & (e ^ 0xffffffff | e) + e + 1 + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | ((d - ((e ^ 0xffffffff | e) + e + 1)) - ((d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff) + (d | (e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) * -2) ^ 0xffffffff) & (d | (d ^ 0xffffffff | d) - (d ^ 0xffffffff)) - (d & (d ^ 0xffffffff | d) - (d ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 937,
                        "nestedExprLevel": 267,
                        "numDAGs": 49,
                        "percentDecreaseByOps": 6.393606393606394,
                        "opsPercentages": {
                            "arithmetic": 39.38100320170758,
                            "mul": 6.189967982924227,
                            "bitwise": 54.4290288153682
                        },
                        "percentageDAGsCancel": 20.408163265306122
                    }
                },
                "msvc_default": {
                    "expr": "((0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e)) & e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d ) * -2) * (0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e)) | e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d ) * -2) + (0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e)) & ~(e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d) * -2)) * (~(0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e) )) & e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d) * -2) & ~((-~d - 1 | d) - (-~d - 1 & d))) * (~((0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e)) & e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d ) * -2) * (0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e)) | e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d) * -2) + (0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e) ) & ~(e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d) * -2)) * (~(0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e))) & e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d) * -2)) & (-~d - 1 | d) - (-~d - 1 & d)) + ((0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e)) & e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d ) * -2) * (0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e)) | e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d ) * -2) + (0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e)) & ~(e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d) * -2)) * (~(0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e) )) & e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d) * -2) & (-~d - 1 | d) - (-~d - 1 & d)) * ((0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e)) & e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d ) * -2) * (0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e)) | e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d ) * -2) + (0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e)) & ~(e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d) * -2)) * (~(0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e) )) & e + (~e | d) + (~e | d) + (~(((d - e) - ((~e | d) + (~e | d))) - 2) | d) * -2) | (-~d - 1 | d) - (-~d - 1 & d))",
                    "attributes": {
                        "numOps": 545,
                        "nestedExprLevel": 179,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 45.55444555444556,
                        "opsPercentages": {
                            "arithmetic": 33.94495412844037,
                            "mul": 10.642201834862385,
                            "bitwise": 55.41284403669725
                        },
                        "percentageDAGsCancel": 26.666666666666668
                    }
                },
                "gcc_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 164,
            "gt": {
                "expr": "((~((a+((a+a)&(b&b)))&((-a)*(a+a)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 11.11111111111111,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "- ((~ (((a ^ ~ ((~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) | (((~ b | b) + b) + 1)) - ~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1))) + ((a | ((~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) | (((~ b | b) + b) + 1)) - ~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1))) + (a | ((~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) | (((~ b | b) + b) + 1)) - ~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1))))) + 1) | (((~ a + 1) & ((a - ~ a) - 1)) * ((~ a + 1) | ((a - ~ a) - 1)) + ((~ a + 1) & ~ ((a - ~ a) - 1)) * (~ (~ a + 1) & ((a - ~ a) - 1)))) - ~ (((a ^ ~ ((~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) | (((~ b | b) + b) + 1)) - ~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1))) + ((a | ((~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) | (((~ b | b) + b) + 1)) - ~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1))) + (a | ((~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) | (((~ b | b) + b) + 1)) - ~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1))))) + 1)) - 1",
                "attributes": {
                    "numOps": 181,
                    "nestedExprLevel": 96,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 41.988950276243095,
                        "mul": 1.1049723756906076,
                        "bitwise": 56.9060773480663
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((a * 2 & b | a) * 2 + ~(a * 2 & b ^ a) + 1 & (-a & (a - ~a) - 1) * ((a - ~a) - 1 | -a) + ((a - ~a) - 1 & a - 1) * (-a & ~a * 2 + 1))",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 7,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 80.66298342541437,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 17.142857142857142,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_O1": {
                    "expr": "(~((a * 2 + 1 + (~a * 2 | b) | a) * 2 + 1 + (~a * 2 + 1 + (~a * 2 | b) ^ a)) - ((~-a & a * 2) * (-a & ~a * 2) + (-a | a * 2) * (-a & a * 2) | ~((a * 2 + 1 + (~a * 2 | b) | a) * 2 + 1 + (~a * 2 + 1 + (~a * 2 | b) ^ a)))) + -1",
                    "attributes": {
                        "numOps": 59,
                        "nestedExprLevel": 12,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 67.40331491712708,
                        "opsPercentages": {
                            "arithmetic": 33.89830508474576,
                            "mul": 27.11864406779661,
                            "bitwise": 38.983050847457626
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((a - 1 & a * 2) * (~a * 2 & -a) + (a * 2 | -a) * (a * 2 & -a) & (b & a * 2 | a) * 2 - (b & a * 2 ^ a))",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 5,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 85.6353591160221,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 34.61538461538461,
                            "bitwise": 42.30769230769231
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((a ^ ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff | (b ^ 0xffffffff | b) + b + 1) - ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff) ^ 0xffffffff) + (a | ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff | (b ^ 0xffffffff | b) + b + 1) - ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff)) + (a | ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff | (b ^ 0xffffffff | b) + b + 1) - ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff)) + 1 ^ 0xffffffff | ((a ^ 0xffffffff) + 1 & (a - (a ^ 0xffffffff)) - 1) * ((a ^ 0xffffffff) + 1 | (a - (a ^ 0xffffffff)) - 1) + ((a ^ 0xffffffff) + 1 & ((a - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) * (((a ^ 0xffffffff) + 1 ^ 0xffffffff) & (a - (a ^ 0xffffffff)) - 1)) - ((a ^ ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff | (b ^ 0xffffffff | b) + b + 1) - ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff) ^ 0xffffffff ) + (a | ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff | (b ^ 0xffffffff | b) + b + 1) - ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff)) + (a | ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff | (b ^ 0xffffffff | b) + b + 1) - ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff)) + 1 ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 157,
                        "nestedExprLevel": 39,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 13.259668508287293,
                        "opsPercentages": {
                            "arithmetic": 40.76433121019109,
                            "mul": 8.9171974522293,
                            "bitwise": 50.318471337579616
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((~((~((~(a * 2) | b) - ~(a * 2)) ^ a) + 1 + ((~(a * 2) | b) - ~(a * 2) | a) + ((~(a * 2) | b) - ~(a * 2) | a)) | (~a + 1 & (a - ~a) - 1) * (~a + 1 | (a - ~a) - 1) + (~a + 1 & ~((a - ~a) - 1)) * (~(~a + 1) & (a - ~a) - 1)) - ~((~((~(a * 2) | b) - ~(a * 2)) ^ a) + 1 + ((~(a * 2) | b) - ~(a * 2) | a) + ((~(a * 2) | b) - ~(a * 2) | a)))",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 31,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 53.03867403314917,
                        "opsPercentages": {
                            "arithmetic": 32.94117647058823,
                            "mul": 16.470588235294116,
                            "bitwise": 50.588235294117645
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "gcc_O3": {
                    "expr": "~((~a * 2 + 1 & -a) * (a - 1 & a * 2) + (-a | a * 2) * (-a & a * 2) & ~(b & a * 2 ^ a) + 1 + (b & a * 2 | a) * 2)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 5,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 83.97790055248619,
                        "opsPercentages": {
                            "arithmetic": 27.586206896551722,
                            "mul": 31.03448275862069,
                            "bitwise": 41.37931034482759
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 165,
            "gt": {
                "expr": "((-((b|((a|b)|b))^((b*(-b))|(-a)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 11.11111111111111,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (((((b & ~ ((((((a + b) + 1) + ((- a - 1) | (- b - 1))) + b) + 1) + ((- (((a + b) + 1) + ((- a - 1) | (- b - 1))) - 1) | (- b - 1)))) + ((((((a + b) + 1) + ((- a - 1) | (- b - 1))) + b) + 1) + ((- (((a + b) + 1) + ((- a - 1) | (- b - 1))) - 1) | (- b - 1)))) | (((((b & (~ b + 1)) * (b | (~ b + 1)) + (b & ~ (~ b + 1)) * (~ b & (~ b + 1))) + (~ a + 1)) + 1) + ((- ((b & (~ b + 1)) * (b | (~ b + 1)) + (b & ~ (~ b + 1)) * (~ b & (~ b + 1))) - 1) | (- (~ a + 1) - 1)))) - (((b & ~ ((((((a + b) + 1) + ((- a - 1) | (- b - 1))) + b) + 1) + ((- (((a + b) + 1) + ((- a - 1) | (- b - 1))) - 1) | (- b - 1)))) + ((((((a + b) + 1) + ((- a - 1) | (- b - 1))) + b) + 1) + ((- (((a + b) + 1) + ((- a - 1) | (- b - 1))) - 1) | (- b - 1)))) & (((((b & (~ b + 1)) * (b | (~ b + 1)) + (b & ~ (~ b + 1)) * (~ b & (~ b + 1))) + (~ a + 1)) + 1) + ((- ((b & (~ b + 1)) * (b | (~ b + 1)) + (b & ~ (~ b + 1)) * (~ b & (~ b + 1))) - 1) | (- (~ a + 1) - 1))))) - 1)",
                "attributes": {
                    "numOps": 199,
                    "nestedExprLevel": 96,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 63.31658291457286,
                        "mul": 4.0201005025125625,
                        "bitwise": 32.663316582914575
                    },
                    "percentageDAGsCancel": 9.523809523809524
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-((a - 1 | ~((b - 1 & b) * (-b & ~b) + (-b & b) * (-b | b))) + (((b - 1 & b) * (-b & ~b) + (-b & b) * (-b | b) ) - a) + 1 ^ (~((~b | (a & b) - (b + a + 1)) + b * 2 + a + ~(a & b) + 2) & b) + (~b | (a & b) - (b + a + 1)) + b * 2 + a + ~(a & b) + 2)",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 17,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 69.34673366834171,
                        "opsPercentages": {
                            "arithmetic": 49.18032786885246,
                            "mul": 9.836065573770492,
                            "bitwise": 40.98360655737705
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "msvc_O1": {
                    "expr": "(~a + 2 + (~(~~b + 1 & b) * (~b + 1 & ~b) - (~b + 1 | b) * (~b + 1 & b) | a - 1) + (~b + 1 | b) * (~b + 1 & b) + (~~b + 1 & b) * (~b + 1 & ~b) & a + 2 + (~(~a | ~b + 2 + ((-2 - ~a | ~b) - a) - b | ~b + b * 2 + a) & b) + ((-2 - ~a | ~b) - a) - b | ~b + ~a | ~b + b * 2) - (~a + 2 + (~(~~b + 1 & b) * (~b + 1 & ~b) - (~b + 1 | b) * (~b + 1 & b) | a - 1) + (~b + 1 | b) * (~b + 1 & b) + (~~b + 1 & b) * (~b + 1 & ~b) | a + 2 + (~(~a | ~b + 2 + ((-2 - ~a | ~b) - a) - b | ~b + b * 2 + a) & b) + ((-2 - ~a | ~b) - a) - b | ~b + ~a | ~b + b * 2)",
                    "attributes": {
                        "numOps": 159,
                        "nestedExprLevel": 22,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 20.100502512562816,
                        "opsPercentages": {
                            "arithmetic": 39.62264150943396,
                            "mul": 7.547169811320755,
                            "bitwise": 52.83018867924528
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "clang_O3": {
                    "expr": "-(((b - 1 & b) * (~b & -b) + (-b | b) * (-b & b) - a) + (a - 1 | ~(b - 1 & b) * (~b & -b) + (-b | b) * (-b & b)) + 1 ^ (~b + b + a + 1 + (~a | ~b) + 1 + (~b + a + 1 + (~a | ~b) | ~b) & b) + b + b + a + 1 + (~a | ~b) + 1 + (~b + a + 1 + (~a | ~b) | ~b))",
                    "attributes": {
                        "numOps": 71,
                        "nestedExprLevel": 13,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 64.321608040201,
                        "opsPercentages": {
                            "arithmetic": 47.88732394366197,
                            "mul": 5.633802816901409,
                            "bitwise": 46.478873239436616
                        },
                        "percentageDAGsCancel": 7.5
                    }
                },
                "clang_default": {
                    "expr": "(((b & (a + b * 2 + (0xffffffff - a | 0xffffffff - b) + 2 + (0xffffffff - (a + b + 1 + (0xffffffff - a | 0xffffffff - b)) | 0xffffffff - b) ^ 0xffffffff)) + a + b * 2 + (0xffffffff - a | 0xffffffff - b) + 2 + (0xffffffff - (a + b + 1 + (0xffffffff - a | 0xffffffff - b)) | 0xffffffff - b) | (b & (b ^ 0xffffffff) + 1) * (b | (b ^ 0xffffffff) + 1) + (b & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff) + 1) + (a ^ 0xffffffff) + 2 + (0xffffffff - ((b & (b ^ 0xffffffff) + 1) * (b | (b ^ 0xffffffff) + 1) + (b & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff) + 1)) | 0xffffffff - ((a ^ 0xffffffff) + 1))) - ((b & (a + b * 2 + (0xffffffff - a | 0xffffffff - b) + 2 + (0xffffffff - (a + b + 1 + (0xffffffff - a | 0xffffffff - b)) | 0xffffffff - b) ^ 0xffffffff)) + a + b * 2 + (0xffffffff - a | 0xffffffff - b) + 2 + (0xffffffff - (a + b + 1 + (0xffffffff - a | 0xffffffff - b)) | 0xffffffff - b) & (b & (b ^ 0xffffffff) + 1) * (b | (b ^ 0xffffffff) + 1) + (b & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff) + 1) + (a ^ 0xffffffff) + 2 + (0xffffffff - ((b & (b ^ 0xffffffff) + 1) * (b | (b ^ 0xffffffff) + 1) + (b & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff) + 1)) | 0xffffffff - ((a ^ 0xffffffff) + 1)))) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 165,
                        "nestedExprLevel": 49,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 17.08542713567839,
                        "opsPercentages": {
                            "arithmetic": 53.333333333333336,
                            "mul": 7.2727272727272725,
                            "bitwise": 39.39393939393939
                        },
                        "percentageDAGsCancel": 4.651162790697675
                    }
                },
                "msvc_default": {
                    "expr": "~((((~((0xffffffff - a | 0xffffffff - b) + a + b * 2 + 2 + (0xffffffff - (a + b + 1 + (0xffffffff - a | 0xffffffff - b)) | 0xffffffff - b)) & b) + (0xffffffff - a | 0xffffffff - b) + a + b * 2 + 2 + (0xffffffff - (a + b + 1 + (0xffffffff - a | 0xffffffff - b)) | 0xffffffff - b) | (~b + 1 & b) * (~b + 1 | b) + (~(~b + 1) & b) * (~b & ~b + 1) + ~a + 2 + (0xffffffff - ((~b + 1 & b) * (~b + 1 | b) + (~(~b + 1) & b) * (~b & ~b + 1)) | 0xffffffff - (~a + 1))) - ((~((0xffffffff - a | 0xffffffff - b) + a + b * 2 + 2 + (0xffffffff - (a + b + 1 + (0xffffffff - a | 0xffffffff - b)) | 0xffffffff - b)) & b) + (0xffffffff - a | 0xffffffff - b) + a + b * 2 + 2 + (0xffffffff - (a + b + 1 + (0xffffffff - a | 0xffffffff - b)) | 0xffffffff - b) & (~b + 1 & b) * (~b + 1 | b) + (~(~b + 1) & b) * (~b & ~b + 1) + ~a + 2 + (0xffffffff - ((~b + 1 & b) * (~b + 1 | b) + (~(~b + 1) & b) * (~b & ~b + 1)) | 0xffffffff - (~a + 1)))) - 1)",
                    "attributes": {
                        "numOps": 165,
                        "nestedExprLevel": 36,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 17.08542713567839,
                        "opsPercentages": {
                            "arithmetic": 53.333333333333336,
                            "mul": 7.2727272727272725,
                            "bitwise": 39.39393939393939
                        },
                        "percentageDAGsCancel": 2.3255813953488373
                    }
                },
                "gcc_O3": {
                    "expr": "-((~(b - 1 & b) * (~b & -b) + (-b | b) * (-b & b) | a - 1) + 1 + ((b - 1 & b) * (~b & -b) + (-b | b) * (-b & b) - a) ^ (~(a + 1 + b - (a & b)) + b + ((a & b) - a + 1 + b | ~b) & b) + (a + 1 + b - (a & b)) + b + ((a & b) - a + 1 + b | ~b))",
                    "attributes": {
                        "numOps": 59,
                        "nestedExprLevel": 14,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 70.35175879396985,
                        "opsPercentages": {
                            "arithmetic": 54.23728813559322,
                            "mul": 6.779661016949152,
                            "bitwise": 38.983050847457626
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 166,
            "gt": {
                "expr": "((((b&((e|b)^(e^e)))&(b&b))^((b|a)+a)))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 11.11111111111111,
                        "mul": 0.0,
                        "bitwise": 88.88888888888889
                    },
                    "percentageDAGsCancel": 44.44444444444444
                }
            },
            "mba": {
                "expr": "((((~ (((~ b | (((((e & ~ b) + b) - (((e - e) - ((e | ~ e) << 1)) - 2)) - ((((e & ~ b) + b) | ~ (((e - e) - ((e | ~ e) << 1)) - 2)) + (((e & ~ b) + b) | ~ (((e - e) - ((e | ~ e) << 1)) - 2)))) - 2)) + b) + 1) | ((~ b | b) - ~ b)) - ~ (((~ b | (((((e & ~ b) + b) - (((e - e) - ((e | ~ e) << 1)) - 2)) - ((((e & ~ b) + b) | ~ (((e - e) - ((e | ~ e) << 1)) - 2)) + (((e & ~ b) + b) | ~ (((e - e) - ((e | ~ e) << 1)) - 2)))) - 2)) + b) + 1)) - (((((b & ~ a) + a) | a) + (((b & ~ a) + a) | a)) - (((b & ~ a) + a) ^ a))) - ((((~ (((~ b | (((((e & ~ b) + b) - (((e - e) - ((e | ~ e) << 1)) - 2)) - ((((e & ~ b) + b) | ~ (((e - e) - ((e | ~ e) << 1)) - 2)) + (((e & ~ b) + b) | ~ (((e - e) - ((e | ~ e) << 1)) - 2)))) - 2)) + b) + 1) | ((~ b | b) - ~ b)) - ~ (((~ b | (((((e & ~ b) + b) - (((e - e) - ((e | ~ e) << 1)) - 2)) - ((((e & ~ b) + b) | ~ (((e - e) - ((e | ~ e) << 1)) - 2)) + (((e & ~ b) + b) | ~ (((e - e) - ((e | ~ e) << 1)) - 2)))) - 2)) + b) + 1)) | ~ (((((b & ~ a) + a) | a) + (((b & ~ a) + a) | a)) - (((b & ~ a) + a) ^ a))) << 1)) - 2",
                "attributes": {
                    "numOps": 206,
                    "nestedExprLevel": 112,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 43.203883495145625,
                        "mul": 0.0,
                        "bitwise": 56.79611650485437
                    },
                    "percentageDAGsCancel": 19.444444444444446
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b + (~b | b + (~b & e)) + 1 & b) - ((a + (~a & b) | a) * 2 - (a + (~a & b) ^ a))) + ((a + (~a & b) ^ a) + ~((a + (~a & b) | a) * 2) | b + (~b | b + (~b & e)) + 1 & b) * -2 + -2",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 13,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 78.64077669902912,
                        "opsPercentages": {
                            "arithmetic": 38.63636363636363,
                            "mul": 6.8181818181818175,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_O1": {
                    "expr": "b + ((~(b + 1 + (~b & e) + b | ~b) | b) - ((~(b + 1 + (~b & e) + b | ~b) * 2 | b * 2) + ~(b + 1 + (~b & e) + b | ~b) * -2 | ~((~a & b) + a | a * 2 - (~a & b) + a ^ a) * 2)) + (~a & b) + a | a * -2 + (~a & b) + a ^ a + (~b & e) + b | ~b",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 12,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 68.93203883495146,
                        "opsPercentages": {
                            "arithmetic": 35.9375,
                            "mul": 9.375,
                            "bitwise": 54.6875
                        },
                        "percentageDAGsCancel": 8.108108108108109
                    }
                },
                "clang_O3": {
                    "expr": "(b + ((e & ~b) + b | ~b) + 1 & b - ((~a & b) + a | a) * 2 - ((~a & b) + a ^ a)) + (~((~a & b) + a | a) * 2 - ((~a & b) + a ^ a) | b + ((e & ~b) + b | ~b) + 1 & b) * -2 + -2",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 10,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 78.64077669902912,
                        "opsPercentages": {
                            "arithmetic": 38.63636363636363,
                            "mul": 6.8181818181818175,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "clang_default": {
                    "expr": "((((b ^ 0xffffffff | ((((e & (b ^ 0xffffffff)) + b) - ((e | e ^ 0xffffffff) * -2 + -2)) - (((e & (b ^ 0xffffffff)) + b | (e | e ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) + ((e & (b ^ 0xffffffff)) + b | (e | e ^ 0xffffffff) * -2 - 2 ^ 0xffffffff))) - 2) + b + 1 ^ 0xffffffff | (b ^ 0xffffffff | b) - (b ^ 0xffffffff)) - ((b ^ 0xffffffff | ((((e & (b ^ 0xffffffff)) + b) - ((e | e ^ 0xffffffff) * -2 + -2)) - (((e & (b ^ 0xffffffff)) + b | (e | e ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) + ((e & (b ^ 0xffffffff)) + b | (e | e ^ 0xffffffff) * -2 - 2 ^ 0xffffffff))) - 2) + b + 1 ^ 0xffffffff) ) - ((((b & (a ^ 0xffffffff)) + a | a) + ((b & (a ^ 0xffffffff)) + a | a)) - ((b & (a ^ 0xffffffff)) + a ^ a))) + (((b ^ 0xffffffff | ((((e & (b ^ 0xffffffff)) + b) - ((e | e ^ 0xffffffff) * -2 + -2)) - (((e & (b ^ 0xffffffff)) + b | (e | e ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) + ((e & (b ^ 0xffffffff)) + b | (e | e ^ 0xffffffff) * -2 - 2 ^ 0xffffffff))) - 2) + b + 1 ^ 0xffffffff | (b ^ 0xffffffff | b) - (b ^ 0xffffffff)) - ((b ^ 0xffffffff | ((((e & (b ^ 0xffffffff)) + b) - ((e | e ^ 0xffffffff) * -2 + -2)) - (((e & (b ^ 0xffffffff)) + b | (e | e ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) + ((e & (b ^ 0xffffffff)) + b | (e | e ^ 0xffffffff) * -2 - 2 ^ 0xffffffff))) - 2) + b + 1 ^ 0xffffffff) | (((b & (a ^ 0xffffffff)) + a | a) + ((b & (a ^ 0xffffffff)) + a | a)) - ((b & (a ^ 0xffffffff)) + a ^ a) ^ 0xffffffff) * -2 + -2",
                    "attributes": {
                        "numOps": 200,
                        "nestedExprLevel": 78,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 2.912621359223301,
                        "opsPercentages": {
                            "arithmetic": 41.5,
                            "mul": 6.5,
                            "bitwise": 52.0
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_default": {
                    "expr": "(((~((~b | (~b & e) + b) + 1 + b) | -~b - 1) - ~((~b | (~b & e) + b) + 1 + b)) - ((((~a & b) + a | a) + ((~a & b) + a | a)) - ((~a & b) + a ^ a))) + ((~((~b | (~b & e) + b) + 1 + b) | -~b - 1) - ~((~b | (~b & e) + b) + 1 + b) | ~((((~a & b) + a | a) + ((~a & b) + a | a)) - ((~a & b) + a ^ a))) * -2 + -2",
                    "attributes": {
                        "numOps": 78,
                        "nestedExprLevel": 25,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 62.13592233009708,
                        "opsPercentages": {
                            "arithmetic": 42.30769230769231,
                            "mul": 1.282051282051282,
                            "bitwise": 56.41025641025641
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "gcc_O3": {
                    "expr": "(b + 1 + ((e & ~b) + b | ~b) & b - (((~a & b) + a | a) * 2 - (~a & b) + a ^ a)) + (~((~a & b) + a | a) * 2 + (~a & b) + a ^ a | b + 1 + ((e & ~b) + b | ~b) & b) * -2 + -2",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 11,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 78.64077669902912,
                        "opsPercentages": {
                            "arithmetic": 38.63636363636363,
                            "mul": 6.8181818181818175,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                }
            }
        },
        {
            "num": 167,
            "gt": {
                "expr": "((~(-(-(c*(a*b))))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 7,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 40.0,
                        "bitwise": 20.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ ((c & ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) * (c | ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + (c & ~ ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) * (~ c & ((a & b) * (a | b) + (a & ~ b) * (~ a & b)))) + 1) - 1",
                "attributes": {
                    "numOps": 48,
                    "nestedExprLevel": 19,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 14.583333333333334,
                        "mul": 20.833333333333336,
                        "bitwise": 64.58333333333334
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((~a & b) * (~b & a) + (a & b) * (a | b) & ~c) * (~((~a & b) * (~b & a) + (a & b) * (a | b)) & c) + ((~a & b) * (~b & a) + (a & b) * (a | b) & c) * ((~a & b) * (~b & a) + (a & b) * (a | b) | c))",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 15,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 4.166666666666666,
                        "opsPercentages": {
                            "arithmetic": 10.869565217391305,
                            "mul": 21.73913043478261,
                            "bitwise": 67.3913043478261
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~((~c & (~b & a) * (~a & b) + (a | b) * (a & b)) * (~(~b & a) * (~a & b) + (a | b) * (a & b) & c) + ((~b & a) * (~a & b) + (a | b) * (a & b) | c) * ((~b & a) * (~a & b) + (a | b) * (a & b) & c))",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 14,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 4.166666666666666,
                        "opsPercentages": {
                            "arithmetic": 10.869565217391305,
                            "mul": 21.73913043478261,
                            "bitwise": 67.3913043478261
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "clang_O3": {
                    "expr": "~(((~b & a) * (~a & b) + (b | a) * (b & a) & ~c) * (~(~b & a) * (~a & b) + (b | a) * (b & a) & c) + ((~b & a) * (~a & b) + (b | a) * (b & a) | c) * ((~b & a) * (~a & b) + (b | a) * (b & a) & c))",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 14,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 4.166666666666666,
                        "opsPercentages": {
                            "arithmetic": 10.869565217391305,
                            "mul": 21.73913043478261,
                            "bitwise": 67.3913043478261
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_default": {
                    "expr": "(c & (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) * (c | (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) + (c & ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) ^ 0xffffffff )) * ((c ^ 0xffffffff) & (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) ^ 0xffffffff",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 19,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 4.166666666666666,
                        "opsPercentages": {
                            "arithmetic": 10.869565217391305,
                            "mul": 21.73913043478261,
                            "bitwise": 67.3913043478261
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_default": {
                    "expr": "~(((a & b) * (a | b) + (~b & a) * (~a & b) & c) * ((a & b) * (a | b) + (~b & a) * (~a & b) | c) + (~((a & b) * (a | b) + (~b & a) * (~a & b) ) & c) * (~c & (a & b) * (a | b) + (~b & a) * (~a & b)))",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 15,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 4.166666666666666,
                        "opsPercentages": {
                            "arithmetic": 10.869565217391305,
                            "mul": 21.73913043478261,
                            "bitwise": 67.3913043478261
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "gcc_O3": {
                    "expr": "~((~(~b & a) * (~a & b) + (a & b) * (a | b) & c) * (~c & (~b & a) * (~a & b) + (a & b) * (a | b)) + ((~b & a) * (~a & b) + (a & b) * (a | b) & c) * ((~b & a) * (~a & b) + (a & b) * (a | b) | c))",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 14,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 4.166666666666666,
                        "opsPercentages": {
                            "arithmetic": 10.869565217391305,
                            "mul": 21.73913043478261,
                            "bitwise": 67.3913043478261
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 168,
            "gt": {
                "expr": "(((((-d)*(~c))^d)+d))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((((~ d + 1) & (- c - 1)) * ((~ d + 1) | (- c - 1)) + ((~ d + 1) & ~ (- c - 1)) * (~ (~ d + 1) & (- c - 1))) - d) - (((((~ d + 1) & (- c - 1)) * ((~ d + 1) | (- c - 1)) + ((~ d + 1) & ~ (- c - 1)) * (~ (~ d + 1) & (- c - 1))) | ~ d) << 1)) - 2) | d) + (((((((~ d + 1) & (- c - 1)) * ((~ d + 1) | (- c - 1)) + ((~ d + 1) & ~ (- c - 1)) * (~ (~ d + 1) & (- c - 1))) - d) - (((((~ d + 1) & (- c - 1)) * ((~ d + 1) | (- c - 1)) + ((~ d + 1) & ~ (- c - 1)) * (~ (~ d + 1) & (- c - 1))) | ~ d) << 1)) - 2) & d)",
                "attributes": {
                    "numOps": 115,
                    "nestedExprLevel": 49,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 51.30434782608696,
                        "mul": 6.956521739130435,
                        "bitwise": 41.73913043478261
                    },
                    "percentageDAGsCancel": 4.761904761904762
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-d & c) * (~c & d - 1) + (-d & ~c) * (~c | -d) + (~d | (-d & ~c) * (~c | -d) + (-d & c) * (~c & d - 1)) * -2 + -2",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 6,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 69.56521739130434,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 14.285714285714285,
                            "bitwise": 45.714285714285715
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_O1": {
                    "expr": "((~~d + 1 & ~c) * (~d + 1 & c) + -2 + (((~c | ~d + 1) * (~c & ~d + 1) - (((~c | ~d + 1) * (~c & ~d + 1) + (~~d + 1 & ~c) * (~d + 1 & c)) * 2 | ~d * 2)) - d) | d) + ((~~d + 1 & ~c) * (~d + 1 & c) + -2 + (((~c | ~d + 1) * (~c & ~d + 1) - (((~c | ~d + 1) * (~c & ~d + 1) + (~~d + 1 & ~c) * (~d + 1 & c)) * 2 | ~d * 2)) - d) & d)",
                    "attributes": {
                        "numOps": 95,
                        "nestedExprLevel": 19,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 17.391304347826086,
                        "opsPercentages": {
                            "arithmetic": 30.526315789473685,
                            "mul": 12.631578947368421,
                            "bitwise": 56.84210526315789
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "clang_O3": {
                    "expr": "(d - 1 & ~c) * (-d & c) + (-d | ~c) * (-d & ~c) + (~d | (d - 1 & ~c) * (-d & c) + (-d | ~c) * (-d & ~c)) * -2 + -2",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 6,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 69.56521739130434,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 14.285714285714285,
                            "bitwise": 45.714285714285715
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "clang_default": {
                    "expr": "((((((d ^ 0xffffffff) + 1 & 0xffffffff - c) * ((d ^ 0xffffffff) + 1 | 0xffffffff - c) + ((d ^ 0xffffffff) + 1 & (0xffffffff - c ^ 0xffffffff)) * (((d ^ 0xffffffff) + 1 ^ 0xffffffff) & 0xffffffff - c)) - d) + (((d ^ 0xffffffff) + 1 & 0xffffffff - c) * ((d ^ 0xffffffff) + 1 | 0xffffffff - c) + ((d ^ 0xffffffff) + 1 & (0xffffffff - c ^ 0xffffffff)) * (((d ^ 0xffffffff) + 1 ^ 0xffffffff) & 0xffffffff - c) | d ^ 0xffffffff ) * -2) - 2 | d) + ((((((d ^ 0xffffffff) + 1 & 0xffffffff - c) * ((d ^ 0xffffffff) + 1 | 0xffffffff - c) + ((d ^ 0xffffffff) + 1 & (0xffffffff - c ^ 0xffffffff)) * (((d ^ 0xffffffff) + 1 ^ 0xffffffff) & 0xffffffff - c)) - d) + (((d ^ 0xffffffff) + 1 & 0xffffffff - c) * ((d ^ 0xffffffff) + 1 | 0xffffffff - c) + ((d ^ 0xffffffff) + 1 & (0xffffffff - c ^ 0xffffffff)) * (((d ^ 0xffffffff) + 1 ^ 0xffffffff) & 0xffffffff - c) | d ^ 0xffffffff ) * -2) - 2 & d)",
                    "attributes": {
                        "numOps": 101,
                        "nestedExprLevel": 36,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 12.173913043478262,
                        "opsPercentages": {
                            "arithmetic": 44.554455445544555,
                            "mul": 9.900990099009901,
                            "bitwise": 45.54455445544555
                        },
                        "percentageDAGsCancel": 9.523809523809524
                    }
                },
                "msvc_default": {
                    "expr": "(((((~d + 1 & 0xffffffff - c) * (~d + 1 | 0xffffffff - c) + (~d + 1 & ~(0xffffffff - c)) * (~(~d + 1) & 0xffffffff - c)) - d) + ((~d + 1 & 0xffffffff - c) * (~d + 1 | 0xffffffff - c) + (~d + 1 & ~(0xffffffff - c)) * (~(~d + 1) & 0xffffffff - c) | ~d) * -2) - 2 | d) + (((((~d + 1 & 0xffffffff - c) * (~d + 1 | 0xffffffff - c) + (~d + 1 & ~(0xffffffff - c)) * (~(~d + 1) & 0xffffffff - c)) - d) + ((~d + 1 & 0xffffffff - c) * (~d + 1 | 0xffffffff - c) + (~d + 1 & ~(0xffffffff - c)) * (~(~d + 1) & 0xffffffff - c) | ~d) * -2) - 2 & d)",
                    "attributes": {
                        "numOps": 101,
                        "nestedExprLevel": 24,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 12.173913043478262,
                        "opsPercentages": {
                            "arithmetic": 44.554455445544555,
                            "mul": 9.900990099009901,
                            "bitwise": 45.54455445544555
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(d - 1 & ~c) * (c & -d) + (-d & ~c) * (-d | ~c) + (~d | (d - 1 & ~c) * (c & -d) + (-d & ~c) * (-d | ~c)) * -2 + -2",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 6,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 69.56521739130434,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 14.285714285714285,
                            "bitwise": 45.714285714285715
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 169,
            "gt": {
                "expr": "((-(((c+(e+e))|(c^c))+((-a)-(e^(~a))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 0.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "~ ((((((((c ^ (((e ^ ~ e) + ((e | e) << 1)) + 1)) + ((c & (((e ^ ~ e) + ((e | e) << 1)) + 1)) << 1)) + ((c | c) - (c & c))) + 1) + ((- ((c ^ (((e ^ ~ e) + ((e | e) << 1)) + 1)) + ((c & (((e ^ ~ e) + ((e | e) << 1)) + 1)) << 1)) - 1) | (- ((c | c) - (c & c)) - 1))) | ((~ (a - 1) & ~ (((e - (- a - 1)) - ((e | ~ (- a - 1)) + (e | ~ (- a - 1)))) - 2)) - (~ (~ (a - 1)) & (((e - (- a - 1)) - ((e | ~ (- a - 1)) + (e | ~ (- a - 1)))) - 2)))) + ((((((c ^ (((e ^ ~ e) + ((e | e) << 1)) + 1)) + ((c & (((e ^ ~ e) + ((e | e) << 1)) + 1)) << 1)) + ((c | c) - (c & c))) + 1) + ((- ((c ^ (((e ^ ~ e) + ((e | e) << 1)) + 1)) + ((c & (((e ^ ~ e) + ((e | e) << 1)) + 1)) << 1)) - 1) | (- ((c | c) - (c & c)) - 1))) | ((~ (a - 1) & ~ (((e - (- a - 1)) - ((e | ~ (- a - 1)) + (e | ~ (- a - 1)))) - 2)) - (~ (~ (a - 1)) & (((e - (- a - 1)) - ((e | ~ (- a - 1)) + (e | ~ (- a - 1)))) - 2))))) - ((((((c ^ (((e ^ ~ e) + ((e | e) << 1)) + 1)) + ((c & (((e ^ ~ e) + ((e | e) << 1)) + 1)) << 1)) + ((c | c) - (c & c))) + 1) + ((- ((c ^ (((e ^ ~ e) + ((e | e) << 1)) + 1)) + ((c & (((e ^ ~ e) + ((e | e) << 1)) + 1)) << 1)) - 1) | (- ((c | c) - (c & c)) - 1))) ^ ((~ (a - 1) & ~ (((e - (- a - 1)) - ((e | ~ (- a - 1)) + (e | ~ (- a - 1)))) - 2)) - (~ (~ (a - 1)) & (((e - (- a - 1)) - ((e | ~ (- a - 1)) + (e | ~ (- a - 1)))) - 2))))) + 1",
                "attributes": {
                    "numOps": 256,
                    "nestedExprLevel": 145,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 50.390625,
                        "mul": 0.0,
                        "bitwise": 49.609375
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((-a & (e | a) * 2 + ~e + ~a + 2) - (a - 1 & ((e - ~a) + (e | a) * -2) - 2) ^ (e * 2 ^ c) + (e * 2 & c) * 2) + ~(((-a & (e | a) * 2 + ~e + ~a + 2) - (a - 1 & ((e - ~a) + (e | a) * -2) - 2) | (e * 2 ^ c) + (e * 2 & c) * 2) * 2) + 1",
                    "attributes": {
                        "numOps": 56,
                        "nestedExprLevel": 14,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 78.125,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 19.642857142857142,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "msvc_O1": {
                    "expr": "((e * 2 ^ c) + (c * 2 & e << 2) ^ ~(e + -1 + a + (a | e) * -2 | a - 1) - (e + -1 + a + (a | e) * -2 & a - 1)) + ((e * 2 ^ c) + (c * 2 & e << 2) | ~(e + -1 + a + (a | e) * -2 | a - 1) - (e + -1 + a + (a | e) * -2 & a - 1)) * -2",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 10,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 77.734375,
                        "opsPercentages": {
                            "arithmetic": 52.63157894736842,
                            "mul": 15.789473684210526,
                            "bitwise": 31.57894736842105
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((-a + e + (e | a) * -2 & -a) - (a + e + (e | a) * -2 - 1 & a - 1) ^ (e * 2 ^ c) + (e * 2 & c) * 2) + ((-a + e + (e | a) * -2 & -a) - (a + e + (e | a) * -2 - 1 & a - 1) | (e * 2 ^ c) + (e * 2 & c) * 2) * -2",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 10,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 80.078125,
                        "opsPercentages": {
                            "arithmetic": 50.98039215686274,
                            "mul": 21.568627450980394,
                            "bitwise": 27.450980392156865
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((c ^ (e ^ e ^ 0xffffffff) + e * 2 + 1) + (c & (e ^ e ^ 0xffffffff) + e * 2 + 1) * 2 | ((a - 1 ^ 0xffffffff) & (((e - (-1 - a)) - ((e | 0xffffffff - a ^ 0xffffffff) + (e | 0xffffffff - a ^ 0xffffffff))) - 2 ^ 0xffffffff)) - (a - 1 & ((e - (-1 - a)) - ((e | 0xffffffff - a ^ 0xffffffff) + (e | 0xffffffff - a ^ 0xffffffff))) - 2)) + ((c ^ (e ^ e ^ 0xffffffff) + e * 2 + 1) + (c & (e ^ e ^ 0xffffffff) + e * 2 + 1) * 2 | ((a - 1 ^ 0xffffffff) & (((e - (-1 - a)) - ((e | 0xffffffff - a ^ 0xffffffff) + (e | 0xffffffff - a ^ 0xffffffff))) - 2 ^ 0xffffffff)) - (a - 1 & ((e - (-1 - a)) - ((e | 0xffffffff - a ^ 0xffffffff) + (e | 0xffffffff - a ^ 0xffffffff))) - 2))) - ((c ^ (e ^ e ^ 0xffffffff) + e * 2 + 1) + (c & (e ^ e ^ 0xffffffff) + e * 2 + 1) * 2 ^ ((a - 1 ^ 0xffffffff) & (((e - (-1 - a)) - ((e | 0xffffffff - a ^ 0xffffffff) + (e | 0xffffffff - a ^ 0xffffffff))) - 2 ^ 0xffffffff)) - (a - 1 & ((e - (-1 - a)) - ((e | 0xffffffff - a ^ 0xffffffff) + (e | 0xffffffff - a ^ 0xffffffff))) - 2)) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 142,
                        "nestedExprLevel": 45,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 44.53125,
                        "opsPercentages": {
                            "arithmetic": 52.816901408450704,
                            "mul": 6.338028169014084,
                            "bitwise": 40.845070422535215
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "msvc_default": {
                    "expr": "~((((e * 2 ^ c) + (e * 2 & c) * 2 | (~(a - 1) & ~(((e - (-1 - a)) - ((~(0xffffffff - a) | e) + (~(0xffffffff - a) | e))) - 2)) - (a - 1 & ((e - (-1 - a)) - ((~(0xffffffff - a) | e) + (~(0xffffffff - a) | e))) - 2)) + ((e * 2 ^ c) + (e * 2 & c) * 2 | (~(a - 1) & ~(((e - (-1 - a)) - ((~(0xffffffff - a) | e) + (~(0xffffffff - a) | e))) - 2)) - (a - 1 & ((e - (-1 - a)) - ((~(0xffffffff - a) | e) + (~(0xffffffff - a) | e))) - 2))) - ((e * 2 ^ c) + (e * 2 & c) * 2 ^ (~(a - 1) & ~(((e - (-1 - a)) - ((~(0xffffffff - a) | e) + (~(0xffffffff - a) | e))) - 2)) - (a - 1 & ((e - (-1 - a)) - ((~(0xffffffff - a) | e) + (~(0xffffffff - a) | e))) - 2))) + 1",
                    "attributes": {
                        "numOps": 118,
                        "nestedExprLevel": 49,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 53.90625,
                        "opsPercentages": {
                            "arithmetic": 53.38983050847458,
                            "mul": 7.627118644067797,
                            "bitwise": 38.983050847457626
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((e * 2 ^ c) + (e * 2 & c) * 2 ^ ((e | a) * 2 + 2 + ~e + ~a & -a) - (((e - ~a) + (e | a) * -2) - 2 & a - 1)) + ((e * 2 ^ c) + (e * 2 & c) * 2 | ((e | a) * 2 + 2 + ~e + ~a & -a) - (((e - ~a) + (e | a) * -2) - 2 & a - 1)) * -2",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 13,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 78.515625,
                        "opsPercentages": {
                            "arithmetic": 43.63636363636363,
                            "mul": 20.0,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 170,
            "gt": {
                "expr": "(((~(e+c))+(((~e)|c)|((e&c)^(c|c)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 8,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 22.22222222222222,
                        "mul": 0.0,
                        "bitwise": 77.77777777777779
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "(((- ((e ^ c) + ((e & c) << 1)) - 1) ^ ~ (((((((- e - 1) + c) + 1) + ((- (- e - 1) - 1) | (- c - 1))) + ((((~ e | c) - ~ e) | (((c + c) + 1) + ((- c - 1) | (- c - 1)))) - (((~ e | c) - ~ e) & (((c + c) + 1) + ((- c - 1) | (- c - 1)))))) + 1) + ((- ((((- e - 1) + c) + 1) + ((- (- e - 1) - 1) | (- c - 1))) - 1) | (- ((((~ e | c) - ~ e) | (((c + c) + 1) + ((- c - 1) | (- c - 1)))) - (((~ e | c) - ~ e) & (((c + c) + 1) + ((- c - 1) | (- c - 1))))) - 1)))) + (((- ((e ^ c) + ((e & c) << 1)) - 1) | (((((((- e - 1) + c) + 1) + ((- (- e - 1) - 1) | (- c - 1))) + ((((~ e | c) - ~ e) | (((c + c) + 1) + ((- c - 1) | (- c - 1)))) - (((~ e | c) - ~ e) & (((c + c) + 1) + ((- c - 1) | (- c - 1)))))) + 1) + ((- ((((- e - 1) + c) + 1) + ((- (- e - 1) - 1) | (- c - 1))) - 1) | (- ((((~ e | c) - ~ e) | (((c + c) + 1) + ((- c - 1) | (- c - 1)))) - (((~ e | c) - ~ e) & (((c + c) + 1) + ((- c - 1) | (- c - 1))))) - 1)))) + ((- ((e ^ c) + ((e & c) << 1)) - 1) | (((((((- e - 1) + c) + 1) + ((- (- e - 1) - 1) | (- c - 1))) + ((((~ e | c) - ~ e) | (((c + c) + 1) + ((- c - 1) | (- c - 1)))) - (((~ e | c) - ~ e) & (((c + c) + 1) + ((- c - 1) | (- c - 1)))))) + 1) + ((- ((((- e - 1) + c) + 1) + ((- (- e - 1) - 1) | (- c - 1))) - 1) | (- ((((~ e | c) - ~ e) | (((c + c) + 1) + ((- c - 1) | (- c - 1)))) - (((~ e | c) - ~ e) & (((c + c) + 1) + ((- c - 1) | (- c - 1))))) - 1)))))) + 1",
                "attributes": {
                    "numOps": 283,
                    "nestedExprLevel": 147,
                    "numDAGs": 40,
                    "opsPercentages": {
                        "arithmetic": 71.02473498233216,
                        "mul": 0.0,
                        "bitwise": 28.975265017667844
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((-c - 1 ^ c & e | ~((~c | e) + c + ~e + 1)) + (~c + c * 2 + 1 ^ c & e) + c + ~e + (~c | e) + 2 | ~((e & c) * 2 + (e ^ c))) * 2 + ((e ^ c) + (e & c) * 2 ^ (-c - 1 ^ c & e | ~((~c | e) + c + ~e + 1)) + (~c + c * 2 + 1 ^ c & e) + c + ~e + (~c | e) + 2 ) + 1",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 13,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 76.67844522968198,
                        "opsPercentages": {
                            "arithmetic": 42.42424242424242,
                            "mul": 7.575757575757576,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 3.125
                    }
                },
                "msvc_O1": {
                    "expr": "(~(((((e - (~c | e)) - c) - 1 | (e + 1 + (~e | c) & c - e + 1 + (~e | c) | c) - 1) - e + 1 + (~e | c) & c) - e) + (~c | e) + e + 1 + (~e | c) | c + 1 + c ^ ~((c & e) * 2) - (c ^ e)) + (~((c & e) * 2) - (c ^ e) | (((((e - (~c | e)) - c) - 1 | (e + 1 + (~e | c) & c - e + 1 + (~e | c) | c) - 1) - e + 1 + (~e | c) & c) - e) + (~c | e) + e + 1 + (~e | c) | c + 1 + c) * 2 + 1",
                    "attributes": {
                        "numOps": 88,
                        "nestedExprLevel": 24,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 68.90459363957598,
                        "opsPercentages": {
                            "arithmetic": 47.72727272727273,
                            "mul": 3.4090909090909087,
                            "bitwise": 48.86363636363637
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "clang_O3": {
                    "expr": "(~e & c | (~c | e) + (c - e) | ~(c ^ e) + (e & c) * -2) * 2 - (~e & c | (~c | e) + (c - e) ^ ~(c ^ e) + (e & c) * -2)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 7,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 89.39929328621908,
                        "opsPercentages": {
                            "arithmetic": 30.0,
                            "mul": 10.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - ((e ^ c) + (e & c) * 2) ^ (c - e) + (0xffffffff - (-1 - e) | 0xffffffff - c) + (((e ^ 0xffffffff | c) - (e ^ 0xffffffff) | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - ((e ^ 0xffffffff | c) - (e ^ 0xffffffff) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c))) + 1 + (0xffffffff - ((c - e) + (0xffffffff - (-1 - e) | 0xffffffff - c)) | 0xffffffff - (((e ^ 0xffffffff | c) - (e ^ 0xffffffff) | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - ((e ^ 0xffffffff | c) - (e ^ 0xffffffff) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)))) ^ 0xffffffff) + (0xffffffff - ((e ^ c) + (e & c) * 2) | (c - e) + (0xffffffff - (-1 - e) | 0xffffffff - c) + (((e ^ 0xffffffff | c) - (e ^ 0xffffffff) | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - ((e ^ 0xffffffff | c) - (e ^ 0xffffffff) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c))) + 1 + (0xffffffff - ((c - e) + (0xffffffff - (-1 - e) | 0xffffffff - c)) | 0xffffffff - (((e ^ 0xffffffff | c) - (e ^ 0xffffffff) | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - ((e ^ 0xffffffff | c) - (e ^ 0xffffffff) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c))))) + (0xffffffff - ((e ^ c) + (e & c) * 2) | (c - e) + (0xffffffff - (-1 - e) | 0xffffffff - c) + (((e ^ 0xffffffff | c) - (e ^ 0xffffffff) | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - ((e ^ 0xffffffff | c) - (e ^ 0xffffffff) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c))) + 1 + (0xffffffff - ((c - e) + (0xffffffff - (-1 - e) | 0xffffffff - c)) | 0xffffffff - (((e ^ 0xffffffff | c) - (e ^ 0xffffffff) | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - ((e ^ 0xffffffff | c) - (e ^ 0xffffffff) & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c))))) + 1",
                    "attributes": {
                        "numOps": 220,
                        "nestedExprLevel": 53,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 22.261484098939928,
                        "opsPercentages": {
                            "arithmetic": 57.27272727272727,
                            "mul": 6.8181818181818175,
                            "bitwise": 35.90909090909091
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - ((e ^ c) + (e & c) * 2) ^ ~((c - e) + (0xffffffff - (-1 - e) | 0xffffffff - c) + (((~e | c) - ~e | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - ((~e | c) - ~e & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c))) + 1 + (0xffffffff - ((c - e) + (0xffffffff - (-1 - e) | 0xffffffff - c)) | 0xffffffff - (((~e | c) - ~e | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - ((~e | c) - ~e & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)))))) + 1 + (0xffffffff - ((e ^ c) + (e & c) * 2) | (c - e) + (0xffffffff - (-1 - e) | 0xffffffff - c) + (((~e | c) - ~e | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - ((~e | c) - ~e & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c))) + 1 + (0xffffffff - ((c - e) + (0xffffffff - (-1 - e) | 0xffffffff - c)) | 0xffffffff - (((~e | c) - ~e | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - ((~e | c) - ~e & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c))))) + (0xffffffff - ((e ^ c) + (e & c) * 2) | (c - e) + (0xffffffff - (-1 - e) | 0xffffffff - c) + (((~e | c) - ~e | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - ((~e | c) - ~e & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c))) + 1 + (0xffffffff - ((c - e) + (0xffffffff - (-1 - e) | 0xffffffff - c)) | 0xffffffff - (((~e | c) - ~e | c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)) - ((~e | c) - ~e & c * 2 + 1 + (0xffffffff - c | 0xffffffff - c)))))",
                    "attributes": {
                        "numOps": 220,
                        "nestedExprLevel": 53,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 22.261484098939928,
                        "opsPercentages": {
                            "arithmetic": 57.27272727272727,
                            "mul": 6.8181818181818175,
                            "bitwise": 35.90909090909091
                        },
                        "percentageDAGsCancel": 2.941176470588235
                    }
                },
                "gcc_O3": {
                    "expr": "((e ^ c) + e & c * 2 ^ (c - e) + (e | ~c) + 1 + (~c + c * 2 + 1 ^ e & c) + (c - c * 2 + 1 ^ e & c | ~(c - e) + (e | ~c))) + 1 + (~(e ^ c) + e & c * 2 | (c - e) + (e | ~c) + 1 + (~c + c * 2 + 1 ^ e & c) + (c - c * 2 + 1 ^ e & c | ~(c - e) + (e | ~c))) * 2",
                    "attributes": {
                        "numOps": 62,
                        "nestedExprLevel": 11,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 78.09187279151944,
                        "opsPercentages": {
                            "arithmetic": 41.935483870967744,
                            "mul": 11.29032258064516,
                            "bitwise": 46.774193548387096
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                }
            }
        },
        {
            "num": 171,
            "gt": {
                "expr": "((-(-(((b-b)^b)-((a|(a+a))-a)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 0.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "~ (~ ((((((((b ^ b) - ((~ b & b) << 1)) - b) - ((((b ^ b) - ((~ b & b) << 1)) | ~ b) + (((b ^ b) - ((~ b & b) << 1)) | ~ b))) - 2) + ~ ((((a & ~ (((a | a) + (a | a)) - (a ^ a))) + (((a | a) + (a | a)) - (a ^ a))) + ~ a) + 1)) + 1) - 1)) + 1",
                "attributes": {
                    "numOps": 46,
                    "nestedExprLevel": 28,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 39.130434782608695,
                        "mul": 0.0,
                        "bitwise": 60.86956521739131
                    },
                    "percentageDAGsCancel": 25.925925925925924
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-a - (~(a * 2) & a)) + (~b * -2 - b) + -2",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 73.91304347826086,
                        "opsPercentages": {
                            "arithmetic": 58.333333333333336,
                            "mul": 16.666666666666664,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~((~(a * 2) & a) + a) + ~b * -2) - b) + -1",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 73.91304347826086,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(b - a) - (~(a * 2) & a)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 89.13043478260869,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 20.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((b ^ 0xffffffff) & b) * -2 - b) - ((((b ^ 0xffffffff) & b) * -2 | b ^ 0xffffffff) + (((b ^ 0xffffffff) & b) * -2 | b ^ 0xffffffff))) + ((a & (a * 2 ^ 0xffffffff)) + a * 2 + (a ^ 0xffffffff) + 1 ^ 0xffffffff ) + -1",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 12,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 32.608695652173914,
                        "opsPercentages": {
                            "arithmetic": 38.70967741935484,
                            "mul": 16.129032258064516,
                            "bitwise": 45.16129032258064
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "msvc_default": {
                    "expr": "(-(~b + ~b) - b) + ~((~(a * 2) & a) + a * 2 + 1 + ~a) + -1",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 63.04347826086957,
                        "opsPercentages": {
                            "arithmetic": 52.94117647058824,
                            "mul": 11.76470588235294,
                            "bitwise": 35.294117647058826
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~b * -2 - b) + -2 + (-a - (~(a * 2) & a))",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 73.91304347826086,
                        "opsPercentages": {
                            "arithmetic": 58.333333333333336,
                            "mul": 16.666666666666664,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 172,
            "gt": {
                "expr": "((-((-((-a)-(a|(b-b))))&((b^b)*(~b)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 10.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 60.0
                }
            },
            "mba": {
                "expr": "~ (((~ (~ ((((~ (a - 1) & ~ (((a + ((b ^ b) - ((~ b & b) << 1))) + 1) + ((- a - 1) | (- ((b ^ b) - ((~ b & b) << 1)) - 1)))) << 1) - (~ (a - 1) ^ (((a + ((b ^ b) - ((~ b & b) << 1))) + 1) + ((- a - 1) | (- ((b ^ b) - ((~ b & b) << 1)) - 1))))) - 1)) | ((((b | b) - (b & b)) & (- b - 1)) * (((b | b) - (b & b)) | (- b - 1)) + (((b | b) - (b & b)) & ~ (- b - 1)) * (~ ((b | b) - (b & b)) & (- b - 1)))) + ~ ((((~ (a - 1) & ~ (((a + ((b ^ b) - ((~ b & b) << 1))) + 1) + ((- a - 1) | (- ((b ^ b) - ((~ b & b) << 1)) - 1)))) << 1) - (~ (a - 1) ^ (((a + ((b ^ b) - ((~ b & b) << 1))) + 1) + ((- a - 1) | (- ((b ^ b) - ((~ b & b) << 1)) - 1))))) - 1)) + 1) + 1",
                "attributes": {
                    "numOps": 129,
                    "nestedExprLevel": 65,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 46.51162790697674,
                        "mul": 1.550387596899225,
                        "bitwise": 51.93798449612403
                    },
                    "percentageDAGsCancel": 42.857142857142854
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((-a ^ a) + ~((~a & -a) * 2) + ((~a & -a) * 2 - (-a ^ a)))",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 86.82170542635659,
                        "opsPercentages": {
                            "arithmetic": 41.17647058823529,
                            "mul": 11.76470588235294,
                            "bitwise": 47.05882352941176
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "msvc_O1": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((a - 1 ^ 0xffffffff) & (a + ((b ^ 0xffffffff) & b) * -2 + 1 + (0xffffffff - a | ((b ^ 0xffffffff) & b) * 2 - 1) ^ 0xffffffff)) * 2 - (a - 1 ^ 0xffffffff ^ a + ((b ^ 0xffffffff) & b) * -2 + 1 + (0xffffffff - a | ((b ^ 0xffffffff) & b) * 2 - 1))) + ((((a - 1 ^ 0xffffffff) & (a + ((b ^ 0xffffffff) & b) * -2 + 1 + (0xffffffff - a | ((b ^ 0xffffffff) & b) * 2 - 1) ^ 0xffffffff)) * 2 - (a - 1 ^ 0xffffffff ^ a + ((b ^ 0xffffffff) & b) * -2 + 1 + (0xffffffff - a | ((b ^ 0xffffffff) & b) * 2 - 1))) - 1 ^ 0xffffffff) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 75,
                        "nestedExprLevel": 24,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 41.86046511627907,
                        "opsPercentages": {
                            "arithmetic": 44.0,
                            "mul": 13.333333333333334,
                            "bitwise": 42.66666666666667
                        },
                        "percentageDAGsCancel": 26.08695652173913
                    }
                },
                "msvc_default": {
                    "expr": "~(((~(a - 1) & ~a) * 2 - (~(a - 1) ^ a)) + ~(((~(a - 1) & ~a) * 2 - (~(a - 1) ^ a)) - 1)) + 1",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 10,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 82.17054263565892,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 8.695652173913043,
                            "bitwise": 52.17391304347826
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "gcc_O3": {
                    "expr": "~((-a ^ a) + ~(-a ^ a))",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 94.57364341085271,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 0.0,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 20.0
                    }
                }
            }
        },
        {
            "num": 173,
            "gt": {
                "expr": "(((e^(b^(e-(e+e))))|(e-b)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((e - ((b | ((e & ~ (((e | e) << 1) - (e ^ e))) - (~ e & (((e | e) << 1) - (e ^ e))))) - (b & ((e & ~ (((e | e) << 1) - (e ^ e))) - (~ e & (((e | e) << 1) - (e ^ e))))))) - ((e | ~ ((b | ((e & ~ (((e | e) << 1) - (e ^ e))) - (~ e & (((e | e) << 1) - (e ^ e))))) - (b & ((e & ~ (((e | e) << 1) - (e ^ e))) - (~ e & (((e | e) << 1) - (e ^ e))))))) + (e | ~ ((b | ((e & ~ (((e | e) << 1) - (e ^ e))) - (~ e & (((e | e) << 1) - (e ^ e))))) - (b & ((e & ~ (((e | e) << 1) - (e ^ e))) - (~ e & (((e | e) << 1) - (e ^ e))))))))) - 2) & ~ ((e ^ b) - ((~ e & b) + (~ e & b)))) + ((e ^ b) - ((~ e & b) + (~ e & b)))",
                "attributes": {
                    "numOps": 112,
                    "nestedExprLevel": 77,
                    "numDAGs": 25,
                    "opsPercentages": {
                        "arithmetic": 26.785714285714285,
                        "mul": 0.0,
                        "bitwise": 73.21428571428571
                    },
                    "percentageDAGsCancel": 8.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(e ^ b) + (~e & b) * -2 + (((e - ((~(e * 2) & e) - (e * 2 & ~e) ^ b)) + ((e * 2 & ~e) + (e * 2 | ~e) ^ b | e) * -2) - 2 & (~e & b) * 2 + ~(e ^ b))",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 11,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 67.85714285714286,
                        "opsPercentages": {
                            "arithmetic": 27.77777777777778,
                            "mul": 19.444444444444446,
                            "bitwise": 52.77777777777778
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(e + (((~(e * 2) & e) - (~e & e * 2) & b - ((~((~(e * 2) & e) - (~e & e * 2) | b - (~(e * 2) & e) - (~e & e * 2) & b) | e) * 2 + 2)) - (~(e * 2) & e) - (~e & e * 2) | b) & ~((b ^ e) + ~e & b * -2)) + ~e & b * -2 + (b ^ e)",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 17,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 50.89285714285714,
                        "opsPercentages": {
                            "arithmetic": 25.454545454545453,
                            "mul": 20.0,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "clang_O3": {
                    "expr": "(~(e ^ b) + (~e & b) * -2 & ((e - (~(e * 2) & e) - (e * 2 & ~e) ^ b) + (~(~(e * 2) & e) - (e * 2 & ~e) ^ b | e) * -2) - 2) + (e ^ b) + (~e & b) * -2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 11,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 66.07142857142857,
                        "opsPercentages": {
                            "arithmetic": 28.947368421052634,
                            "mul": 18.421052631578945,
                            "bitwise": 52.63157894736842
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_default": {
                    "expr": "(((e - ((b | (e & (e * 2 ^ 0xffffffff)) - ((e ^ 0xffffffff) & e * 2)) - (b & (e & (e * 2 ^ 0xffffffff)) - ((e ^ 0xffffffff) & e * 2) ))) - ((e | (b | (e & (e * 2 ^ 0xffffffff)) - ((e ^ 0xffffffff) & e * 2)) - (b & (e & (e * 2 ^ 0xffffffff)) - ((e ^ 0xffffffff) & e * 2)) ^ 0xffffffff) + (e | (b | (e & (e * 2 ^ 0xffffffff)) - ((e ^ 0xffffffff) & e * 2)) - (b & (e & (e * 2 ^ 0xffffffff)) - ((e ^ 0xffffffff) & e * 2)) ^ 0xffffffff))) - 2 & ((e ^ b) - (((e ^ 0xffffffff) & b) + ((e ^ 0xffffffff) & b)) ^ 0xffffffff)) + ((e ^ b) - (((e ^ 0xffffffff) & b) + ((e ^ 0xffffffff) & b)))",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 35,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 32.142857142857146,
                        "opsPercentages": {
                            "arithmetic": 23.684210526315788,
                            "mul": 15.789473684210526,
                            "bitwise": 60.526315789473685
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((e ^ b) - ((~e & b) + (~e & b))) + (((e - (((~(e * 2) & e) - (~e & e * 2) | b) - ((~(e * 2) & e) - (~e & e * 2) & b))) - ((~(((~(e * 2) & e) - (~e & e * 2) | b) - ((~(e * 2) & e) - (~e & e * 2) & b)) | e) + (~(((~(e * 2) & e) - (~e & e * 2) | b) - ((~(e * 2) & e) - (~e & e * 2) & b)) | e))) - 2 & ~((e ^ b) - ((~e & b) + (~e & b))))",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 34,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 32.142857142857146,
                        "opsPercentages": {
                            "arithmetic": 23.684210526315788,
                            "mul": 15.789473684210526,
                            "bitwise": 60.526315789473685
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "gcc_O3": {
                    "expr": "(((e - ((~e * 2 & e) - (e * 2 & ~e) ^ b)) + (e * 2 + ~e ^ b | e) * -2) - 2 & ~(e ^ b) + (~e & b) * 2) + (e ^ b) + (~e & b) * -2",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 9,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 71.42857142857143,
                        "opsPercentages": {
                            "arithmetic": 31.25,
                            "mul": 18.75,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                }
            }
        },
        {
            "num": 174,
            "gt": {
                "expr": "((((a|e)+c)&(-(a&(c*e)))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 16.666666666666664,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ (((((a + e) + 1) + ((- a - 1) | (- e - 1))) | c) + ((((a + e) + 1) + ((- a - 1) | (- e - 1))) & c)) | ~ ((((~ a | ((c & e) * (c | e) + (c & ~ e) * (~ c & e))) + a) + 1) - 1)) + (((((a + e) + 1) + ((- a - 1) | (- e - 1))) | c) + ((((a + e) + 1) + ((- a - 1) | (- e - 1))) & c))) + 1",
                "attributes": {
                    "numOps": 57,
                    "nestedExprLevel": 32,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 63.1578947368421,
                        "mul": 3.508771929824561,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 6.666666666666667
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "c + e + a + ~(a & e) + ~(a + (~a | (~c & e) * (~e & c) + (c & e) * (c | e)) & e + a + 1 + ~(a & e) + c) + 2",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 6,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 52.63157894736842,
                        "opsPercentages": {
                            "arithmetic": 40.74074074074074,
                            "mul": 7.4074074074074066,
                            "bitwise": 51.85185185185185
                        },
                        "percentageDAGsCancel": 12.0
                    }
                },
                "msvc_O1": {
                    "expr": "(a - (a & e)) + e | c + ((a - (a & e)) + e & c - (((~e & c) * (~c & e) + (c | e) * (c & e) | ~a) + a & (a - (a & e)) + e | c + (a - (a & e)) + e & c))",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 11,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 43.859649122807014,
                        "opsPercentages": {
                            "arithmetic": 40.625,
                            "mul": 6.25,
                            "bitwise": 53.125
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "clang_O3": {
                    "expr": "~(((e & ~c) * (~e & c) + (e | c) * (e & c) | ~a) + a) & (e | a) + c",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 6,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 71.9298245614035,
                        "opsPercentages": {
                            "arithmetic": 18.75,
                            "mul": 12.5,
                            "bitwise": 68.75
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_default": {
                    "expr": "((a + e + 1 + (0xffffffff - a | 0xffffffff - e) | c) + (a + e + 1 + (0xffffffff - a | 0xffffffff - e) & c) ^ 0xffffffff | (a ^ 0xffffffff | (c & e) * (c | e) + (c & (e ^ 0xffffffff)) * ((c ^ 0xffffffff) & e)) + a ^ 0xffffffff) + (a + e + 1 + (0xffffffff - a | 0xffffffff - e) | c) + (a + e + 1 + (0xffffffff - a | 0xffffffff - e) & c) + 1",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 11,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 17.543859649122805,
                        "opsPercentages": {
                            "arithmetic": 55.319148936170215,
                            "mul": 4.25531914893617,
                            "bitwise": 40.42553191489361
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "msvc_default": {
                    "expr": "(~((a + e + 1 + (0xffffffff - a | 0xffffffff - e) | c) + (a + e + 1 + (0xffffffff - a | 0xffffffff - e) & c)) | ~((~a | (c & e) * (c | e) + (~e & c) * (~c & e)) + a)) + 1 + (a + e + 1 + (0xffffffff - a | 0xffffffff - e) | c) + (a + e + 1 + (0xffffffff - a | 0xffffffff - e) & c)",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 12,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 17.543859649122805,
                        "opsPercentages": {
                            "arithmetic": 55.319148936170215,
                            "mul": 4.25531914893617,
                            "bitwise": 40.42553191489361
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "gcc_O3": {
                    "expr": "((a + e) - (a & e)) + c - (((~e & c) * (~c & e) + (e | c) * (e & c) | ~a) + a & ((a + e) - (a & e)) + c)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 61.40350877192983,
                        "opsPercentages": {
                            "arithmetic": 40.909090909090914,
                            "mul": 9.090909090909092,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 175,
            "gt": {
                "expr": "(((((e|e)+a)*(~(a&c)))*((a^a)&e)))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 12.5,
                        "mul": 25.0,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "((((((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) & (- (((~ a | c) + a) + 1) - 1)) * ((((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) | (- (((~ a | c) + a) + 1) - 1)) + ((((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) & ~ (- (((~ a | c) + a) + 1) - 1)) * (~ (((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) & (- (((~ a | c) + a) + 1) - 1))) & ((~ (((a - a) - ((a | ~ a) << 1)) - 2) | e) - ~ (((a - a) - ((a | ~ a) << 1)) - 2))) * ((((((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) & (- (((~ a | c) + a) + 1) - 1)) * ((((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) | (- (((~ a | c) + a) + 1) - 1)) + ((((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) & ~ (- (((~ a | c) + a) + 1) - 1)) * (~ (((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) & (- (((~ a | c) + a) + 1) - 1))) | ((~ (((a - a) - ((a | ~ a) << 1)) - 2) | e) - ~ (((a - a) - ((a | ~ a) << 1)) - 2))) + ((((((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) & (- (((~ a | c) + a) + 1) - 1)) * ((((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) | (- (((~ a | c) + a) + 1) - 1)) + ((((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) & ~ (- (((~ a | c) + a) + 1) - 1)) * (~ (((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) & (- (((~ a | c) + a) + 1) - 1))) & ~ ((~ (((a - a) - ((a | ~ a) << 1)) - 2) | e) - ~ (((a - a) - ((a | ~ a) << 1)) - 2))) * (~ (((((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) & (- (((~ a | c) + a) + 1) - 1)) * ((((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) | (- (((~ a | c) + a) + 1) - 1)) + ((((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) & ~ (- (((~ a | c) + a) + 1) - 1)) * (~ (((((e + e) + 1) + ((- e - 1) | (- e - 1))) ^ a) + (((((e + e) + 1) + ((- e - 1) | (- e - 1))) & a) << 1)) & (- (((~ a | c) + a) + 1) - 1))) & ((~ (((a - a) - ((a | ~ a) << 1)) - 2) | e) - ~ (((a - a) - ((a | ~ a) << 1)) - 2)))",
                "attributes": {
                    "numOps": 525,
                    "nestedExprLevel": 298,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 64.19047619047619,
                        "mul": 1.9047619047619049,
                        "bitwise": 33.904761904761905
                    },
                    "percentageDAGsCancel": 26.190476190476193
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 & 0xffffffff - ((a ^ 0xffffffff | c) + a + 1)) * ((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 | 0xffffffff - ((a ^ 0xffffffff | c) + a + 1)) + ((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 & (0xffffffff - ((a ^ 0xffffffff | c) + a + 1) ^ 0xffffffff)) * (((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 ^ 0xffffffff) & 0xffffffff - ((a ^ 0xffffffff | c) + a + 1)) & ((a | a ^ 0xffffffff) * -2 - 2 ^ 0xffffffff | e) - ((a | a ^ 0xffffffff) * -2 - 2 ^ 0xffffffff)) * (((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 & 0xffffffff - ((a ^ 0xffffffff | c) + a + 1)) * ((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 | 0xffffffff - ((a ^ 0xffffffff | c) + a + 1)) + ((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 & (0xffffffff - ((a ^ 0xffffffff | c) + a + 1) ^ 0xffffffff)) * (((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 ^ 0xffffffff) & 0xffffffff - ((a ^ 0xffffffff | c) + a + 1)) | ((a | a ^ 0xffffffff) * -2 - 2 ^ 0xffffffff | e) - ((a | a ^ 0xffffffff) * -2 - 2 ^ 0xffffffff)) + (((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 & 0xffffffff - ((a ^ 0xffffffff | c) + a + 1)) * ((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 | 0xffffffff - ((a ^ 0xffffffff | c) + a + 1)) + ((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 & (0xffffffff - ((a ^ 0xffffffff | c) + a + 1) ^ 0xffffffff)) * (((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 ^ 0xffffffff) & 0xffffffff - ((a ^ 0xffffffff | c) + a + 1)) & (((a | a ^ 0xffffffff) * -2 - 2 ^ 0xffffffff | e) - ((a | a ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) ^ 0xffffffff)) * ((((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 & 0xffffffff - ((a ^ 0xffffffff | c) + a + 1)) * ((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 | 0xffffffff - ((a ^ 0xffffffff | c) + a + 1)) + ((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 & (0xffffffff - ((a ^ 0xffffffff | c) + a + 1) ^ 0xffffffff)) * (((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ a) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & a) * 2 ^ 0xffffffff) & 0xffffffff - ((a ^ 0xffffffff | c) + a + 1)) ^ 0xffffffff) & ((a | a ^ 0xffffffff) * -2 - 2 ^ 0xffffffff | e) - ((a | a ^ 0xffffffff) * -2 - 2 ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 437,
                        "nestedExprLevel": 88,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 16.761904761904763,
                        "opsPercentages": {
                            "arithmetic": 49.65675057208238,
                            "mul": 15.102974828375288,
                            "bitwise": 35.24027459954233
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "msvc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 176,
            "gt": {
                "expr": "((((c&b)-e)^((b&c)*(-b))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 16.666666666666664,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((~ c | b) - ~ c) & ~ e) - (~ ((~ c | b) - ~ c) & e)) | ((((~ b | c) - ~ b) & (~ b + 1)) * (((~ b | c) - ~ b) | (~ b + 1)) + (((~ b | c) - ~ b) & ~ (~ b + 1)) * (~ ((~ b | c) - ~ b) & (~ b + 1)))) - (((((~ c | b) - ~ c) & ~ e) - (~ ((~ c | b) - ~ c) & e)) & ((((~ b | c) - ~ b) & (~ b + 1)) * (((~ b | c) - ~ b) | (~ b + 1)) + (((~ b | c) - ~ b) & ~ (~ b + 1)) * (~ ((~ b | c) - ~ b) & (~ b + 1))))",
                "attributes": {
                    "numOps": 95,
                    "nestedExprLevel": 39,
                    "numDAGs": 24,
                    "opsPercentages": {
                        "arithmetic": 26.31578947368421,
                        "mul": 4.2105263157894735,
                        "bitwise": 69.47368421052632
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-b & ~(c & b)) * (c & b & b - 1) + (c & b & -b) * (-b | c & b) ^ (b & c & ~e) - (~(b & c) & e)",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 6,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 74.73684210526315,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 8.333333333333332,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "msvc_O1": {
                    "expr": "((~e & (~c | b) + c + 1) - (~(~c | b) + c + 1 & e) | (b + 1 + (~b | c) & ~b + 1) * (~b + 1 | b + 1 + (~b | c)) + (~b + 1 + (~b | c) & ~b + 1) * (~~b + 1 & b + 1 + (~b | c))) - ((~e & (~c | b) + c + 1) - (~(~c | b) + c + 1 & e) & (b + 1 + (~b | c) & ~b + 1) * (~b + 1 | b + 1 + (~b | c)) + (~b + 1 + (~b | c) & ~b + 1) * (~~b + 1 & b + 1 + (~b | c)))",
                    "attributes": {
                        "numOps": 95,
                        "nestedExprLevel": 16,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 38.94736842105263,
                            "mul": 4.2105263157894735,
                            "bitwise": 56.84210526315789
                        },
                        "percentageDAGsCancel": 10.344827586206897
                    }
                },
                "clang_O3": {
                    "expr": "(-b & ~c) * (b - 1 & c) + (c | -b) * (c & -b) ^ (~e & c) - (e & ~c)",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 4,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 81.05263157894737,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 11.11111111111111,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c ^ 0xffffffff | b) - (c ^ 0xffffffff) & (e ^ 0xffffffff)) - (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & e) | ((b ^ 0xffffffff | c) - (b ^ 0xffffffff) & (b ^ 0xffffffff) + 1) * ((b ^ 0xffffffff | c) - (b ^ 0xffffffff) | (b ^ 0xffffffff) + 1) + ((b ^ 0xffffffff | c) - (b ^ 0xffffffff) & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((b ^ 0xffffffff | c) - (b ^ 0xffffffff) ^ 0xffffffff) & (b ^ 0xffffffff) + 1)) - (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) & (e ^ 0xffffffff)) - (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & e) & ((b ^ 0xffffffff | c) - (b ^ 0xffffffff) & (b ^ 0xffffffff) + 1) * ((b ^ 0xffffffff | c) - (b ^ 0xffffffff) | (b ^ 0xffffffff) + 1) + ((b ^ 0xffffffff | c) - (b ^ 0xffffffff) & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((b ^ 0xffffffff | c) - (b ^ 0xffffffff) ^ 0xffffffff) & (b ^ 0xffffffff) + 1))",
                    "attributes": {
                        "numOps": 95,
                        "nestedExprLevel": 34,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 26.31578947368421,
                            "mul": 4.2105263157894735,
                            "bitwise": 69.47368421052632
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_default": {
                    "expr": "(((~c | b) - ~c & ~e) - (~((~c | b) - ~c) & e) | ((~b | c) - ~b & ~b + 1) * ((~b | c) - ~b | ~b + 1) + ((~b | c) - ~b & ~(~b + 1)) * (~((~b | c) - ~b) & ~b + 1)) - (((~c | b) - ~c & ~e) - (~((~c | b) - ~c) & e) & ((~b | c) - ~b & ~b + 1) * ((~b | c) - ~b | ~b + 1) + ((~b | c) - ~b & ~(~b + 1)) * (~((~b | c) - ~b) & ~b + 1))",
                    "attributes": {
                        "numOps": 95,
                        "nestedExprLevel": 22,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 26.31578947368421,
                            "mul": 4.2105263157894735,
                            "bitwise": 69.47368421052632
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "gcc_O3": {
                    "expr": "(b - 1 & c) * (~c & -b) + (-b | c) * (c & -b) ^ (~e & c) - (~c & e)",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 4,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 81.05263157894737,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 11.11111111111111,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                }
            }
        },
        {
            "num": 177,
            "gt": {
                "expr": "((((e&c)&((e+e)+(c*c)))-(~c)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 14.285714285714285,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((~ (((~ e | c) + e) + 1) | (((((e - ~ e) - 1) | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + (((e - ~ e) - 1) | ((c & c) * (c | c) + (c & ~ c) * (~ c & c)))) - (((e - ~ e) - 1) ^ ((c & c) * (c | c) + (c & ~ c) * (~ c & c))))) + (((~ e | c) + e) + 1)) + 1) & ~ (- c - 1)) - (~ (((~ (((~ e | c) + e) + 1) | (((((e - ~ e) - 1) | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + (((e - ~ e) - 1) | ((c & c) * (c | c) + (c & ~ c) * (~ c & c)))) - (((e - ~ e) - 1) ^ ((c & c) * (c | c) + (c & ~ c) * (~ c & c))))) + (((~ e | c) + e) + 1)) + 1) & (- c - 1))",
                "attributes": {
                    "numOps": 115,
                    "nestedExprLevel": 53,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 33.91304347826087,
                        "mul": 10.434782608695652,
                        "bitwise": 55.65217391304348
                    },
                    "percentageDAGsCancel": 24.137931034482758
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(e + (~e | c) + (-(e + (~e | c)) - 2 | (c * c | (e - ~e) - 1) * 2 - ((e - ~e) - 1 ^ c * c)) + 2 & c) - (-(e + (~e | c) + 1 + (-(e + (~e | c)) - 2 | (c * c | (e - ~e) - 1) * 2 - ((e - ~e) - 1 ^ c * c))) - 2 & ~c)",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 13,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 54.78260869565217,
                        "opsPercentages": {
                            "arithmetic": 48.07692307692308,
                            "mul": 11.538461538461538,
                            "bitwise": 40.38461538461539
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((e * 2 | c * c) * 2 - (e * 2 ^ c * c) | ~(e + 1 + (~e | c))) + (~e | c) + e + 2 | c) + 1 + (((e * 2 | c * c) * 2 - (e * 2 ^ c * c) | ~(e + 1 + (~e | c))) + (~e | c) + e + 2 & c)",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 11,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 63.47826086956522,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 23.809523809523807,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "clang_O3": {
                    "expr": "((e * 2 | c * c) * 2 - (c * c ^ e * 2) | -(~e | c) + e - 2 + (~e | c) + e + 2 & c) - (-((~e | c) + e + (e * 2 | c * c) * 2 - (c * c ^ e * 2) | -(~e | c) + e - 2) - 3 & ~c)",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 8,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 62.60869565217392,
                        "opsPercentages": {
                            "arithmetic": 37.2093023255814,
                            "mul": 23.25581395348837,
                            "bitwise": 39.53488372093023
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e ^ 0xffffffff | c) + e + 1 ^ 0xffffffff | (((e - (e ^ 0xffffffff)) - 1 | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) + ((e - (e ^ 0xffffffff)) - 1 | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))) - ((e - (e ^ 0xffffffff)) - 1 ^ c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))) + (e ^ 0xffffffff | c) + e + 2 & (0xffffffff - c ^ 0xffffffff)) - ((((e ^ 0xffffffff | c) + e + 1 ^ 0xffffffff | (((e - (e ^ 0xffffffff)) - 1 | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) + ((e - (e ^ 0xffffffff)) - 1 | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))) - ((e - (e ^ 0xffffffff)) - 1 ^ c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))) + (e ^ 0xffffffff | c) + e + 2 ^ 0xffffffff) & 0xffffffff - c)",
                    "attributes": {
                        "numOps": 99,
                        "nestedExprLevel": 34,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 13.91304347826087,
                        "opsPercentages": {
                            "arithmetic": 35.35353535353536,
                            "mul": 12.121212121212121,
                            "bitwise": 52.52525252525253
                        },
                        "percentageDAGsCancel": 14.814814814814813
                    }
                },
                "msvc_default": {
                    "expr": "((~e | c) + 2 + (~((~e | c) + 1 + e) | (((e - ~e) - 1 | c * c) + ((e - ~e) - 1 | c * c)) - ((e - ~e) - 1 ^ c * c)) + e & ~(0xffffffff - c)) - (~((~e | c) + 2 + (~((~e | c) + 1 + e) | (((e - ~e) - 1 | c * c) + ((e - ~e) - 1 | c * c)) - ((e - ~e) - 1 ^ c * c)) + e) & 0xffffffff - c)",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 18,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 45.21739130434783,
                        "opsPercentages": {
                            "arithmetic": 46.03174603174603,
                            "mul": 9.523809523809524,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "gcc_O3": {
                    "expr": "((~e | c) + e + 1 + (-(~e | c) + e - 2 | ((e - ~e) - 1 | c * c) * 2 - ((e - ~e) - 1 ^ c * c)) + 1 & c) - (-(~e | c) + e + 1 + (-(~e | c) + e - 2 | ((e - ~e) - 1 | c * c) * 2 - ((e - ~e) - 1 ^ c * c)) - 2 & ~c)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 10,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 53.91304347826087,
                        "opsPercentages": {
                            "arithmetic": 49.056603773584904,
                            "mul": 11.320754716981133,
                            "bitwise": 39.62264150943396
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 178,
            "gt": {
                "expr": "(((-(-c))^(~e)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(((~ (~ c + 1) + 1) - (- e - 1)) - (((~ (~ c + 1) + 1) | ~ (- e - 1)) + ((~ (~ c + 1) + 1) | ~ (- e - 1)))) - 2",
                "attributes": {
                    "numOps": 26,
                    "nestedExprLevel": 12,
                    "numDAGs": 12,
                    "opsPercentages": {
                        "arithmetic": 61.53846153846154,
                        "mul": 0.0,
                        "bitwise": 38.46153846153847
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c - ~e) + (c | e) * -2 + -2",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 69.23076923076923,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 12.5,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "c + -1 + (c | e) * -2 + e",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 73.07692307692307,
                        "opsPercentages": {
                            "arithmetic": 71.42857142857143,
                            "mul": 14.285714285714285,
                            "bitwise": 14.285714285714285
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((e | c) * 2) + e + c",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 80.76923076923077,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 20.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((c ^ 0xffffffff) + 1 ^ 0xffffffff) - (-1 - e)) - ((((c ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 | 0xffffffff - e ^ 0xffffffff) + (((c ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 | 0xffffffff - e ^ 0xffffffff))) + -1",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 11,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 7.6923076923076925,
                        "opsPercentages": {
                            "arithmetic": 58.333333333333336,
                            "mul": 0.0,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "msvc_default": {
                    "expr": "((~(~c + 1) - (-1 - e)) - ((~(~c + 1) + 1 | ~(0xffffffff - e)) + (~(~c + 1) + 1 | ~(0xffffffff - e)))) + -1",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 9,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 7.6923076923076925,
                        "opsPercentages": {
                            "arithmetic": 58.333333333333336,
                            "mul": 0.0,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "gcc_O3": {
                    "expr": "(c - ~e) + (e | c) * -2 + -2",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 69.23076923076923,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 12.5,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 179,
            "gt": {
                "expr": "(((c+(-d))-((c^e)-c)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 80.0,
                        "mul": 0.0,
                        "bitwise": 20.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((c | ~ (d - 1)) + (c | ~ (d - 1))) - (c ^ ~ (d - 1))) + ~ (((((c - e) - ((c | ~ e) << 1)) - 2) + ~ c) + 1)) + 1",
                "attributes": {
                    "numOps": 23,
                    "nestedExprLevel": 13,
                    "numDAGs": 18,
                    "opsPercentages": {
                        "arithmetic": 52.17391304347826,
                        "mul": 0.0,
                        "bitwise": 47.82608695652174
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "e + (~e | c) * 2 + ((-d | c) * 2 - (-d ^ c)) + 2",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 47.82608695652174,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "e + 2 + (((~e | c) + (~(d - 1) | c)) * 2 - (~(d - 1) ^ c))",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 6,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 43.47826086956522,
                        "opsPercentages": {
                            "arithmetic": 46.15384615384615,
                            "mul": 7.6923076923076925,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(e - (-d ^ c)) + (-d | c) * 2 + (~e | c) * 2 + 2",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 47.82608695652174,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c | d - 1 ^ 0xffffffff) + (c | d - 1 ^ 0xffffffff)) - (c ^ d - 1 ^ 0xffffffff)) + (((c - e) + (c | e ^ 0xffffffff) * -2 + (c ^ 0xffffffff)) - 1 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 8,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 52.17391304347826,
                            "mul": 4.3478260869565215,
                            "bitwise": 43.47826086956522
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((~(d - 1) | c) + (~(d - 1) | c)) - (~(d - 1) ^ c)) + 1 + ~((c - e) + (~e | c) * -2 + -1 + ~c)",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 8,
                        "numDAGs": 19,
                        "percentDecreaseByOps": -4.3478260869565215,
                        "opsPercentages": {
                            "arithmetic": 54.166666666666664,
                            "mul": 4.166666666666666,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((e + (~e | c) * 2 + (-d | c) * 2) - (-d ^ c)) + 2",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 47.82608695652174,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 180,
            "gt": {
                "expr": "((((e&a)^a)-((e*c)*(c|(-e)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 28.57142857142857,
                        "mul": 28.57142857142857,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((((~ e | a) + e) + 1) | a) - ((((~ e | a) + e) + 1) & a)) & ~ ((((e & c) * (e | c) + (e & ~ c) * (~ e & c)) & ((c & ~ (~ (e - 1))) + ~ (e - 1))) * (((e & c) * (e | c) + (e & ~ c) * (~ e & c)) | ((c & ~ (~ (e - 1))) + ~ (e - 1))) + (((e & c) * (e | c) + (e & ~ c) * (~ e & c)) & ~ ((c & ~ (~ (e - 1))) + ~ (e - 1))) * (~ ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) & ((c & ~ (~ (e - 1))) + ~ (e - 1))))) + ((((((~ e | a) + e) + 1) | a) - ((((~ e | a) + e) + 1) & a)) & ~ ((((e & c) * (e | c) + (e & ~ c) * (~ e & c)) & ((c & ~ (~ (e - 1))) + ~ (e - 1))) * (((e & c) * (e | c) + (e & ~ c) * (~ e & c)) | ((c & ~ (~ (e - 1))) + ~ (e - 1))) + (((e & c) * (e | c) + (e & ~ c) * (~ e & c)) & ~ ((c & ~ (~ (e - 1))) + ~ (e - 1))) * (~ ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) & ((c & ~ (~ (e - 1))) + ~ (e - 1)))))) - ((((((~ e | a) + e) + 1) | a) - ((((~ e | a) + e) + 1) & a)) ^ ((((e & c) * (e | c) + (e & ~ c) * (~ e & c)) & ((c & ~ (~ (e - 1))) + ~ (e - 1))) * (((e & c) * (e | c) + (e & ~ c) * (~ e & c)) | ((c & ~ (~ (e - 1))) + ~ (e - 1))) + (((e & c) * (e | c) + (e & ~ c) * (~ e & c)) & ~ ((c & ~ (~ (e - 1))) + ~ (e - 1))) * (~ ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) & ((c & ~ (~ (e - 1))) + ~ (e - 1)))))",
                "attributes": {
                    "numOps": 259,
                    "nestedExprLevel": 125,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 26.254826254826252,
                        "mul": 11.583011583011583,
                        "bitwise": 62.16216216216216
                    },
                    "percentageDAGsCancel": 17.647058823529413
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(((e - 1 & c) - e & ~((~e & c) * (~c & e) + (e & c) * (e | c))) * ((e & c) * (e | c) + (~e & c) * (~c & e) & e + ~(e - 1 & c)) + ((e & c) * (e | c) + (~e & c) * (~c & e) & (e - 1 & c) - e) * ((e - 1 & c) - e | (e & c) * (e | c) + (~e & c) * (~c & e))) & (e + (~e | a) + 1 ^ a)) * 2 - (e + (~e | a) + 1 ^ a ^ ((e - 1 & c) - e & ~((~e & c) * (~c & e) + (e & c) * (e | c))) * ((e & c) * (e | c) + (~e & c) * (~c & e) & e + ~(e - 1 & c)) + ((e & c) * (e | c) + (~e & c) * (~c & e) & (e - 1 & c) - e) * ((e - 1 & c) - e | (e & c) * (e | c) + (~e & c) * (~c & e)))",
                    "attributes": {
                        "numOps": 129,
                        "nestedExprLevel": 32,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 50.19305019305019,
                        "opsPercentages": {
                            "arithmetic": 24.031007751937985,
                            "mul": 16.27906976744186,
                            "bitwise": 59.68992248062015
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "msvc_O1": {
                    "expr": "(~((e - 1 & c) + ~(e - 1) & (~c & e) * (~e & c) + (c | e) * (c & e)) * ((e - 1 & c) + ~(e - 1) | (~c & e) * (~e & c) + (c | e) * (c & e)) + (~(~c & e) * (~e & c) + (c | e) * (c & e) & (e - 1 & c) + ~(e - 1)) * (~(e - 1 & c) + ~(e - 1) & (~c & e) * (~e & c) + (c | e) * (c & e)) & (e + 1 + (~e | a) | a) - (e + 1 + (~e | a) & a)) * 2 - ((e + 1 + (~e | a) | a) - (e + 1 + (~e | a) & a) ^ ((e - 1 & c) + ~(e - 1) & (~c & e) * (~e & c) + (c | e) * (c & e)) * ((e - 1 & c) + ~(e - 1) | (~c & e) * (~e & c) + (c | e) * (c & e)) + (~(~c & e) * (~e & c) + (c | e) * (c & e) & (e - 1 & c) + ~(e - 1)) * (~(e - 1 & c) + ~(e - 1) & (~c & e) * (~e & c) + (c | e) * (c & e)))",
                    "attributes": {
                        "numOps": 157,
                        "nestedExprLevel": 39,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 39.38223938223938,
                        "opsPercentages": {
                            "arithmetic": 28.662420382165603,
                            "mul": 13.375796178343949,
                            "bitwise": 57.961783439490446
                        },
                        "percentageDAGsCancel": 7.894736842105263
                    }
                },
                "clang_O3": {
                    "expr": "(~(~(~e & c) * (~c & e) + (e | c) * (e & c) & (e - 1 & c) - e) * (~(e - 1 & c) - e & (~e & c) * (~c & e) + (e | c) * (e & c)) + ((~e & c) * (~c & e) + (e | c) * (e & c) | (e - 1 & c) - e) * ((~e & c) * (~c & e) + (e | c) * (e & c) & (e - 1 & c) - e) & a) * 2 - ((~(~e & c) * (~c & e) + (e | c) * (e & c) & (e - 1 & c) - e) * (~(e - 1 & c) - e & (~e & c) * (~c & e) + (e | c) * (e & c)) + ((~e & c) * (~c & e) + (e | c) * (e & c) | (e - 1 & c) - e) * ((~e & c) * (~c & e) + (e | c) * (e & c) & (e - 1 & c) - e) ^ a)",
                    "attributes": {
                        "numOps": 119,
                        "nestedExprLevel": 28,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 54.054054054054056,
                        "opsPercentages": {
                            "arithmetic": 22.689075630252102,
                            "mul": 17.647058823529413,
                            "bitwise": 59.66386554621849
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "clang_default": {
                    "expr": "((((e ^ 0xffffffff | a) + e + 1 | a) - ((e ^ 0xffffffff | a) + e + 1 & a) & (((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) & (c & e - 1) + (e - 1 ^ 0xffffffff)) * ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) | (c & e - 1) + (e - 1 ^ 0xffffffff)) + ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) & ((c & e - 1) + (e - 1 ^ 0xffffffff) ^ 0xffffffff)) * (((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) ^ 0xffffffff) & (c & e - 1) + (e - 1 ^ 0xffffffff)) ^ 0xffffffff)) + (((e ^ 0xffffffff | a) + e + 1 | a) - ((e ^ 0xffffffff | a) + e + 1 & a) & (((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) & (c & e - 1) + (e - 1 ^ 0xffffffff)) * ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) | (c & e - 1) + (e - 1 ^ 0xffffffff)) + ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) & ((c & e - 1) + (e - 1 ^ 0xffffffff) ^ 0xffffffff)) * (((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) ^ 0xffffffff) & (c & e - 1) + (e - 1 ^ 0xffffffff)) ^ 0xffffffff))) - (((e ^ 0xffffffff | a) + e + 1 | a) - ((e ^ 0xffffffff | a) + e + 1 & a) ^ ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) & (c & e - 1) + (e - 1 ^ 0xffffffff)) * ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) | (c & e - 1) + (e - 1 ^ 0xffffffff)) + ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) & ((c & e - 1) + (e - 1 ^ 0xffffffff) ^ 0xffffffff)) * (((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) ^ 0xffffffff) & (c & e - 1) + (e - 1 ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 235,
                        "nestedExprLevel": 80,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 9.266409266409266,
                        "opsPercentages": {
                            "arithmetic": 28.936170212765955,
                            "mul": 12.76595744680851,
                            "bitwise": 58.29787234042553
                        },
                        "percentageDAGsCancel": 6.0606060606060606
                    }
                },
                "msvc_default": {
                    "expr": "((((~e | a) + 1 + e | a) - ((~e | a) + 1 + e & a) & ~(((e & c) * (e | c) + (~c & e) * (~e & c) & (e - 1 & c) + ~(e - 1)) * ((e & c) * (e | c) + (~c & e) * (~e & c) | (e - 1 & c) + ~(e - 1)) + ((e & c) * (e | c) + (~c & e) * (~e & c) & ~((e - 1 & c) + ~(e - 1))) * (~((e & c) * (e | c) + (~c & e) * (~e & c)) & (e - 1 & c) + ~(e - 1)))) + (((~e | a) + 1 + e | a) - ((~e | a) + 1 + e & a) & ~(((e & c) * (e | c) + (~c & e) * (~e & c) & (e - 1 & c) + ~(e - 1)) * ((e & c) * (e | c) + (~c & e) * (~e & c) | (e - 1 & c) + ~(e - 1)) + ((e & c) * (e | c) + (~c & e) * (~e & c) & ~((e - 1 & c) + ~(e - 1))) * (~((e & c) * (e | c) + (~c & e) * (~e & c) ) & (e - 1 & c) + ~(e - 1))))) - (((~e | a) + 1 + e | a) - ((~e | a) + 1 + e & a) ^ ((e & c) * (e | c) + (~c & e) * (~e & c) & (e - 1 & c) + ~(e - 1)) * ((e & c) * (e | c) + (~c & e) * (~e & c) | (e - 1 & c) + ~(e - 1)) + ((e & c) * (e | c) + (~c & e) * (~e & c) & ~((e - 1 & c) + ~(e - 1))) * (~((e & c) * (e | c) + (~c & e) * (~e & c)) & (e - 1 & c) + ~(e - 1)))",
                    "attributes": {
                        "numOps": 235,
                        "nestedExprLevel": 67,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 9.266409266409266,
                        "opsPercentages": {
                            "arithmetic": 28.936170212765955,
                            "mul": 12.76595744680851,
                            "bitwise": 58.29787234042553
                        },
                        "percentageDAGsCancel": 6.0606060606060606
                    }
                },
                "gcc_O3": {
                    "expr": "(~(e + ~e - 1 & c & (~c & e) * (~e & c) + (e & c) * (e | c)) * (~(~c & e) * (~e & c) + (e & c) * (e | c) & e - 1 & c - e) + ((~c & e) * (~e & c) + (e & c) * (e | c) | e - 1 & c - e) * ((~c & e) * (~e & c) + (e & c) * (e | c) & e - 1 & c - e) & a) * 2 - (a ^ (e + ~e - 1 & c & (~c & e) * (~e & c) + (e & c) * (e | c)) * (~(~c & e) * (~e & c) + (e & c) * (e | c) & e - 1 & c - e) + ((~c & e) * (~e & c) + (e & c) * (e | c) | e - 1 & c - e) * ((~c & e) * (~e & c) + (e & c) * (e | c) & e - 1 & c - e))",
                    "attributes": {
                        "numOps": 119,
                        "nestedExprLevel": 27,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 54.054054054054056,
                        "opsPercentages": {
                            "arithmetic": 22.689075630252102,
                            "mul": 17.647058823529413,
                            "bitwise": 59.66386554621849
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                }
            }
        },
        {
            "num": 181,
            "gt": {
                "expr": "(((b^e)+(b+(e+e))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 0.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((b - e) - ((b | ~ e) + (b | ~ e))) - 2) | ((b - ~ ((e | e) + (e & e))) - 1)) << 1) - ((((b - e) - ((b | ~ e) + (b | ~ e))) - 2) ^ ((b - ~ ((e | e) + (e & e))) - 1))",
                "attributes": {
                    "numOps": 32,
                    "nestedExprLevel": 20,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 46.875,
                        "mul": 0.0,
                        "bitwise": 53.125
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b - ~(e * 2)) - 1 | ((b - e) + (~e | b) * -2) - 2) * 2 - (((b - e) + (~e | b) * -2) - 2 ^ (b - ~(e * 2)) - 1)",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 10,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 18.75,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 19.230769230769234,
                            "bitwise": 30.76923076923077
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(b + e * 2 * 2 | (b - ((~e | b) * 2 + 2)) - e * 2) - (b + e * 2 ^ (b - ((~e | b) * 2 + 2)) - e)",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 8,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 34.375,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 28.57142857142857,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(((b - e) + (~e | b) * -2) - 2 | b + e * 2) * 2 - (((b - e) + (~e | b) * -2) - 2 ^ b + e * 2)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 7,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 31.25,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 22.727272727272727,
                            "bitwise": 27.27272727272727
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff))) - 2 | (b - (e * 2 ^ 0xffffffff)) - 1) * 2 - (((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff))) - 2 ^ (b - (e * 2 ^ 0xffffffff)) - 1)",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 12,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 12.5,
                        "opsPercentages": {
                            "arithmetic": 46.42857142857143,
                            "mul": 10.714285714285714,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((b - e) - ((~e | b) + (~e | b))) - 2 | (b - ~(e * 2)) - 1) * 2 - (((b - e) - ((~e | b) + (~e | b))) - 2 ^ (b - ~(e * 2)) - 1)",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 12,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 12.5,
                        "opsPercentages": {
                            "arithmetic": 46.42857142857143,
                            "mul": 10.714285714285714,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((b - e) + (~e | b) * -2) - 2 | b + e * 2) * 2 - (((b - e) + (~e | b) * -2) - 2 ^ b + e * 2)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 7,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 31.25,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 22.727272727272727,
                            "bitwise": 27.27272727272727
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 182,
            "gt": {
                "expr": "(((a^a)+(((~b)^(a+b))|b)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "(((a | a) - (a & a)) - ~ (((((- b - 1) | ((a | b) + (a & b))) - ((- b - 1) & ((a | b) + (a & b)))) & ~ b) + b)) - 1",
                "attributes": {
                    "numOps": 22,
                    "nestedExprLevel": 13,
                    "numDAGs": 17,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 23.52941176470588
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(b + a) | b",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 86.36363636363636,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~b | (a | b) + (a & b)) - (~b & (a | b) + (a & b)) & ~b) + b",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 6,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 36.36363636363637,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 0.0,
                            "bitwise": 71.42857142857143
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~(a + b) | b",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 86.36363636363636,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((0xffffffff - b | (a | b) + (a & b)) - (0xffffffff - b & (a | b) + (a & b)) & (b ^ 0xffffffff)) + b ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 8,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 22.727272727272727,
                        "opsPercentages": {
                            "arithmetic": 47.05882352941176,
                            "mul": 0.0,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ~(((0xffffffff - b | (a | b) + (a & b)) - (0xffffffff - b & (a | b) + (a & b)) & ~b) + b)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 7,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 22.727272727272727,
                        "opsPercentages": {
                            "arithmetic": 47.05882352941176,
                            "mul": 0.0,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(a + b) | b",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 86.36363636363636,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 183,
            "gt": {
                "expr": "(((e+(d*a))|((d^a)&(a-e))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 16.666666666666664,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((e | ((d & a) * (d | a) + (d & ~ a) * (~ d & a))) + (e & ((d & a) * (d | a) + (d & ~ a) * (~ d & a)))) + ((~ ((d | a) - (d & a)) | (((a & ~ e) + (a & ~ e)) - (a ^ e))) - ~ ((d | a) - (d & a)))) + 1) + ((- ((e | ((d & a) * (d | a) + (d & ~ a) * (~ d & a))) + (e & ((d & a) * (d | a) + (d & ~ a) * (~ d & a)))) - 1) | (- ((~ ((d | a) - (d & a)) | (((a & ~ e) + (a & ~ e)) - (a ^ e))) - ~ ((d | a) - (d & a))) - 1))",
                "attributes": {
                    "numOps": 84,
                    "nestedExprLevel": 42,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 27.380952380952383,
                        "mul": 9.523809523809524,
                        "bitwise": 63.095238095238095
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((d ^ a) & (~e & a) * 2 - (a ^ e) & (d & a) * (d | a) + (~d & a) * (~a & d) + e) + ((d ^ a) & (~e & a) * 2 - (a ^ e)) + (d & a) * (d | a) + (~d & a) * (~a & d) + e + 1",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 10,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 53.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 15.384615384615385,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "a | d + 2 + (((~(a | d - a & d) - (~e & a) * 2 - (a ^ e) | ~(a | d - a & d)) - 1 | ~(~d & a) * (~a & d) + a & d * a | d | e - (~d & a) * (~a & d) + a & d * a | d & e) - a & d) + (~e & a) * 2 - (a ^ e) | ~(a | d - a & d) + (~d & a) * (~a & d) + a & d * a | d & e + (~d & a) * (~a & d) + a & d * a | d | e",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 12,
                        "numDAGs": 48,
                        "percentDecreaseByOps": 8.333333333333332,
                        "opsPercentages": {
                            "arithmetic": 23.376623376623375,
                            "mul": 12.987012987012985,
                            "bitwise": 63.63636363636363
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "clang_O3": {
                    "expr": "(~e & a) * 2 - (e ^ a) & (d ^ a) | (~d & a) * (~a & d) + e + (d | a) * (d & a)",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 5,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 78.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "clang_default": {
                    "expr": "(e | (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a)) + (e & (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a)) + (((d | a) - (d & a) ^ 0xffffffff | ((a & (e ^ 0xffffffff)) + (a & (e ^ 0xffffffff))) - (a ^ e)) - ((d | a) - (d & a) ^ 0xffffffff)) + 1 + (0xffffffff - ((e | (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a)) + (e & (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a))) | 0xffffffff - (((d | a) - (d & a) ^ 0xffffffff | ((a & (e ^ 0xffffffff)) + (a & (e ^ 0xffffffff))) - (a ^ e)) - ((d | a) - (d & a) ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 82,
                        "nestedExprLevel": 37,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 2.380952380952381,
                        "opsPercentages": {
                            "arithmetic": 25.609756097560975,
                            "mul": 9.75609756097561,
                            "bitwise": 64.63414634146342
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "msvc_default": {
                    "expr": "((d & a) * (d | a) + (~a & d) * (~d & a) | e) + ((d & a) * (d | a) + (~a & d) * (~d & a) & e) + ((~((d | a) - (d & a)) | ((~e & a) + (~e & a)) - (a ^ e)) - ~((d | a) - (d & a))) + 1 + (0xffffffff - (((d & a) * (d | a) + (~a & d) * (~d & a) | e) + ((d & a) * (d | a) + (~a & d) * (~d & a) & e)) | 0xffffffff - ((~((d | a) - (d & a)) | ((~e & a) + (~e & a)) - (a ^ e)) - ~((d | a) - (d & a))))",
                    "attributes": {
                        "numOps": 82,
                        "nestedExprLevel": 31,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 2.380952380952381,
                        "opsPercentages": {
                            "arithmetic": 25.609756097560975,
                            "mul": 9.75609756097561,
                            "bitwise": 64.63414634146342
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "gcc_O3": {
                    "expr": "((~e & a) * 2 - (e ^ a) & (d ^ a) + (~a & d) * (~d & a) + (d & a) * (d | a) + e) - ((~a & d) * (~d & a) + (d & a) * (d | a) + e & (~e & a) * 2 - (e ^ a) & (d ^ a))",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 10,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 55.952380952380956,
                        "opsPercentages": {
                            "arithmetic": 21.62162162162162,
                            "mul": 16.216216216216218,
                            "bitwise": 62.16216216216216
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                }
            }
        },
        {
            "num": 184,
            "gt": {
                "expr": "(((~((c|e)+c))-(-e)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 0.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((- ((((c & ~ e) + e) ^ c) + ((((c & ~ e) + e) & c) + (((c & ~ e) + e) & c))) - 1) + ~ (~ e + 1)) + 1",
                "attributes": {
                    "numOps": 21,
                    "nestedExprLevel": 12,
                    "numDAGs": 13,
                    "opsPercentages": {
                        "arithmetic": 47.61904761904761,
                        "mul": 0.0,
                        "bitwise": 52.38095238095239
                    },
                    "percentageDAGsCancel": 7.6923076923076925
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "e + ~((e + (~e & c) & c) * 2 + (e + (~e & c) ^ c))",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 5,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 42.857142857142854,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 8.333333333333332,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 33.33333333333333
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~e + 1) + ((~e & c) + e & c) * -2) - ((~e & c) + e ^ c)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 28.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 6.666666666666667,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_O3": {
                    "expr": "~((~e & c) + e ^ c) + e + ((~e & c) + e & c) * -2",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 38.095238095238095,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 7.6923076923076925,
                            "bitwise": 53.84615384615385
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_default": {
                    "expr": "((e ^ 0xffffffff) + 1 ^ 0xffffffff) - (((c & (e ^ 0xffffffff)) + e ^ c) + ((c & (e ^ 0xffffffff)) + e & c) + ((c & (e ^ 0xffffffff)) + e & c))",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 10,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 14.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 38.88888888888889,
                            "mul": 0.0,
                            "bitwise": 61.111111111111114
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "msvc_default": {
                    "expr": "~(~e + 1) - (((~e & c) + e ^ c) + ((~e & c) + e & c) + ((~e & c) + e & c))",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 6,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 14.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 38.88888888888889,
                            "mul": 0.0,
                            "bitwise": 61.111111111111114
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "gcc_O3": {
                    "expr": "e + ~(((~e & c) + e ^ c) + ((~e & c) + e & c) * 2)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 5,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 42.857142857142854,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 8.333333333333332,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 22.22222222222222
                    }
                }
            }
        },
        {
            "num": 185,
            "gt": {
                "expr": "((-((-((e*e)&c))^(e&c))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 16.666666666666664,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (((~ (((~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) | c) - ~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) - 1) - ((~ e | c) - ~ e)) - ((~ (((~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) | c) - ~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) - 1) | ~ ((~ e | c) - ~ e)) + (~ (((~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) | c) - ~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) - 1) | ~ ((~ e | c) - ~ e)))) - 2) + 1",
                "attributes": {
                    "numOps": 94,
                    "nestedExprLevel": 38,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 21.27659574468085,
                        "mul": 12.76595744680851,
                        "bitwise": 65.95744680851064
                    },
                    "percentageDAGsCancel": 21.73913043478261
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(c & e) | -(e * e & c)) * 2 + (e * e & c) + (c & e) + 2",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 86.17021276595744,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 23.076923076923077,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "msvc_O1": {
                    "expr": "((((~(e + 1 + ~e | c) | ~((~(e * e) | c) + e * e)) * 2 + 2) - ~((~(e * e) | c) + e * e)) - ~e) + ~e | c",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 10,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 72.3404255319149,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 19.230769230769234,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "clang_O3": {
                    "expr": "(e & c) + e * e & c + (~(e & c) | -e * e & c) * 2 + 2",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 86.17021276595744,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 23.076923076923077,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((((e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff | c) - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff)) - 1 ^ 0xffffffff) - ((e ^ 0xffffffff | c) - (e ^ 0xffffffff))) - ((((e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff | c) - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff)) - 1 ^ 0xffffffff | (e ^ 0xffffffff | c) - (e ^ 0xffffffff) ^ 0xffffffff ) + (((e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff | c) - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff)) - 1 ^ 0xffffffff | (e ^ 0xffffffff | c) - (e ^ 0xffffffff) ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 82,
                        "nestedExprLevel": 34,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 12.76595744680851,
                        "opsPercentages": {
                            "arithmetic": 24.390243902439025,
                            "mul": 14.634146341463413,
                            "bitwise": 60.97560975609756
                        },
                        "percentageDAGsCancel": 19.047619047619047
                    }
                },
                "msvc_default": {
                    "expr": "~(((~(((~(e * e) | c) - ~(e * e)) - 1) - ((~e | c) - ~e)) - ((~(((~(e * e) | c) - ~(e * e)) - 1) | ~((~e | c) - ~e)) + (~(((~(e * e) | c) - ~(e * e)) - 1) | ~((~e | c) - ~e)))) - 2) + 1",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 23,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 51.06382978723404,
                        "opsPercentages": {
                            "arithmetic": 30.434782608695656,
                            "mul": 13.043478260869565,
                            "bitwise": 56.52173913043478
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "gcc_O3": {
                    "expr": "e * e & c + (e & c) + 2 + (-e * e & c | ~(e & c)) * 2",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 86.17021276595744,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 23.076923076923077,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                }
            }
        },
        {
            "num": 186,
            "gt": {
                "expr": "(((-e)*((((b*d)+d)^(-b))+d)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 28.57142857142857,
                        "bitwise": 14.285714285714285
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ e + 1) & (((((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) | ~ (b - 1)) - ((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) & ~ (b - 1))) | d) + ((((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) | ~ (b - 1)) - ((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) & ~ (b - 1))) & d))) * ((~ e + 1) | (((((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) | ~ (b - 1)) - ((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) & ~ (b - 1))) | d) + ((((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) | ~ (b - 1)) - ((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) & ~ (b - 1))) & d))) + ((~ e + 1) & ~ (((((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) | ~ (b - 1)) - ((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) & ~ (b - 1))) | d) + ((((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) | ~ (b - 1)) - ((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) & ~ (b - 1))) & d))) * (~ (~ e + 1) & (((((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) | ~ (b - 1)) - ((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) & ~ (b - 1))) | d) + ((((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) | ~ (b - 1)) - ((((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) ^ ~ d) + ((((b & d) * (b | d) + (b & ~ d) * (~ b & d)) | d) << 1)) + 1) & ~ (b - 1))) & d)))",
                "attributes": {
                    "numOps": 469,
                    "nestedExprLevel": 218,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 20.68230277185501,
                        "mul": 14.072494669509595,
                        "bitwise": 65.2452025586354
                    },
                    "percentageDAGsCancel": 3.0303030303030303
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(d + (((~b & d) * (~d & b) + (b & d) * (b | d) | d) * 2 + ~((~b & d) * (~d & b) + (b & d) * (b | d) ^ d) + 1 ^ -b) & e - 1) * (-e & ~(d + (((~b & d) * (~d & b) + (b & d) * (b | d) | d) * 2 + ~((~b & d) * (~d & b) + (b & d) * (b | d) ^ d) + 1 ^ -b))) + (-e & d + (((~b & d) * (~d & b) + (b & d) * (b | d) | d) * 2 + ~((~b & d) * (~d & b) + (b & d) * (b | d) ^ d) + 1 ^ -b)) * (d + (((~b & d) * (~d & b) + (b & d) * (b | d) | d) * 2 + ~((~b & d) * (~d & b) + (b & d) * (b | d) ^ d) + 1 ^ -b) | -e)",
                    "attributes": {
                        "numOps": 120,
                        "nestedExprLevel": 34,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 74.4136460554371,
                        "opsPercentages": {
                            "arithmetic": 24.166666666666668,
                            "mul": 18.333333333333332,
                            "bitwise": 57.49999999999999
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~((((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 | ~(b - 1)) - (((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 & ~(b - 1)) & d) + ((((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 | ~(b - 1)) - (((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 & ~(b - 1)) | d) & -e) * (~-e & ((((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 | ~(b - 1)) - (((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 & ~(b - 1)) & d) + ((((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 | ~(b - 1)) - (((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 & ~(b - 1)) | d)) + (-e | ((((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 | ~(b - 1)) - (((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 & ~(b - 1)) & d) + ((((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 | ~(b - 1)) - (((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 & ~(b - 1)) | d)) * (-e & ((((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 | ~(b - 1)) - (((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 & ~(b - 1)) & d) + ((((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 | ~(b - 1)) - (((~b & d) * (~d & b) + (b | d) * (b & d) * 2 | d * 2) + ((~b & d) * (~d & b) + (b | d) * (b & d) ^ ~d) + 1 & ~(b - 1)) | d))",
                    "attributes": {
                        "numOps": 481,
                        "nestedExprLevel": 126,
                        "numDAGs": 35,
                        "percentDecreaseByOps": -2.55863539445629,
                        "opsPercentages": {
                            "arithmetic": 20.16632016632017,
                            "mul": 20.374220374220375,
                            "bitwise": 59.45945945945946
                        },
                        "percentageDAGsCancel": 8.571428571428571
                    }
                },
                "clang_O3": {
                    "expr": "(e - 1 & d) * (~d & -e) + (d | -e) * (d & -e)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 97.44136460554371,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 16.666666666666664,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e ^ 0xffffffff) + 1 & ((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 | b - 1 ^ 0xffffffff) - (((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 & (b - 1 ^ 0xffffffff)) | d) + ((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 | b - 1 ^ 0xffffffff) - (((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 & (b - 1 ^ 0xffffffff)) & d)) * ((e ^ 0xffffffff) + 1 | ((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 | b - 1 ^ 0xffffffff) - (((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 & (b - 1 ^ 0xffffffff)) | d) + ((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 | b - 1 ^ 0xffffffff) - (((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 & (b - 1 ^ 0xffffffff)) & d)) + ((e ^ 0xffffffff) + 1 & (((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 | b - 1 ^ 0xffffffff) - (((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 & (b - 1 ^ 0xffffffff)) | d) + ((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 | b - 1 ^ 0xffffffff) - (((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 & (b - 1 ^ 0xffffffff)) & d) ^ 0xffffffff)) * (((e ^ 0xffffffff) + 1 ^ 0xffffffff) & ((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 | b - 1 ^ 0xffffffff) - (((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 & (b - 1 ^ 0xffffffff)) | d) + ((((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 | b - 1 ^ 0xffffffff) - (((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) ^ d ^ 0xffffffff) + ((b & d) * (b | d) + (b & (d ^ 0xffffffff)) * ((b ^ 0xffffffff) & d) | d) * 2 + 1 & (b - 1 ^ 0xffffffff)) & d))",
                    "attributes": {
                        "numOps": 469,
                        "nestedExprLevel": 167,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 20.68230277185501,
                            "mul": 17.48400852878465,
                            "bitwise": 61.833688699360344
                        },
                        "percentageDAGsCancel": 2.941176470588235
                    }
                },
                "msvc_default": {
                    "expr": "(~e + 1 & ((((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 | ~(b - 1)) - (((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 & ~(b - 1)) | d) + ((((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 | ~(b - 1)) - (((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 & ~(b - 1)) & d)) * (~e + 1 | ((((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 | ~(b - 1)) - (((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 & ~(b - 1)) | d) + ((((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 | ~(b - 1)) - (((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 & ~(b - 1)) & d)) + (~e + 1 & ~(((((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 | ~(b - 1)) - (((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 & ~(b - 1)) | d) + ((((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 | ~(b - 1)) - (((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 & ~(b - 1)) & d))) * (~(~e + 1) & ((((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 | ~(b - 1)) - (((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 & ~(b - 1)) | d) + ((((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 | ~(b - 1)) - (((b & d) * (b | d) + (~d & b) * (~b & d) ^ ~d) + 1 + ((b & d) * (b | d) + (~d & b) * (~b & d) | d) * 2 & ~(b - 1)) & d))",
                    "attributes": {
                        "numOps": 469,
                        "nestedExprLevel": 127,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 20.68230277185501,
                            "mul": 17.48400852878465,
                            "bitwise": 61.833688699360344
                        },
                        "percentageDAGsCancel": 3.0303030303030303
                    }
                },
                "gcc_O3": {
                    "expr": "(~d & -e) * (e - 1 & d) + (-e & d) * (-e | d)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 97.44136460554371,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 16.666666666666664,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 20.0
                    }
                }
            }
        },
        {
            "num": 187,
            "gt": {
                "expr": "(((((b-(b&b))&b)*(b^e))+(((b^e)^b)*(e&e))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 20.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 66.66666666666666
                }
            },
            "mba": {
                "expr": "((((((~ ((b + ~ (((~ b | b) + b) + 1)) + 1) | b) - ~ ((b + ~ (((~ b | b) + b) + 1)) + 1)) & (((b - e) - ((b | ~ e) + (b | ~ e))) - 2)) * (((~ ((b + ~ (((~ b | b) + b) + 1)) + 1) | b) - ~ ((b + ~ (((~ b | b) + b) + 1)) + 1)) | (((b - e) - ((b | ~ e) + (b | ~ e))) - 2)) + (((~ ((b + ~ (((~ b | b) + b) + 1)) + 1) | b) - ~ ((b + ~ (((~ b | b) + b) + 1)) + 1)) & ~ (((b - e) - ((b | ~ e) + (b | ~ e))) - 2)) * (~ ((~ ((b + ~ (((~ b | b) + b) + 1)) + 1) | b) - ~ ((b + ~ (((~ b | b) + b) + 1)) + 1)) & (((b - e) - ((b | ~ e) + (b | ~ e))) - 2))) | (((((((b - e) - ((b | ~ e) << 1)) - 2) | b) - ((((b - e) - ((b | ~ e) << 1)) - 2) & b)) & (((~ e | e) + e) + 1)) * ((((((b - e) - ((b | ~ e) << 1)) - 2) | b) - ((((b - e) - ((b | ~ e) << 1)) - 2) & b)) | (((~ e | e) + e) + 1)) + ((((((b - e) - ((b | ~ e) << 1)) - 2) | b) - ((((b - e) - ((b | ~ e) << 1)) - 2) & b)) & ~ (((~ e | e) + e) + 1)) * (~ (((((b - e) - ((b | ~ e) << 1)) - 2) | b) - ((((b - e) - ((b | ~ e) << 1)) - 2) & b)) & (((~ e | e) + e) + 1)))) + (((((~ ((b + ~ (((~ b | b) + b) + 1)) + 1) | b) - ~ ((b + ~ (((~ b | b) + b) + 1)) + 1)) & (((b - e) - ((b | ~ e) + (b | ~ e))) - 2)) * (((~ ((b + ~ (((~ b | b) + b) + 1)) + 1) | b) - ~ ((b + ~ (((~ b | b) + b) + 1)) + 1)) | (((b - e) - ((b | ~ e) + (b | ~ e))) - 2)) + (((~ ((b + ~ (((~ b | b) + b) + 1)) + 1) | b) - ~ ((b + ~ (((~ b | b) + b) + 1)) + 1)) & ~ (((b - e) - ((b | ~ e) + (b | ~ e))) - 2)) * (~ ((~ ((b + ~ (((~ b | b) + b) + 1)) + 1) | b) - ~ ((b + ~ (((~ b | b) + b) + 1)) + 1)) & (((b - e) - ((b | ~ e) + (b | ~ e))) - 2))) | (((((((b - e) - ((b | ~ e) << 1)) - 2) | b) - ((((b - e) - ((b | ~ e) << 1)) - 2) & b)) & (((~ e | e) + e) + 1)) * ((((((b - e) - ((b | ~ e) << 1)) - 2) | b) - ((((b - e) - ((b | ~ e) << 1)) - 2) & b)) | (((~ e | e) + e) + 1)) + ((((((b - e) - ((b | ~ e) << 1)) - 2) | b) - ((((b - e) - ((b | ~ e) << 1)) - 2) & b)) & ~ (((~ e | e) + e) + 1)) * (~ (((((b - e) - ((b | ~ e) << 1)) - 2) | b) - ((((b - e) - ((b | ~ e) << 1)) - 2) & b)) & (((~ e | e) + e) + 1))))) - (((((~ ((b + ~ (((~ b | b) + b) + 1)) + 1) | b) - ~ ((b + ~ (((~ b | b) + b) + 1)) + 1)) & (((b - e) - ((b | ~ e) + (b | ~ e))) - 2)) * (((~ ((b + ~ (((~ b | b) + b) + 1)) + 1) | b) - ~ ((b + ~ (((~ b | b) + b) + 1)) + 1)) | (((b - e) - ((b | ~ e) + (b | ~ e))) - 2)) + (((~ ((b + ~ (((~ b | b) + b) + 1)) + 1) | b) - ~ ((b + ~ (((~ b | b) + b) + 1)) + 1)) & ~ (((b - e) - ((b | ~ e) + (b | ~ e))) - 2)) * (~ ((~ ((b + ~ (((~ b | b) + b) + 1)) + 1) | b) - ~ ((b + ~ (((~ b | b) + b) + 1)) + 1)) & (((b - e) - ((b | ~ e) + (b | ~ e))) - 2))) ^ (((((((b - e) - ((b | ~ e) << 1)) - 2) | b) - ((((b - e) - ((b | ~ e) << 1)) - 2) & b)) & (((~ e | e) + e) + 1)) * ((((((b - e) - ((b | ~ e) << 1)) - 2) | b) - ((((b - e) - ((b | ~ e) << 1)) - 2) & b)) | (((~ e | e) + e) + 1)) + ((((((b - e) - ((b | ~ e) << 1)) - 2) | b) - ((((b - e) - ((b | ~ e) << 1)) - 2) & b)) & ~ (((~ e | e) + e) + 1)) * (~ (((((b - e) - ((b | ~ e) << 1)) - 2) | b) - ((((b - e) - ((b | ~ e) << 1)) - 2) & b)) & (((~ e | e) + e) + 1))))",
                "attributes": {
                    "numOps": 599,
                    "nestedExprLevel": 336,
                    "numDAGs": 47,
                    "opsPercentages": {
                        "arithmetic": 45.40901502504174,
                        "mul": 2.003338898163606,
                        "bitwise": 52.587646076794655
                    },
                    "percentageDAGsCancel": 34.04255319148936
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~e | b) * 2 + ~b + e + 2 ^ b) & e) * ((((b - e) + (~e | b) * -2) - 2 ^ b) & ~e) + ((((b - e) + (~e | b) * -2) - 2 ^ b) & e) * (((b - e) + (~e | b) * -2) - 2 ^ b | e)",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 14,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 93.32220367278798,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 15.0,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 28.57142857142857
                    }
                },
                "msvc_O1": {
                    "expr": "(~(((b + (b | ~e) * -2) - e) - 2 | b) - (((b + (b | ~e) * -2) - e) - 2 & b) & e) * ((((b + (b | ~e) * -2) - e) - 2 | b) - (((b + (b | ~e) * -2) - e) - 2 & b) & ~e) + ((((b + (b | ~e) * -2) - e) - 2 | b) - (((b + (b | ~e) * -2) - e) - 2 & b) | e) * ((((b + (b | ~e) * -2) - e) - 2 | b) - (((b + (b | ~e) * -2) - e) - 2 & b) & e)",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 30,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 87.14524207011685,
                        "opsPercentages": {
                            "arithmetic": 48.05194805194805,
                            "mul": 12.987012987012985,
                            "bitwise": 38.961038961038966
                        },
                        "percentageDAGsCancel": 26.31578947368421
                    }
                },
                "clang_O3": {
                    "expr": "(~b & e) * (~e & b) + (b | e) * (b & e)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 98.49749582637729,
                        "opsPercentages": {
                            "arithmetic": 11.11111111111111,
                            "mul": 22.22222222222222,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | b) - (b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) & ((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff)) ) - 2) * ((b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | b) - (b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) | ((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff))) - 2) + ((b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | b) - (b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) & (((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff))) - 2 ^ 0xffffffff)) * (((b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | b) - (b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff ) ^ 0xffffffff) & ((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff))) - 2) | ((((b - e) + (b | e ^ 0xffffffff) * -2) - 2 | b) - (((b - e) + (b | e ^ 0xffffffff) * -2) - 2 & b) & (e ^ 0xffffffff | e) + e + 1) * ((((b - e) + (b | e ^ 0xffffffff) * -2) - 2 | b) - (((b - e) + (b | e ^ 0xffffffff) * -2) - 2 & b) | (e ^ 0xffffffff | e) + e + 1) + ((((b - e) + (b | e ^ 0xffffffff) * -2) - 2 | b) - (((b - e) + (b | e ^ 0xffffffff) * -2) - 2 & b) & ((e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff)) * (((((b - e) + (b | e ^ 0xffffffff) * -2) - 2 | b) - (((b - e) + (b | e ^ 0xffffffff) * -2) - 2 & b) ^ 0xffffffff) & (e ^ 0xffffffff | e) + e + 1)) + (((b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | b) - (b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) & ((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff))) - 2) * ((b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | b) - (b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) | ((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff))) - 2) + ((b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | b) - (b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) & (((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff)) ) - 2 ^ 0xffffffff)) * (((b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | b) - (b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) ^ 0xffffffff) & ((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff))) - 2) | ((((b - e) + (b | e ^ 0xffffffff) * -2) - 2 | b) - (((b - e) + (b | e ^ 0xffffffff) * -2) - 2 & b) & (e ^ 0xffffffff | e) + e + 1) * ((((b - e) + (b | e ^ 0xffffffff) * -2) - 2 | b) - (((b - e) + (b | e ^ 0xffffffff) * -2) - 2 & b) | (e ^ 0xffffffff | e) + e + 1) + ((((b - e) + (b | e ^ 0xffffffff) * -2) - 2 | b) - (((b - e) + (b | e ^ 0xffffffff) * -2) - 2 & b) & ((e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff)) * (((((b - e) + (b | e ^ 0xffffffff) * -2) - 2 | b) - (((b - e) + (b | e ^ 0xffffffff) * -2) - 2 & b) ^ 0xffffffff) & (e ^ 0xffffffff | e) + e + 1))) - (((b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | b) - (b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) & ((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff))) - 2) * ((b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | b) - (b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) | ((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff))) - 2) + ((b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | b) - (b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) & (((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff)) ) - 2 ^ 0xffffffff)) * (((b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | b) - (b + ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) ^ 0xffffffff) & ((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff))) - 2) ^ ((((b - e) + (b | e ^ 0xffffffff) * -2) - 2 | b) - (((b - e) + (b | e ^ 0xffffffff) * -2) - 2 & b) & (e ^ 0xffffffff | e) + e + 1) * ((((b - e) + (b | e ^ 0xffffffff) * -2) - 2 | b) - (((b - e) + (b | e ^ 0xffffffff) * -2) - 2 & b) | (e ^ 0xffffffff | e) + e + 1) + ((((b - e) + (b | e ^ 0xffffffff) * -2) - 2 | b) - (((b - e) + (b | e ^ 0xffffffff) * -2) - 2 & b) & ((e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff)) * (((((b - e) + (b | e ^ 0xffffffff) * -2) - 2 | b) - (((b - e) + (b | e ^ 0xffffffff) * -2) - 2 & b) ^ 0xffffffff) & (e ^ 0xffffffff | e) + e + 1))",
                    "attributes": {
                        "numOps": 623,
                        "nestedExprLevel": 198,
                        "numDAGs": 48,
                        "percentDecreaseByOps": -4.006677796327212,
                        "opsPercentages": {
                            "arithmetic": 47.512038523274484,
                            "mul": 5.778491171749598,
                            "bitwise": 46.70947030497592
                        },
                        "percentageDAGsCancel": 20.833333333333336
                    }
                },
                "msvc_default": {
                    "expr": "((((~(b + 1 + ~b) | b) - ~(b + 1 + ~b) & ((b - e) - ((~e | b) + (~e | b))) - 2) * ((~(b + 1 + ~b) | b) - ~(b + 1 + ~b) | ((b - e) - ((~e | b) + (~e | b))) - 2) + ((~(b + 1 + ~b) | b) - ~(b + 1 + ~b) & ~(((b - e) - ((~e | b) + (~e | b))) - 2)) * (~((~(b + 1 + ~b) | b) - ~(b + 1 + ~b)) & ((b - e) - ((~e | b) + (~e | b))) - 2) | ((((b - e) + (~e | b) * -2) - 2 | b) - (((b - e) + (~e | b) * -2) - 2 & b) & e) * ((((b - e) + (~e | b) * -2) - 2 | b) - (((b - e) + (~e | b) * -2) - 2 & b) | e) + ((((b - e) + (~e | b) * -2) - 2 | b) - (((b - e) + (~e | b) * -2) - 2 & b) & ~e) * (~((((b - e) + (~e | b) * -2) - 2 | b) - (((b - e) + (~e | b) * -2) - 2 & b)) & e)) + (((~(b + 1 + ~b) | b) - ~(b + 1 + ~b) & ((b - e) - ((~e | b) + (~e | b))) - 2) * ((~(b + 1 + ~b) | b) - ~(b + 1 + ~b) | ((b - e) - ((~e | b) + (~e | b))) - 2) + ((~(b + 1 + ~b) | b) - ~(b + 1 + ~b) & ~(((b - e) - ((~e | b) + (~e | b))) - 2)) * (~((~(b + 1 + ~b) | b) - ~(b + 1 + ~b)) & ((b - e) - ((~e | b) + (~e | b))) - 2) | ((((b - e) + (~e | b) * -2) - 2 | b) - (((b - e) + (~e | b) * -2) - 2 & b) & e) * ((((b - e) + (~e | b) * -2) - 2 | b) - (((b - e) + (~e | b) * -2) - 2 & b) | e) + ((((b - e) + (~e | b) * -2) - 2 | b) - (((b - e) + (~e | b) * -2) - 2 & b) & ~e) * (~((((b - e) + (~e | b) * -2) - 2 | b) - (((b - e) + (~e | b) * -2) - 2 & b)) & e))) - (((~(b + 1 + ~b) | b) - ~(b + 1 + ~b) & ((b - e) - ((~e | b) + (~e | b))) - 2) * ((~(b + 1 + ~b) | b) - ~(b + 1 + ~b) | ((b - e) - ((~e | b) + (~e | b))) - 2) + ((~(b + 1 + ~b) | b) - ~(b + 1 + ~b) & ~(((b - e) - ((~e | b) + (~e | b))) - 2)) * (~((~(b + 1 + ~b) | b) - ~(b + 1 + ~b)) & ((b - e) - ((~e | b) + (~e | b))) - 2) ^ ((((b - e) + (~e | b) * -2) - 2 | b) - (((b - e) + (~e | b) * -2) - 2 & b) & e) * ((((b - e) + (~e | b) * -2) - 2 | b) - (((b - e) + (~e | b) * -2) - 2 & b) | e) + ((((b - e) + (~e | b) * -2) - 2 | b) - (((b - e) + (~e | b) * -2) - 2 & b) & ~e) * (~((((b - e) + (~e | b) * -2) - 2 | b) - (((b - e) + (~e | b) * -2) - 2 & b)) & e))",
                    "attributes": {
                        "numOps": 479,
                        "nestedExprLevel": 170,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 20.03338898163606,
                        "opsPercentages": {
                            "arithmetic": 46.764091858037574,
                            "mul": 7.515657620041753,
                            "bitwise": 45.72025052192067
                        },
                        "percentageDAGsCancel": 32.5
                    }
                },
                "gcc_O3": {
                    "expr": "(((~e | b * 2 - b) + 1 + e ^ b) & e) * (~e & ((b - e) + ~e | b * -2) - 2 ^ b) + (((b - e) + ~e | b * -2) - 2 ^ b | e) * (((b - e) + ~e | b * -2) - 2 ^ b & e)",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 10,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 93.48914858096829,
                        "opsPercentages": {
                            "arithmetic": 41.02564102564102,
                            "mul": 15.384615384615385,
                            "bitwise": 43.58974358974359
                        },
                        "percentageDAGsCancel": 13.043478260869565
                    }
                }
            }
        },
        {
            "num": 188,
            "gt": {
                "expr": "((((~a)-(a+(a*d)))+((b^a)+(a&((b-a)^a)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 10.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "((((- a - 1) ^ (((a | ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) << 1) - (a ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) - ((~ (- a - 1) & (((a | ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) << 1) - (a ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) + (~ (- a - 1) & (((a | ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) << 1) - (a ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))))) - ~ (((((b - a) - ((b | ~ a) << 1)) - 2) ^ ((~ a | (((((b & ~ a) - (~ b & a)) - a) - ((((b & ~ a) - (~ b & a)) | ~ a) << 1)) - 2)) - ~ a)) + (((((b - a) - ((b | ~ a) << 1)) - 2) & ((~ a | (((((b & ~ a) - (~ b & a)) - a) - ((((b & ~ a) - (~ b & a)) | ~ a) << 1)) - 2)) - ~ a)) + ((((b - a) - ((b | ~ a) << 1)) - 2) & ((~ a | (((((b & ~ a) - (~ b & a)) - a) - ((((b & ~ a) - (~ b & a)) | ~ a) << 1)) - 2)) - ~ a))))) - 1",
                "attributes": {
                    "numOps": 165,
                    "nestedExprLevel": 84,
                    "numDAGs": 43,
                    "opsPercentages": {
                        "arithmetic": 29.09090909090909,
                        "mul": 7.2727272727272725,
                        "bitwise": 63.63636363636363
                    },
                    "percentageDAGsCancel": 6.976744186046512
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((((~a & d) * (~d & a) + (a & d) * (a | d) ^ a) + ~(((~a & d) * (~d & a) + (a & d) * (a | d) | a) * 2) ^ a) + (((~a & d) * (~d & a) + (a & d) * (a | d) | a) * 2 - ((~a & d) * (~d & a) + (a & d) * (a | d) ^ a) & a) * -2) - ~((((((~a & b) - (~b & a)) - a) + (~a | (~a & b) - (~b & a)) * -2) - 2 & a & ((b - a) + (~a | b) * -2) - 2) * 2 + (((b - a) + (~a | b) * -2) - 2 ^ ((((~a & b) - (~b & a)) - a) + (~a | (~a & b) - (~b & a)) * -2) - 2 & a))) + -1",
                    "attributes": {
                        "numOps": 108,
                        "nestedExprLevel": 37,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 34.54545454545455,
                        "opsPercentages": {
                            "arithmetic": 29.629629629629626,
                            "mul": 14.814814814814813,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 4.651162790697675
                    }
                },
                "msvc_O1": {
                    "expr": "((((((~a & b) - (((~a & b) - (~b & a)) * 2 | ~a * 2)) - (~b & a)) - a) - 2 | ~a) + 1 + a ^ ((b + (~a | b) * -2) - a) - 2) + (((((((~a & b) - (((~a & b) - (~b & a)) * 2 | ~a * 2)) - (~b & a)) - a) - 2 | ~a) + 1 + a & ((b + (~a | b) * -2) - a) - 2) - (((a | d) * (a & d) + (~d & a) * (~a & d) * 2 | a * 2) - ((a | d) * (a & d) + (~d & a) * (~a & d) ^ a) & a)) * 2 + (((a | d) * (a & d) + (~d & a) * (~a & d) * 2 | a * 2) - ((a | d) * (a & d) + (~d & a) * (~a & d) ^ a) ^ ~a)",
                    "attributes": {
                        "numOps": 111,
                        "nestedExprLevel": 36,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 32.72727272727273,
                        "opsPercentages": {
                            "arithmetic": 27.927927927927925,
                            "mul": 17.117117117117118,
                            "bitwise": 54.95495495495496
                        },
                        "percentageDAGsCancel": 4.651162790697675
                    }
                },
                "clang_O3": {
                    "expr": "((((~a & b) - ((~b & a) + a)) + ((~a & b) - (~b & a) | ~a) * -2) - 2 & a ^ ((b - a) + (~a | b) * -2) - 2) + ~(((d & ~a) * (~d & a) + (d | a) * (d & a) | a) * 2 - ((d & ~a) * (~d & a) + (d | a) * (d & a) ^ a) ^ a) + (((((~a & b) - ((~b & a) + a)) + ((~a & b) - (~b & a) | ~a) * -2) - 2 & a & ((b - a) + (~a | b) * -2) - 2) - (((d & ~a) * (~d & a) + (d | a) * (d & a) | a) * 2 - ((d & ~a) * (~d & a) + (d | a) * (d & a) ^ a) & a)) * 2",
                    "attributes": {
                        "numOps": 103,
                        "nestedExprLevel": 32,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 37.57575757575757,
                        "opsPercentages": {
                            "arithmetic": 28.155339805825243,
                            "mul": 14.563106796116504,
                            "bitwise": 57.28155339805825
                        },
                        "percentageDAGsCancel": 10.256410256410255
                    }
                },
                "clang_default": {
                    "expr": "(((0xffffffff - a ^ (a | (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) * 2 - (a ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d))) - (((0xffffffff - a ^ 0xffffffff) & (a | (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) * 2 - (a ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d))) + ((0xffffffff - a ^ 0xffffffff) & (a | (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) * 2 - (a ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d))))) - ((((b - a) + (b | a ^ 0xffffffff) * -2) - 2 ^ (a ^ 0xffffffff | ((((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a)) - a) + ((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a) | a ^ 0xffffffff ) * -2) - 2) - (a ^ 0xffffffff)) + (((b - a) + (b | a ^ 0xffffffff) * -2) - 2 & (a ^ 0xffffffff | ((((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a)) - a) + ((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a) | a ^ 0xffffffff ) * -2) - 2) - (a ^ 0xffffffff)) + (((b - a) + (b | a ^ 0xffffffff) * -2) - 2 & (a ^ 0xffffffff | ((((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a)) - a) + ((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a) | a ^ 0xffffffff ) * -2) - 2) - (a ^ 0xffffffff)) ^ 0xffffffff)) + -1",
                    "attributes": {
                        "numOps": 169,
                        "nestedExprLevel": 71,
                        "numDAGs": 44,
                        "percentDecreaseByOps": -2.4242424242424243,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 12.42603550295858,
                            "bitwise": 56.80473372781065
                        },
                        "percentageDAGsCancel": 6.8181818181818175
                    }
                },
                "msvc_default": {
                    "expr": "(((0xffffffff - a ^ ((a & d) * (a | d) + (~d & a) * (~a & d) | a) * 2 - ((a & d) * (a | d) + (~d & a) * (~a & d) ^ a)) - ((~(0xffffffff - a) & ((a & d) * (a | d) + (~d & a) * (~a & d) | a) * 2 - ((a & d) * (a | d) + (~d & a) * (~a & d) ^ a)) + (~(0xffffffff - a) & ((a & d) * (a | d) + (~d & a) * (~a & d) | a) * 2 - ((a & d) * (a | d) + (~d & a) * (~a & d) ^ a)))) - ~((((b - a) + (~a | b) * -2) - 2 ^ (~a | ((((~a & b) - (~b & a)) - a) + ((~a & b) - (~b & a) | ~a) * -2) - 2) - ~a) + (((b - a) + (~a | b) * -2) - 2 & (~a | ((((~a & b) - (~b & a)) - a) + ((~a & b) - (~b & a) | ~a) * -2) - 2) - ~a) + (((b - a) + (~a | b) * -2) - 2 & (~a | ((((~a & b) - (~b & a)) - a) + ((~a & b) - (~b & a) | ~a) * -2) - 2) - ~a))) + -1",
                    "attributes": {
                        "numOps": 169,
                        "nestedExprLevel": 56,
                        "numDAGs": 44,
                        "percentDecreaseByOps": -2.4242424242424243,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 12.42603550295858,
                            "bitwise": 56.80473372781065
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "gcc_O3": {
                    "expr": "(((b - a) + (~a | b) * -2) - 2 ^ (((~a & b) - (~b & a) - a) + (~a | (~a & b) - (~b & a)) * -2) - 2 & a) + (((b - a) + (~a | b) * -2) - 2 & (((~a & b) - (~b & a) - a) + (~a | (~a & b) - (~b & a)) * -2) - 2 & a) * 2 + (~((~d & a) * (~a & d) + (d | a) * (a & d) | a) * 2 + (~d & a) * (~a & d) + (d | a) * (a & d) ^ a ^ a) + (((~d & a) * (~a & d) + (d | a) * (a & d) | a) * 2 - (~d & a) * (~a & d) + (d | a) * (a & d) ^ a & a) * -2",
                    "attributes": {
                        "numOps": 105,
                        "nestedExprLevel": 29,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 36.36363636363637,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 15.238095238095239,
                            "bitwise": 56.19047619047619
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                }
            }
        },
        {
            "num": 189,
            "gt": {
                "expr": "((((c|(b-e))&b)^(~(~(~((c*c)-(c^c)))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 10.0,
                        "bitwise": 70.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "((((~ ((c & ~ (((b & ~ e) << 1) - (b ^ e))) + (((b & ~ e) << 1) - (b ^ e))) | b) + ((c & ~ (((b & ~ e) << 1) - (b ^ e))) + (((b & ~ e) << 1) - (b ^ e)))) + 1) | (- (- ((((c | c) - (c & c)) - ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) - 1) - 1) - 1)) - ((((~ ((c & ~ (((b & ~ e) << 1) - (b ^ e))) + (((b & ~ e) << 1) - (b ^ e))) | b) + ((c & ~ (((b & ~ e) << 1) - (b ^ e))) + (((b & ~ e) << 1) - (b ^ e)))) + 1) & (- (- ((((c | c) - (c & c)) - ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) - 1) - 1) - 1))",
                "attributes": {
                    "numOps": 99,
                    "nestedExprLevel": 59,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 4.040404040404041,
                        "bitwise": 62.62626262626263
                    },
                    "percentageDAGsCancel": 23.333333333333332
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-((~(((b ^ e) + ~((~e & b) * 2) & c) + ((~e & b) * 2 - (b ^ e))) | b) + ((b ^ e) + ~((~e & b) * 2) & c) + ((~e & b) * 2 - (b ^ e))) - 2 ^ c * c",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 12,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 15.151515151515152,
                            "bitwise": 57.57575757575758
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_O1": {
                    "expr": "(~(c * c) | (~e & b) * 2 + 1 + ((~((~((~e & b) * 2 - b ^ e) & c - b ^ e) + (~e & b) * 2) | b) - b ^ e) + ~((~e & b) * 2 - b ^ e) & c) - (~(c * c) & (~e & b) * 2 + 1 + ((~((~((~e & b) * 2 - b ^ e) & c - b ^ e) + (~e & b) * 2) | b) - b ^ e) + ~((~e & b) * 2 - b ^ e) & c)",
                    "attributes": {
                        "numOps": 67,
                        "nestedExprLevel": 20,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 32.323232323232325,
                        "opsPercentages": {
                            "arithmetic": 25.37313432835821,
                            "mul": 14.925373134328357,
                            "bitwise": 59.70149253731343
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "clang_O3": {
                    "expr": "-((~(~(~e & b) * 2 - (e ^ b) & c) + (~e & b) * 2 - (e ^ b) | b) + (~(~e & b) * 2 - (e ^ b) & c) + (~e & b) * 2 - (e ^ b)) - 2 ^ c * c",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 9,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 15.151515151515152,
                            "bitwise": 57.57575757575758
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c & ((b & (e ^ 0xffffffff)) * 2 - (b ^ e) ^ 0xffffffff)) + ((b & (e ^ 0xffffffff)) * 2 - (b ^ e)) ^ 0xffffffff | b) + (c & ((b & (e ^ 0xffffffff)) * 2 - (b ^ e) ^ 0xffffffff)) + ((b & (e ^ 0xffffffff)) * 2 - (b ^ e)) + 1 | 0xffffffff - (-1 - (-1 - (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))))) - (((c & ((b & (e ^ 0xffffffff)) * 2 - (b ^ e) ^ 0xffffffff)) + ((b & (e ^ 0xffffffff)) * 2 - (b ^ e)) ^ 0xffffffff | b) + (c & ((b & (e ^ 0xffffffff)) * 2 - (b ^ e) ^ 0xffffffff)) + ((b & (e ^ 0xffffffff)) * 2 - (b ^ e)) + 1 & 0xffffffff - (-1 - (-1 - (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)))))",
                    "attributes": {
                        "numOps": 87,
                        "nestedExprLevel": 44,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 12.121212121212121,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 13.793103448275861,
                            "bitwise": 52.87356321839081
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "msvc_default": {
                    "expr": "((~((~((~e & b) * 2 - (b ^ e)) & c) + ((~e & b) * 2 - (b ^ e))) | b) + 1 + (~((~e & b) * 2 - (b ^ e)) & c) + ((~e & b) * 2 - (b ^ e)) | 0xffffffff - (-1 - (-1 - c * c))) - ((~((~((~e & b) * 2 - (b ^ e)) & c) + ((~e & b) * 2 - (b ^ e))) | b) + 1 + (~((~e & b) * 2 - (b ^ e)) & c) + ((~e & b) * 2 - (b ^ e)) & 0xffffffff - (-1 - (-1 - c * c)))",
                    "attributes": {
                        "numOps": 75,
                        "nestedExprLevel": 30,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 24.242424242424242,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 13.333333333333334,
                            "bitwise": 50.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-((~(~(~e & b) * 2 + (e ^ b) & c) + ((~e & b) * 2 - (e ^ b)) | b) + (~(~e & b) * 2 + (e ^ b) & c) + ((~e & b) * 2 - (e ^ b))) - 2 ^ c * c",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 11,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 15.151515151515152,
                            "bitwise": 57.57575757575758
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 190,
            "gt": {
                "expr": "((-(~(~((b&b)*b)))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 7,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 20.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(- ((((~ b | b) - ~ b) & b) * (((~ b | b) - ~ b) | b) + (((~ b | b) - ~ b) & ~ b) * (~ ((~ b | b) - ~ b) & b)) - 1) + 1",
                "attributes": {
                    "numOps": 28,
                    "nestedExprLevel": 12,
                    "numDAGs": 14,
                    "opsPercentages": {
                        "arithmetic": 28.57142857142857,
                        "mul": 7.142857142857142,
                        "bitwise": 64.28571428571429
                    },
                    "percentageDAGsCancel": 42.857142857142854
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(b * b)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 92.85714285714286,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 50.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "-(b * b)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 92.85714285714286,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 50.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-(b * b)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 92.85714285714286,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 50.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-(((b ^ 0xffffffff | b) - (b ^ 0xffffffff) & b) * ((b ^ 0xffffffff | b) - (b ^ 0xffffffff) | b) + ((b ^ 0xffffffff | b) - (b ^ 0xffffffff) & (b ^ 0xffffffff)) * (((b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) & b))",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 11,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 7.142857142857142,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 7.6923076923076925,
                            "bitwise": 69.23076923076923
                        },
                        "percentageDAGsCancel": 50.0
                    }
                },
                "msvc_default": {
                    "expr": "-((-~b - 1 & b) * (-~b - 1 | b) + (-~b - 1 & ~b) * (~(-~b - 1) & b))",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 5,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 21.428571428571427,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 9.090909090909092,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 50.0
                    }
                },
                "gcc_O3": {
                    "expr": "-(b * b)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 92.85714285714286,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 50.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 191,
            "gt": {
                "expr": "((~(-((a&a)&(a*e)))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 20.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((~ ((~ a | a) - ~ a) | ((a & e) * (a | e) + (a & ~ e) * (~ a & e))) + ((~ a | a) - ~ a)) + 1) - 1",
                "attributes": {
                    "numOps": 22,
                    "nestedExprLevel": 10,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 27.27272727272727,
                        "mul": 9.090909090909092,
                        "bitwise": 63.63636363636363
                    },
                    "percentageDAGsCancel": 18.75
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "a + (~a | (~a & e) * (~e & a) + (a & e) * (a | e))",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 45.45454545454545,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_O1": {
                    "expr": "((~e & a) * (~a & e) + (a | e) * (a & e) | ~a) + a",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 45.45454545454545,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((~e & a) * (~a & e) + (e | a) * (e & a) | ~a) + a",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 45.45454545454545,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a ^ 0xffffffff | a) - (a ^ 0xffffffff) ^ 0xffffffff | (a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e)) + ((a ^ 0xffffffff | a) - (a ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 8,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 9.090909090909092,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 10.0,
                            "bitwise": 70.0
                        },
                        "percentageDAGsCancel": 21.428571428571427
                    }
                },
                "msvc_default": {
                    "expr": "(~(-~a - 1) | (a & e) * (a | e) + (~e & a) * (~a & e)) + (-1 - ~a)",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 5,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 18.181818181818183,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 11.11111111111111,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~e & a) * (~a & e) + (e | a) * (a & e) | ~a) + a",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 45.45454545454545,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 192,
            "gt": {
                "expr": "(((c+(-c))&(e&b)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "((~ ((c ^ (~ c + 1)) + ((c & (~ c + 1)) + (c & (~ c + 1)))) | ((~ e | b) - ~ e)) + ((c ^ (~ c + 1)) + ((c & (~ c + 1)) + (c & (~ c + 1))))) + 1",
                "attributes": {
                    "numOps": 30,
                    "nestedExprLevel": 15,
                    "numDAGs": 13,
                    "opsPercentages": {
                        "arithmetic": 43.333333333333336,
                        "mul": 0.0,
                        "bitwise": 56.666666666666664
                    },
                    "percentageDAGsCancel": 15.384615384615385
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-c & c) * 2 + (-c ^ c) + (~((-c & c) * 2 + (-c ^ c)) | b & e) + 1",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 43.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 47.05882352941176,
                            "mul": 11.76470588235294,
                            "bitwise": 41.17647058823529
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_O1": {
                    "expr": "-c & c * 2 + 1 + (e + 1 + (~e | b) | ~(-c ^ c + -c & c * 2)) + -c ^ c",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 3,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 33.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 10.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_O3": {
                    "expr": "(-c ^ c) + (-c & c) * 2 + (b & e | ~(-c ^ c) + (-c & c) * 2) + 1",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 43.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 47.05882352941176,
                            "mul": 11.76470588235294,
                            "bitwise": 41.17647058823529
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_default": {
                    "expr": "((c ^ (c ^ 0xffffffff) + 1) + (c & (c ^ 0xffffffff) + 1) + (c & (c ^ 0xffffffff) + 1) ^ 0xffffffff | (e ^ 0xffffffff | b) - (e ^ 0xffffffff)) + (c ^ (c ^ 0xffffffff) + 1) + (c & (c ^ 0xffffffff) + 1) + (c & (c ^ 0xffffffff) + 1) + 1",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 10,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 43.333333333333336,
                            "mul": 0.0,
                            "bitwise": 56.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~((~c + 1 ^ c) + (~c + 1 & c) + (~c + 1 & c)) | (~e | b) - ~e) + 1 + (~c + 1 ^ c) + (~c + 1 & c) + (~c + 1 & c)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 7,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 43.333333333333336,
                            "mul": 0.0,
                            "bitwise": 56.666666666666664
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "gcc_O3": {
                    "expr": "(-c ^ c) + (-c & c) * 2 + 1 + (~(-c ^ c) + (-c & c) * 2 | b & e)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 43.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 47.05882352941176,
                            "mul": 11.76470588235294,
                            "bitwise": 41.17647058823529
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 193,
            "gt": {
                "expr": "((-((~((e^a)-(e+a)))*((-(a^e))+(a|e)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 10.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "~ (((~ (((e - a) - ((e | ~ a) + (e | ~ a))) - 2) + ((e - ~ a) - 1)) & (((~ (((a | e) - (a & e)) - 1) ^ ~ (((a + e) + 1) + ((- a - 1) | (- e - 1)))) + ((~ (((a | e) - (a & e)) - 1) | (((a + e) + 1) + ((- a - 1) | (- e - 1)))) + (~ (((a | e) - (a & e)) - 1) | (((a + e) + 1) + ((- a - 1) | (- e - 1)))))) + 1)) * ((~ (((e - a) - ((e | ~ a) + (e | ~ a))) - 2) + ((e - ~ a) - 1)) | (((~ (((a | e) - (a & e)) - 1) ^ ~ (((a + e) + 1) + ((- a - 1) | (- e - 1)))) + ((~ (((a | e) - (a & e)) - 1) | (((a + e) + 1) + ((- a - 1) | (- e - 1)))) + (~ (((a | e) - (a & e)) - 1) | (((a + e) + 1) + ((- a - 1) | (- e - 1)))))) + 1)) + ((~ (((e - a) - ((e | ~ a) + (e | ~ a))) - 2) + ((e - ~ a) - 1)) & ~ (((~ (((a | e) - (a & e)) - 1) ^ ~ (((a + e) + 1) + ((- a - 1) | (- e - 1)))) + ((~ (((a | e) - (a & e)) - 1) | (((a + e) + 1) + ((- a - 1) | (- e - 1)))) + (~ (((a | e) - (a & e)) - 1) | (((a + e) + 1) + ((- a - 1) | (- e - 1)))))) + 1)) * (~ (~ (((e - a) - ((e | ~ a) + (e | ~ a))) - 2) + ((e - ~ a) - 1)) & (((~ (((a | e) - (a & e)) - 1) ^ ~ (((a + e) + 1) + ((- a - 1) | (- e - 1)))) + ((~ (((a | e) - (a & e)) - 1) | (((a + e) + 1) + ((- a - 1) | (- e - 1)))) + (~ (((a | e) - (a & e)) - 1) | (((a + e) + 1) + ((- a - 1) | (- e - 1)))))) + 1))) + 1",
                "attributes": {
                    "numOps": 247,
                    "nestedExprLevel": 138,
                    "numDAGs": 40,
                    "opsPercentages": {
                        "arithmetic": 60.72874493927125,
                        "mul": 0.8097165991902834,
                        "bitwise": 38.46153846153847
                    },
                    "percentageDAGsCancel": 5.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(((~(a & e) + e + a + 1 | -(a ^ e)) * 2 + (-(a ^ e) ^ (a & e) - (e + a + 1)) + 1 & ~((e - ~a) + (~a | e) * 2 + ~e + a + 1)) * ((~a | e) * 2 + ~e + a + (e - ~a) + 1 & -((-(a ^ e) ^ (a & e) - (e + a + 1)) + (~(a & e) + e + a + 1 | -(a ^ e)) * 2) - 2) + ((~a | e) * 2 + ~e + a + (e - ~a) + 1 & (~(a & e) + e + a + 1 | -(a ^ e)) * 2 + (-(a ^ e) ^ (a & e) - (e + a + 1)) + 1) * ((~(a & e) + e + a + 1 | -(a ^ e)) * 2 + (-(a ^ e) ^ (a & e) - (e + a + 1)) + 1 | (~a | e) * 2 + ~e + a + (e - ~a) + 1))",
                    "attributes": {
                        "numOps": 122,
                        "nestedExprLevel": 29,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 50.607287449392715,
                        "opsPercentages": {
                            "arithmetic": 51.63934426229508,
                            "mul": 8.19672131147541,
                            "bitwise": 40.16393442622951
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "msvc_O1": {
                    "expr": "-((~(~(((a | e) - (a & e)) - 1) | (e - (a & e)) + a) * 2 + 1 + (~(e - (a & e)) + a ^ ~(((a | e) - (a & e)) - 1)) & ((~a | e) + a) * 2 + 1) * (~((~a | e) + a) * 2 + 1 & (~(((a | e) - (a & e)) - 1) | (e - (a & e)) + a) * 2 + 1 + (~(e - (a & e)) + a ^ ~(((a | e) - (a & e)) - 1))) + ((~(((a | e) - (a & e)) - 1) | (e - (a & e)) + a) * 2 + 1 + (~(e - (a & e)) + a ^ ~(((a | e) - (a & e)) - 1)) | ((~a | e) + a) * 2 + 1) * ((~(((a | e) - (a & e)) - 1) | (e - (a & e)) + a) * 2 + 1 + (~(e - (a & e)) + a ^ ~(((a | e) - (a & e)) - 1)) & ((~a | e) + a) * 2 + 1))",
                    "attributes": {
                        "numOps": 118,
                        "nestedExprLevel": 51,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 52.226720647773284,
                        "opsPercentages": {
                            "arithmetic": 42.3728813559322,
                            "mul": 8.47457627118644,
                            "bitwise": 49.152542372881356
                        },
                        "percentageDAGsCancel": 8.823529411764707
                    }
                },
                "clang_O3": {
                    "expr": "-((((~a | e) + a * 2 ^ 0xfffffffe) & (e | a | -(e ^ a)) * 2 - ((e | a) ^ -(e ^ a))) * (~(e | a | -(e ^ a)) * 2 - ((e | a) ^ -(e ^ a)) & (~a | e) + a * 2 + 1) + ((e | a | -(e ^ a)) * 2 - ((e | a) ^ -(e ^ a)) | (~a | e) + a * 2 + 1) * ((e | a | -(e ^ a)) * 2 - ((e | a) ^ -(e ^ a)) & (~a | e) + a * 2 + 1))",
                    "attributes": {
                        "numOps": 69,
                        "nestedExprLevel": 20,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 72.06477732793523,
                        "opsPercentages": {
                            "arithmetic": 30.434782608695656,
                            "mul": 14.492753623188406,
                            "bitwise": 55.072463768115945
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_default": {
                    "expr": "(((((e - a) - ((e | a ^ 0xffffffff) + (e | a ^ 0xffffffff))) - 2 ^ 0xffffffff) + (e - (a ^ 0xffffffff)) + -1 & (((a | e) - (a & e)) - 1 ^ 0xffffffff ^ a + e + 1 + (0xffffffff - a | 0xffffffff - e) ^ 0xffffffff) + (((a | e) - (a & e)) - 1 ^ 0xffffffff | a + e + 1 + (0xffffffff - a | 0xffffffff - e)) + (((a | e) - (a & e)) - 1 ^ 0xffffffff | a + e + 1 + (0xffffffff - a | 0xffffffff - e)) + 1) * ((((e - a) - ((e | a ^ 0xffffffff) + (e | a ^ 0xffffffff))) - 2 ^ 0xffffffff) + (e - (a ^ 0xffffffff)) + -1 | (((a | e) - (a & e)) - 1 ^ 0xffffffff ^ a + e + 1 + (0xffffffff - a | 0xffffffff - e) ^ 0xffffffff) + (((a | e) - (a & e)) - 1 ^ 0xffffffff | a + e + 1 + (0xffffffff - a | 0xffffffff - e)) + (((a | e) - (a & e)) - 1 ^ 0xffffffff | a + e + 1 + (0xffffffff - a | 0xffffffff - e)) + 1) + ((((e - a) - ((e | a ^ 0xffffffff) + (e | a ^ 0xffffffff))) - 2 ^ 0xffffffff) + (e - (a ^ 0xffffffff)) + -1 & ((((a | e) - (a & e)) - 1 ^ 0xffffffff ^ a + e + 1 + (0xffffffff - a | 0xffffffff - e) ^ 0xffffffff) + (((a | e) - (a & e)) - 1 ^ 0xffffffff | a + e + 1 + (0xffffffff - a | 0xffffffff - e)) + (((a | e) - (a & e)) - 1 ^ 0xffffffff | a + e + 1 + (0xffffffff - a | 0xffffffff - e)) + 1 ^ 0xffffffff)) * (((((e - a) - ((e | a ^ 0xffffffff) + (e | a ^ 0xffffffff))) - 2 ^ 0xffffffff) + (e - (a ^ 0xffffffff)) + -1 ^ 0xffffffff) & (((a | e) - (a & e)) - 1 ^ 0xffffffff ^ a + e + 1 + (0xffffffff - a | 0xffffffff - e) ^ 0xffffffff) + (((a | e) - (a & e)) - 1 ^ 0xffffffff | a + e + 1 + (0xffffffff - a | 0xffffffff - e)) + (((a | e) - (a & e)) - 1 ^ 0xffffffff | a + e + 1 + (0xffffffff - a | 0xffffffff - e)) + 1) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 227,
                        "nestedExprLevel": 65,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 8.097165991902834,
                        "opsPercentages": {
                            "arithmetic": 57.268722466960355,
                            "mul": 0.881057268722467,
                            "bitwise": 41.85022026431718
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~(((~(((e - a) - ((~a | e) + (~a | e))) - 2) - 1) + (e - ~a) & (~(((a | e) - (a & e)) - 1) ^ ~(a + e + 1 + (0xffffffff - a | 0xffffffff - e))) + 1 + (~(((a | e) - (a & e)) - 1) | a + e + 1 + (0xffffffff - a | 0xffffffff - e)) + (~(((a | e) - (a & e)) - 1) | a + e + 1 + (0xffffffff - a | 0xffffffff - e))) * ((~(((e - a) - ((~a | e) + (~a | e))) - 2) - 1) + (e - ~a) | (~(((a | e) - (a & e)) - 1) ^ ~(a + e + 1 + (0xffffffff - a | 0xffffffff - e))) + 1 + (~(((a | e) - (a & e)) - 1) | a + e + 1 + (0xffffffff - a | 0xffffffff - e)) + (~(((a | e) - (a & e)) - 1) | a + e + 1 + (0xffffffff - a | 0xffffffff - e))) + ((~(((e - a) - ((~a | e) + (~a | e))) - 2) - 1) + (e - ~a) & ~((~(((a | e) - (a & e)) - 1) ^ ~(a + e + 1 + (0xffffffff - a | 0xffffffff - e))) + 1 + (~(((a | e) - (a & e)) - 1) | a + e + 1 + (0xffffffff - a | 0xffffffff - e)) + (~(((a | e) - (a & e)) - 1) | a + e + 1 + (0xffffffff - a | 0xffffffff - e)))) * (~((~(((e - a) - ((~a | e) + (~a | e))) - 2) - 1) + (e - ~a)) & (~(((a | e) - (a & e)) - 1) ^ ~(a + e + 1 + (0xffffffff - a | 0xffffffff - e))) + 1 + (~(((a | e) - (a & e)) - 1) | a + e + 1 + (0xffffffff - a | 0xffffffff - e)) + (~(((a | e) - (a & e)) - 1) | a + e + 1 + (0xffffffff - a | 0xffffffff - e)))) + 1",
                    "attributes": {
                        "numOps": 223,
                        "nestedExprLevel": 81,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 9.7165991902834,
                        "opsPercentages": {
                            "arithmetic": 56.502242152466366,
                            "mul": 0.8968609865470852,
                            "bitwise": 42.600896860986545
                        },
                        "percentageDAGsCancel": 2.631578947368421
                    }
                },
                "gcc_O3": {
                    "expr": "-((-((e & a) - a + 1 + e ^ -(e ^ a)) + (~(e & a) + a + 1 + e | -(e ^ a)) * 2 - 2 & ~e + a + (~a | e) * 2 + 1 + (e - ~a)) * (~~e + a + (~a | e) * 2 + 1 + (e - ~a) & ((e & a) - a + 1 + e ^ -(e ^ a)) + (~(e & a) + a + 1 + e | -(e ^ a)) * 2 + 1) + (~e + a + (~a | e) * 2 + 1 + (e - ~a) | ((e & a) - a + 1 + e ^ -(e ^ a)) + (~(e & a) + a + 1 + e | -(e ^ a)) * 2 + 1) * (~e + a + (~a | e) * 2 + 1 + (e - ~a) & ((e & a) - a + 1 + e ^ -(e ^ a)) + (~(e & a) + a + 1 + e | -(e ^ a)) * 2 + 1))",
                    "attributes": {
                        "numOps": 122,
                        "nestedExprLevel": 26,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 50.607287449392715,
                        "opsPercentages": {
                            "arithmetic": 51.63934426229508,
                            "mul": 8.19672131147541,
                            "bitwise": 40.16393442622951
                        },
                        "percentageDAGsCancel": 2.5
                    }
                }
            }
        },
        {
            "num": 194,
            "gt": {
                "expr": "((~(((-(c^e))*b)+((b*e)^(~((~c)+c))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 20.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "- (((((~ ((c | e) - (c & e)) + 1) & b) * ((~ ((c | e) - (c & e)) + 1) | b) + ((~ ((c | e) - (c & e)) + 1) & ~ b) * (~ (~ ((c | e) - (c & e)) + 1) & b)) ^ (((((b & e) * (b | e) + (b & ~ e) * (~ b & e)) - (- ((((- c - 1) ^ ~ c) + (((- c - 1) | c) << 1)) + 1) - 1)) - ((((b & e) * (b | e) + (b & ~ e) * (~ b & e)) | ~ (- ((((- c - 1) ^ ~ c) + (((- c - 1) | c) << 1)) + 1) - 1)) << 1)) - 2)) + (((((~ ((c | e) - (c & e)) + 1) & b) * ((~ ((c | e) - (c & e)) + 1) | b) + ((~ ((c | e) - (c & e)) + 1) & ~ b) * (~ (~ ((c | e) - (c & e)) + 1) & b)) & (((((b & e) * (b | e) + (b & ~ e) * (~ b & e)) - (- ((((- c - 1) ^ ~ c) + (((- c - 1) | c) << 1)) + 1) - 1)) - ((((b & e) * (b | e) + (b & ~ e) * (~ b & e)) | ~ (- ((((- c - 1) ^ ~ c) + (((- c - 1) | c) << 1)) + 1) - 1)) << 1)) - 2)) + ((((~ ((c | e) - (c & e)) + 1) & b) * ((~ ((c | e) - (c & e)) + 1) | b) + ((~ ((c | e) - (c & e)) + 1) & ~ b) * (~ (~ ((c | e) - (c & e)) + 1) & b)) & (((((b & e) * (b | e) + (b & ~ e) * (~ b & e)) - (- ((((- c - 1) ^ ~ c) + (((- c - 1) | c) << 1)) + 1) - 1)) - ((((b & e) * (b | e) + (b & ~ e) * (~ b & e)) | ~ (- ((((- c - 1) ^ ~ c) + (((- c - 1) | c) << 1)) + 1) - 1)) << 1)) - 2)))) - 1",
                "attributes": {
                    "numOps": 238,
                    "nestedExprLevel": 127,
                    "numDAGs": 44,
                    "opsPercentages": {
                        "arithmetic": 39.49579831932773,
                        "mul": 7.563025210084033,
                        "bitwise": 52.94117647058824
                    },
                    "percentageDAGsCancel": 4.545454545454546
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((~b & e) * (~e & b) + (b & e) * (b | e) & (-(c ^ e) & b) * (-(c ^ e) | b) + ((c ^ e) - 1 & b) * (-(c ^ e) & ~b)) * 2 + ((-(c ^ e) & b) * (-(c ^ e) | b) + ((c ^ e) - 1 & b) * (-(c ^ e) & ~b) ^ (~b & e) * (~e & b) + (b & e) * (b | e)))",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 17,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 76.89075630252101,
                        "opsPercentages": {
                            "arithmetic": 23.636363636363637,
                            "mul": 16.363636363636363,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "msvc_O1": {
                    "expr": "~(((~(c & e) - (c | e) & b) * (~b & (c & e) - (c | e)) + ((c & e) - (c | e) | b) * ((c & e) - (c | e) & b) & ((~e & b) * (~b & e) - (((~e & b) * (~b & e) + (b | e) * (b & e)) * 2 | (-1 - c) * 2 | c * 2 * 2 + 2)) + (-1 - c) * 2 | c * 2 + (b | e) * (b & e)) * 2) - ((~(c & e) - (c | e) & b) * (~b & (c & e) - (c | e)) + ((c & e) - (c | e) | b) * ((c & e) - (c | e) & b) ^ ((~e & b) * (~b & e) - (((~e & b) * (~b & e) + (b | e) * (b & e)) * 2 | (-1 - c) * 2 | c * 2 * 2 + 2)) + (-1 - c) * 2 | c * 2 + (b | e) * (b & e))",
                    "attributes": {
                        "numOps": 115,
                        "nestedExprLevel": 36,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 51.68067226890757,
                        "opsPercentages": {
                            "arithmetic": 25.217391304347824,
                            "mul": 21.73913043478261,
                            "bitwise": 53.04347826086957
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "clang_O3": {
                    "expr": "~((~e & b) * (~b & e) + (e | b) * (e & b) ^ ((c ^ e) - 1 & b) * (-(c ^ e) & ~b) + (-(c ^ e) | b) * (-(c ^ e) & b)) + (((c ^ e) - 1 & b) * (-(c ^ e) & ~b) + (-(c ^ e) | b) * (-(c ^ e) & b) & (~e & b) * (~b & e) + (e | b) * (e & b)) * -2",
                    "attributes": {
                        "numOps": 56,
                        "nestedExprLevel": 16,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 76.47058823529412,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 16.071428571428573,
                            "bitwise": 58.92857142857143
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((((c | e) - (c & e) ^ 0xffffffff) + 1 & b) * (((c | e) - (c & e) ^ 0xffffffff) + 1 | b) + (((c | e) - (c & e) ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((((c | e) - (c & e) ^ 0xffffffff) + 1 ^ 0xffffffff) & b) ^ ((((b & e) * (b | e) + (b & (e ^ 0xffffffff)) * ((b ^ 0xffffffff) & e)) - (-1 - ((0xffffffff - c ^ c ^ 0xffffffff) + (0xffffffff - c | c) * 2 + 1))) + ((b & e) * (b | e) + (b & (e ^ 0xffffffff)) * ((b ^ 0xffffffff) & e) | 0xffffffff - ((0xffffffff - c ^ c ^ 0xffffffff) + (0xffffffff - c | c) * 2 + 1 ) ^ 0xffffffff) * -2) - 2) + ((((c | e) - (c & e) ^ 0xffffffff) + 1 & b) * (((c | e) - (c & e) ^ 0xffffffff) + 1 | b) + (((c | e) - (c & e) ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((((c | e) - (c & e) ^ 0xffffffff) + 1 ^ 0xffffffff) & b ) & ((((b & e) * (b | e) + (b & (e ^ 0xffffffff)) * ((b ^ 0xffffffff) & e)) - (-1 - ((0xffffffff - c ^ c ^ 0xffffffff) + (0xffffffff - c | c) * 2 + 1))) + ((b & e) * (b | e) + (b & (e ^ 0xffffffff)) * ((b ^ 0xffffffff) & e) | 0xffffffff - ((0xffffffff - c ^ c ^ 0xffffffff) + (0xffffffff - c | c) * 2 + 1) ^ 0xffffffff) * -2) - 2) + ((((c | e) - (c & e) ^ 0xffffffff) + 1 & b) * (((c | e) - (c & e) ^ 0xffffffff) + 1 | b) + (((c | e) - (c & e) ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((((c | e) - (c & e) ^ 0xffffffff) + 1 ^ 0xffffffff) & b ) & ((((b & e) * (b | e) + (b & (e ^ 0xffffffff)) * ((b ^ 0xffffffff) & e)) - (-1 - ((0xffffffff - c ^ c ^ 0xffffffff) + (0xffffffff - c | c) * 2 + 1))) + ((b & e) * (b | e) + (b & (e ^ 0xffffffff)) * ((b ^ 0xffffffff) & e) | 0xffffffff - ((0xffffffff - c ^ c ^ 0xffffffff) + (0xffffffff - c | c) * 2 + 1) ^ 0xffffffff) * -2) - 2))",
                    "attributes": {
                        "numOps": 226,
                        "nestedExprLevel": 89,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 5.042016806722689,
                        "opsPercentages": {
                            "arithmetic": 36.283185840707965,
                            "mul": 11.946902654867257,
                            "bitwise": 51.76991150442478
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (((~((c | e) - (c & e)) + 1 & b) * (~((c | e) - (c & e)) + 1 | b) + (~((c | e) - (c & e)) + 1 & ~b) * (~(~((c | e) - (c & e)) + 1) & b) ^ ((((b & e) * (b | e) + (~e & b) * (~b & e)) - (-1 - ((0xffffffff - c ^ ~c) + 1 + (0xffffffff - c | c) * 2))) + ((b & e) * (b | e) + (~e & b) * (~b & e) | ~(0xffffffff - ((0xffffffff - c ^ ~c) + 1 + (0xffffffff - c | c) * 2))) * -2) - 2) + ((~((c | e) - (c & e)) + 1 & b) * (~((c | e) - (c & e)) + 1 | b) + (~((c | e) - (c & e)) + 1 & ~b) * (~(~((c | e) - (c & e)) + 1) & b) & ((((b & e) * (b | e) + (~e & b) * (~b & e)) - (-1 - ((0xffffffff - c ^ ~c) + 1 + (0xffffffff - c | c) * 2 ))) + ((b & e) * (b | e) + (~e & b) * (~b & e) | ~(0xffffffff - ((0xffffffff - c ^ ~c) + 1 + (0xffffffff - c | c) * 2))) * -2) - 2) + ((~((c | e) - (c & e)) + 1 & b) * (~((c | e) - (c & e)) + 1 | b) + (~((c | e) - (c & e)) + 1 & ~b) * (~(~((c | e) - (c & e)) + 1) & b) & ((((b & e) * (b | e) + (~e & b) * (~b & e)) - (-1 - ((0xffffffff - c ^ ~c) + 1 + (0xffffffff - c | c) * 2 ))) + ((b & e) * (b | e) + (~e & b) * (~b & e) | ~(0xffffffff - ((0xffffffff - c ^ ~c) + 1 + (0xffffffff - c | c) * 2))) * -2) - 2))",
                    "attributes": {
                        "numOps": 226,
                        "nestedExprLevel": 86,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 5.042016806722689,
                        "opsPercentages": {
                            "arithmetic": 36.283185840707965,
                            "mul": 11.946902654867257,
                            "bitwise": 51.76991150442478
                        },
                        "percentageDAGsCancel": 2.272727272727273
                    }
                },
                "gcc_O3": {
                    "expr": "~((((c ^ e) - 1 & b) * (-(c ^ e) & ~b) + (-(c ^ e) | b) * (-(c ^ e) & b) ^ (~e & b) * (~b & e) + (e | b) * (e & b)) + (((c ^ e) - 1 & b) * (-(c ^ e) & ~b) + (-(c ^ e) | b) * (-(c ^ e) & b) & (~e & b) * (~b & e) + (e | b) * (e & b)) * 2)",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 17,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 76.89075630252101,
                        "opsPercentages": {
                            "arithmetic": 23.636363636363637,
                            "mul": 16.363636363636363,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 195,
            "gt": {
                "expr": "((((d-a)^(~a))&((b*(a&d))&(d^a))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 12.5,
                        "mul": 12.5,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ ((((d & ~ a) - (~ d & a)) | (- a - 1)) - (((d & ~ a) - (~ d & a)) & (- a - 1))) | ((~ ((b & ((~ a | d) - ~ a)) * (b | ((~ a | d) - ~ a)) + (b & ~ ((~ a | d) - ~ a)) * (~ b & ((~ a | d) - ~ a))) | (((d - a) - ((d | ~ a) + (d | ~ a))) - 2)) - ~ ((b & ((~ a | d) - ~ a)) * (b | ((~ a | d) - ~ a)) + (b & ~ ((~ a | d) - ~ a)) * (~ b & ((~ a | d) - ~ a))))) + ((((d & ~ a) - (~ d & a)) | (- a - 1)) - (((d & ~ a) - (~ d & a)) & (- a - 1)))) + 1",
                "attributes": {
                    "numOps": 100,
                    "nestedExprLevel": 42,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 31.0,
                        "mul": 4.0,
                        "bitwise": 65.0
                    },
                    "percentageDAGsCancel": 6.0606060606060606
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a + ~d ^ a) + (d - a ^ a | (d & a & ~b) * (~(d & a) & b) + (d & a & b) * (d & a | b) & ((d - a) + (~a | d) * -2) - 2) + 1",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 6,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 71.0,
                        "opsPercentages": {
                            "arithmetic": 31.03448275862069,
                            "mul": 10.344827586206897,
                            "bitwise": 58.620689655172406
                        },
                        "percentageDAGsCancel": 12.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~a & d) - (~d & a) | ~a + 1 + (((~b & a + 1 + (~a | d)) * (~a + 1 + (~a | d) & b) + 1 + ((d - ((~a | d) * 2 + 2)) - a | ~((a + 1 + (~a | d) | b) * (a + 1 + (~a | d) & b) + (~b & a + 1 + (~a | d)) * (~a + 1 + (~a | d) & b))) + (a + 1 + (~a | d) | b) * (a + 1 + (~a | d) & b) | ~((~a & d) - (~d & a) | ~a - (~a & d) - (~d & a) & ~a)) - (~a & d) - (~d & a) & ~a)",
                    "attributes": {
                        "numOps": 94,
                        "nestedExprLevel": 20,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 6.0,
                        "opsPercentages": {
                            "arithmetic": 32.97872340425532,
                            "mul": 5.319148936170213,
                            "bitwise": 61.702127659574465
                        },
                        "percentageDAGsCancel": 15.789473684210526
                    }
                },
                "clang_O3": {
                    "expr": "~((~a & d) - (~d & a) ^ a) & ((d - a) + (~a | d) * -2) - 2 & ((~a | d) - ~a & ~b) * (~(~a | d) - ~a & b) + ((~a | d) - ~a | b) * ((~a | d) - ~a & b)",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 10,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 59.0,
                        "opsPercentages": {
                            "arithmetic": 24.390243902439025,
                            "mul": 7.317073170731707,
                            "bitwise": 68.29268292682927
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "clang_default": {
                    "expr": "(((d & (a ^ 0xffffffff)) - ((d ^ 0xffffffff) & a) | 0xffffffff - a) - ((d & (a ^ 0xffffffff)) - ((d ^ 0xffffffff) & a) & 0xffffffff - a) ^ 0xffffffff | ((b & (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) * (b | (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) + (b & ((a ^ 0xffffffff | d) - (a ^ 0xffffffff) ^ 0xffffffff)) * ((b ^ 0xffffffff) & (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) ^ 0xffffffff | ((d - a) - ((d | a ^ 0xffffffff) + (d | a ^ 0xffffffff))) - 2) - ((b & (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) * (b | (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) + (b & ((a ^ 0xffffffff | d) - (a ^ 0xffffffff) ^ 0xffffffff)) * ((b ^ 0xffffffff) & (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) ^ 0xffffffff)) + (((d & (a ^ 0xffffffff)) - ((d ^ 0xffffffff) & a) | 0xffffffff - a) - ((d & (a ^ 0xffffffff)) - ((d ^ 0xffffffff) & a) & 0xffffffff - a)) + 1",
                    "attributes": {
                        "numOps": 96,
                        "nestedExprLevel": 39,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 4.0,
                        "opsPercentages": {
                            "arithmetic": 28.125,
                            "mul": 4.166666666666666,
                            "bitwise": 67.70833333333334
                        },
                        "percentageDAGsCancel": 3.125
                    }
                },
                "msvc_default": {
                    "expr": "(~(((~a & d) - (~d & a) | 0xffffffff - a) - ((~a & d) - (~d & a) & 0xffffffff - a)) | (~(((~a | d) - ~a & b) * ((~a | d) - ~a | b) + (~((~a | d) - ~a) & b) * (~b & (~a | d) - ~a)) | ((d - a) - ((~a | d) + (~a | d))) - 2) - ~(((~a | d) - ~a & b) * ((~a | d) - ~a | b) + (~((~a | d) - ~a) & b) * (~b & (~a | d) - ~a))) + 1 + (((~a & d) - (~d & a) | 0xffffffff - a) - ((~a & d) - (~d & a) & 0xffffffff - a))",
                    "attributes": {
                        "numOps": 96,
                        "nestedExprLevel": 28,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 4.0,
                        "opsPercentages": {
                            "arithmetic": 28.125,
                            "mul": 4.166666666666666,
                            "bitwise": 67.70833333333334
                        },
                        "percentageDAGsCancel": 6.451612903225806
                    }
                },
                "gcc_O3": {
                    "expr": "((~d & a & b) * (~b & d & a) + (d & a | b) * (d & a & b) & ((d - a) + (~a | d) * -2) - 2 | d - a ^ a) + 1 + (~d + a ^ a)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 71.0,
                        "opsPercentages": {
                            "arithmetic": 31.03448275862069,
                            "mul": 10.344827586206897,
                            "bitwise": 58.620689655172406
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                }
            }
        },
        {
            "num": 196,
            "gt": {
                "expr": "((((c&c)|((c+c)&(c^a)))+(-(c*a))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 12.5,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(((((((~ c | c) - ~ c) + ((~ (((c | c) << 1) - (c ^ c)) | (((c - a) - ((c | ~ a) + (c | ~ a))) - 2)) - ~ (((c | c) << 1) - (c ^ c)))) + 1) + ((- ((~ c | c) - ~ c) - 1) | (- ((~ (((c | c) << 1) - (c ^ c)) | (((c - a) - ((c | ~ a) + (c | ~ a))) - 2)) - ~ (((c | c) << 1) - (c ^ c))) - 1))) ^ ~ (~ (((c & a) * (c | a) + (c & ~ a) * (~ c & a)) - 1))) + (((((((~ c | c) - ~ c) + ((~ (((c | c) << 1) - (c ^ c)) | (((c - a) - ((c | ~ a) + (c | ~ a))) - 2)) - ~ (((c | c) << 1) - (c ^ c)))) + 1) + ((- ((~ c | c) - ~ c) - 1) | (- ((~ (((c | c) << 1) - (c ^ c)) | (((c - a) - ((c | ~ a) + (c | ~ a))) - 2)) - ~ (((c | c) << 1) - (c ^ c))) - 1))) | ~ (((c & a) * (c | a) + (c & ~ a) * (~ c & a)) - 1)) + ((((((~ c | c) - ~ c) + ((~ (((c | c) << 1) - (c ^ c)) | (((c - a) - ((c | ~ a) + (c | ~ a))) - 2)) - ~ (((c | c) << 1) - (c ^ c)))) + 1) + ((- ((~ c | c) - ~ c) - 1) | (- ((~ (((c | c) << 1) - (c ^ c)) | (((c - a) - ((c | ~ a) + (c | ~ a))) - 2)) - ~ (((c | c) << 1) - (c ^ c))) - 1))) | ~ (((c & a) * (c | a) + (c & ~ a) * (~ c & a)) - 1)))) + 1",
                "attributes": {
                    "numOps": 208,
                    "nestedExprLevel": 115,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 2.8846153846153846,
                        "bitwise": 59.61538461538461
                    },
                    "percentageDAGsCancel": 12.82051282051282
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-((~c & a) * (~a & c) + (c & a) * (c | a)) | c + (((c - a) + (~a | c) * -2) - 2 & c * 2) + 1 + ~(c * 2 & ((c - a) + (~a | c) * -2) - 2 & c)) * 2 + (c + (((c - a) + (~a | c) * -2) - 2 & c * 2) + 1 + ~(c * 2 & ((c - a) + (~a | c) * -2) - 2 & c) ^ ((~c & a) * (~a & c) + (c & a) * (c | a)) - 1) + 1",
                    "attributes": {
                        "numOps": 71,
                        "nestedExprLevel": 21,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 65.86538461538461,
                        "opsPercentages": {
                            "arithmetic": 39.436619718309856,
                            "mul": 18.30985915492958,
                            "bitwise": 42.25352112676056
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(a | c) * (a & c) + -1 + (~c & a) * (~a & c) | ((~(c * 2) - (c - ((~a | c) * 2 + 2)) - a | ~(c * 2)) - 1 | ~c) + (c - ((~a | c) * 2 + 2)) - a | ~(c * 2) + c * 3 + 2) * 2 + 1 + ((a | c) * (a & c) + -1 + (~c & a) * (~a & c) ^ ((~(c * 2) - (c - ((~a | c) * 2 + 2)) - a | ~(c * 2)) - 1 | ~c) + (c - ((~a | c) * 2 + 2)) - a | ~(c * 2) + c * 3 + 2)",
                    "attributes": {
                        "numOps": 84,
                        "nestedExprLevel": 23,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 59.61538461538461,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 20.238095238095237,
                            "bitwise": 44.047619047619044
                        },
                        "percentageDAGsCancel": 2.631578947368421
                    }
                },
                "clang_O3": {
                    "expr": "(((c | a) * (c & a) + (~c & a) * (~a & c)) - 1 ^ ((c - a) + (~a | c) * -2) - 2 & c * 2 | c) + (-((c | a) * (c & a) + (~c & a) * (~a & c)) | ((c - a) + (~a | c) * -2) - 2 & c * 2 | c) * 2 + 1",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 13,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 78.36538461538461,
                        "opsPercentages": {
                            "arithmetic": 31.11111111111111,
                            "mul": 20.0,
                            "bitwise": 48.888888888888886
                        },
                        "percentageDAGsCancel": 11.538461538461538
                    }
                },
                "clang_default": {
                    "expr": "(((c ^ 0xffffffff | c) - (c ^ 0xffffffff)) + ((c * 2 ^ 0xffffffff | ((c - a) - ((c | a ^ 0xffffffff) + (c | a ^ 0xffffffff))) - 2) - (c * 2 ^ 0xffffffff)) + 1 + (0xffffffff - ((c ^ 0xffffffff | c) - (c ^ 0xffffffff)) | 0xffffffff - ((c * 2 ^ 0xffffffff | ((c - a) - ((c | a ^ 0xffffffff) + (c | a ^ 0xffffffff))) - 2) - (c * 2 ^ 0xffffffff))) ^ ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a)) - 1) + (((c ^ 0xffffffff | c) - (c ^ 0xffffffff)) + ((c * 2 ^ 0xffffffff | ((c - a) - ((c | a ^ 0xffffffff) + (c | a ^ 0xffffffff))) - 2) - (c * 2 ^ 0xffffffff)) + 1 + (0xffffffff - ((c ^ 0xffffffff | c) - (c ^ 0xffffffff)) | 0xffffffff - ((c * 2 ^ 0xffffffff | ((c - a) - ((c | a ^ 0xffffffff) + (c | a ^ 0xffffffff))) - 2) - (c * 2 ^ 0xffffffff))) | ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a)) - 1 ^ 0xffffffff) + (((c ^ 0xffffffff | c) - (c ^ 0xffffffff)) + ((c * 2 ^ 0xffffffff | ((c - a) - ((c | a ^ 0xffffffff) + (c | a ^ 0xffffffff))) - 2) - (c * 2 ^ 0xffffffff)) + 1 + (0xffffffff - ((c ^ 0xffffffff | c) - (c ^ 0xffffffff)) | 0xffffffff - ((c * 2 ^ 0xffffffff | ((c - a) - ((c | a ^ 0xffffffff) + (c | a ^ 0xffffffff))) - 2) - (c * 2 ^ 0xffffffff))) | ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a)) - 1 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 164,
                        "nestedExprLevel": 62,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 21.153846153846153,
                        "opsPercentages": {
                            "arithmetic": 36.58536585365854,
                            "mul": 10.975609756097562,
                            "bitwise": 52.4390243902439
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_default": {
                    "expr": "((((~(c * 2) | ((c - a) - ((~a | c) + (~a | c))) - 2) - ~(c * 2)) - ~c) + (0xffffffff - (-1 - ~c) | 0xffffffff - ((~(c * 2) | ((c - a) - ((~a | c) + (~a | c))) - 2) - ~(c * 2))) ^ (c & a) * (c | a) + -1 + (~a & c) * (~c & a)) + 1 + ((((~(c * 2) | ((c - a) - ((~a | c) + (~a | c))) - 2) - ~(c * 2)) - ~c) + (0xffffffff - (-1 - ~c) | 0xffffffff - ((~(c * 2) | ((c - a) - ((~a | c) + (~a | c))) - 2) - ~(c * 2))) | ~((c & a) * (c | a) + -1 + (~a & c) * (~c & a))) + ((((~(c * 2) | ((c - a) - ((~a | c) + (~a | c))) - 2) - ~(c * 2)) - ~c) + (0xffffffff - (-1 - ~c) | 0xffffffff - ((~(c * 2) | ((c - a) - ((~a | c) + (~a | c))) - 2) - ~(c * 2))) | ~((c & a) * (c | a) + -1 + (~a & c) * (~c & a)))",
                    "attributes": {
                        "numOps": 152,
                        "nestedExprLevel": 48,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 26.923076923076923,
                        "opsPercentages": {
                            "arithmetic": 39.473684210526315,
                            "mul": 11.842105263157894,
                            "bitwise": 48.68421052631579
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "gcc_O3": {
                    "expr": "((~c & a) * (~a & c) + (c & a) * (c | a) - 1 ^ (((c - a) + (~a | c) * -2) - 2 & c * 2 + c) - (((c - a) + (~a | c) * -2) - 2 & c * 2 & c)) + 1 + (-(~c & a) * (~a & c) + (c & a) * (c | a) | (((c - a) + (~a | c) * -2) - 2 & c * 2 + c) - (((c - a) + (~a | c) * -2) - 2 & c * 2 & c)) * 2",
                    "attributes": {
                        "numOps": 67,
                        "nestedExprLevel": 19,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 67.78846153846155,
                        "opsPercentages": {
                            "arithmetic": 38.80597014925373,
                            "mul": 19.402985074626866,
                            "bitwise": 41.7910447761194
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                }
            }
        },
        {
            "num": 197,
            "gt": {
                "expr": "(((b*(-(~d)))*(a-d)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 40.0,
                        "bitwise": 20.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((b & (d + 1)) * (b | (d + 1)) + (b & ~ (d + 1)) * (~ b & (d + 1))) & ((a ^ d) - ((~ a & d) << 1))) * (((b & (d + 1)) * (b | (d + 1)) + (b & ~ (d + 1)) * (~ b & (d + 1))) | ((a ^ d) - ((~ a & d) << 1))) + (((b & (d + 1)) * (b | (d + 1)) + (b & ~ (d + 1)) * (~ b & (d + 1))) & ~ ((a ^ d) - ((~ a & d) << 1))) * (~ ((b & (d + 1)) * (b | (d + 1)) + (b & ~ (d + 1)) * (~ b & (d + 1))) & ((a ^ d) - ((~ a & d) << 1)))",
                "attributes": {
                    "numOps": 81,
                    "nestedExprLevel": 34,
                    "numDAGs": 24,
                    "opsPercentages": {
                        "arithmetic": 30.864197530864196,
                        "mul": 12.345679012345679,
                        "bitwise": 56.79012345679012
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((a ^ d) + (~a & d) * -2 & ~((-d - 2 & b) * (d + 1 & ~b) + (d + 1 & b) * (d + 1 | b))) * ((d + 1 & b) * (d + 1 | b) + (-d - 2 & b) * (d + 1 & ~b) & (~a & d) * 2 + ~(a ^ d)) + ((d + 1 & b) * (d + 1 | b) + (-d - 2 & b) * (d + 1 & ~b) & (a ^ d) + (~a & d) * -2) * ((a ^ d) + (~a & d) * -2 | (d + 1 & b) * (d + 1 | b) + (-d - 2 & b) * (d + 1 & ~b))",
                    "attributes": {
                        "numOps": 84,
                        "nestedExprLevel": 18,
                        "numDAGs": 29,
                        "percentDecreaseByOps": -3.7037037037037033,
                        "opsPercentages": {
                            "arithmetic": 38.095238095238095,
                            "mul": 16.666666666666664,
                            "bitwise": 45.23809523809524
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                },
                "msvc_O1": {
                    "expr": "(~(a ^ d) + (~a & d) * -2 & (d + 1 & b) * (d + 1 | b) + (~b & d + 1) * (~d + 1 & b)) * (~(d + 1 & b) * (d + 1 | b) + (~b & d + 1) * (~d + 1 & b) & (a ^ d) + (~a & d) * -2) + ((d + 1 & b) * (d + 1 | b) + (~b & d + 1) * (~d + 1 & b) | (a ^ d) + (~a & d) * -2) * ((d + 1 & b) * (d + 1 | b) + (~b & d + 1) * (~d + 1 & b) & (a ^ d) + (~a & d) * -2)",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 17,
                        "numDAGs": 29,
                        "percentDecreaseByOps": -4.938271604938271,
                        "opsPercentages": {
                            "arithmetic": 34.11764705882353,
                            "mul": 16.470588235294116,
                            "bitwise": 49.411764705882355
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                },
                "clang_O3": {
                    "expr": "(~(d + 1 & ~b) * (-d - 2 & b) + (d + 1 | b) * (d + 1 & b) & (d ^ a) + (~a & d) * -2) * (~(d ^ a) + (~a & d) * -2 & (d + 1 & ~b) * (-d - 2 & b) + (d + 1 | b) * (d + 1 & b)) + ((d + 1 & ~b) * (-d - 2 & b) + (d + 1 | b) * (d + 1 & b) | (d ^ a) + (~a & d) * -2) * ((d + 1 & ~b) * (-d - 2 & b) + (d + 1 | b) * (d + 1 & b) & (d ^ a) + (~a & d) * -2)",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 17,
                        "numDAGs": 29,
                        "percentDecreaseByOps": -4.938271604938271,
                        "opsPercentages": {
                            "arithmetic": 38.82352941176471,
                            "mul": 16.470588235294116,
                            "bitwise": 44.70588235294118
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                },
                "clang_default": {
                    "expr": "((b & d + 1) * (b | d + 1) + (b & (d + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & d + 1) & (a ^ d) + ((a ^ 0xffffffff) & d) * -2) * ((b & d + 1) * (b | d + 1) + (b & (d + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & d + 1) | (a ^ d) + ((a ^ 0xffffffff) & d) * -2) + ((b & d + 1) * (b | d + 1) + (b & (d + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & d + 1) & ((a ^ d) + ((a ^ 0xffffffff) & d) * -2 ^ 0xffffffff)) * (((b & d + 1) * (b | d + 1) + (b & (d + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & d + 1) ^ 0xffffffff) & (a ^ d) + ((a ^ 0xffffffff) & d) * -2)",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 27,
                        "numDAGs": 25,
                        "percentDecreaseByOps": -4.938271604938271,
                        "opsPercentages": {
                            "arithmetic": 34.11764705882353,
                            "mul": 16.470588235294116,
                            "bitwise": 49.411764705882355
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "msvc_default": {
                    "expr": "((d + 1 & b) * (d + 1 | b) + (~(d + 1) & b) * (~b & d + 1) & (a ^ d) + (~a & d) * -2) * ((d + 1 & b) * (d + 1 | b) + (~(d + 1) & b) * (~b & d + 1) | (a ^ d) + (~a & d) * -2) + ((d + 1 & b) * (d + 1 | b) + (~(d + 1) & b) * (~b & d + 1) & ~((a ^ d) + (~a & d) * -2)) * (~((d + 1 & b) * (d + 1 | b) + (~(d + 1) & b) * (~b & d + 1)) & (a ^ d) + (~a & d) * -2)",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 23,
                        "numDAGs": 25,
                        "percentDecreaseByOps": -4.938271604938271,
                        "opsPercentages": {
                            "arithmetic": 34.11764705882353,
                            "mul": 16.470588235294116,
                            "bitwise": 49.411764705882355
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~(d ^ a) + (~a & d) * 2 & (-d - 2 & b) * (~b & d + 1) + (d + 1 | b) * (d + 1 & b)) * (~(-d - 2 & b) * (~b & d + 1) + (d + 1 | b) * (d + 1 & b) & (d ^ a) + (~a & d) * -2) + ((-d - 2 & b) * (~b & d + 1) + (d + 1 | b) * (d + 1 & b) & (d ^ a) + (~a & d) * -2) * ((-d - 2 & b) * (~b & d + 1) + (d + 1 | b) * (d + 1 & b) | (d ^ a) + (~a & d) * -2)",
                    "attributes": {
                        "numOps": 84,
                        "nestedExprLevel": 17,
                        "numDAGs": 30,
                        "percentDecreaseByOps": -3.7037037037037033,
                        "opsPercentages": {
                            "arithmetic": 38.095238095238095,
                            "mul": 16.666666666666664,
                            "bitwise": 45.23809523809524
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                }
            }
        },
        {
            "num": 198,
            "gt": {
                "expr": "((((b+b)|a)&(-(~(a|e)))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "(~ ((((((b | b) << 1) - (b ^ b)) + a) + 1) + ((- (((b | b) << 1) - (b ^ b)) - 1) | (- a - 1))) | (((a & ~ e) + e) + 1)) - ~ ((((((b | b) << 1) - (b ^ b)) + a) + 1) + ((- (((b | b) << 1) - (b ^ b)) - 1) | (- a - 1)))",
                "attributes": {
                    "numOps": 40,
                    "nestedExprLevel": 27,
                    "numDAGs": 19,
                    "opsPercentages": {
                        "arithmetic": 52.5,
                        "mul": 0.0,
                        "bitwise": 47.5
                    },
                    "percentageDAGsCancel": 10.526315789473683
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "a + b * 2 + 1 + ~(b * 2 & a) & e + (~e & a) + 1",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 2,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 70.0,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 16.666666666666664,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "a + 2 + (e + 1 + (~e & a) | ~(b * 2 + 1 + ~(b * 2 & a) + a)) + ~(b * 2 & a) + b * 2",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 4,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 47.5,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 19.047619047619047,
                            "bitwise": 38.095238095238095
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "clang_O3": {
                    "expr": "e + (~e & a) + 1 & (b * 2 | a)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 82.5,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 14.285714285714285,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_default": {
                    "expr": "(b * 2 + a + 1 + (b * -2 - 1 | 0xffffffff - a) ^ 0xffffffff | (a & (e ^ 0xffffffff)) + e + 1) - (b * 2 + a + 1 + (b * -2 - 1 | 0xffffffff - a) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 5,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 35.0,
                        "opsPercentages": {
                            "arithmetic": 57.692307692307686,
                            "mul": 15.384615384615385,
                            "bitwise": 26.923076923076923
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(b * 2 + a + 1 + (b * -2 - 1 | 0xffffffff - a)) | (~e & a) + 1 + e) - ~(b * 2 + a + 1 + (b * -2 - 1 | 0xffffffff - a))",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 6,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 35.0,
                        "opsPercentages": {
                            "arithmetic": 57.692307692307686,
                            "mul": 15.384615384615385,
                            "bitwise": 26.923076923076923
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(b * 2 + a) - (b * 2 & a) & e + 1 + (~e & a)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 75.0,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 20.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 199,
            "gt": {
                "expr": "((((-((a-(-d))-a))-(d+d))-((-(d|a))^d)))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 11,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 80.0,
                        "mul": 0.0,
                        "bitwise": 20.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "(((~ ((((((a ^ (~ d + 1)) - ((~ a & (~ d + 1)) << 1)) & ~ a) + (((a ^ (~ d + 1)) - ((~ a & (~ d + 1)) << 1)) & ~ a)) - (((a ^ (~ d + 1)) - ((~ a & (~ d + 1)) << 1)) ^ a)) - 1) + ~ ((d ^ d) + ((d & d) + (d & d)))) + 1) ^ ((~ (((d & ~ a) + a) - 1) | d) - (~ (((d & ~ a) + a) - 1) & d))) - ((~ ((~ ((((((a ^ (~ d + 1)) - ((~ a & (~ d + 1)) << 1)) & ~ a) + (((a ^ (~ d + 1)) - ((~ a & (~ d + 1)) << 1)) & ~ a)) - (((a ^ (~ d + 1)) - ((~ a & (~ d + 1)) << 1)) ^ a)) - 1) + ~ ((d ^ d) + ((d & d) + (d & d)))) + 1) & ((~ (((d & ~ a) + a) - 1) | d) - (~ (((d & ~ a) + a) - 1) & d))) + (~ ((~ ((((((a ^ (~ d + 1)) - ((~ a & (~ d + 1)) << 1)) & ~ a) + (((a ^ (~ d + 1)) - ((~ a & (~ d + 1)) << 1)) & ~ a)) - (((a ^ (~ d + 1)) - ((~ a & (~ d + 1)) << 1)) ^ a)) - 1) + ~ ((d ^ d) + ((d & d) + (d & d)))) + 1) & ((~ (((d & ~ a) + a) - 1) | d) - (~ (((d & ~ a) + a) - 1) & d))))",
                "attributes": {
                    "numOps": 178,
                    "nestedExprLevel": 96,
                    "numDAGs": 32,
                    "opsPercentages": {
                        "arithmetic": 36.51685393258427,
                        "mul": 0.0,
                        "bitwise": 63.48314606741573
                    },
                    "percentageDAGsCancel": 9.375
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(d * 2) + ((-d ^ a) + (-d & ~a) * -2 ^ a) + ~((~a & (-d ^ a) + (-d & ~a) * -2) * 2) + 2 ^ -(a + (~a & d)) ^ d) + ((-(a + (~a & d)) ^ d) & (d * 2 - (((-d ^ a) + (-d & ~a) * -2 ^ a) + ~((~a & (-d ^ a) + (-d & ~a) * -2) * 2) + 1)) - 1) * -2",
                    "attributes": {
                        "numOps": 67,
                        "nestedExprLevel": 18,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 62.35955056179775,
                        "opsPercentages": {
                            "arithmetic": 43.28358208955223,
                            "mul": 13.432835820895523,
                            "bitwise": 43.28358208955223
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~(a + -1 + (~a & d)) | d) - (~(a + -1 + (~a & d)) & d) ^ ((~d + 1 ^ a) - (~d * 2 + 2 & ~a * 2) ^ a) + ((~d + 1 ^ a) - (~d * 2 + 2 & ~a * 2) & ~a) * -2 + ~(d * 2) + 1) + (~((~d + 1 ^ a) - (~d * 2 + 2 & ~a * 2) ^ a) + ((~d + 1 ^ a) - (~d * 2 + 2 & ~a * 2) & ~a) * -2 + ~(d * 2) + 1 & (~(a + -1 + (~a & d)) | d) - (~(a + -1 + (~a & d)) & d)) * -2",
                    "attributes": {
                        "numOps": 96,
                        "nestedExprLevel": 20,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 46.06741573033708,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 13.541666666666666,
                            "bitwise": 48.95833333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(((-d ^ a) + (-d & ~a) * -2 ^ a) + (((-d ^ a) + (-d & ~a) * -2 & ~a) + d) * -2 ^ d) + (~((-d ^ a) + (-d & ~a) * -2 ^ a) + (((-d ^ a) + (-d & ~a) * -2 & ~a) + d) * -2 & d) * -2",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 13,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 70.78651685393258,
                        "opsPercentages": {
                            "arithmetic": 46.15384615384615,
                            "mul": 13.461538461538462,
                            "bitwise": 40.38461538461539
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_default": {
                    "expr": "((((((a ^ (d ^ 0xffffffff) + 1) + ((a ^ 0xffffffff) & (d ^ 0xffffffff) + 1) * -2 & (a ^ 0xffffffff)) + ((a ^ (d ^ 0xffffffff) + 1) + ((a ^ 0xffffffff) & (d ^ 0xffffffff) + 1) * -2 & (a ^ 0xffffffff))) - ((a ^ (d ^ 0xffffffff) + 1) + ((a ^ 0xffffffff) & (d ^ 0xffffffff) + 1) * -2 ^ a)) - 1 ^ 0xffffffff) + (d * 2 ^ 0xffffffff) + 1 ^ (((d & (a ^ 0xffffffff)) + a) - 1 ^ 0xffffffff | d) - ((((d & (a ^ 0xffffffff)) + a) - 1 ^ 0xffffffff) & d)) - ((((((((a ^ (d ^ 0xffffffff) + 1) + ((a ^ 0xffffffff) & (d ^ 0xffffffff) + 1) * -2 & (a ^ 0xffffffff)) + ((a ^ (d ^ 0xffffffff) + 1) + ((a ^ 0xffffffff) & (d ^ 0xffffffff) + 1) * -2 & (a ^ 0xffffffff))) - ((a ^ (d ^ 0xffffffff) + 1) + ((a ^ 0xffffffff) & (d ^ 0xffffffff) + 1) * -2 ^ a)) - 1 ^ 0xffffffff) + (d * 2 ^ 0xffffffff) + 1 ^ 0xffffffff) & (((d & (a ^ 0xffffffff)) + a) - 1 ^ 0xffffffff | d) - ((((d & (a ^ 0xffffffff)) + a) - 1 ^ 0xffffffff) & d)) + (((((((a ^ (d ^ 0xffffffff) + 1) + ((a ^ 0xffffffff) & (d ^ 0xffffffff) + 1) * -2 & (a ^ 0xffffffff)) + ((a ^ (d ^ 0xffffffff) + 1) + ((a ^ 0xffffffff) & (d ^ 0xffffffff) + 1) * -2 & (a ^ 0xffffffff))) - ((a ^ (d ^ 0xffffffff) + 1) + ((a ^ 0xffffffff) & (d ^ 0xffffffff) + 1) * -2 ^ a)) - 1 ^ 0xffffffff) + (d * 2 ^ 0xffffffff) + 1 ^ 0xffffffff) & (((d & (a ^ 0xffffffff)) + a) - 1 ^ 0xffffffff | d) - ((((d & (a ^ 0xffffffff)) + a) - 1 ^ 0xffffffff) & d)))",
                    "attributes": {
                        "numOps": 175,
                        "nestedExprLevel": 74,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 1.6853932584269662,
                        "opsPercentages": {
                            "arithmetic": 38.857142857142854,
                            "mul": 6.857142857142858,
                            "bitwise": 54.285714285714285
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "msvc_default": {
                    "expr": "(~(((((~d + 1 ^ a) + (~a & ~d + 1) * -2 & ~a) + ((~d + 1 ^ a) + (~a & ~d + 1) * -2 & ~a)) - ((~d + 1 ^ a) + (~a & ~d + 1) * -2 ^ a)) - 1) + 1 + ~(d * 2) ^ (~(((~a & d) - 1) + a) | d) - (~(((~a & d) - 1) + a) & d)) - ((~(~(((((~d + 1 ^ a) + (~a & ~d + 1) * -2 & ~a) + ((~d + 1 ^ a) + (~a & ~d + 1) * -2 & ~a)) - ((~d + 1 ^ a) + (~a & ~d + 1) * -2 ^ a)) - 1) + 1 + ~(d * 2)) & (~(((~a & d) - 1) + a) | d) - (~(((~a & d) - 1) + a) & d)) + (~(~(((((~d + 1 ^ a) + (~a & ~d + 1) * -2 & ~a) + ((~d + 1 ^ a) + (~a & ~d + 1) * -2 & ~a)) - ((~d + 1 ^ a) + (~a & ~d + 1) * -2 ^ a)) - 1) + 1 + ~(d * 2)) & (~(((~a & d) - 1) + a) | d) - (~(((~a & d) - 1) + a) & d)))",
                    "attributes": {
                        "numOps": 175,
                        "nestedExprLevel": 53,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 1.6853932584269662,
                        "opsPercentages": {
                            "arithmetic": 38.857142857142854,
                            "mul": 6.857142857142858,
                            "bitwise": 54.285714285714285
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "gcc_O3": {
                    "expr": "(((-d ^ a) + (-d & ~a) * -2 ^ a) + (~a & (-d ^ a) + (-d & ~a) * -2) * -2 + d * -2 ^ -((~a & d) + a) ^ d) + ((d * 2 - ((-d ^ a) + (-d & ~a) * -2 ^ a) + (~a & (-d ^ a) + (-d & ~a) * -2) * -2) - 1 & -((~a & d) + a) ^ d) * -2",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 15,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 63.48314606741573,
                        "opsPercentages": {
                            "arithmetic": 46.15384615384615,
                            "mul": 13.846153846153847,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 200,
            "gt": {
                "expr": "(((d*a)|(-(a^d))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 25.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((d & a) * (d | a) + (d & ~ a) * (~ d & a)) + (~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2) + 1)) + 1) + ((- ((d & a) * (d | a) + (d & ~ a) * (~ d & a)) - 1) | (- (~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2) + 1) - 1))",
                "attributes": {
                    "numOps": 46,
                    "nestedExprLevel": 22,
                    "numDAGs": 24,
                    "opsPercentages": {
                        "arithmetic": 41.30434782608695,
                        "mul": 8.695652173913043,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 8.333333333333332
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~d | a) * -2 - (~a + d)) - 4 | ~((~d & a) * (~a & d) + (d & a) * (d | a))) + (~d | a) * 2 + ~a + d + (d & a) * (d | a) + (~d & a) * (~a & d) + 4",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 10,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 19.565217391304348,
                        "opsPercentages": {
                            "arithmetic": 29.72972972972973,
                            "mul": 16.216216216216218,
                            "bitwise": 54.054054054054056
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(a | d) * (a & d) + 3 + ((~(~a & d) * (~d & a) - (a | d) * (a & d) | (a + (~d | a) * -2) - d - 3) - (a + (~d | a) * -2) - d) + (~a & d) * (~d & a)",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 10,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 21.73913043478261,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 16.666666666666664,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "clang_O3": {
                    "expr": "(-(d - a) + (~d | a) * 2 - 3 | ~(~d & a) * (~a & d) + (d | a) * (d & a)) + (~d & a) * (~a & d) + (d | a) * (d & a) + (d - a) + (~d | a) * 2 + 3",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 8,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 23.91304347826087,
                        "opsPercentages": {
                            "arithmetic": 31.428571428571427,
                            "mul": 17.142857142857142,
                            "bitwise": 51.42857142857142
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "clang_default": {
                    "expr": "(d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 2 + (0xffffffff - ((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a)) | 0xffffffff - ((((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff)) ) - 2 ^ 0xffffffff) + 1))",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 18,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 6.521739130434782,
                        "opsPercentages": {
                            "arithmetic": 37.2093023255814,
                            "mul": 9.30232558139535,
                            "bitwise": 53.48837209302325
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(d & a) * (d | a) + (~a & d) * (~d & a) + ~(((a - d) - ((~d | a) + (~d | a))) - 2) + 2 + (0xffffffff - ((d & a) * (d | a) + (~a & d) * (~d & a)) | 0xffffffff - (~(((a - d) - ((~d | a) + (~d | a))) - 2) + 1))",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 16,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 6.521739130434782,
                        "opsPercentages": {
                            "arithmetic": 37.2093023255814,
                            "mul": 9.30232558139535,
                            "bitwise": 53.48837209302325
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "gcc_O3": {
                    "expr": "(d & a) * (d | a) + (~a & d) * (~d & a) + 4 + ~a + d + (~d | a) * 2 + (~(d & a) * (d | a) + (~a & d) * (~d & a) | -~a + d + (~d | a) * 2 - 4)",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 7,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 19.565217391304348,
                        "opsPercentages": {
                            "arithmetic": 29.72972972972973,
                            "mul": 16.216216216216218,
                            "bitwise": 54.054054054054056
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                }
            }
        },
        {
            "num": 201,
            "gt": {
                "expr": "((((e^c)&e)&(((c-e)*(a+e))&((a-c)^e))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 11.11111111111111,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "(~ (((~ (((e - c) - ((e | ~ c) << 1)) - 2) | e) + (((e - c) - ((e | ~ c) << 1)) - 2)) + 1) | ((~ ((((c & ~ e) - (~ c & e)) & ((a | e) + (a & e))) * (((c & ~ e) - (~ c & e)) | ((a | e) + (a & e))) + (((c & ~ e) - (~ c & e)) & ~ ((a | e) + (a & e))) * (~ ((c & ~ e) - (~ c & e)) & ((a | e) + (a & e)))) | ((((((a & ~ c) + (a & ~ c)) - (a ^ c)) - e) - (((((a & ~ c) + (a & ~ c)) - (a ^ c)) | ~ e) << 1)) - 2)) - ~ ((((c & ~ e) - (~ c & e)) & ((a | e) + (a & e))) * (((c & ~ e) - (~ c & e)) | ((a | e) + (a & e))) + (((c & ~ e) - (~ c & e)) & ~ ((a | e) + (a & e))) * (~ ((c & ~ e) - (~ c & e)) & ((a | e) + (a & e)))))) - ~ (((~ (((e - c) - ((e | ~ c) << 1)) - 2) | e) + (((e - c) - ((e | ~ c) << 1)) - 2)) + 1)",
                "attributes": {
                    "numOps": 142,
                    "nestedExprLevel": 76,
                    "numDAGs": 41,
                    "opsPercentages": {
                        "arithmetic": 30.28169014084507,
                        "mul": 2.8169014084507045,
                        "bitwise": 66.90140845070422
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((e - c) + (~c | e) * -2 + ((~c | e) * 2 + ~e + c + 2 | e)) - 1 & ((((~c & a) * 2 - (a ^ c)) - e) + (~e | (~c & a) * 2 - (a ^ c)) * -2) - 2 & (e + a & ~c + e) * ((~e & c) - (~c & e) & ~(e + a)) + ((~e & c) - (~c & e) & e + a) * (e + a | (~e & c) - (~c & e))",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 16,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 54.929577464788736,
                        "opsPercentages": {
                            "arithmetic": 35.9375,
                            "mul": 10.9375,
                            "bitwise": 53.125
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_O1": {
                    "expr": "((((~(a | e) + (a & e) & (~e & c) - (~c & e)) * (~(~e & c) - (~c & e) & (a | e) + (a & e)) + 1 + (((((~c & a) * 2 - (((~c & a) * 2 - (a ^ c)) * 2 | ~e * 2)) - (a ^ c)) - e) - 2 | ~(((~e & c) - (~c & e) | (a | e) + (a & e)) * ((~e & c) - (~c & e) & (a | e) + (a & e)) + (~(a | e) + (a & e) & (~e & c) - (~c & e)) * (~(~e & c) - (~c & e) & (a | e) + (a & e)))) + ((~e & c) - (~c & e) | (a | e) + (a & e)) * ((~e & c) - (~c & e) & (a | e) + (a & e)) | (((~c | e) * 2 - c + 1 + ((~c | e) * 2 - e) | e) - e) + c) + (~c | e) * -2) - c) + c + 1 + ((~c | e) * 2 - e) | e + e",
                    "attributes": {
                        "numOps": 132,
                        "nestedExprLevel": 42,
                        "numDAGs": 54,
                        "percentDecreaseByOps": 7.042253521126761,
                        "opsPercentages": {
                            "arithmetic": 29.545454545454547,
                            "mul": 9.090909090909092,
                            "bitwise": 61.36363636363637
                        },
                        "percentageDAGsCancel": 1.8518518518518516
                    }
                },
                "clang_O3": {
                    "expr": "((e - c) + (~c | e) * -2 + (1 - (e - c) + (~c | e) * -2 | e)) - 1 & (((~c & a) * 2 - ((c ^ a) + e)) + ((~c & a) * 2 - (c ^ a) | ~e) * -2) - 2 & (~(~e & c) - (~c & e) & e + a) * (~e + a & (~e & c) - (~c & e)) + ((~e & c) - (~c & e) | e + a) * ((~e & c) - (~c & e) & e + a)",
                    "attributes": {
                        "numOps": 68,
                        "nestedExprLevel": 18,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 52.112676056338024,
                        "opsPercentages": {
                            "arithmetic": 35.294117647058826,
                            "mul": 10.294117647058822,
                            "bitwise": 54.41176470588235
                        },
                        "percentageDAGsCancel": 2.631578947368421
                    }
                },
                "clang_default": {
                    "expr": "(((((e - c) + (e | c ^ 0xffffffff) * -2) - 2 ^ 0xffffffff | e) + (e - c) + (e | c ^ 0xffffffff) * -2) - 1 ^ 0xffffffff | (((c & (e ^ 0xffffffff)) - ((c ^ 0xffffffff) & e) & (a | e) + (a & e)) * ((c & (e ^ 0xffffffff)) - ((c ^ 0xffffffff) & e) | (a | e) + (a & e)) + ((c & (e ^ 0xffffffff)) - ((c ^ 0xffffffff) & e) & ((a | e) + (a & e) ^ 0xffffffff)) * (((c & (e ^ 0xffffffff)) - ((c ^ 0xffffffff) & e) ^ 0xffffffff) & (a | e) + (a & e)) ^ 0xffffffff | (((((a & (c ^ 0xffffffff)) + (a & (c ^ 0xffffffff))) - (a ^ c)) - e) + (((a & (c ^ 0xffffffff)) + (a & (c ^ 0xffffffff))) - (a ^ c) | e ^ 0xffffffff) * -2) - 2) - (((c & (e ^ 0xffffffff)) - ((c ^ 0xffffffff) & e) & (a | e) + (a & e)) * ((c & (e ^ 0xffffffff)) - ((c ^ 0xffffffff) & e) | (a | e) + (a & e)) + ((c & (e ^ 0xffffffff)) - ((c ^ 0xffffffff) & e) & ((a | e) + (a & e) ^ 0xffffffff)) * (((c & (e ^ 0xffffffff)) - ((c ^ 0xffffffff) & e) ^ 0xffffffff) & (a | e) + (a & e)) ^ 0xffffffff)) - (((((e - c) + (e | c ^ 0xffffffff) * -2) - 2 ^ 0xffffffff | e) + (e - c) + (e | c ^ 0xffffffff) * -2) - 1 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 145,
                        "nestedExprLevel": 63,
                        "numDAGs": 43,
                        "percentDecreaseByOps": -2.112676056338028,
                        "opsPercentages": {
                            "arithmetic": 31.724137931034484,
                            "mul": 6.206896551724138,
                            "bitwise": 62.06896551724138
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(((~(((e - c) + (~c | e) * -2) - 2) | e) - 1) + (e - c) + (~c | e) * -2) | (~(((~e & c) - (~c & e) & (a | e) + (a & e) ) * ((~e & c) - (~c & e) | (a | e) + (a & e)) + ((~e & c) - (~c & e) & ~((a | e) + (a & e))) * (~((~e & c) - (~c & e)) & (a | e) + (a & e))) | (((((~c & a) + (~c & a)) - (a ^ c)) - e) + (((~c & a) + (~c & a)) - (a ^ c) | ~e) * -2) - 2 ) - ~(((~e & c) - (~c & e) & (a | e) + (a & e)) * ((~e & c) - (~c & e) | (a | e) + (a & e)) + ((~e & c) - (~c & e) & ~((a | e) + (a & e))) * (~((~e & c) - (~c & e)) & (a | e) + (a & e)))) - ~(((~(((e - c) + (~c | e) * -2) - 2) | e) - 1) + (e - c) + (~c | e) * -2)",
                    "attributes": {
                        "numOps": 145,
                        "nestedExprLevel": 55,
                        "numDAGs": 43,
                        "percentDecreaseByOps": -2.112676056338028,
                        "opsPercentages": {
                            "arithmetic": 31.724137931034484,
                            "mul": 6.206896551724138,
                            "bitwise": 62.06896551724138
                        },
                        "percentageDAGsCancel": 2.3255813953488373
                    }
                },
                "gcc_O3": {
                    "expr": "(((~c | e) * 2 + 2 + ~e + c | e) - 1) + (e - c) + (~c | e) * -2 & (((~c & a) * 2 - (c ^ a) - e) + ((~c & a) * 2 - (c ^ a) | ~e) * -2) - 2 & (~c + e & a + e) * (~a + e & (~e & c) - (~c & e)) + ((~e & c) - (~c & e) & a + e) * ((~e & c) - (~c & e) | a + e)",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 15,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 54.929577464788736,
                        "opsPercentages": {
                            "arithmetic": 35.9375,
                            "mul": 10.9375,
                            "bitwise": 53.125
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                }
            }
        },
        {
            "num": 202,
            "gt": {
                "expr": "(((d+(d*(d+a)))+(d&a)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 20.0,
                        "bitwise": 20.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((d | ((d & (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (d | (((d ^ ~ a) + ((d | a) << 1)) + 1)) + (d & ~ (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (~ d & (((d ^ ~ a) + ((d | a) << 1)) + 1)))) + (d | ((d & (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (d | (((d ^ ~ a) + ((d | a) << 1)) + 1)) + (d & ~ (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (~ d & (((d ^ ~ a) + ((d | a) << 1)) + 1))))) - (d ^ ((d & (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (d | (((d ^ ~ a) + ((d | a) << 1)) + 1)) + (d & ~ (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (~ d & (((d ^ ~ a) + ((d | a) << 1)) + 1))))) ^ ((~ d | a) - ~ d)) + (((((d | ((d & (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (d | (((d ^ ~ a) + ((d | a) << 1)) + 1)) + (d & ~ (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (~ d & (((d ^ ~ a) + ((d | a) << 1)) + 1)))) + (d | ((d & (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (d | (((d ^ ~ a) + ((d | a) << 1)) + 1)) + (d & ~ (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (~ d & (((d ^ ~ a) + ((d | a) << 1)) + 1))))) - (d ^ ((d & (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (d | (((d ^ ~ a) + ((d | a) << 1)) + 1)) + (d & ~ (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (~ d & (((d ^ ~ a) + ((d | a) << 1)) + 1))))) & ((~ d | a) - ~ d)) + ((((d | ((d & (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (d | (((d ^ ~ a) + ((d | a) << 1)) + 1)) + (d & ~ (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (~ d & (((d ^ ~ a) + ((d | a) << 1)) + 1)))) + (d | ((d & (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (d | (((d ^ ~ a) + ((d | a) << 1)) + 1)) + (d & ~ (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (~ d & (((d ^ ~ a) + ((d | a) << 1)) + 1))))) - (d ^ ((d & (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (d | (((d ^ ~ a) + ((d | a) << 1)) + 1)) + (d & ~ (((d ^ ~ a) + ((d | a) << 1)) + 1)) * (~ d & (((d ^ ~ a) + ((d | a) << 1)) + 1))))) & ((~ d | a) - ~ d)))",
                "attributes": {
                    "numOps": 329,
                    "nestedExprLevel": 177,
                    "numDAGs": 25,
                    "opsPercentages": {
                        "arithmetic": 27.96352583586626,
                        "mul": 5.47112462006079,
                        "bitwise": 66.56534954407294
                    },
                    "percentageDAGsCancel": 8.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a & d & (((d | a) * 2 + ~(a ^ d) + 1 & ~d) * (((a ^ d) + (d | a) * -2) - 1 & d) + ((d | a) * 2 + ~(a ^ d) + 1 & d) * ((d | a) * 2 + ~(a ^ d) + 1 | d) | d) * 2 - (((d | a) * 2 + ~(a ^ d) + 1 & ~d) * (((a ^ d) + (d | a) * -2) - 1 & d) + ((d | a) * 2 + ~(a ^ d) + 1 & d) * ((d | a) * 2 + ~(a ^ d) + 1 | d) ^ d)) * 2 + ((((d | a) * 2 + ~(a ^ d) + 1 & ~d) * (((a ^ d) + (d | a) * -2) - 1 & d) + ((d | a) * 2 + ~(a ^ d) + 1 & d) * ((d | a) * 2 + ~(a ^ d) + 1 | d) | d) * 2 - (((d | a) * 2 + ~(a ^ d) + 1 & ~d) * (((a ^ d) + (d | a) * -2) - 1 & d) + ((d | a) * 2 + ~(a ^ d) + 1 & d) * ((d | a) * 2 + ~(a ^ d) + 1 | d) ^ d) ^ a & d)",
                    "attributes": {
                        "numOps": 142,
                        "nestedExprLevel": 43,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 56.838905775075986,
                        "opsPercentages": {
                            "arithmetic": 30.28169014084507,
                            "mul": 19.014084507042252,
                            "bitwise": 50.70422535211267
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "msvc_O1": {
                    "expr": "(d + 1 + (~d | a) ^ (((a | d) * 2 + 1 + (~a ^ d) | d) * ((a | d) * 2 + 1 + (~a ^ d) & d) + (~(a | d) * 2 + 1 + (~a ^ d) & d) * (~d & (a | d) * 2 + 1 + (~a ^ d)) | d) * 2 - (((a | d) * 2 + 1 + (~a ^ d) | d) * ((a | d) * 2 + 1 + (~a ^ d) & d) + (~(a | d) * 2 + 1 + (~a ^ d) & d) * (~d & (a | d) * 2 + 1 + (~a ^ d)) ^ d)) + (d + 1 + (~d | a) & (((a | d) * 2 + 1 + (~a ^ d) | d) * ((a | d) * 2 + 1 + (~a ^ d) & d) + (~(a | d) * 2 + 1 + (~a ^ d) & d) * (~d & (a | d) * 2 + 1 + (~a ^ d)) | d) * 2 - (((a | d) * 2 + 1 + (~a ^ d) | d) * ((a | d) * 2 + 1 + (~a ^ d) & d) + (~(a | d) * 2 + 1 + (~a ^ d) & d) * (~d & (a | d) * 2 + 1 + (~a ^ d)) ^ d)) * 2",
                    "attributes": {
                        "numOps": 152,
                        "nestedExprLevel": 39,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 53.799392097264445,
                        "opsPercentages": {
                            "arithmetic": 28.289473684210524,
                            "mul": 17.763157894736842,
                            "bitwise": 53.94736842105263
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                },
                "clang_O3": {
                    "expr": "(((~d & (d | a) * 2 - (d ^ a)) * (~(d | a) * 2 - (d ^ a) & d) + ((d | a) * 2 - (d ^ a) | d) * ((d | a) * 2 - (d ^ a) & d) | d) * 2 - ((~d & (d | a) * 2 - (d ^ a)) * (~(d | a) * 2 - (d ^ a) & d) + ((d | a) * 2 - (d ^ a) | d) * ((d | a) * 2 - (d ^ a) & d) ^ d) ^ d & a) + (d & a & ((~d & (d | a) * 2 - (d ^ a)) * (~(d | a) * 2 - (d ^ a) & d) + ((d | a) * 2 - (d ^ a) | d) * ((d | a) * 2 - (d ^ a) & d) | d) * 2 - ((~d & (d | a) * 2 - (d ^ a)) * (~(d | a) * 2 - (d ^ a) & d) + ((d | a) * 2 - (d ^ a) | d) * ((d | a) * 2 - (d ^ a) & d) ^ d)) * 2",
                    "attributes": {
                        "numOps": 114,
                        "nestedExprLevel": 39,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 65.34954407294833,
                        "opsPercentages": {
                            "arithmetic": 20.175438596491226,
                            "mul": 23.684210526315788,
                            "bitwise": 56.14035087719298
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d | (d & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) * (d | (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) + (d & ((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1)) + (d | (d & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) * (d | (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) + (d & ((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ))) - (d ^ (d & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) * (d | (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) + (d & ((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1)) ^ (d ^ 0xffffffff | a) - (d ^ 0xffffffff)) + (((d | (d & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) * (d | (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) + (d & ((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1)) + (d | (d & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) * (d | (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) + (d & ((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ))) - (d ^ (d & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) * (d | (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) + (d & ((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1)) & (d ^ 0xffffffff | a) - (d ^ 0xffffffff)) + (((d | (d & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) * (d | (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) + (d & ((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1)) + (d | (d & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) * (d | (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) + (d & ((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ))) - (d ^ (d & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) * (d | (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1) + (d & ((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (d ^ a ^ 0xffffffff) + (d | a) * 2 + 1)) & (d ^ 0xffffffff | a) - (d ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 329,
                        "nestedExprLevel": 101,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 27.96352583586626,
                            "mul": 16.41337386018237,
                            "bitwise": 55.62310030395137
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "msvc_default": {
                    "expr": "(((((~a ^ d) + 1 + (d | a) * 2 & d) * ((~a ^ d) + 1 + (d | a) * 2 | d) + (~((~a ^ d) + 1 + (d | a) * 2) & d) * (~d & (~a ^ d) + 1 + (d | a) * 2) | d) + (((~a ^ d) + 1 + (d | a) * 2 & d) * ((~a ^ d) + 1 + (d | a) * 2 | d) + (~((~a ^ d) + 1 + (d | a) * 2) & d) * (~d & (~a ^ d) + 1 + (d | a) * 2) | d)) - (((~a ^ d) + 1 + (d | a) * 2 & d) * ((~a ^ d) + 1 + (d | a) * 2 | d) + (~((~a ^ d) + 1 + (d | a) * 2) & d) * (~d & (~a ^ d) + 1 + (d | a) * 2) ^ d) & (~d | a) - ~d) + (((((~a ^ d) + 1 + (d | a) * 2 & d) * ((~a ^ d) + 1 + (d | a) * 2 | d) + (~((~a ^ d) + 1 + (d | a) * 2) & d) * (~d & (~a ^ d) + 1 + (d | a) * 2) | d) + (((~a ^ d) + 1 + (d | a) * 2 & d) * ((~a ^ d) + 1 + (d | a) * 2 | d) + (~((~a ^ d) + 1 + (d | a) * 2) & d) * (~d & (~a ^ d) + 1 + (d | a) * 2) | d)) - (((~a ^ d) + 1 + (d | a) * 2 & d) * ((~a ^ d) + 1 + (d | a) * 2 | d) + (~((~a ^ d) + 1 + (d | a) * 2) & d) * (~d & (~a ^ d) + 1 + (d | a) * 2) ^ d) & (~d | a) - ~d) + (((((~a ^ d) + 1 + (d | a) * 2 & d) * ((~a ^ d) + 1 + (d | a) * 2 | d) + (~((~a ^ d) + 1 + (d | a) * 2) & d) * (~d & (~a ^ d) + 1 + (d | a) * 2) | d) + (((~a ^ d) + 1 + (d | a) * 2 & d) * ((~a ^ d) + 1 + (d | a) * 2 | d) + (~((~a ^ d) + 1 + (d | a) * 2) & d) * (~d & (~a ^ d) + 1 + (d | a) * 2) | d)) - (((~a ^ d) + 1 + (d | a) * 2 & d) * ((~a ^ d) + 1 + (d | a) * 2 | d) + (~((~a ^ d) + 1 + (d | a) * 2) & d) * (~d & (~a ^ d) + 1 + (d | a) * 2) ^ d) ^ (~d | a) - ~d)",
                    "attributes": {
                        "numOps": 329,
                        "nestedExprLevel": 98,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 27.96352583586626,
                            "mul": 16.41337386018237,
                            "bitwise": 55.62310030395137
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((((a ^ d) + (a | d) * -2) - 1 & d) * (~d & (a | d) * 2 - (a ^ d)) + ((a | d) * 2 - (a ^ d) | d) * ((a | d) * 2 - (a ^ d) & d) | d) * 2 - ((((a ^ d) + (a | d) * -2) - 1 & d) * (~d & (a | d) * 2 - (a ^ d)) + ((a | d) * 2 - (a ^ d) | d) * ((a | d) * 2 - (a ^ d) & d) ^ d) ^ a & d) + (((((a ^ d) + (a | d) * -2) - 1 & d) * (~d & (a | d) * 2 - (a ^ d)) + ((a | d) * 2 - (a ^ d) | d) * ((a | d) * 2 - (a ^ d) & d) | d) * 2 - ((((a ^ d) + (a | d) * -2) - 1 & d) * (~d & (a | d) * 2 - (a ^ d)) + ((a | d) * 2 - (a ^ d) | d) * ((a | d) * 2 - (a ^ d) & d) ^ d) & a & d) * 2",
                    "attributes": {
                        "numOps": 118,
                        "nestedExprLevel": 43,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 64.13373860182371,
                        "opsPercentages": {
                            "arithmetic": 26.27118644067797,
                            "mul": 22.88135593220339,
                            "bitwise": 50.847457627118644
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                }
            }
        },
        {
            "num": 203,
            "gt": {
                "expr": "(((((e&b)*(~c))|(b-c))+((~e)&e)))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 12.5,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "((((((((~ e | b) - ~ e) & (- c - 1)) * (((~ e | b) - ~ e) | (- c - 1)) + (((~ e | b) - ~ e) & ~ (- c - 1)) * (~ ((~ e | b) - ~ e) & (- c - 1))) + ((b + ~ c) + 1)) + 1) + ((- ((((~ e | b) - ~ e) & (- c - 1)) * (((~ e | b) - ~ e) | (- c - 1)) + (((~ e | b) - ~ e) & ~ (- c - 1)) * (~ ((~ e | b) - ~ e) & (- c - 1))) - 1) | (- ((b + ~ c) + 1) - 1))) - ~ ((~ (- e - 1) | e) - ~ (- e - 1))) - 1",
                "attributes": {
                    "numOps": 91,
                    "nestedExprLevel": 39,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 48.35164835164835,
                        "mul": 4.395604395604396,
                        "bitwise": 47.25274725274725
                    },
                    "percentageDAGsCancel": 15.151515151515152
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((c - b) - 1 | ~(~(b & e | c) * (b & e & c) + (b & e & ~c) * (~c | b & e))) + b + ~c + (b & e & ~c) * (~c | b & e) + ~(b & e | c) * (b & e & c) + 2",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 7,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 59.34065934065934,
                        "opsPercentages": {
                            "arithmetic": 21.62162162162162,
                            "mul": 10.81081081081081,
                            "bitwise": 67.56756756756756
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~e + 1 + (~e | b) & ~c) * (e + 1 + (~e | b) & c) - (~c | e + 1 + (~e | b)) * (~c & e + 1 + (~e | b)) | (c - b) - 1) + (~c | e + 1 + (~e | b)) * (~c & e + 1 + (~e | b)) + (~e + 1 + (~e | b) & ~c) * (e + 1 + (~e | b) & c) + ~c + b + 2",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 12,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 30.76923076923077,
                        "opsPercentages": {
                            "arithmetic": 38.095238095238095,
                            "mul": 6.349206349206349,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "clang_O3": {
                    "expr": "(~e & ~c) * (e & c) + (e | ~c) * (e & ~c) | b - c",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 85.71428571428571,
                        "opsPercentages": {
                            "arithmetic": 15.384615384615385,
                            "mul": 15.384615384615385,
                            "bitwise": 69.23076923076923
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & 0xffffffff - c) * ((e ^ 0xffffffff | b) - (e ^ 0xffffffff) | 0xffffffff - c) + ((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (0xffffffff - c ^ 0xffffffff)) * (((e ^ 0xffffffff | b) - (e ^ 0xffffffff) ^ 0xffffffff) & 0xffffffff - c) + b + (c ^ 0xffffffff) + (0xffffffff - (((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & 0xffffffff - c) * ((e ^ 0xffffffff | b) - (e ^ 0xffffffff) | 0xffffffff - c) + ((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (0xffffffff - c ^ 0xffffffff)) * (((e ^ 0xffffffff | b) - (e ^ 0xffffffff) ^ 0xffffffff) & 0xffffffff - c)) | 0xffffffff - (b + (c ^ 0xffffffff) + 1))) - ((0xffffffff - e ^ 0xffffffff | e) - (0xffffffff - e ^ 0xffffffff) ^ 0xffffffff)) + 1",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 26,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 15.384615384615385,
                        "opsPercentages": {
                            "arithmetic": 38.961038961038966,
                            "mul": 5.194805194805195,
                            "bitwise": 55.84415584415584
                        },
                        "percentageDAGsCancel": 17.24137931034483
                    }
                },
                "msvc_default": {
                    "expr": "((~c + ((~e | b) - ~e & 0xffffffff - c) * ((~e | b) - ~e | 0xffffffff - c) + ((~e | b) - ~e & ~(0xffffffff - c)) * (~((~e | b) - ~e) & 0xffffffff - c) + b + (0xffffffff - (((~e | b) - ~e & 0xffffffff - c) * ((~e | b) - ~e | 0xffffffff - c) + ((~e | b) - ~e & ~(0xffffffff - c)) * (~((~e | b) - ~e) & 0xffffffff - c)) | 0xffffffff - (b + 1 + ~c))) - ~((~(0xffffffff - e) | e) - ~(0xffffffff - e))) + 1",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 21,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 15.384615384615385,
                        "opsPercentages": {
                            "arithmetic": 38.961038961038966,
                            "mul": 5.194805194805195,
                            "bitwise": 55.84415584415584
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "gcc_O3": {
                    "expr": "~(e | c) * (e & c) + (e | ~c) * (e & ~c) + ~c + 2 + b + ((c - b) - 1 | ~~(e | c) * (e & c) + (e | ~c) * (e & ~c))",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 68.13186813186813,
                        "opsPercentages": {
                            "arithmetic": 27.586206896551722,
                            "mul": 13.793103448275861,
                            "bitwise": 58.620689655172406
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 204,
            "gt": {
                "expr": "(((e+((e*c)+e))-((~a)+(a&e))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 14.285714285714285,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((e | ((((e & c) * (e | c) + (e & ~ c) * (~ e & c)) | e) + (((e & c) * (e | c) + (e & ~ c) * (~ e & c)) & e))) + (e & ((((e & c) * (e | c) + (e & ~ c) * (~ e & c)) | e) + (((e & c) * (e | c) + (e & ~ c) * (~ e & c)) & e)))) + ~ (((- a - 1) | ((~ a | e) - ~ a)) + ((- a - 1) & ((~ a | e) - ~ a)))) + 1",
                "attributes": {
                    "numOps": 63,
                    "nestedExprLevel": 29,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 25.396825396825395,
                        "mul": 12.698412698412698,
                        "bitwise": 61.904761904761905
                    },
                    "percentageDAGsCancel": 11.538461538461538
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((e & a & ~a) + (~a | e)) + (e & c) * (e | c) + (~e & c) * (~c & e) + e * 2 + 1",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 5,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 68.25396825396825,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 15.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_O1": {
                    "expr": "(((((c & e) * (c | e) + (~e & c) * (~c & e) | e) + ((c & e) * (c | e) + (~e & c) * (~c & e) & e) | e) - (a + 1 + (~a | e) | ~a)) - (a + 1 + (~a | e) & ~a)) + (((c & e) * (c | e) + (~e & c) * (~c & e) | e) + ((c & e) * (c | e) + (~e & c) * (~c & e) & e) & e)",
                    "attributes": {
                        "numOps": 59,
                        "nestedExprLevel": 19,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 6.349206349206349,
                        "opsPercentages": {
                            "arithmetic": 22.033898305084744,
                            "mul": 13.559322033898304,
                            "bitwise": 64.40677966101694
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "clang_O3": {
                    "expr": "(~e & a) + e * 2 + (c & ~e) * (~c & e) + (e | c) * (e & c) + 1",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 4,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 76.19047619047619,
                        "opsPercentages": {
                            "arithmetic": 26.666666666666668,
                            "mul": 20.0,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_default": {
                    "expr": "(e | ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) | e) + ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) & e)) + (e & ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) | e) + ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) & e)) + ((0xffffffff - a | (a ^ 0xffffffff | e) - (a ^ 0xffffffff)) + (0xffffffff - a & (a ^ 0xffffffff | e) - (a ^ 0xffffffff)) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 24,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 3.1746031746031744,
                        "opsPercentages": {
                            "arithmetic": 22.950819672131146,
                            "mul": 13.114754098360656,
                            "bitwise": 63.934426229508205
                        },
                        "percentageDAGsCancel": 12.0
                    }
                },
                "msvc_default": {
                    "expr": "(((e & c) * (e | c) + (~c & e) * (~e & c) | e) + ((e & c) * (e | c) + (~c & e) * (~e & c) & e) | e) + (((e & c) * (e | c) + (~c & e) * (~e & c) | e) + ((e & c) * (e | c) + (~c & e) * (~e & c) & e) & e) + 1 + ~((0xffffffff - a | (~a | e) - ~a) + (0xffffffff - a & (~a | e) - ~a))",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 19,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 3.1746031746031744,
                        "opsPercentages": {
                            "arithmetic": 22.950819672131146,
                            "mul": 13.114754098360656,
                            "bitwise": 63.934426229508205
                        },
                        "percentageDAGsCancel": 8.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~c & e) * (~e & c) + (e & c) * (c | e) + e * 2 + 1 + (~e & a)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 4,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 76.19047619047619,
                        "opsPercentages": {
                            "arithmetic": 26.666666666666668,
                            "mul": 20.0,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                }
            }
        },
        {
            "num": 205,
            "gt": {
                "expr": "(((b+(b-a))&((-(a|(a&a)))&((b+b)^b))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 0.0,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "((~ (((b | ((b + ~ a) + 1)) + (b | ((b + ~ a) + 1))) - (b ^ ((b + ~ a) + 1))) | ((~ (~ (((a + ((~ a | a) - ~ a)) + 1) + ((- a - 1) | (- ((~ a | a) - ~ a) - 1))) + 1) | ((((((b ^ ~ b) + ((b | b) << 1)) + 1) - b) - (((((b ^ ~ b) + ((b | b) << 1)) + 1) | ~ b) + ((((b ^ ~ b) + ((b | b) << 1)) + 1) | ~ b))) - 2)) - ~ (~ (((a + ((~ a | a) - ~ a)) + 1) + ((- a - 1) | (- ((~ a | a) - ~ a) - 1))) + 1))) + (((b | ((b + ~ a) + 1)) + (b | ((b + ~ a) + 1))) - (b ^ ((b + ~ a) + 1)))) + 1",
                "attributes": {
                    "numOps": 98,
                    "nestedExprLevel": 53,
                    "numDAGs": 37,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 10.81081081081081
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~((b + ~a + 1 | b) * 2) + (b + ~a + 1 ^ b) | -a & (b + (~b | b * 2) * -2) - 2) + ((b + ~a + 1 | b) * 2 - (b + ~a + 1 ^ b)) + 1",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 7,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 66.3265306122449,
                        "opsPercentages": {
                            "arithmetic": 48.484848484848484,
                            "mul": 12.121212121212121,
                            "bitwise": 39.39393939393939
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(b - a | b) * 2 + 1 + ((((~((b * 2 | ~b) * 2) - 1) + b | ~(~a + 1)) + ~a + 2 | ~((b - a | b) * 2 - b - a ^ b)) - b - a ^ b)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 9,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 69.38775510204081,
                        "opsPercentages": {
                            "arithmetic": 43.333333333333336,
                            "mul": 13.333333333333334,
                            "bitwise": 43.333333333333336
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "clang_O3": {
                    "expr": "(b - a | b) * 2 - (b - a ^ b) + (-a & (b - (~b * 2 | b * 4)) - 2 | ~(b - a | b) * 2 - (b - a ^ b)) + 1",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 6,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 75.51020408163265,
                        "opsPercentages": {
                            "arithmetic": 45.83333333333333,
                            "mul": 16.666666666666664,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b | b + (a ^ 0xffffffff) + 1) + (b | b + (a ^ 0xffffffff) + 1)) - (b ^ b + (a ^ 0xffffffff) + 1) ^ 0xffffffff | ((a + ((a ^ 0xffffffff | a) - (a ^ 0xffffffff)) + 1 + (0xffffffff - a | 0xffffffff - ((a ^ 0xffffffff | a) - (a ^ 0xffffffff))) ^ 0xffffffff) + 1 ^ 0xffffffff | (((b ^ b ^ 0xffffffff) + b) - (((b ^ b ^ 0xffffffff) + b * 2 + 1 | b ^ 0xffffffff) + ((b ^ b ^ 0xffffffff) + b * 2 + 1 | b ^ 0xffffffff))) - 1) - ((a + ((a ^ 0xffffffff | a) - (a ^ 0xffffffff)) + 1 + (0xffffffff - a | 0xffffffff - ((a ^ 0xffffffff | a) - (a ^ 0xffffffff))) ^ 0xffffffff) + 1 ^ 0xffffffff)) + (((b | b + (a ^ 0xffffffff) + 1) + (b | b + (a ^ 0xffffffff) + 1)) - (b ^ b + (a ^ 0xffffffff) + 1)) + 1",
                    "attributes": {
                        "numOps": 88,
                        "nestedExprLevel": 31,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 10.204081632653061,
                        "opsPercentages": {
                            "arithmetic": 48.86363636363637,
                            "mul": 2.272727272727273,
                            "bitwise": 48.86363636363637
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "msvc_default": {
                    "expr": "(~(((b + 1 + ~a | b) + (b + 1 + ~a | b)) - (b + 1 + ~a ^ b)) | (~(~((a - ~a) + (0xffffffff - a | 0xffffffff - (-1 - ~a))) + 1) | (b - ((b * 2 | ~b) + (b * 2 | ~b))) - 2) - ~(~((a - ~a) + (0xffffffff - a | 0xffffffff - (-1 - ~a))) + 1)) + 1 + (((b + 1 + ~a | b) + (b + 1 + ~a | b)) - (b + 1 + ~a ^ b))",
                    "attributes": {
                        "numOps": 67,
                        "nestedExprLevel": 19,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 31.63265306122449,
                        "opsPercentages": {
                            "arithmetic": 53.73134328358209,
                            "mul": 2.9850746268656714,
                            "bitwise": 43.28358208955223
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                },
                "gcc_O3": {
                    "expr": "((b + (~b | b * 2) * -2) - 2 & -a | ~(b - a | b) * 2 + b - a ^ b) + 1 + ((b - a | b) * 2 - b - a ^ b)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 6,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 74.48979591836735,
                        "opsPercentages": {
                            "arithmetic": 48.0,
                            "mul": 16.0,
                            "bitwise": 36.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 206,
            "gt": {
                "expr": "((((~(a&b))^((~a)*b))+a))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 16.666666666666664,
                        "mul": 16.666666666666664,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "((((((- ((~ a | b) - ~ a) - 1) - (((- a - 1) & b) * ((- a - 1) | b) + ((- a - 1) & ~ b) * (~ (- a - 1) & b))) - (((- ((~ a | b) - ~ a) - 1) | ~ (((- a - 1) & b) * ((- a - 1) | b) + ((- a - 1) & ~ b) * (~ (- a - 1) & b))) << 1)) - 2) ^ ~ a) + ((((((- ((~ a | b) - ~ a) - 1) - (((- a - 1) & b) * ((- a - 1) | b) + ((- a - 1) & ~ b) * (~ (- a - 1) & b))) - (((- ((~ a | b) - ~ a) - 1) | ~ (((- a - 1) & b) * ((- a - 1) | b) + ((- a - 1) & ~ b) * (~ (- a - 1) & b))) << 1)) - 2) | a) << 1)) + 1",
                "attributes": {
                    "numOps": 110,
                    "nestedExprLevel": 44,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 50.90909090909091,
                        "mul": 7.2727272727272725,
                        "bitwise": 41.81818181818181
                    },
                    "percentageDAGsCancel": 3.7037037037037033
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~(b & a) - ((a & b) * ~(a | b) + (~a & b) * (~a | b))) + ~((a & b) * ~(a | b) + (~a & b) * (~a | b) & b & a) * -2) - 2 | a) * 2 + (~((a & b) * ~(a | b) + (~a & b) * (~a | b) & b & a) * 2 + (b & a) + (a & b) * ~(a | b) + (~a & b) * (~a | b) + 2 ^ a) + 1",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 17,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 42.72727272727273,
                        "opsPercentages": {
                            "arithmetic": 20.634920634920633,
                            "mul": 17.46031746031746,
                            "bitwise": 61.904761904761905
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                },
                "msvc_O1": {
                    "expr": "(((((~a - ((~a - ~a | b) * 2 - 2 | ~((~a & b) * ~a | b + (~b & ~a) * (a & b)) * 2)) - (~a & b) * ~a | b) - (~b & ~a) * (a & b)) - ~a | b) - 3 ^ ~a) + 1 + (((((~a - ((~a - ~a | b) * 2 - 2 | ~((~a & b) * ~a | b + (~b & ~a) * (a & b)) * 2)) - (~a & b) * ~a | b) - (~b & ~a) * (a & b)) - ~a | b) - 3 * 2 | a * 2)",
                    "attributes": {
                        "numOps": 83,
                        "nestedExprLevel": 21,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 24.545454545454547,
                        "opsPercentages": {
                            "arithmetic": 21.686746987951807,
                            "mul": 16.867469879518072,
                            "bitwise": 61.44578313253012
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_O3": {
                    "expr": "(~((~b & ~a) * b & a + (~a | b) * (~a & b) + b & a) + ((~b & ~a) * b & a + (~a | b) * (~a & b) & b & a) * 2 | a) * 2 - (~((~b & ~a) * b & a + (~a | b) * (~a & b) + b & a) + ((~b & ~a) * b & a + (~a | b) * (~a & b) & b & a) * 2 ^ a)",
                    "attributes": {
                        "numOps": 62,
                        "nestedExprLevel": 12,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 43.63636363636363,
                        "opsPercentages": {
                            "arithmetic": 14.516129032258066,
                            "mul": 17.741935483870968,
                            "bitwise": 67.74193548387096
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "clang_default": {
                    "expr": "(((-((0xffffffff - a & b) * (0xffffffff - a | b) + (0xffffffff - a & (b ^ 0xffffffff)) * ((0xffffffff - a ^ 0xffffffff) & b)) - ((a ^ 0xffffffff | b) - (a ^ 0xffffffff))) + (0xffffffff - ((a ^ 0xffffffff | b) - (a ^ 0xffffffff)) | (0xffffffff - a & b) * (0xffffffff - a | b) + (0xffffffff - a & (b ^ 0xffffffff)) * ((0xffffffff - a ^ 0xffffffff) & b) ^ 0xffffffff) * -2) - 3 ^ a ^ 0xffffffff) + (((-((0xffffffff - a & b) * (0xffffffff - a | b) + (0xffffffff - a & (b ^ 0xffffffff)) * ((0xffffffff - a ^ 0xffffffff) & b)) - ((a ^ 0xffffffff | b) - (a ^ 0xffffffff))) + (0xffffffff - ((a ^ 0xffffffff | b) - (a ^ 0xffffffff)) | (0xffffffff - a & b) * (0xffffffff - a | b) + (0xffffffff - a & (b ^ 0xffffffff)) * ((0xffffffff - a ^ 0xffffffff) & b) ^ 0xffffffff) * -2) - 3 | a) * 2 + 1",
                    "attributes": {
                        "numOps": 92,
                        "nestedExprLevel": 32,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 16.363636363636363,
                        "opsPercentages": {
                            "arithmetic": 41.30434782608695,
                            "mul": 11.956521739130435,
                            "bitwise": 46.73913043478261
                        },
                        "percentageDAGsCancel": 10.714285714285714
                    }
                },
                "msvc_default": {
                    "expr": "(((-((0xffffffff - a & b) * (0xffffffff - a | b) + (0xffffffff - a & ~b) * (~(0xffffffff - a) & b)) - ((~a | b) - ~a)) + (0xffffffff - ((~a | b) - ~a) | ~((0xffffffff - a & b) * (0xffffffff - a | b) + (0xffffffff - a & ~b) * (~(0xffffffff - a) & b))) * -2) - 3 ^ ~a) + 1 + (((-((0xffffffff - a & b) * (0xffffffff - a | b) + (0xffffffff - a & ~b) * (~(0xffffffff - a) & b)) - ((~a | b) - ~a)) + (0xffffffff - ((~a | b) - ~a) | ~((0xffffffff - a & b) * (0xffffffff - a | b) + (0xffffffff - a & ~b) * (~(0xffffffff - a) & b))) * -2) - 3 | a) * 2",
                    "attributes": {
                        "numOps": 92,
                        "nestedExprLevel": 26,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 16.363636363636363,
                        "opsPercentages": {
                            "arithmetic": 41.30434782608695,
                            "mul": 11.956521739130435,
                            "bitwise": 46.73913043478261
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "gcc_O3": {
                    "expr": "(a ^ ~(b & a & (~a & b) * (~a | b) + ~(b | a) * b & a) * 2 + 2 + b & a + (~a & b) * (~a | b) + ~(b | a) * b & a) + 1 + (((~b & a - (~a & b) * (~a | b) + ~(b | a) * b & a) + ~(b & a & (~a & b) * (~a | b) + ~(b | a) * b & a) * -2) - 2 | a) * 2",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 13,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 42.72727272727273,
                        "opsPercentages": {
                            "arithmetic": 20.634920634920633,
                            "mul": 17.46031746031746,
                            "bitwise": 61.904761904761905
                        },
                        "percentageDAGsCancel": 18.181818181818183
                    }
                }
            }
        },
        {
            "num": 207,
            "gt": {
                "expr": "(((((e-e)|(-b))+b)^((b^e)-((b+e)&b))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 0.0,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "(((((((e + ~ e) + 1) & ~ (~ b + 1)) + (~ b + 1)) - ~ b) - 1) | (((((b - e) - ((b | ~ e) + (b | ~ e))) - 2) & ~ ((~ (((b | e) << 1) - (b ^ e)) | b) - ~ (((b | e) << 1) - (b ^ e)))) - (~ (((b - e) - ((b | ~ e) + (b | ~ e))) - 2) & ((~ (((b | e) << 1) - (b ^ e)) | b) - ~ (((b | e) << 1) - (b ^ e)))))) - (((((((e + ~ e) + 1) & ~ (~ b + 1)) + (~ b + 1)) - ~ b) - 1) & (((((b - e) - ((b | ~ e) + (b | ~ e))) - 2) & ~ ((~ (((b | e) << 1) - (b ^ e)) | b) - ~ (((b | e) << 1) - (b ^ e)))) - (~ (((b - e) - ((b | ~ e) + (b | ~ e))) - 2) & ((~ (((b | e) << 1) - (b ^ e)) | b) - ~ (((b | e) << 1) - (b ^ e))))))",
                "attributes": {
                    "numOps": 119,
                    "nestedExprLevel": 69,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 37.81512605042017,
                        "mul": 0.0,
                        "bitwise": 62.18487394957983
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((b - e) + (~e | b) * -2) - 2 & ~((b | e) * 2 - (b ^ e) & b)) - ((~e | b) * 2 + ~b + e + 2 & (b | e) * 2 - (b ^ e) & b) ^ (-~b - b) - 1",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 9,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 72.26890756302521,
                        "opsPercentages": {
                            "arithmetic": 39.39393939393939,
                            "mul": 12.121212121212121,
                            "bitwise": 48.484848484848484
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_O1": {
                    "expr": "(~(b | e) * 2 + 1 + ((~((b | e) * 2 - (b ^ e)) | b) - (b ^ e)) & (b - ((~e | b) * 2 + 2)) - e) - (~(b - ((~e | b) * 2 + 2)) - e & (b | e) * 2 + 1 + ((~((b | e) * 2 - (b ^ e)) | b) - (b ^ e)))",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 17,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 65.54621848739495,
                        "opsPercentages": {
                            "arithmetic": 36.58536585365854,
                            "mul": 14.634146341463413,
                            "bitwise": 48.78048780487805
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~b & (b - e) + (~e | b) * -2 - 2) - (1 - (b - e) + (~e | b) * -2 & b)",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 5,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 84.87394957983193,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 11.11111111111111,
                            "bitwise": 38.88888888888889
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e + (e ^ 0xffffffff) + 1 & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) + (b ^ 0xffffffff)) - (b ^ 0xffffffff) | (((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff))) - 2 & (((b | e) * 2 - (b ^ e) ^ 0xffffffff | b) - ((b | e) * 2 - (b ^ e) ^ 0xffffffff) ^ 0xffffffff)) - ((((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff)) ) - 2 ^ 0xffffffff) & ((b | e) * 2 - (b ^ e) ^ 0xffffffff | b) - ((b | e) * 2 - (b ^ e) ^ 0xffffffff))) - (((e + (e ^ 0xffffffff) + 1 & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) + (b ^ 0xffffffff)) - (b ^ 0xffffffff) & (((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff))) - 2 & (((b | e) * 2 - (b ^ e) ^ 0xffffffff | b) - ((b | e) * 2 - (b ^ e) ^ 0xffffffff) ^ 0xffffffff)) - ((((b - e) - ((b | e ^ 0xffffffff) + (b | e ^ 0xffffffff)) ) - 2 ^ 0xffffffff) & ((b | e) * 2 - (b ^ e) ^ 0xffffffff | b) - ((b | e) * 2 - (b ^ e) ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 115,
                        "nestedExprLevel": 47,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 3.361344537815126,
                        "opsPercentages": {
                            "arithmetic": 35.65217391304348,
                            "mul": 6.956521739130435,
                            "bitwise": 57.391304347826086
                        },
                        "percentageDAGsCancel": 13.793103448275861
                    }
                },
                "msvc_default": {
                    "expr": "(((e + 1 + ~e & ~(~b + 1)) + ~b) - ~b | (((b - e) - ((~e | b) + (~e | b))) - 2 & ~((~((b | e) * 2 - (b ^ e)) | b) - ~((b | e) * 2 - (b ^ e)))) - (~(((b - e) - ((~e | b) + (~e | b))) - 2) & (~((b | e) * 2 - (b ^ e)) | b) - ~((b | e) * 2 - (b ^ e)))) - (((e + 1 + ~e & ~(~b + 1)) + ~b) - ~b & (((b - e) - ((~e | b) + (~e | b))) - 2 & ~((~((b | e) * 2 - (b ^ e)) | b) - ~((b | e) * 2 - (b ^ e)))) - (~(((b - e) - ((~e | b) + (~e | b))) - 2) & (~((b | e) * 2 - (b ^ e)) | b) - ~((b | e) * 2 - (b ^ e))))",
                    "attributes": {
                        "numOps": 115,
                        "nestedExprLevel": 47,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 3.361344537815126,
                        "opsPercentages": {
                            "arithmetic": 35.65217391304348,
                            "mul": 6.956521739130435,
                            "bitwise": 57.391304347826086
                        },
                        "percentageDAGsCancel": 17.24137931034483
                    }
                },
                "gcc_O3": {
                    "expr": "(((b - e) + (~e | b) * -2) - 2 & ~(b | e) * 2 - (b ^ e) & b) - ((b | e) * 2 - (b ^ e) & b & (~e | b) * 2 + 2 + e + ~b)",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 8,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 76.47058823529412,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 14.285714285714285,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 208,
            "gt": {
                "expr": "(((a*a)+(b-(a+a))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 25.0,
                        "bitwise": 0.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) | ((b & ~ ((a - ~ a) - 1)) - (~ b & ((a - ~ a) - 1)))) + (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) | ((b & ~ ((a - ~ a) - 1)) - (~ b & ((a - ~ a) - 1))))) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ ((b & ~ ((a - ~ a) - 1)) - (~ b & ((a - ~ a) - 1))))",
                "attributes": {
                    "numOps": 65,
                    "nestedExprLevel": 30,
                    "numDAGs": 19,
                    "opsPercentages": {
                        "arithmetic": 30.76923076923077,
                        "mul": 9.230769230769232,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 31.57894736842105
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~a * 2 + 1 & b) - ((a - ~a) - 1 & ~b) | a * a) * 2 - (a * a ^ (~a * 2 + 1 & b) - ((a - ~a) - 1 & ~b))",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 60.0,
                        "opsPercentages": {
                            "arithmetic": 34.61538461538461,
                            "mul": 19.230769230769234,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~(a * 2) & b) - (~b & a * 2) | a * a) * 2 - ((~(a * 2) & b) - (~b & a * 2) ^ a * a)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 7,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 69.23076923076923,
                        "opsPercentages": {
                            "arithmetic": 15.0,
                            "mul": 35.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((~(a * 2) & b) - (~b & a * 2) | a * a) * 2 - ((~(a * 2) & b) - (~b & a * 2) ^ a * a)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 7,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 69.23076923076923,
                        "opsPercentages": {
                            "arithmetic": 15.0,
                            "mul": 35.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) | (b & ((a - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) - ((b ^ 0xffffffff) & (a - (a ^ 0xffffffff)) - 1)) + (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) | (b & ((a - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) - ((b ^ 0xffffffff) & (a - (a ^ 0xffffffff)) - 1))) - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ (b & ((a - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) - ((b ^ 0xffffffff) & (a - (a ^ 0xffffffff)) - 1))",
                    "attributes": {
                        "numOps": 59,
                        "nestedExprLevel": 27,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 9.230769230769232,
                        "opsPercentages": {
                            "arithmetic": 33.89830508474576,
                            "mul": 10.16949152542373,
                            "bitwise": 55.932203389830505
                        },
                        "percentageDAGsCancel": 17.647058823529413
                    }
                },
                "msvc_default": {
                    "expr": "((a * a | (~((a - ~a) - 1) & b) - (~b & (a - ~a) - 1)) + (a * a | (~((a - ~a) - 1) & b) - (~b & (a - ~a) - 1))) - (a * a ^ (~((a - ~a) - 1) & b) - (~b & (a - ~a) - 1))",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 15,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 36.92307692307693,
                        "opsPercentages": {
                            "arithmetic": 41.46341463414634,
                            "mul": 7.317073170731707,
                            "bitwise": 51.21951219512195
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(a * a | (~a * 2 + 1 & b) - ((a - ~a) - 1 & ~b)) * 2 - (a * a ^ (~a * 2 + 1 & b) - ((a - ~a) - 1 & ~b))",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 60.0,
                        "opsPercentages": {
                            "arithmetic": 34.61538461538461,
                            "mul": 19.230769230769234,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 209,
            "gt": {
                "expr": "(((~(c*c))|(d^(c-d))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 20.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((- ((c & c) * (c | c) + (c & ~ c) * (~ c & c)) - 1) + (((d - (((c & ~ d) + (c & ~ d)) - (c ^ d))) - ((d | ~ (((c & ~ d) + (c & ~ d)) - (c ^ d))) << 1)) - 2)) + 1) + ((- (- ((c & c) * (c | c) + (c & ~ c) * (~ c & c)) - 1) - 1) | (- (((d - (((c & ~ d) + (c & ~ d)) - (c ^ d))) - ((d | ~ (((c & ~ d) + (c & ~ d)) - (c ^ d))) << 1)) - 2) - 1))",
                "attributes": {
                    "numOps": 70,
                    "nestedExprLevel": 37,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 38.57142857142858,
                        "mul": 5.714285714285714,
                        "bitwise": 55.714285714285715
                    },
                    "percentageDAGsCancel": 17.24137931034483
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((((c ^ d) + ~((~d & c) * 2) | d) * 2 - (d - ((~d & c) * 2 - (c ^ d)))) + 1 | c * c) + (d - ((~d & c) * 2 - (c ^ d))) + ((c ^ d) + ~((~d & c) * 2) | d) * -2 + ~(c * c) + -1",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 14,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 42.857142857142854,
                        "opsPercentages": {
                            "arithmetic": 35.0,
                            "mul": 20.0,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((((((~(~d & c * 2 - c ^ d) | d + ~d & c) * 2 - c ^ d) - d) + 1 | c * c) - (~d & c * 2 + 2)) + ~(~d & c * 2 - c ^ d) | d * -2) - c * c) + c ^ d + d",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 10,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 47.14285714285714,
                        "opsPercentages": {
                            "arithmetic": 35.13513513513514,
                            "mul": 18.91891891891892,
                            "bitwise": 45.94594594594595
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "clang_O3": {
                    "expr": "(1 - (d - (~d & c) * 2 - (c ^ d)) + (~(~d & c) * 2 - (c ^ d) | d) * -2 | c * c) + ((d - (~d & c) * 2 - (c ^ d)) + (~(~d & c) * 2 - (c ^ d) | d) * -2 - c * c) + -2",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 11,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 42.857142857142854,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 20.0,
                            "bitwise": 42.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d - (((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d))) + (d | ((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) ^ 0xffffffff) * -2) - (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))) + -2 + (0xffffffff - (-1 - (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))) | 0xffffffff - ((d - (((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d))) + (d | ((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) ^ 0xffffffff) * -2 + -2))",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 34,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 7.142857142857142,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 9.230769230769232,
                            "bitwise": 50.76923076923077
                        },
                        "percentageDAGsCancel": 11.538461538461538
                    }
                },
                "msvc_default": {
                    "expr": "(((d - (((~d & c) + (~d & c)) - (c ^ d))) + (~(((~d & c) + (~d & c)) - (c ^ d)) | d) * -2) - c * c) + -2 + (0xffffffff - (-1 - c * c) | 0xffffffff - ((d - (((~d & c) + (~d & c)) - (c ^ d))) + (~(((~d & c) + (~d & c)) - (c ^ d)) | d) * -2 + -2))",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 22,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 24.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 45.28301886792453,
                            "mul": 7.547169811320755,
                            "bitwise": 47.16981132075472
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "gcc_O3": {
                    "expr": "((d - ((~d & c) * 2 - (c ^ d))) + (~(~d & c) * 2 + (c ^ d) | d) * -2 - c * c) + -2 + (1 - (d - ((~d & c) * 2 - (c ^ d))) + (~(~d & c) * 2 + (c ^ d) | d) * -2 | c * c)",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 13,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 42.857142857142854,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 20.0,
                            "bitwise": 42.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 210,
            "gt": {
                "expr": "((((d-c)^(d+d))&((d*(c-d))&c)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 14.285714285714285,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "(~ (((((d ^ c) - ((~ d & c) << 1)) - ((d ^ d) + ((d & d) + (d & d)))) - ((((d ^ c) - ((~ d & c) << 1)) | ~ ((d ^ d) + ((d & d) + (d & d)))) + (((d ^ c) - ((~ d & c) << 1)) | ~ ((d ^ d) + ((d & d) + (d & d)))))) - 2) | ((~ ((d & ((c & ~ d) - (~ c & d))) * (d | ((c & ~ d) - (~ c & d))) + (d & ~ ((c & ~ d) - (~ c & d))) * (~ d & ((c & ~ d) - (~ c & d)))) | c) - ~ ((d & ((c & ~ d) - (~ c & d))) * (d | ((c & ~ d) - (~ c & d))) + (d & ~ ((c & ~ d) - (~ c & d))) * (~ d & ((c & ~ d) - (~ c & d)))))) - ~ (((((d ^ c) - ((~ d & c) << 1)) - ((d ^ d) + ((d & d) + (d & d)))) - ((((d ^ c) - ((~ d & c) << 1)) | ~ ((d ^ d) + ((d & d) + (d & d)))) + (((d ^ c) - ((~ d & c) << 1)) | ~ ((d ^ d) + ((d & d) + (d & d)))))) - 2)",
                "attributes": {
                    "numOps": 142,
                    "nestedExprLevel": 72,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 26.76056338028169,
                        "mul": 2.8169014084507045,
                        "bitwise": 70.4225352112676
                    },
                    "percentageDAGsCancel": 6.0606060606060606
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~(d * 2) | (d ^ c) + (~d & c) * -2) * -2 - (~(d ^ c) + (~d & c) * 2 + d * 2)) - 3 & (d + ~c & d) * ((~d & c) - (~c & d) & ~d) + ((~d & c) - (~c & d) & d) * ((~d & c) - (~c & d) | d) & c",
                    "attributes": {
                        "numOps": 48,
                        "nestedExprLevel": 12,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 66.19718309859155,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 14.583333333333334,
                            "bitwise": 60.416666666666664
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                },
                "msvc_O1": {
                    "expr": "(c ^ d - 1) + ((~~d & c - (~c & d) & d) * (~d & c - (~c & d) & ~d) + 1 + (~((~d & c - (~c & d) | d) * (~d & c - (~c & d) & d) + (~~d & c - (~c & d) & d) * (~d & c - (~c & d) & ~d)) | c) + (~d & c - (~c & d) | d) * (~d & c - (~c & d) & d) | ((c ^ d + ~d & c * -2 | ~(d * 2) + d) * 2 - c ^ d) + 1 + ~d & c * 2) + (c ^ d + ~d & c * -2 | ~(d * 2) + d) * -2 + ~d & c * -2",
                    "attributes": {
                        "numOps": 102,
                        "nestedExprLevel": 16,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 28.169014084507044,
                        "opsPercentages": {
                            "arithmetic": 26.47058823529412,
                            "mul": 11.76470588235294,
                            "bitwise": 61.76470588235294
                        },
                        "percentageDAGsCancel": 11.627906976744185
                    }
                },
                "clang_O3": {
                    "expr": "((d ^ c) + ~d & c * -2 + d * -2 + (~(d * 2) | (d ^ c) + ~d & c * -2) * -2) - 2 & c & (~d & c - (~c & d) & ~d) * (~~d & c - (~c & d) & d) + (~d & c - (~c & d) | d) * (~d & c - (~c & d) & d)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 9,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 62.676056338028175,
                        "opsPercentages": {
                            "arithmetic": 26.41509433962264,
                            "mul": 13.20754716981132,
                            "bitwise": 60.37735849056604
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "clang_default": {
                    "expr": "((((d ^ c) + ((d ^ 0xffffffff) & c) * -2 + d * -2) - (((d ^ c) + ((d ^ 0xffffffff) & c) * -2 | d * 2 ^ 0xffffffff) + ((d ^ c) + ((d ^ 0xffffffff) & c) * -2 | d * 2 ^ 0xffffffff) )) - 2 ^ 0xffffffff | ((d & (c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d)) * (d | (c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d)) + (d & ((c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d) ^ 0xffffffff)) * ((d ^ 0xffffffff) & (c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d)) ^ 0xffffffff | c) - ((d & (c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d) ) * (d | (c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d)) + (d & ((c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d) ^ 0xffffffff)) * ((d ^ 0xffffffff) & (c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d)) ^ 0xffffffff)) - ((((d ^ c) + ((d ^ 0xffffffff) & c) * -2 + d * -2) - (((d ^ c) + ((d ^ 0xffffffff) & c) * -2 | d * 2 ^ 0xffffffff) + ((d ^ c) + ((d ^ 0xffffffff) & c) * -2 | d * 2 ^ 0xffffffff) )) - 2 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 126,
                        "nestedExprLevel": 48,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 11.267605633802818,
                        "opsPercentages": {
                            "arithmetic": 26.984126984126984,
                            "mul": 12.698412698412698,
                            "bitwise": 60.317460317460316
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "msvc_default": {
                    "expr": "(~((((d ^ c) + (~d & c) * -2 + d * -2) - (((d ^ c) + (~d & c) * -2 | ~(d * 2)) + ((d ^ c) + (~d & c) * -2 | ~(d * 2)))) - 2) | (~(((~d & c) - (~c & d) & d) * ((~d & c) - (~c & d) | d) + (~((~d & c) - (~c & d)) & d) * (~d & (~d & c) - (~c & d))) | c) - ~(((~d & c) - (~c & d) & d) * ((~d & c) - (~c & d) | d) + (~((~d & c) - (~c & d)) & d) * (~d & (~d & c) - (~c & d)))) - ~((((d ^ c) + (~d & c) * -2 + d * -2) - (((d ^ c) + (~d & c) * -2 | ~(d * 2)) + ((d ^ c) + (~d & c) * -2 | ~(d * 2)))) - 2)",
                    "attributes": {
                        "numOps": 126,
                        "nestedExprLevel": 42,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 11.267605633802818,
                        "opsPercentages": {
                            "arithmetic": 26.984126984126984,
                            "mul": 12.698412698412698,
                            "bitwise": 60.317460317460316
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "gcc_O3": {
                    "expr": "(~c + d & d) * (~d & ~d & c - (~c & d)) + (~d & c - (~c & d) & d) * (~d & c - (~c & d) | d) & c & -(~(d ^ c) + ~d & c * 2 + d * 2 + ((d ^ c) + ~d & c * -2 | ~(d * 2)) * 2) - 3",
                    "attributes": {
                        "numOps": 48,
                        "nestedExprLevel": 7,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 66.19718309859155,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 14.583333333333334,
                            "bitwise": 60.416666666666664
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 211,
            "gt": {
                "expr": "(((-(~(b&c)))&((-((~c)+b))*(c*(c*b)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 30.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ ((((~ b | c) + b) + 1) + 1) | (((~ ((((- c - 1) ^ ~ b) + (((- c - 1) | b) << 1)) + 1) + 1) & ((c & ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) * (c | ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) + (c & ~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) * (~ c & ((c & b) * (c | b) + (c & ~ b) * (~ c & b))))) * ((~ ((((- c - 1) ^ ~ b) + (((- c - 1) | b) << 1)) + 1) + 1) | ((c & ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) * (c | ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) + (c & ~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) * (~ c & ((c & b) * (c | b) + (c & ~ b) * (~ c & b))))) + ((~ ((((- c - 1) ^ ~ b) + (((- c - 1) | b) << 1)) + 1) + 1) & ~ ((c & ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) * (c | ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) + (c & ~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) * (~ c & ((c & b) * (c | b) + (c & ~ b) * (~ c & b))))) * (~ (~ ((((- c - 1) ^ ~ b) + (((- c - 1) | b) << 1)) + 1) + 1) & ((c & ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) * (c | ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) + (c & ~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) * (~ c & ((c & b) * (c | b) + (c & ~ b) * (~ c & b))))))) - ~ ((((~ b | c) + b) + 1) + 1)",
                "attributes": {
                    "numOps": 251,
                    "nestedExprLevel": 106,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 22.31075697211155,
                        "mul": 16.733067729083665,
                        "bitwise": 60.95617529880478
                    },
                    "percentageDAGsCancel": 4.761904761904762
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "b + (~b | c) + 2 & (~((~c | b) * 2 + (c ^ b)) & ((~c & b) * (~b & c) + (c & b) * (c | b) & ~c) * (~((~c & b) * (~b & c) + (c & b) * (c | b)) & c) + ((~c & b) * (~b & c) + (c & b) * (c | b) & c) * ((~c & b) * (~b & c) + (c & b) * (c | b) | c )) * (((~c & b) * (~b & c) + (c & b) * (c | b) & ~c) * (~((~c & b) * (~b & c) + (c & b) * (c | b)) & c) + ((~c & b) * (~b & c) + (c & b) * (c | b) & c) * ((~c & b) * (~b & c) + (c & b) * (c | b) | c) | ~((~c | b) * 2 + (c ^ b))) + (((~c & b) * (~b & c) + (c & b) * (c | b) & ~c ) * (~((~c & b) * (~b & c) + (c & b) * (c | b)) & c) + ((~c & b) * (~b & c) + (c & b) * (c | b) & c) * ((~c & b) * (~b & c) + (c & b) * (c | b) | c) & (c ^ b) + (~c | b) * 2) * ~(((~c & b) * (~b & c) + (c & b) * (c | b) & ~c) * (~((~c & b) * (~b & c) + (c & b) * (c | b)) & c) + ((~c & b) * (~b & c) + (c & b) * (c | b) & c) * ((~c & b) * (~b & c) + (c & b) * (c | b) | c) | (c ^ b) + (~c | b) * 2)",
                    "attributes": {
                        "numOps": 215,
                        "nestedExprLevel": 63,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 14.342629482071715,
                        "opsPercentages": {
                            "arithmetic": 12.558139534883722,
                            "mul": 21.3953488372093,
                            "bitwise": 66.04651162790698
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "msvc_O1": {
                    "expr": "b + 3 + ((((-1 - c) * 2 | b * 2) + (~b ^ ~c) & (~(~b & c) * (~c & b) + (b | c) * (b & c) & c) * ((~b & c) * (~c & b) + (b | c) * (b & c) & ~c) + ((~b & c) * (~c & b) + (b | c) * (b & c) | c) * ((~b & c) * (~c & b) + (b | c) * (b & c) & c)) * (~(~(~b & c) * (~c & b) + (b | c) * (b & c) & c) * ((~b & c) * (~c & b) + (b | c) * (b & c) & ~c) + ((~b & c) * (~c & b) + (b | c) * (b & c) | c) * ((~b & c) * (~c & b) + (b | c) * (b & c) & c) & ~((-1 - c) * 2 | b * 2) + (~b ^ ~c)) + ((~(~b & c) * (~c & b) + (b | c) * (b & c) & c) * ((~b & c) * (~c & b) + (b | c) * (b & c) & ~c) + ((~b & c) * (~c & b) + (b | c) * (b & c) | c) * ((~b & c) * (~c & b) + (b | c) * (b & c) & c) | ~((-1 - c) * 2 | b * 2) + (~b ^ ~c)) * ((~(~b & c) * (~c & b) + (b | c) * (b & c) & c) * ((~b & c) * (~c & b) + (b | c) * (b & c) & ~c) + ((~b & c) * (~c & b) + (b | c) * (b & c) | c) * ((~b & c) * (~c & b) + (b | c) * (b & c) & c) & ~((-1 - c) * 2 | b * 2) + (~b ^ ~c)) | ~(b + 2 + (~b | c))) + (~b | c)",
                    "attributes": {
                        "numOps": 238,
                        "nestedExprLevel": 64,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 5.179282868525896,
                        "opsPercentages": {
                            "arithmetic": 15.966386554621847,
                            "mul": 21.008403361344538,
                            "bitwise": 63.02521008403361
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "clang_O3": {
                    "expr": "b + (~b | c) + 2 & (((~c & b) * (~b & c) + (c | b) * (c & b) & ~c) * (~(~c & b) * (~b & c) + (c | b) * (c & b) & c) + ((~c & b) * (~b & c) + (c | b) * (c & b) | c) * ((~c & b) * (~b & c) + (c | b) * (c & b) & c) & (c ^ b) + (~c | b) * 2) * (~((~c & b) * (~b & c) + (c | b) * (c & b) & ~c) * (~(~c & b) * (~b & c) + (c | b) * (c & b) & c) + ((~c & b) * (~b & c) + (c | b) * (c & b) | c) * ((~c & b) * (~b & c) + (c | b) * (c & b) & c) & ~(c ^ b) + (~c | b) * 2) + (((~c & b) * (~b & c) + (c | b) * (c & b) & ~c) * (~(~c & b) * (~b & c) + (c | b) * (c & b) & c) + ((~c & b) * (~b & c) + (c | b) * (c & b) | c) * ((~c & b) * (~b & c) + (c | b) * (c & b) & c) | ~(c ^ b) + (~c | b) * 2) * (((~c & b) * (~b & c) + (c | b) * (c & b) & ~c) * (~(~c & b) * (~b & c) + (c | b) * (c & b) & c) + ((~c & b) * (~b & c) + (c | b) * (c & b) | c) * ((~c & b) * (~b & c) + (c | b) * (c & b) & c) & ~(c ^ b) + (~c | b) * 2)",
                    "attributes": {
                        "numOps": 216,
                        "nestedExprLevel": 57,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 13.94422310756972,
                        "opsPercentages": {
                            "arithmetic": 12.5,
                            "mul": 21.296296296296298,
                            "bitwise": 66.20370370370371
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((b ^ 0xffffffff | c) + b + 2 ^ 0xffffffff | (((0xffffffff - c ^ b ^ 0xffffffff) + (0xffffffff - c | b) * 2 + 1 ^ 0xffffffff) + 1 & (c & (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) * (c | (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) + (c & ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff )) * ((c ^ 0xffffffff) & (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b))) * (((0xffffffff - c ^ b ^ 0xffffffff) + (0xffffffff - c | b) * 2 + 1 ^ 0xffffffff) + 1 | (c & (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) * (c | (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) + (c & ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff )) * ((c ^ 0xffffffff) & (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b))) + (((0xffffffff - c ^ b ^ 0xffffffff) + (0xffffffff - c | b) * 2 + 1 ^ 0xffffffff) + 1 & ((c & (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) * (c | (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) + (c & ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff)) * ((c ^ 0xffffffff) & (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) ^ 0xffffffff)) * ((((0xffffffff - c ^ b ^ 0xffffffff) + (0xffffffff - c | b) * 2 + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) & (c & (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) * (c | (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) + (c & ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff )) * ((c ^ 0xffffffff) & (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)))) - ((b ^ 0xffffffff | c) + b + 2 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 241,
                        "nestedExprLevel": 86,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 3.9840637450199203,
                        "opsPercentages": {
                            "arithmetic": 19.08713692946058,
                            "mul": 19.08713692946058,
                            "bitwise": 61.82572614107884
                        },
                        "percentageDAGsCancel": 9.75609756097561
                    }
                },
                "msvc_default": {
                    "expr": "(~((~b | c) + 2 + b) | (~((0xffffffff - c ^ ~b) + 1 + (0xffffffff - c | b) * 2) + 1 & ((c & b) * (c | b) + (~b & c) * (~c & b) & c) * ((c & b) * (c | b) + (~b & c) * (~c & b) | c) + (~((c & b) * (c | b) + (~b & c) * (~c & b)) & c) * (~c & (c & b) * (c | b) + (~b & c) * (~c & b))) * (~((0xffffffff - c ^ ~b) + 1 + (0xffffffff - c | b) * 2) + 1 | ((c & b) * (c | b) + (~b & c) * (~c & b) & c) * ((c & b) * (c | b) + (~b & c) * (~c & b) | c) + (~((c & b) * (c | b) + (~b & c) * (~c & b)) & c) * (~c & (c & b) * (c | b) + (~b & c) * (~c & b))) + (~((0xffffffff - c ^ ~b) + 1 + (0xffffffff - c | b) * 2) + 1 & ~(((c & b) * (c | b) + (~b & c) * (~c & b) & c) * ((c & b) * (c | b) + (~b & c) * (~c & b) | c) + (~((c & b) * (c | b) + (~b & c) * (~c & b) ) & c) * (~c & (c & b) * (c | b) + (~b & c) * (~c & b)))) * (~(~((0xffffffff - c ^ ~b) + 1 + (0xffffffff - c | b) * 2) + 1) & ((c & b) * (c | b) + (~b & c) * (~c & b) & c) * ((c & b) * (c | b) + (~b & c) * (~c & b) | c) + (~((c & b) * (c | b) + (~b & c) * (~c & b)) & c) * (~c & (c & b) * (c | b) + (~b & c) * (~c & b) ))) - ~((~b | c) + 2 + b)",
                    "attributes": {
                        "numOps": 241,
                        "nestedExprLevel": 71,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 3.9840637450199203,
                        "opsPercentages": {
                            "arithmetic": 19.08713692946058,
                            "mul": 19.08713692946058,
                            "bitwise": 61.82572614107884
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "gcc_O3": {
                    "expr": "~((c ^ b) + (~c | b) * 2 | (~(c & b) * (c | b) + (~b & c) * (~c & b) & c) * (~c & (c & b) * (c | b) + (~b & c) * (~c & b)) + ((c & b) * (c | b) + (~b & c) * (~c & b) | c) * ((c & b) * (c | b) + (~b & c) * (~c & b) & c)) * ((c ^ b) + (~c | b) * 2 & (~(c & b) * (c | b) + (~b & c) * (~c & b) & c) * (~c & (c & b) * (c | b) + (~b & c) * (~c & b)) + ((c & b) * (c | b) + (~b & c) * (~c & b) | c) * ((c & b) * (c | b) + (~b & c) * (~c & b) & c)) + (~(c ^ b) + (~c | b) * 2 & (~(c & b) * (c | b) + (~b & c) * (~c & b) & c) * (~c & (c & b) * (c | b) + (~b & c) * (~c & b)) + ((c & b) * (c | b) + (~b & c) * (~c & b) | c) * ((c & b) * (c | b) + (~b & c) * (~c & b) & c)) * (~(c ^ b) + (~c | b) * 2 | (~(c & b) * (c | b) + (~b & c) * (~c & b) & c) * (~c & (c & b) * (c | b) + (~b & c) * (~c & b)) + ((c & b) * (c | b) + (~b & c) * (~c & b) | c) * ((c & b) * (c | b) + (~b & c) * (~c & b) & c)) & b + 2 + (~b | c)",
                    "attributes": {
                        "numOps": 215,
                        "nestedExprLevel": 58,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 14.342629482071715,
                        "opsPercentages": {
                            "arithmetic": 12.558139534883722,
                            "mul": 21.3953488372093,
                            "bitwise": 66.04651162790698
                        },
                        "percentageDAGsCancel": 13.513513513513514
                    }
                }
            }
        },
        {
            "num": 212,
            "gt": {
                "expr": "(((~(e^e))+((a|c)&(c&(e^a)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 14.285714285714285,
                        "mul": 0.0,
                        "bitwise": 85.71428571428571
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "((((e & e) + ~ (e | e)) | (((~ (((a + c) + 1) + ((- a - 1) | (- c - 1))) | ((~ c | ((e | a) - (e & a))) - ~ c)) + (((a + c) + 1) + ((- a - 1) | (- c - 1)))) + 1)) + (((e & e) + ~ (e | e)) | (((~ (((a + c) + 1) + ((- a - 1) | (- c - 1))) | ((~ c | ((e | a) - (e & a))) - ~ c)) + (((a + c) + 1) + ((- a - 1) | (- c - 1)))) + 1))) - (((e & e) + ~ (e | e)) ^ (((~ (((a + c) + 1) + ((- a - 1) | (- c - 1))) | ((~ c | ((e | a) - (e & a))) - ~ c)) + (((a + c) + 1) + ((- a - 1) | (- c - 1)))) + 1))",
                "attributes": {
                    "numOps": 98,
                    "nestedExprLevel": 56,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 60.204081632653065,
                        "mul": 0.0,
                        "bitwise": 39.795918367346935
                    },
                    "percentageDAGsCancel": 11.538461538461538
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(a & c) + c + a + 1 + ((a & c) - (c + a + 1) | (e ^ a) & c)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 86.73469387755102,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 0.0,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "msvc_O1": {
                    "expr": "c + 1 + (((a | e) - (a & e) | ~c) + 1 + c | ~(a + 1 + ~(a & c) + c)) + ~(a & c) + a",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 6,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 79.59183673469387,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_O3": {
                    "expr": "(~(c | a) | (a ^ e) & c) + (c | a)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 4,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 92.85714285714286,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 0.0,
                            "bitwise": 85.71428571428571
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "clang_default": {
                    "expr": "((e + (e ^ 0xffffffff) | (a + c + 1 + (0xffffffff - a | 0xffffffff - c) ^ 0xffffffff | (c ^ 0xffffffff | (e | a) - (e & a)) - (c ^ 0xffffffff)) + a + c + (0xffffffff - a | 0xffffffff - c) + 2) + (e + (e ^ 0xffffffff) | (a + c + 1 + (0xffffffff - a | 0xffffffff - c) ^ 0xffffffff | (c ^ 0xffffffff | (e | a) - (e & a)) - (c ^ 0xffffffff)) + a + c + (0xffffffff - a | 0xffffffff - c) + 2)) - (e + (e ^ 0xffffffff) ^ (a + c + 1 + (0xffffffff - a | 0xffffffff - c) ^ 0xffffffff | (c ^ 0xffffffff | (e | a) - (e & a)) - (c ^ 0xffffffff)) + a + c + (0xffffffff - a | 0xffffffff - c) + 2)",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 17,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 21.428571428571427,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "msvc_default": {
                    "expr": "((e + ~e | (~(a + c + 1 + (0xffffffff - a | 0xffffffff - c)) | (~c | (e | a) - (e & a)) - ~c) + a + c + 2 + (0xffffffff - a | 0xffffffff - c)) + (e + ~e | (~(a + c + 1 + (0xffffffff - a | 0xffffffff - c)) | (~c | (e | a) - (e & a)) - ~c) + a + c + 2 + (0xffffffff - a | 0xffffffff - c))) - (e + ~e ^ (~(a + c + 1 + (0xffffffff - a | 0xffffffff - c)) | (~c | (e | a) - (e & a)) - ~c) + a + c + 2 + (0xffffffff - a | 0xffffffff - c))",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 18,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 21.428571428571427,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "gcc_O3": {
                    "expr": "((e ^ a) & c | (a & c) - a + 1 + c) + ~(a & c) + a + 1 + c",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 86.73469387755102,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 0.0,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                }
            }
        },
        {
            "num": 213,
            "gt": {
                "expr": "((((b-(c*b))&(-b))|(-(d-c))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 14.285714285714285,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((~ (((b & ~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) << 1) - (b ^ ((c & b) * (c | b) + (c & ~ b) * (~ c & b)))) | ~ (b - 1)) - ~ (((b & ~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) << 1) - (b ^ ((c & b) * (c | b) + (c & ~ b) * (~ c & b))))) & ~ (~ ((d + ~ c) + 1) + 1)) + (~ ((d + ~ c) + 1) + 1)",
                "attributes": {
                    "numOps": 65,
                    "nestedExprLevel": 29,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 23.076923076923077,
                        "mul": 12.307692307692308,
                        "bitwise": 64.61538461538461
                    },
                    "percentageDAGsCancel": 7.6923076923076925
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c - d) + ((~((~c & b) * (~b & c) + (c & b) * (c | b)) & b) * 2 - ((~c & b) * (~b & c) + (c & b) * (c | b) ^ b) & -b & d + ~c)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 9,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 53.84615384615385,
                        "opsPercentages": {
                            "arithmetic": 23.333333333333332,
                            "mul": 16.666666666666664,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(d + 1 + ~c) + 1 + ((~(c & b) * (b | c) + (~b & c) * (~c & b) & b) * 2 + ((~((~(c & b) * (b | c) + (~b & c) * (~c & b) & b) * 2 - (c & b) * (b | c) + (~b & c) * (~c & b) ^ b) | -b) - (c & b) * (b | c) + (~b & c) * (~c & b) ^ b) + 1 & ~(~(d + 1 + ~c) + 1))",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 17,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 1.5384615384615385,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 15.625,
                            "bitwise": 59.375
                        },
                        "percentageDAGsCancel": 6.451612903225806
                    }
                },
                "clang_O3": {
                    "expr": "(~(c - d) & -b & (~(~c & b) * (~b & c) + (c | b) * (c & b) & b) * 2 - ((~c & b) * (~b & c) + (c | b) * (c & b) ^ b)) + (c - d)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 9,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 53.84615384615385,
                        "opsPercentages": {
                            "arithmetic": 23.333333333333332,
                            "mul": 16.666666666666664,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b & ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff)) * 2 - (b ^ (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) ^ 0xffffffff | b - 1 ^ 0xffffffff) - ((b & ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff)) * 2 - (b ^ (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) ^ 0xffffffff) & ((d + (c ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff)) + (d + (c ^ 0xffffffff) + 1 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 26,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 15.384615384615385,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~((~((c & b) * (c | b) + (~b & c) * (~c & b)) & b) * 2 - ((c & b) * (c | b) + (~b & c) * (~c & b) ^ b)) | ~(b - 1)) - ~((~((c & b) * (c | b) + (~b & c) * (~c & b)) & b) * 2 - ((c & b) * (c | b) + (~b & c) * (~c & b) ^ b)) & ~(~(d + 1 + ~c) + 1)) + 1 + ~(d + 1 + ~c)",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 21,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 15.384615384615385,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "gcc_O3": {
                    "expr": "((~(~b & c) * (~c & b) + (b & c) * (b | c) & b) * 2 - ((~b & c) * (~c & b) + (b & c) * (b | c) ^ b) & -b & ~c + d) + (c - d)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 9,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 53.84615384615385,
                        "opsPercentages": {
                            "arithmetic": 23.333333333333332,
                            "mul": 16.666666666666664,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 214,
            "gt": {
                "expr": "((((d-(b^b))*(b-b))*(((d*d)|d)+d)))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 37.5,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 62.5
                }
            },
            "mba": {
                "expr": "(((((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) & ((b & ~ b) - (~ b & b))) * (((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) | ((b & ~ b) - (~ b & b))) + (((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) & ~ ((b & ~ b) - (~ b & b))) * (~ ((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) & ((b & ~ b) - (~ b & b)))) & ((((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & ~ d) + d) | d) + (((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & ~ d) + d) & d))) * (((((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) & ((b & ~ b) - (~ b & b))) * (((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) | ((b & ~ b) - (~ b & b))) + (((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) & ~ ((b & ~ b) - (~ b & b))) * (~ ((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) & ((b & ~ b) - (~ b & b)))) | ((((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & ~ d) + d) | d) + (((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & ~ d) + d) & d))) + (((((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) & ((b & ~ b) - (~ b & b))) * (((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) | ((b & ~ b) - (~ b & b))) + (((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) & ~ ((b & ~ b) - (~ b & b))) * (~ ((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) & ((b & ~ b) - (~ b & b)))) & ~ ((((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & ~ d) + d) | d) + (((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & ~ d) + d) & d))) * (~ ((((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) & ((b & ~ b) - (~ b & b))) * (((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) | ((b & ~ b) - (~ b & b))) + (((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) & ~ ((b & ~ b) - (~ b & b))) * (~ ((d ^ (((b - b) - ((b | ~ b) << 1)) - 2)) - ((~ d & (((b - b) - ((b | ~ b) << 1)) - 2)) << 1)) & ((b & ~ b) - (~ b & b)))) & ((((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & ~ d) + d) | d) + (((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & ~ d) + d) & d)))",
                "attributes": {
                    "numOps": 505,
                    "nestedExprLevel": 269,
                    "numDAGs": 44,
                    "opsPercentages": {
                        "arithmetic": 30.297029702970296,
                        "mul": 5.148514851485149,
                        "bitwise": 64.55445544554456
                    },
                    "percentageDAGsCancel": 61.36363636363637
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 & (b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) * ((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 | (b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + ((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 & ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b) ^ 0xffffffff)) * (((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 ^ 0xffffffff) & (b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) & ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) & (d ^ 0xffffffff)) + d | d) + ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) & (d ^ 0xffffffff)) + d & d)) * (((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 & (b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) * ((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 | (b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + ((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 & ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b) ^ 0xffffffff)) * (((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 ^ 0xffffffff) & (b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) | ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) & (d ^ 0xffffffff)) + d | d) + ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) & (d ^ 0xffffffff)) + d & d)) + (((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 & (b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) * ((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 | (b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + ((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 & ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b) ^ 0xffffffff)) * (((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 ^ 0xffffffff) & (b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) & (((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) & (d ^ 0xffffffff)) + d | d) + ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) & (d ^ 0xffffffff)) + d & d) ^ 0xffffffff)) * ((((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 & (b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) * ((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 | (b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + ((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 & ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b) ^ 0xffffffff)) * (((d ^ (b | b ^ 0xffffffff) * -2 - 2) + ((d ^ 0xffffffff) & (b | b ^ 0xffffffff) * -2 - 2) * -2 ^ 0xffffffff) & (b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) ^ 0xffffffff) & ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) & (d ^ 0xffffffff)) + d | d) + ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) & (d ^ 0xffffffff)) + d & d))",
                    "attributes": {
                        "numOps": 473,
                        "nestedExprLevel": 151,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 6.336633663366337,
                        "opsPercentages": {
                            "arithmetic": 28.964059196617338,
                            "mul": 15.644820295983086,
                            "bitwise": 55.391120507399584
                        },
                        "percentageDAGsCancel": 48.78048780487805
                    }
                },
                "msvc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 215,
            "gt": {
                "expr": "((-(-((((~c)+d)*((d*b)&c))-(~(-d))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 20.0,
                        "bitwise": 30.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ ((~ ((((((((- c - 1) | d) + ((- c - 1) | d)) - ((- c - 1) ^ d)) & (((~ ((d & b) * (d | b) + (d & ~ b) * (~ d & b)) | c) + ((d & b) * (d | b) + (d & ~ b) * (~ d & b))) + 1)) * (((((- c - 1) | d) + ((- c - 1) | d)) - ((- c - 1) ^ d)) | (((~ ((d & b) * (d | b) + (d & ~ b) * (~ d & b)) | c) + ((d & b) * (d | b) + (d & ~ b) * (~ d & b))) + 1)) + (((((- c - 1) | d) + ((- c - 1) | d)) - ((- c - 1) ^ d)) & ~ (((~ ((d & b) * (d | b) + (d & ~ b) * (~ d & b)) | c) + ((d & b) * (d | b) + (d & ~ b) * (~ d & b))) + 1)) * (~ ((((- c - 1) | d) + ((- c - 1) | d)) - ((- c - 1) ^ d)) & (((~ ((d & b) * (d | b) + (d & ~ b) * (~ d & b)) | c) + ((d & b) * (d | b) + (d & ~ b) * (~ d & b))) + 1))) ^ (d - 1)) - ((~ ((((((- c - 1) | d) + ((- c - 1) | d)) - ((- c - 1) ^ d)) & (((~ ((d & b) * (d | b) + (d & ~ b) * (~ d & b)) | c) + ((d & b) * (d | b) + (d & ~ b) * (~ d & b))) + 1)) * (((((- c - 1) | d) + ((- c - 1) | d)) - ((- c - 1) ^ d)) | (((~ ((d & b) * (d | b) + (d & ~ b) * (~ d & b)) | c) + ((d & b) * (d | b) + (d & ~ b) * (~ d & b))) + 1)) + (((((- c - 1) | d) + ((- c - 1) | d)) - ((- c - 1) ^ d)) & ~ (((~ ((d & b) * (d | b) + (d & ~ b) * (~ d & b)) | c) + ((d & b) * (d | b) + (d & ~ b) * (~ d & b))) + 1)) * (~ ((((- c - 1) | d) + ((- c - 1) | d)) - ((- c - 1) ^ d)) & (((~ ((d & b) * (d | b) + (d & ~ b) * (~ d & b)) | c) + ((d & b) * (d | b) + (d & ~ b) * (~ d & b))) + 1))) & (d - 1)) << 1)) + 1) - 1)",
                "attributes": {
                    "numOps": 293,
                    "nestedExprLevel": 130,
                    "numDAGs": 38,
                    "opsPercentages": {
                        "arithmetic": 35.153583617747444,
                        "mul": 12.286689419795222,
                        "bitwise": 52.55972696245734
                    },
                    "percentageDAGsCancel": 2.631578947368421
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((d - 1 & ~(((~d & b) * (~b & d) + (d & b) * (d | b) + (~((~d & b) * (~b & d) + (d & b) * (d | b) ) | c) + 1 & ~((~c | d) * 2) + ~(c ^ d)) * ((~c | d) * 2 - ~(c ^ d) & -((~((~d & b) * (~b & d) + (d & b) * (d | b)) | c) + (~d & b) * (~b & d) + (d & b) * (d | b)) - 2) + ((~c | d) * 2 - ~(c ^ d) & (~d & b) * (~b & d) + (d & b) * (d | b) + (~((~d & b) * (~b & d) + (d & b) * (d | b)) | c) + 1) * ((~d & b) * (~b & d) + (d & b) * (d | b) + (~((~d & b) * (~b & d) + (d & b) * (d | b)) | c) + 1 | (~c | d) * 2 - ~(c ^ d)))) * 2 + (((~c | d) * 2 - ~(c ^ d) & (~d & b) * (~b & d) + (d & b) * (d | b) + (~((~d & b) * (~b & d) + (d & b) * (d | b)) | c) + 1) * ((~d & b) * (~b & d) + (d & b) * (d | b) + (~((~d & b) * (~b & d) + (d & b) * (d | b)) | c) + 1 | (~c | d) * 2 - ~(c ^ d)) + ((~d & b) * (~b & d) + (d & b) * (d | b) + (~((~d & b) * (~b & d) + (d & b) * (d | b)) | c) + 1 & ~((~c | d) * 2) + ~(c ^ d)) * ((~c | d) * 2 - ~(c ^ d) & -((~((~d & b) * (~b & d) + (d & b) * (d | b)) | c) + (~d & b) * (~b & d) + (d & b) * (d | b)) - 2 ) ^ -d))",
                    "attributes": {
                        "numOps": 250,
                        "nestedExprLevel": 73,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 14.675767918088736,
                        "opsPercentages": {
                            "arithmetic": 18.8,
                            "mul": 18.0,
                            "bitwise": 63.2
                        },
                        "percentageDAGsCancel": 7.317073170731707
                    }
                },
                "msvc_O1": {
                    "expr": "(d - 1 ^ (~(~d & b) * (~b & d) + 1 + (~((b | d) * (b & d) + (~d & b) * (~b & d)) | c) + (b | d) * (b & d) & (~c | d) * 2 - (~c ^ d)) * (~(~c | d) * 2 - (~c ^ d) & (~d & b) * (~b & d) + 1 + (~((b | d) * (b & d) + (~d & b) * (~b & d)) | c) + (b | d) * (b & d)) + ((~c | d) * 2 - (~c ^ d) | (~d & b) * (~b & d) + 1 + (~((b | d) * (b & d) + (~d & b) * (~b & d)) | c) + (b | d) * (b & d)) * ((~c | d) * 2 - (~c ^ d) & (~d & b) * (~b & d) + 1 + (~((b | d) * (b & d) + (~d & b) * (~b & d)) | c) + (b | d) * (b & d))) - (~(~(~d & b) * (~b & d) + 1 + (~((b | d) * (b & d) + (~d & b) * (~b & d)) | c) + (b | d) * (b & d) & (~c | d) * 2 - (~c ^ d)) * (~(~c | d) * 2 - (~c ^ d) & (~d & b) * (~b & d) + 1 + (~((b | d) * (b & d) + (~d & b) * (~b & d)) | c) + (b | d) * (b & d)) + ((~c | d) * 2 - (~c ^ d) | (~d & b) * (~b & d) + 1 + (~((b | d) * (b & d) + (~d & b) * (~b & d)) | c) + (b | d) * (b & d)) * ((~c | d) * 2 - (~c ^ d) & (~d & b) * (~b & d) + 1 + (~((b | d) * (b & d) + (~d & b) * (~b & d)) | c) + (b | d) * (b & d)) * 2 & d * 2 - 2)",
                    "attributes": {
                        "numOps": 250,
                        "nestedExprLevel": 67,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 14.675767918088736,
                        "opsPercentages": {
                            "arithmetic": 18.0,
                            "mul": 18.4,
                            "bitwise": 63.6
                        },
                        "percentageDAGsCancel": 6.8181818181818175
                    }
                },
                "clang_O3": {
                    "expr": "((~(~c | d) * 2 - (~c ^ d) & (~(~d & b) * (~b & d) + (d | b) * (d & b) | c) + (~d & b) * (~b & d) + (d | b) * (d & b) + 1) * (-((~(~d & b) * (~b & d) + (d | b) * (d & b) | c) + (~d & b) * (~b & d) + (d | b) * (d & b)) - 2 & (~c | d) * 2 - (~c ^ d)) + ((~(~d & b) * (~b & d) + (d | b) * (d & b) | c) + (~d & b) * (~b & d) + (d | b) * (d & b) + 1 | (~c | d) * 2 - (~c ^ d)) * ((~(~d & b) * (~b & d) + (d | b) * (d & b) | c) + (~d & b) * (~b & d) + (d | b) * (d & b) + 1 & (~c | d) * 2 - (~c ^ d)) ^ d - 1) + (~(~(~c | d) * 2 - (~c ^ d) & (~(~d & b) * (~b & d) + (d | b) * (d & b) | c) + (~d & b) * (~b & d) + (d | b) * (d & b) + 1) * (-((~(~d & b) * (~b & d) + (d | b) * (d & b) | c) + (~d & b) * (~b & d) + (d | b) * (d & b)) - 2 & (~c | d) * 2 - (~c ^ d)) + ((~(~d & b) * (~b & d) + (d | b) * (d & b) | c) + (~d & b) * (~b & d) + (d | b) * (d & b) + 1 | (~c | d) * 2 - (~c ^ d)) * ((~(~d & b) * (~b & d) + (d | b) * (d & b) | c) + (~d & b) * (~b & d) + (d | b) * (d & b) + 1 & (~c | d) * 2 - (~c ^ d)) & d - 1) * -2",
                    "attributes": {
                        "numOps": 250,
                        "nestedExprLevel": 61,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 14.675767918088736,
                        "opsPercentages": {
                            "arithmetic": 19.2,
                            "mul": 18.0,
                            "bitwise": 62.8
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) & ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) ^ 0xffffffff | c) + (d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) + 1) * (((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) | ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) ^ 0xffffffff | c) + (d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) + 1) + (((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) & (((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) ^ 0xffffffff | c) + (d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) + 1 ^ 0xffffffff)) * ((((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) ^ 0xffffffff) & ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) ^ 0xffffffff | c) + (d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) + 1) ^ d - 1) + (((((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) & ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) ^ 0xffffffff | c) + (d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) + 1) * (((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) | ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) ^ 0xffffffff | c) + (d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) + 1) + (((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) & (((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) ^ 0xffffffff | c) + (d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) + 1 ^ 0xffffffff)) * ((((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) ^ 0xffffffff) & ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) ^ 0xffffffff | c) + (d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) + 1) ^ 0xffffffff) & d - 1) * -2",
                    "attributes": {
                        "numOps": 266,
                        "nestedExprLevel": 89,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 9.215017064846416,
                        "opsPercentages": {
                            "arithmetic": 29.32330827067669,
                            "mul": 13.909774436090224,
                            "bitwise": 56.766917293233085
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "msvc_default": {
                    "expr": "((((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) & (~((d & b) * (d | b) + (~b & d) * (~d & b) ) | c) + 1 + (d & b) * (d | b) + (~b & d) * (~d & b)) * (((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) | (~((d & b) * (d | b) + (~b & d) * (~d & b) ) | c) + 1 + (d & b) * (d | b) + (~b & d) * (~d & b)) + (((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) & ~((~((d & b) * (d | b) + (~b & d) * (~d & b)) | c) + 1 + (d & b) * (d | b) + (~b & d) * (~d & b))) * (~(((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d)) & (~((d & b) * (d | b) + (~b & d) * (~d & b)) | c) + 1 + (d & b) * (d | b) + (~b & d) * (~d & b)) ^ d - 1) + (~((((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) & (~((d & b) * (d | b) + (~b & d) * (~d & b)) | c) + 1 + (d & b) * (d | b) + (~b & d) * (~d & b)) * (((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) | (~((d & b) * (d | b) + (~b & d) * (~d & b)) | c) + 1 + (d & b) * (d | b) + (~b & d) * (~d & b)) + (((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d) & ~((~((d & b) * (d | b) + (~b & d) * (~d & b)) | c) + 1 + (d & b) * (d | b) + (~b & d) * (~d & b)) ) * (~(((0xffffffff - c | d) + (0xffffffff - c | d)) - (0xffffffff - c ^ d)) & (~((d & b) * (d | b) + (~b & d) * (~d & b)) | c) + 1 + (d & b) * (d | b) + (~b & d) * (~d & b))) & d - 1) * -2",
                    "attributes": {
                        "numOps": 266,
                        "nestedExprLevel": 80,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 9.215017064846416,
                        "opsPercentages": {
                            "arithmetic": 29.32330827067669,
                            "mul": 13.909774436090224,
                            "bitwise": 56.766917293233085
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "gcc_O3": {
                    "expr": "~((-d ^ (~(~c | d) * 2 + ~(c ^ d) & (~(~d & b) * (~b & d) + (b | d) * (d & b) | c) + (~d & b) * (~b & d) + (b | d) * (d & b) + 1) * (-(~(~d & b) * (~b & d) + (b | d) * (d & b) | c) + (~d & b) * (~b & d) + (b | d) * (d & b) - 2 & (~c | d) * 2 - ~(c ^ d)) + ((~c | d) * 2 - ~(c ^ d) & (~(~d & b) * (~b & d) + (b | d) * (d & b) | c) + (~d & b) * (~b & d) + (b | d) * (d & b) + 1) * ((~c | d) * 2 - ~(c ^ d) | (~(~d & b) * (~b & d) + (b | d) * (d & b) | c) + (~d & b) * (~b & d) + (b | d) * (d & b) + 1)) + (~(~(~c | d) * 2 + ~(c ^ d) & (~(~d & b) * (~b & d) + (b | d) * (d & b) | c) + (~d & b) * (~b & d) + (b | d) * (d & b) + 1) * (-(~(~d & b) * (~b & d) + (b | d) * (d & b) | c) + (~d & b) * (~b & d) + (b | d) * (d & b) - 2 & (~c | d) * 2 - ~(c ^ d)) + ((~c | d) * 2 - ~(c ^ d) & (~(~d & b) * (~b & d) + (b | d) * (d & b) | c) + (~d & b) * (~b & d) + (b | d) * (d & b) + 1) * ((~c | d) * 2 - ~(c ^ d) | (~(~d & b) * (~b & d) + (b | d) * (d & b) | c) + (~d & b) * (~b & d) + (b | d) * (d & b) + 1) & d - 1) * 2)",
                    "attributes": {
                        "numOps": 250,
                        "nestedExprLevel": 60,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 14.675767918088736,
                        "opsPercentages": {
                            "arithmetic": 18.8,
                            "mul": 18.0,
                            "bitwise": 63.2
                        },
                        "percentageDAGsCancel": 4.444444444444445
                    }
                }
            }
        },
        {
            "num": 216,
            "gt": {
                "expr": "(((c*((~b)*b))-((b|(d|b))*(b|(~b)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 11.11111111111111,
                        "mul": 33.33333333333333,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((c & (((- b - 1) & b) * ((- b - 1) | b) + ((- b - 1) & ~ b) * (~ (- b - 1) & b))) * (c | (((- b - 1) & b) * ((- b - 1) | b) + ((- b - 1) & ~ b) * (~ (- b - 1) & b))) + (c & ~ (((- b - 1) & b) * ((- b - 1) | b) + ((- b - 1) & ~ b) * (~ (- b - 1) & b))) * (~ c & (((- b - 1) & b) * ((- b - 1) | b) + ((- b - 1) & ~ b) * (~ (- b - 1) & b)))) ^ (((((b + (((d + b) + 1) + ((- d - 1) | (- b - 1)))) + 1) + ((- b - 1) | (- (((d + b) + 1) + ((- d - 1) | (- b - 1))) - 1))) & (((b + (- b - 1)) + 1) + ((- b - 1) | (- (- b - 1) - 1)))) * ((((b + (((d + b) + 1) + ((- d - 1) | (- b - 1)))) + 1) + ((- b - 1) | (- (((d + b) + 1) + ((- d - 1) | (- b - 1))) - 1))) | (((b + (- b - 1)) + 1) + ((- b - 1) | (- (- b - 1) - 1)))) + ((((b + (((d + b) + 1) + ((- d - 1) | (- b - 1)))) + 1) + ((- b - 1) | (- (((d + b) + 1) + ((- d - 1) | (- b - 1))) - 1))) & ~ (((b + (- b - 1)) + 1) + ((- b - 1) | (- (- b - 1) - 1)))) * (~ (((b + (((d + b) + 1) + ((- d - 1) | (- b - 1)))) + 1) + ((- b - 1) | (- (((d + b) + 1) + ((- d - 1) | (- b - 1))) - 1))) & (((b + (- b - 1)) + 1) + ((- b - 1) | (- (- b - 1) - 1)))))) - ((~ ((c & (((- b - 1) & b) * ((- b - 1) | b) + ((- b - 1) & ~ b) * (~ (- b - 1) & b))) * (c | (((- b - 1) & b) * ((- b - 1) | b) + ((- b - 1) & ~ b) * (~ (- b - 1) & b))) + (c & ~ (((- b - 1) & b) * ((- b - 1) | b) + ((- b - 1) & ~ b) * (~ (- b - 1) & b))) * (~ c & (((- b - 1) & b) * ((- b - 1) | b) + ((- b - 1) & ~ b) * (~ (- b - 1) & b)))) & (((((b + (((d + b) + 1) + ((- d - 1) | (- b - 1)))) + 1) + ((- b - 1) | (- (((d + b) + 1) + ((- d - 1) | (- b - 1))) - 1))) & (((b + (- b - 1)) + 1) + ((- b - 1) | (- (- b - 1) - 1)))) * ((((b + (((d + b) + 1) + ((- d - 1) | (- b - 1)))) + 1) + ((- b - 1) | (- (((d + b) + 1) + ((- d - 1) | (- b - 1))) - 1))) | (((b + (- b - 1)) + 1) + ((- b - 1) | (- (- b - 1) - 1)))) + ((((b + (((d + b) + 1) + ((- d - 1) | (- b - 1)))) + 1) + ((- b - 1) | (- (((d + b) + 1) + ((- d - 1) | (- b - 1))) - 1))) & ~ (((b + (- b - 1)) + 1) + ((- b - 1) | (- (- b - 1) - 1)))) * (~ (((b + (((d + b) + 1) + ((- d - 1) | (- b - 1)))) + 1) + ((- b - 1) | (- (((d + b) + 1) + ((- d - 1) | (- b - 1))) - 1))) & (((b + (- b - 1)) + 1) + ((- b - 1) | (- (- b - 1) - 1)))))) << 1)",
                "attributes": {
                    "numOps": 465,
                    "nestedExprLevel": 209,
                    "numDAGs": 52,
                    "opsPercentages": {
                        "arithmetic": 71.61290322580646,
                        "mul": 5.161290322580645,
                        "bitwise": 23.225806451612904
                    },
                    "percentageDAGsCancel": 17.307692307692307
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~b * b & c) * (~b * b | c) + (~(~b * b) & c) * (~b * b & ~c) ^ -(((d & b) - (b + d + 1) | ~b) + b * 2 + d + ~(d & b) + 2)) + (-(((d & b) - (b + d + 1) | ~b) + b * 2 + d + ~(d & b) + 2) & ~((~(~b * b) & c) * (~b * b & ~c) + (~b * b & c) * (~b * b | c))) * -2",
                    "attributes": {
                        "numOps": 68,
                        "nestedExprLevel": 16,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 85.3763440860215,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 22.058823529411764,
                            "bitwise": 48.529411764705884
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~b * b | c) * (~b * b & c) + (~~b * b & c) * (~c & ~b * b) ^ (((-1 - b) * 2 - (((-2 - (~d | ~b)) - b) - d | ~b)) - (~d | ~b)) - d) - (~(~b * b | c) * (~b * b & c) + (~~b * b & c) * (~c & ~b * b) * 2 & (((-1 - b) * 2 - (((-2 - (~d | ~b)) - b) - d | ~b)) - (~d | ~b)) - d * 2)",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 19,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 83.65591397849462,
                        "opsPercentages": {
                            "arithmetic": 27.631578947368425,
                            "mul": 21.052631578947366,
                            "bitwise": 51.31578947368421
                        },
                        "percentageDAGsCancel": 8.823529411764707
                    }
                },
                "clang_O3": {
                    "expr": "(~(b + b + d + (~d | ~b) + 1) - (~((~d | ~b) + b + d + 1) | ~b) ^ (~c & ~b * b) * (~~b * b & c) + (~b * b | c) * (~b * b & c)) + (~(~c & ~b * b) * (~~b * b & c) + (~b * b | c) * (~b * b & c) & ~(b + b + d + (~d | ~b) + 1) - (~((~d | ~b) + b + d + 1) | ~b)) * -2",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 14,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 83.65591397849462,
                        "opsPercentages": {
                            "arithmetic": 26.31578947368421,
                            "mul": 17.105263157894736,
                            "bitwise": 56.57894736842105
                        },
                        "percentageDAGsCancel": 6.0606060606060606
                    }
                },
                "clang_default": {
                    "expr": "((c & (0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & (b ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & b)) * (c | (0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & (b ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & b)) + (c & ((0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & (b ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & b) ^ 0xffffffff)) * ((c ^ 0xffffffff) & (0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & (b ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & b)) ^ (d + b * 2 + (0xffffffff - d | 0xffffffff - b) + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) & (0xffffffff - b | 0xffffffff - (-1 - b))) * (d + b * 2 + (0xffffffff - d | 0xffffffff - b) + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) | 0xffffffff - b | 0xffffffff - (-1 - b)) + (d + b * 2 + (0xffffffff - d | 0xffffffff - b) + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) & ((0xffffffff - b | 0xffffffff - (-1 - b)) ^ 0xffffffff)) * ((b + d + b + (0xffffffff - d | 0xffffffff - b) + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) ^ 0xffffffff) & (0xffffffff - b | 0xffffffff - (-1 - b)))) + (((c & (0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & (b ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & b)) * (c | (0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & (b ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & b)) + (c & ((0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & (b ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & b) ^ 0xffffffff)) * ((c ^ 0xffffffff) & (0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & (b ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & b)) ^ 0xffffffff) & (d + b * 2 + (0xffffffff - d | 0xffffffff - b) + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) & (0xffffffff - b | 0xffffffff - (-1 - b))) * (b + d + b + (0xffffffff - d | 0xffffffff - b) + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) | 0xffffffff - b | 0xffffffff - (-1 - b)) + (b + d + b + (0xffffffff - d | 0xffffffff - b) + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) & ((0xffffffff - b | 0xffffffff - (-1 - b)) ^ 0xffffffff)) * ((d + b * 2 + (0xffffffff - d | 0xffffffff - b) + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) ^ 0xffffffff) & (0xffffffff - b | 0xffffffff - (-1 - b)))) * -2",
                    "attributes": {
                        "numOps": 322,
                        "nestedExprLevel": 75,
                        "numDAGs": 64,
                        "percentDecreaseByOps": 30.752688172043012,
                        "opsPercentages": {
                            "arithmetic": 57.453416149068325,
                            "mul": 9.316770186335404,
                            "bitwise": 33.22981366459628
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "msvc_default": {
                    "expr": "(((0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & ~b) * (~(0xffffffff - b) & b) & c) * ((0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & ~b) * (~(0xffffffff - b) & b) | c) + (~((0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & ~b) * (~(0xffffffff - b) & b)) & c) * (~c & (0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & ~b) * (~(0xffffffff - b) & b)) ^ ((0xffffffff - d | 0xffffffff - b) + b * 2 + d + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) & (0xffffffff - b | 0xffffffff - (-1 - b))) * ((0xffffffff - d | 0xffffffff - b) + b * 2 + d + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) | 0xffffffff - b | 0xffffffff - (-1 - b)) + ((0xffffffff - d | 0xffffffff - b) + b * 2 + d + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) & ~(0xffffffff - b | 0xffffffff - (-1 - b))) * (~((0xffffffff - d | 0xffffffff - b) + b * 2 + d + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b)))) & (0xffffffff - b | 0xffffffff - (-1 - b)))) + (~(((0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & ~b) * (~(0xffffffff - b) & b) & c) * ((0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & ~b) * (~(0xffffffff - b) & b) | c) + (~((0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & ~b) * (~(0xffffffff - b) & b)) & c) * (~c & (0xffffffff - b & b) * (0xffffffff - b | b) + (0xffffffff - b & ~b) * (~(0xffffffff - b) & b))) & ((0xffffffff - d | 0xffffffff - b) + b * 2 + d + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) & (0xffffffff - b | 0xffffffff - (-1 - b))) * ((0xffffffff - d | 0xffffffff - b) + b * 2 + d + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) | 0xffffffff - b | 0xffffffff - (-1 - b)) + ((0xffffffff - d | 0xffffffff - b) + b * 2 + d + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b))) & ~(0xffffffff - b | 0xffffffff - (-1 - b))) * (~((0xffffffff - d | 0xffffffff - b) + b * 2 + d + 2 + (0xffffffff - b | 0xffffffff - (d + b + 1 + (0xffffffff - d | 0xffffffff - b)))) & (0xffffffff - b | 0xffffffff - (-1 - b)))) * -2",
                    "attributes": {
                        "numOps": 322,
                        "nestedExprLevel": 65,
                        "numDAGs": 51,
                        "percentDecreaseByOps": 30.752688172043012,
                        "opsPercentages": {
                            "arithmetic": 56.52173913043478,
                            "mul": 10.248447204968944,
                            "bitwise": 33.22981366459628
                        },
                        "percentageDAGsCancel": 9.803921568627452
                    }
                },
                "gcc_O3": {
                    "expr": "((~~b * b & c) * (~c & ~b * b) + (~b * b | c) * (~b * b & c) ^ -((b + 1 + d - (d & b)) + b + ((d & b) - b + 1 + d | ~b))) + (~(~~b * b & c) * (~c & ~b * b) + (~b * b | c) * (~b * b & c) & -((b + 1 + d - (d & b)) + b + ((d & b) - b + 1 + d | ~b))) * -2",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 14,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 85.80645161290322,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 19.696969696969695,
                            "bitwise": 46.96969696969697
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                }
            }
        },
        {
            "num": 217,
            "gt": {
                "expr": "((-(((c-(-c))|(~(c-d)))*(a*(c|a)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 22.22222222222222,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ ((((((((c ^ (~ c + 1)) - ((~ c & (~ c + 1)) + (~ c & (~ c + 1)))) + ((d - c) - 1)) + 1) + ((- ((c ^ (~ c + 1)) - ((~ c & (~ c + 1)) + (~ c & (~ c + 1)))) - 1) | (- ((d - c) - 1) - 1))) & ((a & ((c & ~ a) + a)) * (a | ((c & ~ a) + a)) + (a & ~ ((c & ~ a) + a)) * (~ a & ((c & ~ a) + a)))) * ((((((c ^ (~ c + 1)) - ((~ c & (~ c + 1)) + (~ c & (~ c + 1)))) + ((d - c) - 1)) + 1) + ((- ((c ^ (~ c + 1)) - ((~ c & (~ c + 1)) + (~ c & (~ c + 1)))) - 1) | (- ((d - c) - 1) - 1))) | ((a & ((c & ~ a) + a)) * (a | ((c & ~ a) + a)) + (a & ~ ((c & ~ a) + a)) * (~ a & ((c & ~ a) + a)))) + ((((((c ^ (~ c + 1)) - ((~ c & (~ c + 1)) + (~ c & (~ c + 1)))) + ((d - c) - 1)) + 1) + ((- ((c ^ (~ c + 1)) - ((~ c & (~ c + 1)) + (~ c & (~ c + 1)))) - 1) | (- ((d - c) - 1) - 1))) & ~ ((a & ((c & ~ a) + a)) * (a | ((c & ~ a) + a)) + (a & ~ ((c & ~ a) + a)) * (~ a & ((c & ~ a) + a)))) * (~ (((((c ^ (~ c + 1)) - ((~ c & (~ c + 1)) + (~ c & (~ c + 1)))) + ((d - c) - 1)) + 1) + ((- ((c ^ (~ c + 1)) - ((~ c & (~ c + 1)) + (~ c & (~ c + 1)))) - 1) | (- ((d - c) - 1) - 1))) & ((a & ((c & ~ a) + a)) * (a | ((c & ~ a) + a)) + (a & ~ ((c & ~ a) + a)) * (~ a & ((c & ~ a) + a))))) - 1)",
                "attributes": {
                    "numOps": 247,
                    "nestedExprLevel": 116,
                    "numDAGs": 38,
                    "opsPercentages": {
                        "arithmetic": 42.91497975708502,
                        "mul": 4.048582995951417,
                        "bitwise": 53.036437246963565
                    },
                    "percentageDAGsCancel": 13.157894736842104
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(((~(a + (~a & c)) & a) * (a + (~a & c) & ~a) + (a + (~a & c) & a) * (a + (~a & c) | a) & ~((c - d | ((-c & ~c) * 2 - (-c ^ c)) - 1) + (d - c) + (-c ^ c) + (-c & ~c) * -2)) * ((d - c) + (-c ^ c) + (-c & ~c) * -2 + (c - d | ((-c & ~c) * 2 - (-c ^ c)) - 1) & ~((~(a + (~a & c)) & a) * (a + (~a & c) & ~a) + (a + (~a & c) & a) * (a + (~a & c) | a))) + ((d - c) + (-c ^ c) + (-c & ~c) * -2 + (c - d | ((-c & ~c) * 2 - (-c ^ c)) - 1) & (~(a + (~a & c)) & a) * (a + (~a & c) & ~a) + (a + (~a & c) & a) * (a + (~a & c) | a)) * ((~(a + (~a & c)) & a) * (a + (~a & c) & ~a) + (a + (~a & c) & a) * (a + (~a & c) | a) | (d - c) + (-c ^ c) + (-c & ~c) * -2 + (c - d | ((-c & ~c) * 2 - (-c ^ c)) - 1)))",
                    "attributes": {
                        "numOps": 178,
                        "nestedExprLevel": 45,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 27.93522267206478,
                        "opsPercentages": {
                            "arithmetic": 39.325842696629216,
                            "mul": 10.112359550561797,
                            "bitwise": 50.56179775280899
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_O1": {
                    "expr": "-((~(~(~a & c) + a & a) * ((~a & c) + a & ~a) + ((~a & c) + a | a) * ((~a & c) + a & a) & ((((~c + 1 & ~c * 2 - ~c + 1 ^ c) - 1 | c - d) + ~c + 1 & ~c * -2) - c) + ~c + 1 ^ c + d) * (~((((~c + 1 & ~c * 2 - ~c + 1 ^ c) - 1 | c - d) + ~c + 1 & ~c * -2) - c) + ~c + 1 ^ c + d & (~(~a & c) + a & a) * ((~a & c) + a & ~a) + ((~a & c) + a | a) * ((~a & c) + a & a)) + (((((~c + 1 & ~c * 2 - ~c + 1 ^ c) - 1 | c - d) + ~c + 1 & ~c * -2) - c) + ~c + 1 ^ c + d | (~(~a & c) + a & a) * ((~a & c) + a & ~a) + ((~a & c) + a | a) * ((~a & c) + a & a)) * (((((~c + 1 & ~c * 2 - ~c + 1 ^ c) - 1 | c - d) + ~c + 1 & ~c * -2) - c) + ~c + 1 ^ c + d & (~(~a & c) + a & a) * ((~a & c) + a & ~a) + ((~a & c) + a | a) * ((~a & c) + a & a)))",
                    "attributes": {
                        "numOps": 194,
                        "nestedExprLevel": 35,
                        "numDAGs": 48,
                        "percentDecreaseByOps": 21.45748987854251,
                        "opsPercentages": {
                            "arithmetic": 36.08247422680412,
                            "mul": 9.278350515463918,
                            "bitwise": 54.63917525773196
                        },
                        "percentageDAGsCancel": 2.083333333333333
                    }
                },
                "clang_O3": {
                    "expr": "-((~(d - c) + (-c ^ c) + (~c & -c) * -2 + (c - d | ~(-c ^ c) + (~c & -c) * -2) & ((c & ~a) + a & ~a) * (~(c & ~a) + a & a) + ((c & ~a) + a | a) * ((c & ~a) + a & a)) * (~((c & ~a) + a & ~a) * (~(c & ~a) + a & a) + ((c & ~a) + a | a) * ((c & ~a) + a & a) & (d - c) + (-c ^ c) + (~c & -c) * -2 + (c - d | ~(-c ^ c) + (~c & -c) * -2)) + ((d - c) + (-c ^ c) + (~c & -c) * -2 + (c - d | ~(-c ^ c) + (~c & -c) * -2) | ((c & ~a) + a & ~a) * (~(c & ~a) + a & a) + ((c & ~a) + a | a) * ((c & ~a) + a & a)) * ((d - c) + (-c ^ c) + (~c & -c) * -2 + (c - d | ~(-c ^ c) + (~c & -c) * -2) & ((c & ~a) + a & ~a) * (~(c & ~a) + a & a) + ((c & ~a) + a | a) * ((c & ~a) + a & a)))",
                    "attributes": {
                        "numOps": 182,
                        "nestedExprLevel": 36,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 26.31578947368421,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 9.89010989010989,
                            "bitwise": 51.64835164835166
                        },
                        "percentageDAGsCancel": 2.4390243902439024
                    }
                },
                "clang_default": {
                    "expr": "((((c ^ (c ^ 0xffffffff) + 1) - (((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1) + ((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1))) + (d - c) + (0xffffffff - ((c ^ (c ^ 0xffffffff) + 1) - (((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1) + ((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1))) | 0xffffffff - ((d - c) + -1)) & (a & (c & (a ^ 0xffffffff)) + a) * (a | (c & (a ^ 0xffffffff)) + a) + (a & ((c & (a ^ 0xffffffff)) + a ^ 0xffffffff)) * ((a ^ 0xffffffff) & (c & (a ^ 0xffffffff)) + a)) * (((c ^ (c ^ 0xffffffff) + 1) - (((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1) + ((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1))) + (d - c) + (0xffffffff - ((c ^ (c ^ 0xffffffff) + 1) - (((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1) + ((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1))) | 0xffffffff - ((d - c) + -1)) | (a & (c & (a ^ 0xffffffff)) + a) * (a | (c & (a ^ 0xffffffff)) + a) + (a & ((c & (a ^ 0xffffffff)) + a ^ 0xffffffff)) * ((a ^ 0xffffffff) & (c & (a ^ 0xffffffff)) + a)) + (((c ^ (c ^ 0xffffffff) + 1) - (((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1) + ((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1))) + (d - c) + (0xffffffff - ((c ^ (c ^ 0xffffffff) + 1) - (((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1) + ((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1))) | 0xffffffff - ((d - c) + -1)) & ((a & (c & (a ^ 0xffffffff)) + a) * (a | (c & (a ^ 0xffffffff)) + a) + (a & ((c & (a ^ 0xffffffff)) + a ^ 0xffffffff)) * ((a ^ 0xffffffff) & (c & (a ^ 0xffffffff)) + a) ^ 0xffffffff)) * ((((c ^ (c ^ 0xffffffff) + 1) - (((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1) + ((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1))) + (d - c) + (0xffffffff - ((c ^ (c ^ 0xffffffff) + 1) - (((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1) + ((c ^ 0xffffffff) & (c ^ 0xffffffff) + 1))) | 0xffffffff - ((d - c) + -1)) ^ 0xffffffff) & (a & (c & (a ^ 0xffffffff)) + a) * (a | (c & (a ^ 0xffffffff)) + a) + (a & ((c & (a ^ 0xffffffff)) + a ^ 0xffffffff)) * ((a ^ 0xffffffff) & (c & (a ^ 0xffffffff)) + a))) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 235,
                        "nestedExprLevel": 109,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 4.8582995951417,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 4.25531914893617,
                            "bitwise": 55.74468085106383
                        },
                        "percentageDAGsCancel": 13.88888888888889
                    }
                },
                "msvc_default": {
                    "expr": "~((((~c + 1 ^ c) - ((~c & ~c + 1) + (~c & ~c + 1))) + (d - c) + (0xffffffff - ((~c + 1 ^ c) - ((~c & ~c + 1) + (~c & ~c + 1))) | 0xffffffff - ((d - c) + -1)) & ((~a & c) + a & a) * ((~a & c) + a | a) + (~((~a & c) + a) & a) * (~a & (~a & c) + a)) * (((~c + 1 ^ c) - ((~c & ~c + 1) + (~c & ~c + 1))) + (d - c) + (0xffffffff - ((~c + 1 ^ c) - ((~c & ~c + 1) + (~c & ~c + 1))) | 0xffffffff - ((d - c) + -1)) | ((~a & c) + a & a) * ((~a & c) + a | a) + (~((~a & c) + a) & a) * (~a & (~a & c) + a)) + -1 + (((~c + 1 ^ c) - ((~c & ~c + 1) + (~c & ~c + 1))) + (d - c) + (0xffffffff - ((~c + 1 ^ c) - ((~c & ~c + 1) + (~c & ~c + 1))) | 0xffffffff - ((d - c) + -1)) & ~(((~a & c) + a & a) * ((~a & c) + a | a) + (~((~a & c) + a) & a) * (~a & (~a & c) + a))) * (~(((~c + 1 ^ c) - ((~c & ~c + 1) + (~c & ~c + 1))) + (d - c) + (0xffffffff - ((~c + 1 ^ c) - ((~c & ~c + 1) + (~c & ~c + 1))) | 0xffffffff - ((d - c) + -1))) & ((~a & c) + a & a) * ((~a & c) + a | a) + (~((~a & c) + a) & a) * (~a & (~a & c) + a)))",
                    "attributes": {
                        "numOps": 236,
                        "nestedExprLevel": 61,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 4.4534412955465585,
                        "opsPercentages": {
                            "arithmetic": 40.25423728813559,
                            "mul": 4.23728813559322,
                            "bitwise": 55.50847457627118
                        },
                        "percentageDAGsCancel": 19.444444444444446
                    }
                },
                "gcc_O3": {
                    "expr": "-((~(~(c & ~a) + a & a) * (~a & (c & ~a) + a) + ((c & ~a) + a & a) * ((c & ~a) + a | a) & (d - c) + -c ^ c + ~c & -c * -2 + ((~c & -c * 2 - -c ^ c) - 1 | c - d)) * (~(d - c) + -c ^ c + ~c & -c * -2 + ((~c & -c * 2 - -c ^ c) - 1 | c - d) & (~(c & ~a) + a & a) * (~a & (c & ~a) + a) + ((c & ~a) + a & a) * ((c & ~a) + a | a)) + ((d - c) + -c ^ c + ~c & -c * -2 + ((~c & -c * 2 - -c ^ c) - 1 | c - d) | (~(c & ~a) + a & a) * (~a & (c & ~a) + a) + ((c & ~a) + a & a) * ((c & ~a) + a | a)) * ((d - c) + -c ^ c + ~c & -c * -2 + ((~c & -c * 2 - -c ^ c) - 1 | c - d) & (~(c & ~a) + a & a) * (~a & (c & ~a) + a) + ((c & ~a) + a & a) * ((c & ~a) + a | a)))",
                    "attributes": {
                        "numOps": 178,
                        "nestedExprLevel": 28,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 27.93522267206478,
                        "opsPercentages": {
                            "arithmetic": 39.325842696629216,
                            "mul": 10.112359550561797,
                            "bitwise": 50.56179775280899
                        },
                        "percentageDAGsCancel": 6.8181818181818175
                    }
                }
            }
        },
        {
            "num": 218,
            "gt": {
                "expr": "((-(~((((-e)+(e^(b^a)))&(~b))+(a&b)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((((((~ e + 1) | ((e | ((b | a) - (b & a))) - (e & ((b | a) - (b & a))))) + ((~ e + 1) | ((e | ((b | a) - (b & a))) - (e & ((b | a) - (b & a)))))) - ((~ e + 1) ^ ((e | ((b | a) - (b & a))) - (e & ((b | a) - (b & a)))))) | b) - b) ^ ~ (((~ a | b) + a) + 1)) + ((((((((~ e + 1) | ((e | ((b | a) - (b & a))) - (e & ((b | a) - (b & a))))) + ((~ e + 1) | ((e | ((b | a) - (b & a))) - (e & ((b | a) - (b & a)))))) - ((~ e + 1) ^ ((e | ((b | a) - (b & a))) - (e & ((b | a) - (b & a)))))) | b) - b) | (((~ a | b) + a) + 1)) + (((((((~ e + 1) | ((e | ((b | a) - (b & a))) - (e & ((b | a) - (b & a))))) + ((~ e + 1) | ((e | ((b | a) - (b & a))) - (e & ((b | a) - (b & a)))))) - ((~ e + 1) ^ ((e | ((b | a) - (b & a))) - (e & ((b | a) - (b & a)))))) | b) - b) | (((~ a | b) + a) + 1)))) + 1) + 1",
                "attributes": {
                    "numOps": 140,
                    "nestedExprLevel": 98,
                    "numDAGs": 25,
                    "opsPercentages": {
                        "arithmetic": 39.285714285714285,
                        "mul": 0.0,
                        "bitwise": 60.71428571428571
                    },
                    "percentageDAGsCancel": 4.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a + (~a | b) + 1 | (b ^ a ^ e | -e) * 2 - (b ^ a ^ e ^ -e) & ~b) * 2 + ((b ^ a ^ e | -e) * 2 - (b ^ a ^ e ^ -e) & ~b ^ -((~a | b) + a) - 2) + 2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 7,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 72.85714285714285,
                        "opsPercentages": {
                            "arithmetic": 34.21052631578947,
                            "mul": 7.894736842105263,
                            "bitwise": 57.89473684210527
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~a + 1 + (~a | b) ^ ((-e | ((a | b) - (a & b) | e) - ((a | b) - (a & b) & e)) * 2 - (-e ^ ((a | b) - (a & b) | e) - ((a | b) - (a & b) & e)) | b) - b) + ((((-e | ((a | b) - (a & b) | e) - ((a | b) - (a & b) & e)) * 2 - (-e ^ ((a | b) - (a & b) | e) - ((a | b) - (a & b) & e)) | b) - b | a + 1 + (~a | b)) + 1) * 2",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 27,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 52.85714285714286,
                        "opsPercentages": {
                            "arithmetic": 39.39393939393939,
                            "mul": 4.545454545454546,
                            "bitwise": 56.060606060606055
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "clang_O3": {
                    "expr": "(-((~a | b) + a) - 2 ^ ~b & (b ^ a ^ e | -e) * 2 - (-e ^ b ^ a ^ e)) + (a + (~a | b) + 1 | ~b & (b ^ a ^ e | -e) * 2 - (-e ^ b ^ a ^ e)) * 2 + 2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 7,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 72.85714285714285,
                        "opsPercentages": {
                            "arithmetic": 34.21052631578947,
                            "mul": 7.894736842105263,
                            "bitwise": 57.89473684210527
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((((e ^ 0xffffffff) + 1 | (e | (b | a) - (b & a)) - (e & (b | a) - (b & a))) + ((e ^ 0xffffffff) + 1 | (e | (b | a) - (b & a)) - (e & (b | a) - (b & a)))) - ((e ^ 0xffffffff) + 1 ^ (e | (b | a) - (b & a)) - (e & (b | a) - (b & a))) | b) - b ^ (a ^ 0xffffffff | b) + a + 1 ^ 0xffffffff) + (((((e ^ 0xffffffff) + 1 | (e | (b | a) - (b & a)) - (e & (b | a) - (b & a))) + ((e ^ 0xffffffff) + 1 | (e | (b | a) - (b & a)) - (e & (b | a) - (b & a)))) - ((e ^ 0xffffffff) + 1 ^ (e | (b | a) - (b & a)) - (e & (b | a) - (b & a))) | b) - b | (a ^ 0xffffffff | b) + a + 1) + (((((e ^ 0xffffffff) + 1 | (e | (b | a) - (b & a)) - (e & (b | a) - (b & a))) + ((e ^ 0xffffffff) + 1 | (e | (b | a) - (b & a)) - (e & (b | a) - (b & a)))) - ((e ^ 0xffffffff) + 1 ^ (e | (b | a) - (b & a)) - (e & (b | a) - (b & a))) | b) - b | (a ^ 0xffffffff | b) + a + 1) + 2",
                    "attributes": {
                        "numOps": 139,
                        "nestedExprLevel": 56,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 0.7142857142857143,
                        "opsPercentages": {
                            "arithmetic": 38.84892086330935,
                            "mul": 0.0,
                            "bitwise": 61.15107913669065
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((((~e + 1 | ((b | a) - (b & a) | e) - ((b | a) - (b & a) & e)) + (~e + 1 | ((b | a) - (b & a) | e) - ((b | a) - (b & a) & e))) - (~e + 1 ^ ((b | a) - (b & a) | e) - ((b | a) - (b & a) & e)) | b) - b ^ ~((~a | b) + 1 + a)) + 2 + ((((~e + 1 | ((b | a) - (b & a) | e) - ((b | a) - (b & a) & e)) + (~e + 1 | ((b | a) - (b & a) | e) - ((b | a) - (b & a) & e))) - (~e + 1 ^ ((b | a) - (b & a) | e) - ((b | a) - (b & a) & e)) | b) - b | (~a | b) + 1 + a) + ((((~e + 1 | ((b | a) - (b & a) | e) - ((b | a) - (b & a) & e)) + (~e + 1 | ((b | a) - (b & a) | e) - ((b | a) - (b & a) & e))) - (~e + 1 ^ ((b | a) - (b & a) | e) - ((b | a) - (b & a) & e)) | b) - b | (~a | b) + 1 + a)",
                    "attributes": {
                        "numOps": 139,
                        "nestedExprLevel": 57,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 0.7142857142857143,
                        "opsPercentages": {
                            "arithmetic": 38.84892086330935,
                            "mul": 0.0,
                            "bitwise": 61.15107913669065
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "gcc_O3": {
                    "expr": "((-e | b ^ a ^ e) * 2 - (-e ^ b ^ a ^ e) & ~b ^ -(~a | b) + a - 2) + 2 + ((~a | b) + a + 1 | (-e | b ^ a ^ e) * 2 - (-e ^ b ^ a ^ e) & ~b) * 2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 6,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 72.85714285714285,
                        "opsPercentages": {
                            "arithmetic": 34.21052631578947,
                            "mul": 7.894736842105263,
                            "bitwise": 57.89473684210527
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 219,
            "gt": {
                "expr": "((((d+a)-(~((a|d)^(a-d))))&(a&d)))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 0.0,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ ((((d - ~ a) - 1) ^ ((((((a + d) + 1) + ((- a - 1) | (- d - 1))) & ((a & ~ d) - (~ a & d))) - ((((a + d) + 1) + ((- a - 1) | (- d - 1))) | ((a & ~ d) - (~ a & d)))) - 1)) - ((~ ((d - ~ a) - 1) & ((((((a + d) + 1) + ((- a - 1) | (- d - 1))) & ((a & ~ d) - (~ a & d))) - ((((a + d) + 1) + ((- a - 1) | (- d - 1))) | ((a & ~ d) - (~ a & d)))) - 1)) + (~ ((d - ~ a) - 1) & ((((((a + d) + 1) + ((- a - 1) | (- d - 1))) & ((a & ~ d) - (~ a & d))) - ((((a + d) + 1) + ((- a - 1) | (- d - 1))) | ((a & ~ d) - (~ a & d)))) - 1)))) | ((~ a | d) - ~ a)) + ((((d - ~ a) - 1) ^ ((((((a + d) + 1) + ((- a - 1) | (- d - 1))) & ((a & ~ d) - (~ a & d))) - ((((a + d) + 1) + ((- a - 1) | (- d - 1))) | ((a & ~ d) - (~ a & d)))) - 1)) - ((~ ((d - ~ a) - 1) & ((((((a + d) + 1) + ((- a - 1) | (- d - 1))) & ((a & ~ d) - (~ a & d))) - ((((a + d) + 1) + ((- a - 1) | (- d - 1))) | ((a & ~ d) - (~ a & d)))) - 1)) + (~ ((d - ~ a) - 1) & ((((((a + d) + 1) + ((- a - 1) | (- d - 1))) & ((a & ~ d) - (~ a & d))) - ((((a + d) + 1) + ((- a - 1) | (- d - 1))) | ((a & ~ d) - (~ a & d)))) - 1))))) + 1",
                "attributes": {
                    "numOps": 220,
                    "nestedExprLevel": 116,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 57.72727272727273,
                        "mul": 0.0,
                        "bitwise": 42.27272727272727
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((d - ~a) - 1 ^ (~d & a) - (~a & d) ^ (a & d) - (d + a + 1)) + (((~d & a) - (~a & d) ^ (a & d) - (d + a + 1)) & ~a + ~d + 1) * -2 + ((~a + ~d + 1 ^ (~d & a) - (~a & d) ^ (a & d) - (d + a + 1)) + (((~d & a) - (~a & d) ^ (a & d) - (d + a + 1)) & ~a + ~d + 1) * 2 | d & a) + 1",
                    "attributes": {
                        "numOps": 68,
                        "nestedExprLevel": 16,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 69.0909090909091,
                        "opsPercentages": {
                            "arithmetic": 42.64705882352941,
                            "mul": 2.941176470588235,
                            "bitwise": 54.41176470588235
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "msvc_O1": {
                    "expr": "(((~d & a) - (~a & d) & (a - (a & d)) + d) - ((~d & a) - (~a & d) | (a - (a & d)) + d)) - 1 ^ d + a + 1 + (a + 1 + (~a | d) | ~((((~d & a) - (~a & d) & (a - (a & d)) + d) - ((~d & a) - (~a & d) | (a - (a & d)) + d)) - 1 ^ d + a + ~(d + a) & (((~d & a) - (~a & d) & (a - (a & d)) + d) - ((~d & a) - (~a & d) | (a - (a & d)) + d)) - 1 * -2)) + ~(d + a) & (((~d & a) - (~a & d) & (a - (a & d)) + d) - ((~d & a) - (~a & d) | (a - (a & d)) + d)) - 1 * -2",
                    "attributes": {
                        "numOps": 104,
                        "nestedExprLevel": 34,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 52.72727272727272,
                        "opsPercentages": {
                            "arithmetic": 42.30769230769231,
                            "mul": 1.9230769230769231,
                            "bitwise": 55.769230769230774
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(d & a | ~(d + a ^ ~((~d & a) - (~a & d) ^ (d | a))) + (~(d + a) & ~((~d & a) - (~a & d) ^ (d | a))) * -2) + (d + a ^ ~((~d & a) - (~a & d) ^ (d | a))) + (~(d + a) & ~((~d & a) - (~a & d) ^ (d | a))) * -2 + 1",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 15,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 75.9090909090909,
                        "opsPercentages": {
                            "arithmetic": 26.41509433962264,
                            "mul": 3.7735849056603774,
                            "bitwise": 69.81132075471697
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d - (a ^ 0xffffffff)) - 1 ^ ((a + d + 1 + (0xffffffff - a | 0xffffffff - d) & (a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d)) - (a + d + 1 + (0xffffffff - a | 0xffffffff - d) | (a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d))) - 1) - ((((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) & ((a + d + 1 + (0xffffffff - a | 0xffffffff - d) & (a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d)) - (a + d + 1 + (0xffffffff - a | 0xffffffff - d) | (a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d))) - 1) + (((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) & ((a + d + 1 + (0xffffffff - a | 0xffffffff - d) & (a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d)) - (a + d + 1 + (0xffffffff - a | 0xffffffff - d) | (a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d))) - 1)) ^ 0xffffffff | (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) + (((d - (a ^ 0xffffffff)) - 1 ^ ((a + d + 1 + (0xffffffff - a | 0xffffffff - d) & (a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d)) - (a + d + 1 + (0xffffffff - a | 0xffffffff - d) | (a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d))) - 1) - ((((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) & ((a + d + 1 + (0xffffffff - a | 0xffffffff - d) & (a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d)) - (a + d + 1 + (0xffffffff - a | 0xffffffff - d) | (a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d))) - 1) + (((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) & ((a + d + 1 + (0xffffffff - a | 0xffffffff - d) & (a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d)) - (a + d + 1 + (0xffffffff - a | 0xffffffff - d) | (a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d))) - 1))) + 1",
                    "attributes": {
                        "numOps": 196,
                        "nestedExprLevel": 65,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 10.909090909090908,
                        "opsPercentages": {
                            "arithmetic": 52.55102040816326,
                            "mul": 0.0,
                            "bitwise": 47.44897959183674
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "msvc_default": {
                    "expr": "(~(((d - ~a) - 1 ^ ((a + d + 1 + (0xffffffff - a | 0xffffffff - d) & (~d & a) - (~a & d)) - (a + d + 1 + (0xffffffff - a | 0xffffffff - d) | (~d & a) - (~a & d))) - 1) - ((~((d - ~a) - 1) & ((a + d + 1 + (0xffffffff - a | 0xffffffff - d) & (~d & a) - (~a & d)) - (a + d + 1 + (0xffffffff - a | 0xffffffff - d) | (~d & a) - (~a & d))) - 1) + (~((d - ~a) - 1) & ((a + d + 1 + (0xffffffff - a | 0xffffffff - d) & (~d & a) - (~a & d)) - (a + d + 1 + (0xffffffff - a | 0xffffffff - d) | (~d & a) - (~a & d))) - 1))) | (~a | d) - ~a) + 1 + (((d - ~a) - 1 ^ ((a + d + 1 + (0xffffffff - a | 0xffffffff - d) & (~d & a) - (~a & d)) - (a + d + 1 + (0xffffffff - a | 0xffffffff - d) | (~d & a) - (~a & d))) - 1) - ((~((d - ~a) - 1) & ((a + d + 1 + (0xffffffff - a | 0xffffffff - d) & (~d & a) - (~a & d)) - (a + d + 1 + (0xffffffff - a | 0xffffffff - d) | (~d & a) - (~a & d))) - 1) + (~((d - ~a) - 1) & ((a + d + 1 + (0xffffffff - a | 0xffffffff - d) & (~d & a) - (~a & d)) - (a + d + 1 + (0xffffffff - a | 0xffffffff - d) | (~d & a) - (~a & d))) - 1)))",
                    "attributes": {
                        "numOps": 196,
                        "nestedExprLevel": 48,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 10.909090909090908,
                        "opsPercentages": {
                            "arithmetic": 52.55102040816326,
                            "mul": 0.0,
                            "bitwise": 47.44897959183674
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((d - ~a) - 1 ^ (d & a) - (a + 1 + d) ^ (~d & a) - (~a & d)) + ~d - a & (d & a) - (a + 1 + d) ^ (~d & a) - (~a & d) * -2 + 1 + ((~d - a ^ (d & a) - (a + 1 + d) ^ (~d & a) - (~a & d)) + ~d - a & (d & a) - (a + 1 + d) ^ (~d & a) - (~a & d) * 2 | d & a)",
                    "attributes": {
                        "numOps": 62,
                        "nestedExprLevel": 12,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 71.81818181818181,
                        "opsPercentages": {
                            "arithmetic": 41.935483870967744,
                            "mul": 3.225806451612903,
                            "bitwise": 54.83870967741935
                        },
                        "percentageDAGsCancel": 3.125
                    }
                }
            }
        },
        {
            "num": 220,
            "gt": {
                "expr": "((((~b)^e)+(((b+b)^b)+((-e)^e))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((- b - 1) | e) - ((- b - 1) & e)) ^ ~ ((((((((b | b) + (b & b)) - b) - ((((b | b) + (b & b)) | ~ b) + (((b | b) + (b & b)) | ~ b))) - 2) ^ ~ ((~ (e - 1) | e) - (~ (e - 1) & e))) + (((((((b | b) + (b & b)) - b) - ((((b | b) + (b & b)) | ~ b) + (((b | b) + (b & b)) | ~ b))) - 2) | ((~ (e - 1) | e) - (~ (e - 1) & e))) << 1)) + 1)) + (((((- b - 1) | e) - ((- b - 1) & e)) | ((((((((b | b) + (b & b)) - b) - ((((b | b) + (b & b)) | ~ b) + (((b | b) + (b & b)) | ~ b))) - 2) ^ ~ ((~ (e - 1) | e) - (~ (e - 1) & e))) + (((((((b | b) + (b & b)) - b) - ((((b | b) + (b & b)) | ~ b) + (((b | b) + (b & b)) | ~ b))) - 2) | ((~ (e - 1) | e) - (~ (e - 1) & e))) << 1)) + 1)) + ((((- b - 1) | e) - ((- b - 1) & e)) | ((((((((b | b) + (b & b)) - b) - ((((b | b) + (b & b)) | ~ b) + (((b | b) + (b & b)) | ~ b))) - 2) ^ ~ ((~ (e - 1) | e) - (~ (e - 1) & e))) + (((((((b | b) + (b & b)) - b) - ((((b | b) + (b & b)) | ~ b) + (((b | b) + (b & b)) | ~ b))) - 2) | ((~ (e - 1) | e) - (~ (e - 1) & e))) << 1)) + 1)))) + 1",
                "attributes": {
                    "numOps": 190,
                    "nestedExprLevel": 121,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 44.21052631578947,
                        "mul": 0.0,
                        "bitwise": 55.78947368421052
                    },
                    "percentageDAGsCancel": 12.903225806451612
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((-e ^ e | (b + (~b | b * 2) * -2) - 2) * 2 + ((b + (~b | b * 2) * -2) - 2 ^ e - 1 ^ e) + 1 | ~(b ^ e)) * 2 + (b ^ e ^ (-e ^ e | (b + (~b | b * 2) * -2) - 2) * 2 + ((b + (~b | b * 2) * -2) - 2 ^ e - 1 ^ e) + 1) + 1",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 13,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 71.57894736842105,
                        "opsPercentages": {
                            "arithmetic": 40.74074074074074,
                            "mul": 20.37037037037037,
                            "bitwise": 38.88888888888889
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~((~(e - 1) | e) - (~(e - 1) & e) * 2 | b - ((b * 2 | ~b) * 2 + 2) * 2) + (~(~(e - 1) | e) - (~(e - 1) & e) ^ b - ((b * 2 | ~b) * 2 + 2)) + 1 ^ (~b | e) - (~b & e)) + ((~b | e) - (~b & e) | ((~(e - 1) | e) - (~(e - 1) & e) * 2 | b - ((b * 2 | ~b) * 2 + 2) * 2) + (~(~(e - 1) | e) - (~(e - 1) & e) ^ b - ((b * 2 | ~b) * 2 + 2)) + 1) * 2 + 1",
                    "attributes": {
                        "numOps": 82,
                        "nestedExprLevel": 22,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 56.84210526315789,
                        "opsPercentages": {
                            "arithmetic": 34.146341463414636,
                            "mul": 15.853658536585366,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(e ^ b ^ (-e ^ e | (b - (~b * 2 | b * 4)) - 2) * 2 - (-e ^ e ^ (b - (~b * 2 | b * 4)) - 2)) + ((-e ^ e | (b - (~b * 2 | b * 4)) - 2) * 2 - (-e ^ e ^ (b - (~b * 2 | b * 4)) - 2) | ~(e ^ b)) * 2 + 1",
                    "attributes": {
                        "numOps": 48,
                        "nestedExprLevel": 12,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 74.73684210526315,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 22.916666666666664,
                            "bitwise": 43.75
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((0xffffffff - b | e) - (0xffffffff - b & e) ^ ((b - ((b * 2 | b ^ 0xffffffff) + (b * 2 | b ^ 0xffffffff))) - 2 ^ (e - 1 ^ 0xffffffff | e) - ((e - 1 ^ 0xffffffff) & e) ^ 0xffffffff) + ((b - ((b * 2 | b ^ 0xffffffff) + (b * 2 | b ^ 0xffffffff))) - 2 | (e - 1 ^ 0xffffffff | e) - ((e - 1 ^ 0xffffffff) & e)) * 2 + 1 ^ 0xffffffff) + ((0xffffffff - b | e) - (0xffffffff - b & e) | ((b - ((b * 2 | b ^ 0xffffffff) + (b * 2 | b ^ 0xffffffff))) - 2 ^ (e - 1 ^ 0xffffffff | e) - ((e - 1 ^ 0xffffffff) & e) ^ 0xffffffff) + ((b - ((b * 2 | b ^ 0xffffffff) + (b * 2 | b ^ 0xffffffff))) - 2 | (e - 1 ^ 0xffffffff | e) - ((e - 1 ^ 0xffffffff) & e)) * 2 + 1) + ((0xffffffff - b | e) - (0xffffffff - b & e) | ((b - ((b * 2 | b ^ 0xffffffff) + (b * 2 | b ^ 0xffffffff))) - 2 ^ (e - 1 ^ 0xffffffff | e) - ((e - 1 ^ 0xffffffff) & e) ^ 0xffffffff) + ((b - ((b * 2 | b ^ 0xffffffff) + (b * 2 | b ^ 0xffffffff))) - 2 | (e - 1 ^ 0xffffffff | e) - ((e - 1 ^ 0xffffffff) & e)) * 2 + 1) + 1",
                    "attributes": {
                        "numOps": 136,
                        "nestedExprLevel": 38,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 28.421052631578945,
                        "opsPercentages": {
                            "arithmetic": 39.705882352941174,
                            "mul": 11.029411764705882,
                            "bitwise": 49.26470588235294
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((0xffffffff - b | e) - (0xffffffff - b & e) ^ ~(((b - ((b * 2 | ~b) + (b * 2 | ~b))) - 2 ^ ~((~(e - 1) | e) - (~(e - 1) & e))) + 1 + ((b - ((b * 2 | ~b) + (b * 2 | ~b))) - 2 | (~(e - 1) | e) - (~(e - 1) & e)) * 2)) + 1 + ((0xffffffff - b | e) - (0xffffffff - b & e) | ((b - ((b * 2 | ~b) + (b * 2 | ~b))) - 2 ^ ~((~(e - 1) | e) - (~(e - 1) & e))) + 1 + ((b - ((b * 2 | ~b) + (b * 2 | ~b))) - 2 | (~(e - 1) | e) - (~(e - 1) & e)) * 2) + ((0xffffffff - b | e) - (0xffffffff - b & e) | ((b - ((b * 2 | ~b) + (b * 2 | ~b))) - 2 ^ ~((~(e - 1) | e) - (~(e - 1) & e))) + 1 + ((b - ((b * 2 | ~b) + (b * 2 | ~b))) - 2 | (~(e - 1) | e) - (~(e - 1) & e)) * 2)",
                    "attributes": {
                        "numOps": 136,
                        "nestedExprLevel": 48,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 28.421052631578945,
                        "opsPercentages": {
                            "arithmetic": 39.705882352941174,
                            "mul": 11.029411764705882,
                            "bitwise": 49.26470588235294
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(b ^ e ^ (e - 1 ^ e ^ (b + (b * 2 | ~b) * -2) - 2) + 1 + (-e ^ e | (b + (b * 2 | ~b) * -2) - 2) * 2) + 1 + (~(b ^ e) | (e - 1 ^ e ^ (b + (b * 2 | ~b) * -2) - 2) + 1 + (-e ^ e | (b + (b * 2 | ~b) * -2) - 2) * 2) * 2",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 12,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 71.57894736842105,
                        "opsPercentages": {
                            "arithmetic": 40.74074074074074,
                            "mul": 20.37037037037037,
                            "bitwise": 38.88888888888889
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 221,
            "gt": {
                "expr": "(((-(-((e+a)+(a^a))))|(a^b)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 0.0,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "((~ (~ (((((((e ^ ~ a) + ((e | a) + (e | a))) + 1) ^ ~ ((a | a) - (a & a))) + (((((e ^ ~ a) + ((e | a) + (e | a))) + 1) | ((a | a) - (a & a))) + ((((e ^ ~ a) + ((e | a) + (e | a))) + 1) | ((a | a) - (a & a))))) + 1) - 1) - 1) + ((a | b) - (a & b))) + 1) + ((- (~ (~ (((((((e ^ ~ a) + ((e | a) + (e | a))) + 1) ^ ~ ((a | a) - (a & a))) + (((((e ^ ~ a) + ((e | a) + (e | a))) + 1) | ((a | a) - (a & a))) + ((((e ^ ~ a) + ((e | a) + (e | a))) + 1) | ((a | a) - (a & a))))) + 1) - 1) - 1)) - 1) | (- ((a | b) - (a & b)) - 1))",
                "attributes": {
                    "numOps": 96,
                    "nestedExprLevel": 63,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 44.79166666666667,
                        "mul": 0.0,
                        "bitwise": 55.208333333333336
                    },
                    "percentageDAGsCancel": 13.333333333333334
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(a ^ b) | -(((e | a) * 2 + ~(a ^ e) + 1) * 2 + (a ^ e) + (e | a) * -2 + -1) - 2) + (a ^ b) + ((e | a) * 2 + ~(a ^ e) + 1) * 2 + (a ^ e) + (e | a) * -2 + 1",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 9,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 61.458333333333336,
                        "opsPercentages": {
                            "arithmetic": 45.94594594594595,
                            "mul": 16.216216216216218,
                            "bitwise": 37.83783783783784
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((((a & b) - (a | b)) - 1 | ~(~((~a ^ e) + (a | e) * 2 + 1) + ((~a ^ e) + (a | e) * 2 + 1) * 2) - 1) + ~~(~((~a ^ e) + (a | e) * 2 + 1) + ((~a ^ e) + (a | e) * 2 + 1) * 2) - 1) - (a & b)) + 1 + (a | b)",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 17,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 52.083333333333336,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 13.043478260869565,
                            "bitwise": 47.82608695652174
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(e | a) * 2 - (e ^ a) | b ^ a",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 93.75,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((e ^ a ^ 0xffffffff) + (e | a) + (e | a) + 1 ^ 0xffffffff) + (e ^ a ^ 0xffffffff) + (e | a) + (e | a) + (e ^ a ^ 0xffffffff) + (e | a) + (e | a) + 2 ^ 0xffffffff) - 1 ^ 0xffffffff) + ((a | b) - (a & b)) + 1 + (0xffffffff - ((((e ^ a ^ 0xffffffff) + (e | a) + (e | a) + 1 ^ 0xffffffff) + (e ^ a ^ 0xffffffff) + (e | a) + (e | a) + (e ^ a ^ 0xffffffff) + (e | a) + (e | a) + 2 ^ 0xffffffff) - 1 ^ 0xffffffff) | 0xffffffff - ((a | b) - (a & b)))",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 20,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 33.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 45.3125,
                            "mul": 0.0,
                            "bitwise": 54.6875
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~(~(((~a ^ e) + 1 + (e | a) + (e | a) ^ 0xffffffff) + (~a ^ e) + (e | a) + (e | a) + (~a ^ e) + 2 + (e | a) + (e | a)) - 1) + ((a | b) - (a & b)) + 1 + (0xffffffff - ~(~(((~a ^ e) + 1 + (e | a) + (e | a) ^ 0xffffffff) + (~a ^ e) + (e | a) + (e | a) + (~a ^ e) + 2 + (e | a) + (e | a)) - 1) | 0xffffffff - ((a | b) - (a & b)))",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 20,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 33.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 45.3125,
                            "mul": 0.0,
                            "bitwise": 54.6875
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(e | a) * 2 - (e ^ a) + 1 + (a ^ b) + (-((e | a) * 2 - (e ^ a) + -1) - 2 | ~(a ^ b))",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 80.20833333333334,
                        "opsPercentages": {
                            "arithmetic": 47.368421052631575,
                            "mul": 10.526315789473683,
                            "bitwise": 42.10526315789473
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 222,
            "gt": {
                "expr": "(((~(c|b))*((c|b)^(b*(b-c)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 14.285714285714285,
                        "mul": 28.57142857142857,
                        "bitwise": 57.14285714285714
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((- ((c & ~ b) + b) - 1) & ((((c & ~ b) + b) | ((b & ((b & ~ c) - (~ b & c))) * (b | ((b & ~ c) - (~ b & c))) + (b & ~ ((b & ~ c) - (~ b & c))) * (~ b & ((b & ~ c) - (~ b & c))))) - (((c & ~ b) + b) & ((b & ((b & ~ c) - (~ b & c))) * (b | ((b & ~ c) - (~ b & c))) + (b & ~ ((b & ~ c) - (~ b & c))) * (~ b & ((b & ~ c) - (~ b & c))))))) * ((- ((c & ~ b) + b) - 1) | ((((c & ~ b) + b) | ((b & ((b & ~ c) - (~ b & c))) * (b | ((b & ~ c) - (~ b & c))) + (b & ~ ((b & ~ c) - (~ b & c))) * (~ b & ((b & ~ c) - (~ b & c))))) - (((c & ~ b) + b) & ((b & ((b & ~ c) - (~ b & c))) * (b | ((b & ~ c) - (~ b & c))) + (b & ~ ((b & ~ c) - (~ b & c))) * (~ b & ((b & ~ c) - (~ b & c))))))) + ((- ((c & ~ b) + b) - 1) & ~ ((((c & ~ b) + b) | ((b & ((b & ~ c) - (~ b & c))) * (b | ((b & ~ c) - (~ b & c))) + (b & ~ ((b & ~ c) - (~ b & c))) * (~ b & ((b & ~ c) - (~ b & c))))) - (((c & ~ b) + b) & ((b & ((b & ~ c) - (~ b & c))) * (b | ((b & ~ c) - (~ b & c))) + (b & ~ ((b & ~ c) - (~ b & c))) * (~ b & ((b & ~ c) - (~ b & c))))))) * (~ (- ((c & ~ b) + b) - 1) & ((((c & ~ b) + b) | ((b & ((b & ~ c) - (~ b & c))) * (b | ((b & ~ c) - (~ b & c))) + (b & ~ ((b & ~ c) - (~ b & c))) * (~ b & ((b & ~ c) - (~ b & c))))) - (((c & ~ b) + b) & ((b & ((b & ~ c) - (~ b & c))) * (b | ((b & ~ c) - (~ b & c))) + (b & ~ ((b & ~ c) - (~ b & c))) * (~ b & ((b & ~ c) - (~ b & c)))))))",
                "attributes": {
                    "numOps": 297,
                    "nestedExprLevel": 137,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 21.885521885521886,
                        "mul": 6.0606060606060606,
                        "bitwise": 72.05387205387206
                    },
                    "percentageDAGsCancel": 6.896551724137931
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(b + (~b & c) & ~((c + ~b & b) * ((~c & b) - (~b & c) & ~b) + ((~c & b) - (~b & c) & b) * ((~c & b) - (~b & c) | b))) * ~((c + ~b & b) * ((~c & b) - (~b & c) & ~b) + ((~c & b) - (~b & c) & b) * ((~c & b) - (~b & c) | b) | (~b & c) + b) + (~(b + (~b & c)) & ((c + ~b & b) * ((~c & b) - (~b & c) & ~b) + ((~c & b) - (~b & c) & b) * ((~c & b) - (~b & c) | b) ^ (~b & c) + b)) * ((c + ~b & b) * ((~c & b) - (~b & c) & ~b) + ((~c & b) - (~b & c) & b) * ((~c & b) - (~b & c) | b) ^ (~b & c) + b | ~(b + (~b & c)))",
                    "attributes": {
                        "numOps": 131,
                        "nestedExprLevel": 34,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 55.892255892255896,
                        "opsPercentages": {
                            "arithmetic": 20.610687022900763,
                            "mul": 7.633587786259542,
                            "bitwise": 71.7557251908397
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~b & c + b | ((~c & b) - ~b & c | b) * ((~c & b) - ~b & c & b) + (~(~c & b) - ~b & c & b) * ((~c & b) - ~b & c & ~b)) - (~b & c + b & ((~c & b) - ~b & c | b) * ((~c & b) - ~b & c & b) + (~(~c & b) - ~b & c & b) * ((~c & b) - ~b & c & ~b)) & ~~b & c - b) * (~~~b & c - b & (~b & c + b | ((~c & b) - ~b & c | b) * ((~c & b) - ~b & c & b) + (~(~c & b) - ~b & c & b) * ((~c & b) - ~b & c & ~b)) - (~b & c + b & ((~c & b) - ~b & c | b) * ((~c & b) - ~b & c & b) + (~(~c & b) - ~b & c & b) * ((~c & b) - ~b & c & ~b))) + (~~b & c - b | (~b & c + b | ((~c & b) - ~b & c | b) * ((~c & b) - ~b & c & b) + (~(~c & b) - ~b & c & b) * ((~c & b) - ~b & c & ~b)) - (~b & c + b & ((~c & b) - ~b & c | b) * ((~c & b) - ~b & c & b) + (~(~c & b) - ~b & c & b) * ((~c & b) - ~b & c & ~b))) * (~~b & c - b & (~b & c + b | ((~c & b) - ~b & c | b) * ((~c & b) - ~b & c & b) + (~(~c & b) - ~b & c & b) * ((~c & b) - ~b & c & ~b)) - (~b & c + b & ((~c & b) - ~b & c | b) * ((~c & b) - ~b & c & b) + (~(~c & b) - ~b & c & b) * ((~c & b) - ~b & c & ~b)))",
                    "attributes": {
                        "numOps": 293,
                        "nestedExprLevel": 46,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 1.3468013468013467,
                        "opsPercentages": {
                            "arithmetic": 19.453924914675767,
                            "mul": 6.143344709897611,
                            "bitwise": 74.40273037542661
                        },
                        "percentageDAGsCancel": 22.857142857142858
                    }
                },
                "clang_O3": {
                    "expr": "((~b & (~c & b) - ~b & c) * (~(~c & b) - ~b & c & b) + ((~c & b) - ~b & c | b) * ((~c & b) - ~b & c & b) ^ ~b & c + b & ~b & c + b) * (~(~b & (~c & b) - ~b & c) * (~(~c & b) - ~b & c & b) + ((~c & b) - ~b & c | b) * ((~c & b) - ~b & c & b) ^ ~b & c + b & ~~b & c + b) + ((~b & (~c & b) - ~b & c) * (~(~c & b) - ~b & c & b) + ((~c & b) - ~b & c | b) * ((~c & b) - ~b & c & b) ^ ~b & c + b | ~~b & c + b) * ((~b & (~c & b) - ~b & c) * (~(~c & b) - ~b & c & b) + ((~c & b) - ~b & c | b) * ((~c & b) - ~b & c & b) & ~~b & c + b)",
                    "attributes": {
                        "numOps": 151,
                        "nestedExprLevel": 22,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 49.158249158249156,
                        "opsPercentages": {
                            "arithmetic": 18.543046357615893,
                            "mul": 6.622516556291391,
                            "bitwise": 74.83443708609272
                        },
                        "percentageDAGsCancel": 27.77777777777778
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - ((c & (b ^ 0xffffffff)) + b) & ((c & (b ^ 0xffffffff)) + b | (b & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) * (b | (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + (b & ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c) ^ 0xffffffff )) * ((b ^ 0xffffffff) & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c))) - ((c & (b ^ 0xffffffff)) + b & (b & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) * (b | (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + (b & ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c) ^ 0xffffffff )) * ((b ^ 0xffffffff) & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)))) * (0xffffffff - ((c & (b ^ 0xffffffff)) + b) | ((c & (b ^ 0xffffffff)) + b | (b & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) * (b | (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + (b & ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c) ^ 0xffffffff )) * ((b ^ 0xffffffff) & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c))) - ((c & (b ^ 0xffffffff)) + b & (b & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) * (b | (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + (b & ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c) ^ 0xffffffff )) * ((b ^ 0xffffffff) & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)))) + (0xffffffff - ((c & (b ^ 0xffffffff)) + b) & (((c & (b ^ 0xffffffff)) + b | (b & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) * (b | (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + (b & ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c) ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c))) - ((c & (b ^ 0xffffffff)) + b & (b & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) * (b | (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + (b & ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c) ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c))) ^ 0xffffffff)) * ((0xffffffff - ((c & (b ^ 0xffffffff)) + b) ^ 0xffffffff) & ((c & (b ^ 0xffffffff)) + b | (b & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) * (b | (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + (b & ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c) ^ 0xffffffff )) * ((b ^ 0xffffffff) & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c))) - ((c & (b ^ 0xffffffff)) + b & (b & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) * (b | (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + (b & ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c) ^ 0xffffffff )) * ((b ^ 0xffffffff) & (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c))))",
                    "attributes": {
                        "numOps": 293,
                        "nestedExprLevel": 136,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 1.3468013468013467,
                        "opsPercentages": {
                            "arithmetic": 20.819112627986346,
                            "mul": 6.143344709897611,
                            "bitwise": 73.03754266211604
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - ((~b & c) + b) & ((~b & c) + b | ((~c & b) - (~b & c) & b) * ((~c & b) - (~b & c) | b) + (~((~c & b) - (~b & c)) & b) * (~b & (~c & b) - (~b & c))) - ((~b & c) + b & ((~c & b) - (~b & c) & b) * ((~c & b) - (~b & c) | b) + (~((~c & b) - (~b & c)) & b) * (~b & (~c & b) - (~b & c)))) * (0xffffffff - ((~b & c) + b) | ((~b & c) + b | ((~c & b) - (~b & c) & b) * ((~c & b) - (~b & c) | b) + (~((~c & b) - (~b & c)) & b) * (~b & (~c & b) - (~b & c))) - ((~b & c) + b & ((~c & b) - (~b & c) & b) * ((~c & b) - (~b & c) | b) + (~((~c & b) - (~b & c)) & b) * (~b & (~c & b) - (~b & c)))) + (0xffffffff - ((~b & c) + b) & ~(((~b & c) + b | ((~c & b) - (~b & c) & b) * ((~c & b) - (~b & c) | b) + (~((~c & b) - (~b & c)) & b) * (~b & (~c & b) - (~b & c))) - ((~b & c) + b & ((~c & b) - (~b & c) & b) * ((~c & b) - (~b & c) | b) + (~((~c & b) - (~b & c)) & b) * (~b & (~c & b) - (~b & c))))) * (~(0xffffffff - ((~b & c) + b)) & ((~b & c) + b | ((~c & b) - (~b & c) & b) * ((~c & b) - (~b & c) | b) + (~((~c & b) - (~b & c)) & b) * (~b & (~c & b) - (~b & c))) - ((~b & c) + b & ((~c & b) - (~b & c) & b) * ((~c & b) - (~b & c) | b) + (~((~c & b) - (~b & c)) & b) * (~b & (~c & b) - (~b & c))))",
                    "attributes": {
                        "numOps": 293,
                        "nestedExprLevel": 91,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 1.3468013468013467,
                        "opsPercentages": {
                            "arithmetic": 20.819112627986346,
                            "mul": 6.143344709897611,
                            "bitwise": 73.03754266211604
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "gcc_O3": {
                    "expr": "~((~b & c) + b | (c + ~b & b) * (~b & (~c & b) - (~b & c)) + ((~c & b) - (~b & c) | b) * ((~c & b) - (~b & c) & b)) * (~(c + ~b & b) * (~b & (~c & b) - (~b & c)) + ((~c & b) - (~b & c) | b) * ((~c & b) - (~b & c) & b) & (~b & c) + b) + (~(~b & c) + b | (~b & c) + b ^ (c + ~b & b) * (~b & (~c & b) - (~b & c)) + ((~c & b) - (~b & c) | b) * ((~c & b) - (~b & c) & b)) * (~(~b & c) + b & ((~b & c) + b ^ (c + ~b & b) * (~b & (~c & b) - (~b & c)) + ((~c & b) - (~b & c) | b) * ((~c & b) - (~b & c) & b)))",
                    "attributes": {
                        "numOps": 131,
                        "nestedExprLevel": 33,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 55.892255892255896,
                        "opsPercentages": {
                            "arithmetic": 20.610687022900763,
                            "mul": 7.633587786259542,
                            "bitwise": 71.7557251908397
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                }
            }
        },
        {
            "num": 223,
            "gt": {
                "expr": "(((((~b)-b)^b)+((d|b)&(-b))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 0.0,
                        "bitwise": 57.14285714285714
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((- b - 1) + ~ b) + 1) | b) - ((((- b - 1) + ~ b) + 1) & b)) | (((~ (((d + b) + 1) + ((- d - 1) | (- b - 1))) | ~ (b - 1)) + (((d + b) + 1) + ((- d - 1) | (- b - 1)))) + 1)) + ((((((- b - 1) + ~ b) + 1) | b) - ((((- b - 1) + ~ b) + 1) & b)) & (((~ (((d + b) + 1) + ((- d - 1) | (- b - 1))) | ~ (b - 1)) + (((d + b) + 1) + ((- d - 1) | (- b - 1)))) + 1))",
                "attributes": {
                    "numOps": 73,
                    "nestedExprLevel": 39,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 72.6027397260274,
                        "mul": 0.0,
                        "bitwise": 27.397260273972602
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(d & b) + b + d + ((d & b) - (b + d + 1) | -b) + 2 + (~b * 2 + 1 ^ b)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 4,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 76.71232876712328,
                        "opsPercentages": {
                            "arithmetic": 58.82352941176471,
                            "mul": 5.88235294117647,
                            "bitwise": 35.294117647058826
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~b - b | b) - (~b - b & b) | d + 2 + ~(d + 1 + ~(b & d) + b & b - 1) + ~(b & d) + b) + ((~b - b | b) - (~b - b & b) & d + 2 + ~(d + 1 + ~(b & d) + b & b - 1) + ~(b & d) + b)",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 9,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 38.35616438356164,
                        "opsPercentages": {
                            "arithmetic": 51.11111111111111,
                            "mul": 0.0,
                            "bitwise": 48.888888888888886
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~b - b ^ b) + (d | b) + (-b | ~(d | b)) + 1",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 84.93150684931507,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 0.0,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b ^ 0xffffffff) - b | b) - ((b ^ 0xffffffff) - b & b) | (d + b + 1 + (0xffffffff - d | 0xffffffff - b) ^ 0xffffffff | b - 1 ^ 0xffffffff) + d + b + (0xffffffff - d | 0xffffffff - b) + 2) + (((b ^ 0xffffffff) - b | b) - ((b ^ 0xffffffff) - b & b) & (d + b + 1 + (0xffffffff - d | 0xffffffff - b) ^ 0xffffffff | b - 1 ^ 0xffffffff) + d + b + (0xffffffff - d | 0xffffffff - b) + 2)",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 11,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 30.136986301369863,
                        "opsPercentages": {
                            "arithmetic": 60.78431372549019,
                            "mul": 0.0,
                            "bitwise": 39.21568627450981
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~b - b | b) - (~b - b & b) | (~(d + b + 1 + (0xffffffff - d | 0xffffffff - b)) | ~(b - 1)) + d + b + 2 + (0xffffffff - d | 0xffffffff - b)) + ((~b - b | b) - (~b - b & b) & (~(d + b + 1 + (0xffffffff - d | 0xffffffff - b)) | ~(b - 1)) + d + b + 2 + (0xffffffff - d | 0xffffffff - b))",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 12,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 30.136986301369863,
                        "opsPercentages": {
                            "arithmetic": 60.78431372549019,
                            "mul": 0.0,
                            "bitwise": 39.21568627450981
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(b + 1 + d - (b & d)) + ((b & d) - b + 1 + d | -b) + (~b * 2 + 1 ^ b)",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 4,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 78.08219178082192,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 6.25,
                            "bitwise": 31.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 224,
            "gt": {
                "expr": "((~((e^((e-a)-e))&a)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 7,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "- (((~ (((e - ((((e & ~ a) - (~ e & a)) & ~ e) - (~ ((e & ~ a) - (~ e & a)) & e))) - ((e | ~ ((((e & ~ a) - (~ e & a)) & ~ e) - (~ ((e & ~ a) - (~ e & a)) & e))) << 1)) - 2) | a) + (((e - ((((e & ~ a) - (~ e & a)) & ~ e) - (~ ((e & ~ a) - (~ e & a)) & e))) - ((e | ~ ((((e & ~ a) - (~ e & a)) & ~ e) - (~ ((e & ~ a) - (~ e & a)) & e))) << 1)) - 2)) + 1) - 1",
                "attributes": {
                    "numOps": 78,
                    "nestedExprLevel": 42,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 28.205128205128204,
                        "mul": 0.0,
                        "bitwise": 71.7948717948718
                    },
                    "percentageDAGsCancel": 4.761904761904762
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-2 - (((e + ~e + a | e) * 2 + (((~a & e) - (~e & a) & ~e) - (a + ~e & e)) + ~e + 2 | a) + (e - (((~a & e) - (~e & a) & ~e) - (a + ~e & e))) + (e + ~e + a | e) * -2 + -2)",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 11,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 42.30769230769231,
                        "opsPercentages": {
                            "arithmetic": 46.666666666666664,
                            "mul": 4.444444444444445,
                            "bitwise": 48.888888888888886
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "msvc_O1": {
                    "expr": "(((~((~a & e) - (~e & a) & ~e - ~(~a & e) - (~e & a) & e) | e * 2 - (((~((~a & e) - (~e & a) & ~e - ~(~a & e) - (~e & a) & e) | e * 2 - ~(~a & e) - (~e & a) & e) - e) + 1 + (~a & e) - (~e & a) & ~e | a)) - ~(~a & e) - (~e & a) & e) - e) + (~a & e) - (~e & a) & ~e",
                    "attributes": {
                        "numOps": 73,
                        "nestedExprLevel": 17,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 6.41025641025641,
                        "opsPercentages": {
                            "arithmetic": 24.65753424657534,
                            "mul": 2.73972602739726,
                            "bitwise": 72.6027397260274
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "clang_O3": {
                    "expr": "-((1 - (e - (~e & (~a & e) - (~e & a)) - (~(~a & e) - (~e & a) & e)) + (~(~e & (~a & e) - (~e & a)) - (~(~a & e) - (~e & a) & e) | e) * -2 | a) + (e - (~e & (~a & e) - (~e & a)) - (~(~a & e) - (~e & a) & e)) + (~(~e & (~a & e) - (~e & a)) - (~(~a & e) - (~e & a) & e) | e) * -2)",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 23,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 2.564102564102564,
                        "opsPercentages": {
                            "arithmetic": 27.631578947368425,
                            "mul": 2.631578947368421,
                            "bitwise": 69.73684210526315
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((((e - (((e & (a ^ 0xffffffff)) - ((e ^ 0xffffffff) & a) & (e ^ 0xffffffff)) - (((e & (a ^ 0xffffffff)) - ((e ^ 0xffffffff) & a) ^ 0xffffffff) & e))) + (e | ((e & (a ^ 0xffffffff)) - ((e ^ 0xffffffff) & a) & (e ^ 0xffffffff)) - (((e & (a ^ 0xffffffff)) - ((e ^ 0xffffffff) & a) ^ 0xffffffff ) & e) ^ 0xffffffff) * -2) - 2 ^ 0xffffffff | a) + (e - (((e & (a ^ 0xffffffff)) - ((e ^ 0xffffffff) & a) & (e ^ 0xffffffff)) - (((e & (a ^ 0xffffffff)) - ((e ^ 0xffffffff) & a) ^ 0xffffffff) & e))) + (e | ((e & (a ^ 0xffffffff)) - ((e ^ 0xffffffff) & a) & (e ^ 0xffffffff)) - (((e & (a ^ 0xffffffff)) - ((e ^ 0xffffffff) & a) ^ 0xffffffff) & e) ^ 0xffffffff) * -2 + -1)",
                    "attributes": {
                        "numOps": 80,
                        "nestedExprLevel": 43,
                        "numDAGs": 23,
                        "percentDecreaseByOps": -2.564102564102564,
                        "opsPercentages": {
                            "arithmetic": 30.0,
                            "mul": 2.5,
                            "bitwise": 67.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (((~(((e - (((~a & e) - (~e & a) & ~e) - (~((~a & e) - (~e & a)) & e))) + (~(((~a & e) - (~e & a) & ~e) - (~((~a & e) - (~e & a)) & e)) | e) * -2) - 2) | a) - 1) + (e - (((~a & e) - (~e & a) & ~e) - (~((~a & e) - (~e & a)) & e))) + (~(((~a & e) - (~e & a) & ~e) - (~((~a & e) - (~e & a)) & e)) | e) * -2)",
                    "attributes": {
                        "numOps": 79,
                        "nestedExprLevel": 34,
                        "numDAGs": 23,
                        "percentDecreaseByOps": -1.282051282051282,
                        "opsPercentages": {
                            "arithmetic": 29.11392405063291,
                            "mul": 2.5316455696202533,
                            "bitwise": 68.35443037974683
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~e + a + e | e) * 2 - (a | (~e + a + e | e) * 2 + 2 + ~e + ((~a & e) - (~e & a) & ~e) - (~e + a & e))) - (e - ((~a & e) - (~e & a) & ~e) - (~e + a & e))",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 9,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 48.717948717948715,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 5.0,
                            "bitwise": 55.00000000000001
                        },
                        "percentageDAGsCancel": 5.0
                    }
                }
            }
        },
        {
            "num": 225,
            "gt": {
                "expr": "((((-a)|(~e))&(-a)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ ((~ (a - 1) & ~ (- e - 1)) + (- e - 1)) | (~ a + 1)) + ((~ (a - 1) & ~ (- e - 1)) + (- e - 1))) + 1",
                "attributes": {
                    "numOps": 24,
                    "nestedExprLevel": 11,
                    "numDAGs": 13,
                    "opsPercentages": {
                        "arithmetic": 62.5,
                        "mul": 0.0,
                        "bitwise": 37.5
                    },
                    "percentageDAGsCancel": 7.6923076923076925
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~e + (-a & e) + (a - 1 & e | -a) + 1",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 2,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 58.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((e - (-a & e) | -a) - e) + (-a & e)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 62.5,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "clang_O3": {
                    "expr": "(-a & e - e) + (e - -a & e | -a)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 62.5,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 28.57142857142857
                    }
                },
                "clang_default": {
                    "expr": "(((a - 1 ^ 0xffffffff) & (0xffffffff - e ^ 0xffffffff)) + (-1 - e) ^ 0xffffffff | (a ^ 0xffffffff) + 1) + (((a - 1 ^ 0xffffffff) & (0xffffffff - e ^ 0xffffffff)) - e)",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 8,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 20.833333333333336,
                        "opsPercentages": {
                            "arithmetic": 52.63157894736842,
                            "mul": 0.0,
                            "bitwise": 47.368421052631575
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "msvc_default": {
                    "expr": "(~(((~(a - 1) & ~(0xffffffff - e)) - 1) - e) | ~a + 1) + ((~(a - 1) & ~(0xffffffff - e)) - e)",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 9,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 25.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(-a & e) + ((a - 1 & e | -a) - e)",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 0.0,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 226,
            "gt": {
                "expr": "((((d-d)-(-d))*(~d)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 20.0,
                        "bitwise": 20.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "((((((d & ~ d) - (~ d & d)) & ~ (~ (d - 1))) << 1) - (((d & ~ d) - (~ d & d)) ^ ~ (d - 1))) & (- d - 1)) * ((((((d & ~ d) - (~ d & d)) & ~ (~ (d - 1))) << 1) - (((d & ~ d) - (~ d & d)) ^ ~ (d - 1))) | (- d - 1)) + ((((((d & ~ d) - (~ d & d)) & ~ (~ (d - 1))) << 1) - (((d & ~ d) - (~ d & d)) ^ ~ (d - 1))) & ~ (- d - 1)) * (~ (((((d & ~ d) - (~ d & d)) & ~ (~ (d - 1))) << 1) - (((d & ~ d) - (~ d & d)) ^ ~ (d - 1))) & (- d - 1))",
                "attributes": {
                    "numOps": 93,
                    "nestedExprLevel": 45,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 31.182795698924732,
                        "mul": 2.1505376344086025,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 45.45454545454545
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~d * d",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 97.84946236559139,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 50.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~d * d",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 97.84946236559139,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 50.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~d * d",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 97.84946236559139,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 50.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d) & d - 1) * 2 - ((d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d) ^ d - 1 ^ 0xffffffff) & 0xffffffff - d) * (((d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d) & d - 1) * 2 - ((d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d) ^ d - 1 ^ 0xffffffff) | 0xffffffff - d) + (((d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d) & d - 1) * 2 - ((d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d) ^ d - 1 ^ 0xffffffff) & (0xffffffff - d ^ 0xffffffff)) * ((((d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d) & d - 1) * 2 - ((d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d) ^ d - 1 ^ 0xffffffff) ^ 0xffffffff) & 0xffffffff - d)",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 32,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 12.903225806451612,
                        "opsPercentages": {
                            "arithmetic": 30.864197530864196,
                            "mul": 7.4074074074074066,
                            "bitwise": 61.72839506172839
                        },
                        "percentageDAGsCancel": 45.0
                    }
                },
                "msvc_default": {
                    "expr": "(-~(d - 1) & 0xffffffff - d) * (-~(d - 1) | 0xffffffff - d) + (-~(d - 1) & ~(0xffffffff - d)) * (~-~(d - 1) & 0xffffffff - d)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 7,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 73.11827956989248,
                        "opsPercentages": {
                            "arithmetic": 52.0,
                            "mul": 8.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 30.76923076923077
                    }
                },
                "gcc_O3": {
                    "expr": "~d * d",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 97.84946236559139,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 50.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 227,
            "gt": {
                "expr": "((-((d+((d|d)&a))-((b^b)*b))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 14.285714285714285,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 57.14285714285714
                }
            },
            "mba": {
                "expr": "~ ((((d ^ (((~ ((d & ~ d) + d) | a) + ((d & ~ d) + d)) + 1)) + ((d & (((~ ((d & ~ d) + d) | a) + ((d & ~ d) + d)) + 1)) << 1)) + ~ (((((b - b) - ((b | ~ b) << 1)) - 2) & b) * ((((b - b) - ((b | ~ b) << 1)) - 2) | b) + ((((b - b) - ((b | ~ b) << 1)) - 2) & ~ b) * (~ (((b - b) - ((b | ~ b) << 1)) - 2) & b))) + 1) + 1",
                "attributes": {
                    "numOps": 62,
                    "nestedExprLevel": 35,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 40.32258064516129,
                        "mul": 3.225806451612903,
                        "bitwise": 56.451612903225815
                    },
                    "percentageDAGsCancel": 46.666666666666664
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-((d + (~d | a) + 1 & d) * 2 + (d + (~d | a) + 1 ^ d))",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 5,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 79.03225806451613,
                        "opsPercentages": {
                            "arithmetic": 46.15384615384615,
                            "mul": 7.6923076923076925,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "-(((~d | a) + d * 2 + 2 & d * 2) + ((~d | a) + d + 1 ^ d))",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 77.41935483870968,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 14.285714285714285,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-((d + (~d | a) + 1 ^ d) + (d + (~d | a) + 1 & d) * 2)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 5,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 79.03225806451613,
                        "opsPercentages": {
                            "arithmetic": 46.15384615384615,
                            "mul": 7.6923076923076925,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_default": {
                    "expr": "((d ^ ((d & (d ^ 0xffffffff)) + d ^ 0xffffffff | a) + (d & (d ^ 0xffffffff)) + d + 1) + (d & ((d & (d ^ 0xffffffff)) + d ^ 0xffffffff | a) + (d & (d ^ 0xffffffff)) + d + 1) * 2 + (((b | b ^ 0xffffffff) * -2 - 2 & b) * ((b | b ^ 0xffffffff) * -2 - 2 | b) + ((b | b ^ 0xffffffff) * -2 - 2 & (b ^ 0xffffffff)) * (((b | b ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) & b) ^ 0xffffffff) + 1 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 58,
                        "nestedExprLevel": 18,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 6.451612903225806,
                        "opsPercentages": {
                            "arithmetic": 36.206896551724135,
                            "mul": 12.068965517241379,
                            "bitwise": 51.724137931034484
                        },
                        "percentageDAGsCancel": 26.666666666666668
                    }
                },
                "msvc_default": {
                    "expr": "~(((~d | a) + d + 1 ^ d) + ((~d | a) + d + 1 & d) * 2) + 1",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 5,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 77.41935483870968,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 7.142857142857142,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-((d + 1 + (~d | a) ^ d) + (d + 1 + (~d | a) & d) * 2)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 5,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 79.03225806451613,
                        "opsPercentages": {
                            "arithmetic": 46.15384615384615,
                            "mul": 7.6923076923076925,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                }
            }
        },
        {
            "num": 228,
            "gt": {
                "expr": "((((~c)+c)*((-(-d))^(~(c&(c*d))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 22.22222222222222,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "((((- c - 1) ^ c) + (((- c - 1) & c) + ((- c - 1) & c))) & ((~ ((~ d + 1) - 1) | (- ((~ c | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - ~ c) - 1)) - (~ ((~ d + 1) - 1) & (- ((~ c | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - ~ c) - 1)))) * ((((- c - 1) ^ c) + (((- c - 1) & c) + ((- c - 1) & c))) | ((~ ((~ d + 1) - 1) | (- ((~ c | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - ~ c) - 1)) - (~ ((~ d + 1) - 1) & (- ((~ c | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - ~ c) - 1)))) + ((((- c - 1) ^ c) + (((- c - 1) & c) + ((- c - 1) & c))) & ~ ((~ ((~ d + 1) - 1) | (- ((~ c | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - ~ c) - 1)) - (~ ((~ d + 1) - 1) & (- ((~ c | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - ~ c) - 1)))) * (~ (((- c - 1) ^ c) + (((- c - 1) & c) + ((- c - 1) & c))) & ((~ ((~ d + 1) - 1) | (- ((~ c | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - ~ c) - 1)) - (~ ((~ d + 1) - 1) & (- ((~ c | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - ~ c) - 1))))",
                "attributes": {
                    "numOps": 217,
                    "nestedExprLevel": 93,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 39.1705069124424,
                        "mul": 8.294930875576037,
                        "bitwise": 52.53456221198156
                    },
                    "percentageDAGsCancel": 17.647058823529413
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~c & d) * (~d & c) + (c & d) * (c | d) & c ^ d) + 1",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 94.47004608294931,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_O1": {
                    "expr": "((~c - ((~d & c) * (~c & d) + (c | d) * (c & d) | ~c)) - 1 & d) - ((~c - ((~d & c) * (~c & d) + (c | d) * (c & d) | ~c)) - 1 | d)",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 11,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 85.71428571428571,
                        "opsPercentages": {
                            "arithmetic": 22.58064516129032,
                            "mul": 12.903225806451612,
                            "bitwise": 64.51612903225806
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_O3": {
                    "expr": "((~c & d) * (~d & c) + (d | c) * (d & c) & c ^ d) + 1",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 94.47004608294931,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((0xffffffff - c ^ c) + (0xffffffff - c & c) + (0xffffffff - c & c) & (d | 0xffffffff - ((c ^ 0xffffffff | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (c ^ 0xffffffff))) - (d & 0xffffffff - ((c ^ 0xffffffff | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (c ^ 0xffffffff)))) * ((0xffffffff - c ^ c) + (0xffffffff - c & c) + (0xffffffff - c & c) | (d | 0xffffffff - ((c ^ 0xffffffff | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (c ^ 0xffffffff))) - (d & 0xffffffff - ((c ^ 0xffffffff | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (c ^ 0xffffffff)))) + ((0xffffffff - c ^ c) + (0xffffffff - c & c) + (0xffffffff - c & c) & ((d | 0xffffffff - ((c ^ 0xffffffff | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (c ^ 0xffffffff))) - (d & 0xffffffff - ((c ^ 0xffffffff | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (c ^ 0xffffffff))) ^ 0xffffffff)) * (((0xffffffff - c ^ c) + (0xffffffff - c & c) + (0xffffffff - c & c) ^ 0xffffffff) & (d | 0xffffffff - ((c ^ 0xffffffff | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (c ^ 0xffffffff))) - (d & 0xffffffff - ((c ^ 0xffffffff | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (c ^ 0xffffffff))))",
                    "attributes": {
                        "numOps": 165,
                        "nestedExprLevel": 67,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 23.963133640552993,
                        "opsPercentages": {
                            "arithmetic": 29.6969696969697,
                            "mul": 10.909090909090908,
                            "bitwise": 59.3939393939394
                        },
                        "percentageDAGsCancel": 17.24137931034483
                    }
                },
                "msvc_default": {
                    "expr": "((0xffffffff - c ^ c) + (0xffffffff - c & c) + (0xffffffff - c & c) & (d | 0xffffffff - ((~c | (c & d) * (c | d) + (~d & c) * (~c & d)) - ~c)) - (d & 0xffffffff - ((~c | (c & d) * (c | d) + (~d & c) * (~c & d)) - ~c))) * ((0xffffffff - c ^ c) + (0xffffffff - c & c) + (0xffffffff - c & c) | (d | 0xffffffff - ((~c | (c & d) * (c | d) + (~d & c) * (~c & d)) - ~c)) - (d & 0xffffffff - ((~c | (c & d) * (c | d) + (~d & c) * (~c & d)) - ~c))) + ((0xffffffff - c ^ c) + (0xffffffff - c & c) + (0xffffffff - c & c) & ~((d | 0xffffffff - ((~c | (c & d) * (c | d) + (~d & c) * (~c & d)) - ~c)) - (d & 0xffffffff - ((~c | (c & d) * (c | d) + (~d & c) * (~c & d)) - ~c)))) * (~((0xffffffff - c ^ c) + (0xffffffff - c & c) + (0xffffffff - c & c)) & (d | 0xffffffff - ((~c | (c & d) * (c | d) + (~d & c) * (~c & d)) - ~c)) - (d & 0xffffffff - ((~c | (c & d) * (c | d) + (~d & c) * (~c & d)) - ~c)))",
                    "attributes": {
                        "numOps": 165,
                        "nestedExprLevel": 51,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 23.963133640552993,
                        "opsPercentages": {
                            "arithmetic": 29.6969696969697,
                            "mul": 10.909090909090908,
                            "bitwise": 59.3939393939394
                        },
                        "percentageDAGsCancel": 17.24137931034483
                    }
                },
                "gcc_O3": {
                    "expr": "((~d & c) * (~c & d) + (c & d) * (c | d) & c ^ d) + 1",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 94.47004608294931,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                }
            }
        },
        {
            "num": 229,
            "gt": {
                "expr": "((~((a+((a^a)&a))-(a*(a*((a*a)-a))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 33.33333333333333,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "~ ((a ^ (((~ ((a | a) - (a & a)) | a) + ((a | a) - (a & a))) + 1)) + ((a & (((~ ((a | a) - (a & a)) | a) + ((a | a) - (a & a))) + 1)) << 1)) + ((a & ((a & (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))) * (a | (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))) + (a & ~ (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))) * (~ a & (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))))) * (a | ((a & (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))) * (a | (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))) + (a & ~ (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))) * (~ a & (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))))) + (a & ~ ((a & (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))) * (a | (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))) + (a & ~ (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))) * (~ a & (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))))) * (~ a & ((a & (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))) * (a | (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))) + (a & ~ (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))) * (~ a & (((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & ~ a) << 1) - (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ a))))))",
                "attributes": {
                    "numOps": 439,
                    "nestedExprLevel": 204,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 14.350797266514807,
                        "mul": 16.856492027334852,
                        "bitwise": 68.79271070615034
                    },
                    "percentageDAGsCancel": 30.76923076923077
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~a & (~a & a * a) * 2 - (a * a ^ a)) * ((a * a ^ a) + ~((~a & a * a) * 2) & a) + ((~a & a * a) * 2 - (a * a ^ a) & a) * ((~a & a * a) * 2 - (a * a ^ a) | a) & ~a) * (~((~a & (~a & a * a) * 2 - (a * a ^ a)) * ((a * a ^ a) + ~((~a & a * a) * 2) & a) + ((~a & a * a) * 2 - (a * a ^ a) & a) * ((~a & a * a) * 2 - (a * a ^ a) | a)) & a) + ((~a & (~a & a * a) * 2 - (a * a ^ a)) * ((a * a ^ a) + ~((~a & a * a) * 2) & a) + ((~a & a * a) * 2 - (a * a ^ a) & a) * ((~a & a * a) * 2 - (a * a ^ a) | a) & a) * ((~a & (~a & a * a) * 2 - (a * a ^ a)) * ((a * a ^ a) + ~((~a & a * a) * 2) & a) + ((~a & a * a) * 2 - (a * a ^ a) & a) * ((~a & a * a) * 2 - (a * a ^ a) | a) | a) + ~a",
                    "attributes": {
                        "numOps": 159,
                        "nestedExprLevel": 38,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 63.781321184510254,
                        "opsPercentages": {
                            "arithmetic": 13.836477987421384,
                            "mul": 36.477987421383645,
                            "bitwise": 49.685534591194966
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "msvc_O1": {
                    "expr": "((~(a * a * 2 & ~a * 2) - (a * a ^ a) & a) * ((a * a * 2 & ~a * 2) - (a * a ^ a) & ~a) + ((a * a * 2 & ~a * 2) - (a * a ^ a) | a) * ((a * a * 2 & ~a * 2) - (a * a ^ a) & a) | a) * ((~(a * a * 2 & ~a * 2) - (a * a ^ a) & a) * ((a * a * 2 & ~a * 2) - (a * a ^ a) & ~a) + ((a * a * 2 & ~a * 2) - (a * a ^ a) | a) * ((a * a * 2 & ~a * 2) - (a * a ^ a) & a) & a) + (~(~(a * a * 2 & ~a * 2) - (a * a ^ a) & a) * ((a * a * 2 & ~a * 2) - (a * a ^ a) & ~a) + ((a * a * 2 & ~a * 2) - (a * a ^ a) | a) * ((a * a * 2 & ~a * 2) - (a * a ^ a) & a) & a) * ((~(a * a * 2 & ~a * 2) - (a * a ^ a) & a) * ((a * a * 2 & ~a * 2) - (a * a ^ a) & ~a) + ((a * a * 2 & ~a * 2) - (a * a ^ a) | a) * ((a * a * 2 & ~a * 2) - (a * a ^ a) & a) & ~a) + ~a",
                    "attributes": {
                        "numOps": 175,
                        "nestedExprLevel": 37,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 60.13667425968109,
                        "opsPercentages": {
                            "arithmetic": 12.571428571428573,
                            "mul": 42.285714285714285,
                            "bitwise": 45.14285714285714
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "clang_O3": {
                    "expr": "(((a * a & ~a) * 2 - (a * a ^ a) & ~a) * (~(a * a & ~a) * 2 - (a * a ^ a) & a) + ((a * a & ~a) * 2 - (a * a ^ a) | a) * ((a * a & ~a) * 2 - (a * a ^ a) & a) & ~a) * (~((a * a & ~a) * 2 - (a * a ^ a) & ~a) * (~(a * a & ~a) * 2 - (a * a ^ a) & a) + ((a * a & ~a) * 2 - (a * a ^ a) | a) * ((a * a & ~a) * 2 - (a * a ^ a) & a) & a) + ~a + (((a * a & ~a) * 2 - (a * a ^ a) & ~a) * (~(a * a & ~a) * 2 - (a * a ^ a) & a) + ((a * a & ~a) * 2 - (a * a ^ a) | a) * ((a * a & ~a) * 2 - (a * a ^ a) & a) | a) * (((a * a & ~a) * 2 - (a * a ^ a) & ~a) * (~(a * a & ~a) * 2 - (a * a ^ a) & a) + ((a * a & ~a) * 2 - (a * a ^ a) | a) * ((a * a & ~a) * 2 - (a * a ^ a) & a) & a)",
                    "attributes": {
                        "numOps": 159,
                        "nestedExprLevel": 37,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 63.781321184510254,
                        "opsPercentages": {
                            "arithmetic": 13.836477987421384,
                            "mul": 36.477987421383645,
                            "bitwise": 49.685534591194966
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "clang_default": {
                    "expr": "(a ^ 0xffffffff) + (a & (a & (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a)) * (a | (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a)) + (a & ((a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a) ^ 0xffffffff)) * ((a ^ 0xffffffff) & (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a))) * (a | (a & (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a)) * (a | (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a)) + (a & ((a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a) ^ 0xffffffff)) * ((a ^ 0xffffffff) & (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a)) ) + (a & ((a & (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a)) * (a | (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a)) + (a & ((a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a) ^ 0xffffffff)) * ((a ^ 0xffffffff) & (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a)) ^ 0xffffffff)) * ((a ^ 0xffffffff) & (a & (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a)) * (a | (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a)) + (a & ((a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a) ^ 0xffffffff)) * ((a ^ 0xffffffff) & (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ a)))",
                    "attributes": {
                        "numOps": 351,
                        "nestedExprLevel": 139,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 20.045558086560362,
                        "opsPercentages": {
                            "arithmetic": 15.384615384615385,
                            "mul": 25.64102564102564,
                            "bitwise": 58.97435897435898
                        },
                        "percentageDAGsCancel": 14.814814814814813
                    }
                },
                "msvc_default": {
                    "expr": "(((a * a & ~a) * 2 - (a * a ^ a) & a) * ((a * a & ~a) * 2 - (a * a ^ a) | a) + (~((a * a & ~a) * 2 - (a * a ^ a)) & a) * (~a & (a * a & ~a) * 2 - (a * a ^ a)) & a) * (((a * a & ~a) * 2 - (a * a ^ a) & a) * ((a * a & ~a) * 2 - (a * a ^ a) | a) + (~((a * a & ~a) * 2 - (a * a ^ a)) & a) * (~a & (a * a & ~a) * 2 - (a * a ^ a)) | a) + (~(((a * a & ~a) * 2 - (a * a ^ a) & a) * ((a * a & ~a) * 2 - (a * a ^ a) | a) + (~((a * a & ~a) * 2 - (a * a ^ a)) & a) * (~a & (a * a & ~a) * 2 - (a * a ^ a))) & a) * (~a & ((a * a & ~a) * 2 - (a * a ^ a) & a) * ((a * a & ~a) * 2 - (a * a ^ a) | a) + (~((a * a & ~a) * 2 - (a * a ^ a)) & a) * (~a & (a * a & ~a) * 2 - (a * a ^ a))) + ~a",
                    "attributes": {
                        "numOps": 159,
                        "nestedExprLevel": 42,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 63.781321184510254,
                        "opsPercentages": {
                            "arithmetic": 13.836477987421384,
                            "mul": 36.477987421383645,
                            "bitwise": 49.685534591194966
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~(a * a ^ a + ~(~a & a * a) * 2 & a) * (~a & (~a & a * a) * 2 - a * a ^ a) + ((~a & a * a) * 2 - a * a ^ a & a) * ((~a & a * a) * 2 - a * a ^ a | a) & a) * (~a & (a * a ^ a + ~(~a & a * a) * 2 & a) * (~a & (~a & a * a) * 2 - a * a ^ a) + ((~a & a * a) * 2 - a * a ^ a & a) * ((~a & a * a) * 2 - a * a ^ a | a)) + ((a * a ^ a + ~(~a & a * a) * 2 & a) * (~a & (~a & a * a) * 2 - a * a ^ a) + ((~a & a * a) * 2 - a * a ^ a & a) * ((~a & a * a) * 2 - a * a ^ a | a) | a) * ((a * a ^ a + ~(~a & a * a) * 2 & a) * (~a & (~a & a * a) * 2 - a * a ^ a) + ((~a & a * a) * 2 - a * a ^ a & a) * ((~a & a * a) * 2 - a * a ^ a | a) & a) + ~a",
                    "attributes": {
                        "numOps": 159,
                        "nestedExprLevel": 22,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 63.781321184510254,
                        "opsPercentages": {
                            "arithmetic": 13.836477987421384,
                            "mul": 36.477987421383645,
                            "bitwise": 49.685534591194966
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                }
            }
        },
        {
            "num": 230,
            "gt": {
                "expr": "((~(~(d&(e|e)))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 0.0,
                        "bitwise": 100.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "- (- ((~ d | ((e & ~ e) + e)) - ~ d) - 1) - 1",
                "attributes": {
                    "numOps": 11,
                    "nestedExprLevel": 6,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 54.54545454545454,
                        "mul": 0.0,
                        "bitwise": 45.45454545454545
                    },
                    "percentageDAGsCancel": 30.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "e & d",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 90.9090909090909,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 100.0
                        },
                        "percentageDAGsCancel": 100.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~d | e) + 1 + d",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 63.63636363636363,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 50.0
                    }
                },
                "clang_O3": {
                    "expr": "e & d",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 90.9090909090909,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 100.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - (-1 - ((d ^ 0xffffffff | (e & (e ^ 0xffffffff)) + e) - (d ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 6,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 54.54545454545454,
                            "mul": 0.0,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 22.22222222222222
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (-1 - ((~d | e) - ~d))",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 4,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 27.27272727272727,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 0.0,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "gcc_O3": {
                    "expr": "e & d",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 90.9090909090909,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 100.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 231,
            "gt": {
                "expr": "((((-c)*(-(d+a)))|(-((d&c)&(a^c)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 8,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 11.11111111111111,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "(((((~ c + 1) & (~ ((d - ~ a) - 1) + 1)) * ((~ c + 1) | (~ ((d - ~ a) - 1) + 1)) + ((~ c + 1) & ~ (~ ((d - ~ a) - 1) + 1)) * (~ (~ c + 1) & (~ ((d - ~ a) - 1) + 1))) + ~ ((((~ ((~ d | c) - ~ d) | ((a | c) - (a & c))) + ((~ d | c) - ~ d)) + 1) - 1)) + 1) + ((- (((~ c + 1) & (~ ((d - ~ a) - 1) + 1)) * ((~ c + 1) | (~ ((d - ~ a) - 1) + 1)) + ((~ c + 1) & ~ (~ ((d - ~ a) - 1) + 1)) * (~ (~ c + 1) & (~ ((d - ~ a) - 1) + 1))) - 1) | (- (~ ((((~ ((~ d | c) - ~ d) | ((a | c) - (a & c))) + ((~ d | c) - ~ d)) + 1) - 1)) - 1))",
                "attributes": {
                    "numOps": 116,
                    "nestedExprLevel": 50,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 45.689655172413794,
                        "mul": 3.4482758620689653,
                        "bitwise": 50.86206896551724
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((c & d) + (~(c & d) | a ^ c) | ~((~a + ~d + 2 & c - 1) * (-c & (d - ~a) - 2) + (-c & ~a + ~d + 2) * (~a + ~d + 2 | -c))) + ~((c & d) + (~(c & d) | a ^ c)) + (-c & ~a + ~d + 2) * (~a + ~d + 2 | -c) + (~a + ~d + 2 & c - 1) * (-c & (d - ~a) - 2) + 1",
                    "attributes": {
                        "numOps": 70,
                        "nestedExprLevel": 12,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 39.6551724137931,
                        "opsPercentages": {
                            "arithmetic": 44.285714285714285,
                            "mul": 5.714285714285714,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "msvc_O1": {
                    "expr": "((~(~-c & -(a + d)) * (~-(a + d) & -c) - (-c | -(a + d)) * (-c & -(a + d)) | ((a | c) - (a & c) | ~(d + 1 + (~d | c))) + (~d | c) + d + 1) - ((a | c) - (a & c) | ~(d + 1 + (~d | c))) + (~d | c) + d + 1) + (-c | -(a + d)) * (-c & -(a + d)) + (~-c & -(a + d)) * (~-(a + d) & -c)",
                    "attributes": {
                        "numOps": 74,
                        "nestedExprLevel": 20,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 36.206896551724135,
                        "opsPercentages": {
                            "arithmetic": 54.054054054054056,
                            "mul": 5.405405405405405,
                            "bitwise": 40.54054054054054
                        },
                        "percentageDAGsCancel": 3.0303030303030303
                    }
                },
                "clang_O3": {
                    "expr": "(~(c - 1 & -(d + a)) * ((d + a) - 1 & -c) + (-(d + a) | -c) * (-(d + a) & -c) | (~(d & c) | c ^ a) + (d & c)) + ((c - 1 & -(d + a)) * ((d + a) - 1 & -c) + (-(d + a) | -c) * (-(d + a) & -c) - (~(d & c) | c ^ a) + (d & c))",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 15,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 53.44827586206896,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 7.4074074074074066,
                            "bitwise": 37.03703703703704
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((c ^ 0xffffffff) + 1 & ((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) + 1) * ((c ^ 0xffffffff) + 1 | ((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) + 1) + ((c ^ 0xffffffff) + 1 & (((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((c ^ 0xffffffff) + 1 ^ 0xffffffff) & ((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) + 1) + (((d ^ 0xffffffff | c) - (d ^ 0xffffffff) ^ 0xffffffff | (a | c) - (a & c)) + ((d ^ 0xffffffff | c) - (d ^ 0xffffffff)) ^ 0xffffffff) + 1 + (0xffffffff - (((c ^ 0xffffffff) + 1 & ((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) + 1) * ((c ^ 0xffffffff) + 1 | ((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) + 1) + ((c ^ 0xffffffff) + 1 & (((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((c ^ 0xffffffff) + 1 ^ 0xffffffff) & ((d - (a ^ 0xffffffff)) - 1 ^ 0xffffffff) + 1)) | 0xffffffff - (((d ^ 0xffffffff | c) - (d ^ 0xffffffff) ^ 0xffffffff | (a | c) - (a & c)) + ((d ^ 0xffffffff | c) - (d ^ 0xffffffff)) ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 110,
                        "nestedExprLevel": 43,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 5.172413793103448,
                        "opsPercentages": {
                            "arithmetic": 42.72727272727273,
                            "mul": 3.6363636363636362,
                            "bitwise": 53.63636363636364
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~c + 1 & ~((d - ~a) - 1) + 1) * (~c + 1 | ~((d - ~a) - 1) + 1) + (~c + 1 & ~(~((d - ~a) - 1) + 1)) * (~(~c + 1) & ~((d - ~a) - 1) + 1) + ~((~((~d | c) - ~d) | (a | c) - (a & c)) + ((~d | c) - ~d)) + 1 + (0xffffffff - ((~c + 1 & ~((d - ~a) - 1) + 1) * (~c + 1 | ~((d - ~a) - 1) + 1) + (~c + 1 & ~(~((d - ~a) - 1) + 1)) * (~(~c + 1) & ~((d - ~a) - 1) + 1)) | 0xffffffff - ~((~((~d | c) - ~d) | (a | c) - (a & c)) + ((~d | c) - ~d)))",
                    "attributes": {
                        "numOps": 110,
                        "nestedExprLevel": 32,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 5.172413793103448,
                        "opsPercentages": {
                            "arithmetic": 42.72727272727273,
                            "mul": 3.6363636363636362,
                            "bitwise": 53.63636363636364
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((d - ~a) - 2 & -c) * (c - 1 & ~a + 2 + ~d) + (-c | ~a + 2 + ~d) * (-c & ~a + 2 + ~d) - (c ^ a | ~(d & c)) + (d & c)) + (~((d - ~a) - 2 & -c) * (c - 1 & ~a + 2 + ~d) + (-c | ~a + 2 + ~d) * (-c & ~a + 2 + ~d) | (c ^ a | ~(d & c)) + (d & c))",
                    "attributes": {
                        "numOps": 68,
                        "nestedExprLevel": 13,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 41.37931034482759,
                        "opsPercentages": {
                            "arithmetic": 44.11764705882353,
                            "mul": 5.88235294117647,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 232,
            "gt": {
                "expr": "((((c^e)|c)|(-(a-e))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((c | e) - (c & e)) & ~ c) + c) + ~ ((((a & ~ e) + (a & ~ e)) - (a ^ e)) - 1)) + 1) + ((- ((((c | e) - (c & e)) & ~ c) + c) - 1) | (- (~ ((((a & ~ e) + (a & ~ e)) - (a ^ e)) - 1)) - 1))",
                "attributes": {
                    "numOps": 38,
                    "nestedExprLevel": 24,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 44.73684210526316,
                        "mul": 0.0,
                        "bitwise": 55.26315789473685
                    },
                    "percentageDAGsCancel": 4.761904761904762
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~e & a) * 2 - (a ^ e)) - 1 | ~(c + ((c ^ e) & ~c))) + (a ^ e) + ~((~e & a) * 2) + ((c ^ e) & ~c) + c + 2",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 10,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 34.21052631578947,
                        "opsPercentages": {
                            "arithmetic": 32.0,
                            "mul": 8.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~(c | e) - (c & e) & ~c - c | ((~e & a) * 2 - (a ^ e)) - 1) - ((~e & a) * 2 - (a ^ e)) - 1) + (c | e) - (c & e) & ~c + c",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 9,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 26.31578947368421,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 7.142857142857142,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(e ^ a) + (~e & a) * -2 | (~c & e) + c",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 73.68421052631578,
                        "opsPercentages": {
                            "arithmetic": 30.0,
                            "mul": 10.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((c | e) - (c & e) & (c ^ 0xffffffff)) + c + ((((a & (e ^ 0xffffffff)) + (a & (e ^ 0xffffffff))) - (a ^ e)) - 1 ^ 0xffffffff) + 1 + (0xffffffff - (((c | e) - (c & e) & (c ^ 0xffffffff)) + c) | 0xffffffff - ((((a & (e ^ 0xffffffff)) + (a & (e ^ 0xffffffff))) - (a ^ e)) - 1 ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 19,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 5.263157894736842,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 0.0,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_default": {
                    "expr": "((c | e) - (c & e) & ~c) + c + ~((((~e & a) + (~e & a)) - (a ^ e)) - 1) + 1 + (0xffffffff - (((c | e) - (c & e) & ~c) + c) | 0xffffffff - ~((((~e & a) + (~e & a)) - (a ^ e)) - 1))",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 16,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 5.263157894736842,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 0.0,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "gcc_O3": {
                    "expr": "c + 1 + (e ^ a) + (~e & a) * -2 + (((~e & a) * 2 - (e ^ a)) - 1 | ~c)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 55.26315789473685,
                        "opsPercentages": {
                            "arithmetic": 41.17647058823529,
                            "mul": 11.76470588235294,
                            "bitwise": 47.05882352941176
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                }
            }
        },
        {
            "num": 233,
            "gt": {
                "expr": "((-(((e&d)*(e^d))+(-d))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 16.666666666666664,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ ((((((((~ e | d) + e) + 1) & (((e - d) - ((e | ~ d) + (e | ~ d))) - 2)) * ((((~ e | d) + e) + 1) | (((e - d) - ((e | ~ d) + (e | ~ d))) - 2)) + ((((~ e | d) + e) + 1) & ~ (((e - d) - ((e | ~ d) + (e | ~ d))) - 2)) * (~ (((~ e | d) + e) + 1) & (((e - d) - ((e | ~ d) + (e | ~ d))) - 2))) | ~ (d - 1)) + ((((((~ e | d) + e) + 1) & (((e - d) - ((e | ~ d) + (e | ~ d))) - 2)) * ((((~ e | d) + e) + 1) | (((e - d) - ((e | ~ d) + (e | ~ d))) - 2)) + ((((~ e | d) + e) + 1) & ~ (((e - d) - ((e | ~ d) + (e | ~ d))) - 2)) * (~ (((~ e | d) + e) + 1) & (((e - d) - ((e | ~ d) + (e | ~ d))) - 2))) & ~ (d - 1))) - 1)",
                "attributes": {
                    "numOps": 123,
                    "nestedExprLevel": 64,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 43.90243902439025,
                        "mul": 3.2520325203252036,
                        "bitwise": 52.84552845528455
                    },
                    "percentageDAGsCancel": 7.6923076923076925
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "d + ~((((e - d) + (~d | e) * -2) - 2 & -(e + (~e | d)) - 2) * (e + (~e | d) + 1 & (~d | e) * 2 + ~e + d + 2) + (e + (~e | d) + 1 & ((e - d) + (~d | e) * -2) - 2) * (((e - d) + (~d | e) * -2) - 2 | e + (~e | d) + 1)) + 1",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 15,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 55.28455284552846,
                        "opsPercentages": {
                            "arithmetic": 49.09090909090909,
                            "mul": 10.909090909090908,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "msvc_O1": {
                    "expr": "-(((e + 1 + (~e | d) & (e - ((~d | e) * 2 + 2)) - d) * (e + 1 + (~e | d) | (e - ((~d | e) * 2 + 2)) - d) + (~(e - ((~d | e) * 2 + 2)) - d & e + 1 + (~e | d)) * (~e + 1 + (~e | d) & (e - ((~d | e) * 2 + 2)) - d) | ~(d - 1)) + ((e + 1 + (~e | d) & (e - ((~d | e) * 2 + 2)) - d) * (e + 1 + (~e | d) | (e - ((~d | e) * 2 + 2)) - d) + (~(e - ((~d | e) * 2 + 2)) - d & e + 1 + (~e | d)) * (~e + 1 + (~e | d) & (e - ((~d | e) * 2 + 2)) - d) & ~(d - 1)))",
                    "attributes": {
                        "numOps": 106,
                        "nestedExprLevel": 32,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 13.821138211382115,
                        "opsPercentages": {
                            "arithmetic": 43.39622641509434,
                            "mul": 11.320754716981133,
                            "bitwise": 45.28301886792453
                        },
                        "percentageDAGsCancel": 18.51851851851852
                    }
                },
                "clang_O3": {
                    "expr": "d - ((-((~e | d) + e) - 2 & (e - d) + (~d | e) * -2 - 2) * (1 - (e - d) + (~d | e) * -2 & (~e | d) + e + 1) + ((e - d) + (~d | e) * -2 - 2 | (~e | d) + e + 1) * ((e - d) + (~d | e) * -2 - 2 & (~e | d) + e + 1))",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 12,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 56.91056910569105,
                        "opsPercentages": {
                            "arithmetic": 50.943396226415096,
                            "mul": 11.320754716981133,
                            "bitwise": 37.735849056603776
                        },
                        "percentageDAGsCancel": 13.043478260869565
                    }
                },
                "clang_default": {
                    "expr": "((((e ^ 0xffffffff | d) + e + 1 & ((e - d) - ((e | d ^ 0xffffffff) + (e | d ^ 0xffffffff))) - 2) * ((e ^ 0xffffffff | d) + e + 1 | ((e - d) - ((e | d ^ 0xffffffff) + (e | d ^ 0xffffffff))) - 2) + ((e ^ 0xffffffff | d) + e + 1 & (((e - d) - ((e | d ^ 0xffffffff) + (e | d ^ 0xffffffff))) - 2 ^ 0xffffffff) ) * (((e ^ 0xffffffff | d) + e + 1 ^ 0xffffffff) & ((e - d) - ((e | d ^ 0xffffffff) + (e | d ^ 0xffffffff))) - 2) | d - 1 ^ 0xffffffff) + (((e ^ 0xffffffff | d) + e + 1 & ((e - d) - ((e | d ^ 0xffffffff) + (e | d ^ 0xffffffff))) - 2) * ((e ^ 0xffffffff | d) + e + 1 | ((e - d) - ((e | d ^ 0xffffffff) + (e | d ^ 0xffffffff))) - 2) + ((e ^ 0xffffffff | d) + e + 1 & (((e - d) - ((e | d ^ 0xffffffff) + (e | d ^ 0xffffffff))) - 2 ^ 0xffffffff)) * (((e ^ 0xffffffff | d) + e + 1 ^ 0xffffffff) & ((e - d) - ((e | d ^ 0xffffffff) + (e | d ^ 0xffffffff))) - 2) & (d - 1 ^ 0xffffffff))) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 123,
                        "nestedExprLevel": 41,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 43.90243902439025,
                            "mul": 3.2520325203252036,
                            "bitwise": 52.84552845528455
                        },
                        "percentageDAGsCancel": 11.538461538461538
                    }
                },
                "msvc_default": {
                    "expr": "~(((((~e | d) + 1 + e & ((e - d) - ((~d | e) + (~d | e))) - 2) * ((~e | d) + 1 + e | ((e - d) - ((~d | e) + (~d | e))) - 2) + ((~e | d) + 1 + e & ~(((e - d) - ((~d | e) + (~d | e))) - 2)) * (~((~e | d) + 1 + e) & ((e - d) - ((~d | e) + (~d | e))) - 2) | ~(d - 1)) - 1) + (((~e | d) + 1 + e & ((e - d) - ((~d | e) + (~d | e))) - 2) * ((~e | d) + 1 + e | ((e - d) - ((~d | e) + (~d | e))) - 2) + ((~e | d) + 1 + e & ~(((e - d) - ((~d | e) + (~d | e))) - 2)) * (~((~e | d) + 1 + e) & ((e - d) - ((~d | e) + (~d | e))) - 2) & ~(d - 1)))",
                    "attributes": {
                        "numOps": 123,
                        "nestedExprLevel": 42,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 43.90243902439025,
                            "mul": 3.2520325203252036,
                            "bitwise": 52.84552845528455
                        },
                        "percentageDAGsCancel": 11.538461538461538
                    }
                },
                "gcc_O3": {
                    "expr": "d - (((~e | d) + e + 1 & ((e - d) + (~d | e) * -2) - 2) * ((~e | d) + e + 1 | ((e - d) + (~d | e) * -2) - 2) + ((~d | e) * 2 + 2 + ~e + d & (~e | d) + e + 1) * (-(~e | d) + e - 2 & ((e - d) + (~d | e) * -2) - 2))",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 13,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 56.91056910569105,
                        "opsPercentages": {
                            "arithmetic": 49.056603773584904,
                            "mul": 11.320754716981133,
                            "bitwise": 39.62264150943396
                        },
                        "percentageDAGsCancel": 11.538461538461538
                    }
                }
            }
        },
        {
            "num": 234,
            "gt": {
                "expr": "((((c*d)*((~(-c))&d))|((c*d)^(d*d))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 11.11111111111111,
                        "mul": 44.44444444444444,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((c & d) * (c | d) + (c & ~ d) * (~ c & d)) & ((~ (c - 1) | d) - ~ (c - 1))) * (((c & d) * (c | d) + (c & ~ d) * (~ c & d)) | ((~ (c - 1) | d) - ~ (c - 1))) + (((c & d) * (c | d) + (c & ~ d) * (~ c & d)) & ~ ((~ (c - 1) | d) - ~ (c - 1))) * (~ ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) & ((~ (c - 1) | d) - ~ (c - 1)))) + ((((c & d) * (c | d) + (c & ~ d) * (~ c & d)) | ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - (((c & d) * (c | d) + (c & ~ d) * (~ c & d)) & ((d & d) * (d | d) + (d & ~ d) * (~ d & d))))) + 1) + ((- ((((c & d) * (c | d) + (c & ~ d) * (~ c & d)) & ((~ (c - 1) | d) - ~ (c - 1))) * (((c & d) * (c | d) + (c & ~ d) * (~ c & d)) | ((~ (c - 1) | d) - ~ (c - 1))) + (((c & d) * (c | d) + (c & ~ d) * (~ c & d)) & ~ ((~ (c - 1) | d) - ~ (c - 1))) * (~ ((c & d) * (c | d) + (c & ~ d) * (~ c & d)) & ((~ (c - 1) | d) - ~ (c - 1)))) - 1) | (- ((((c & d) * (c | d) + (c & ~ d) * (~ c & d)) | ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - (((c & d) * (c | d) + (c & ~ d) * (~ c & d)) & ((d & d) * (d | d) + (d & ~ d) * (~ d & d)))) - 1))",
                "attributes": {
                    "numOps": 224,
                    "nestedExprLevel": 94,
                    "numDAGs": 40,
                    "opsPercentages": {
                        "arithmetic": 22.767857142857142,
                        "mul": 16.071428571428573,
                        "bitwise": 61.16071428571429
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((d * d ^ (c & d) * (c | d) + (~c & d) * (~d & c)) & ((c & d) * (c | d) + (~c & d) * (~d & c) & c - 1 & d) * (c - 1 & d | (c & d) * (c | d) + (~c & d) * (~d & c)) + (c - 1 & d & ~((~c & d) * (~d & c) + (c & d) * (c | d))) * ((c & d) * (c | d) + (~c & d) * (~d & c) & ~(c - 1 & d))) + (d * d ^ (c & d) * (c | d) + (~c & d) * (~d & c)) + ((c & d) * (c | d) + (~c & d) * (~d & c) & c - 1 & d) * (c - 1 & d | (c & d) * (c | d) + (~c & d) * (~d & c)) + (c - 1 & d & ~((~c & d) * (~d & c) + (c & d) * (c | d))) * ((c & d) * (c | d) + (~c & d) * (~d & c) & ~(c - 1 & d)) + 1",
                    "attributes": {
                        "numOps": 133,
                        "nestedExprLevel": 35,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 40.625,
                        "opsPercentages": {
                            "arithmetic": 17.293233082706767,
                            "mul": 19.548872180451127,
                            "bitwise": 63.1578947368421
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~d & c) * (~c & d) + (c | d) * (c & d) & (-c | d) + c) * (~(-c | d) + c & (~d & c) * (~c & d) + (c | d) * (c & d)) + 1 + (((d * d & (~d & c) * (~c & d) + (c | d) * (c & d) - d * d | (~d & c) * (~c & d) + (c | d) * (c & d)) - 1 | ~(~(~d & c) * (~c & d) + (c | d) * (c & d) & (-c | d) + c) * (~(-c | d) + c & (~d & c) * (~c & d) + (c | d) * (c & d)) - ((-c | d) + c | (~d & c) * (~c & d) + (c | d) * (c & d)) * ((-c | d) + c & (~d & c) * (~c & d) + (c | d) * (c & d))) - d * d & (~d & c) * (~c & d) + (c | d) * (c & d)) + d * d | (~d & c) * (~c & d) + (c | d) * (c & d) + ((-c | d) + c | (~d & c) * (~c & d) + (c | d) * (c & d)) * ((-c | d) + c & (~d & c) * (~c & d) + (c | d) * (c & d))",
                    "attributes": {
                        "numOps": 166,
                        "nestedExprLevel": 37,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 25.892857142857146,
                        "opsPercentages": {
                            "arithmetic": 21.686746987951807,
                            "mul": 19.27710843373494,
                            "bitwise": 59.036144578313255
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                },
                "clang_O3": {
                    "expr": "d * d ^ (~c & d) * (~d & c) + (d | c) * (d & c) | (~(~c & d) * (~d & c) + (d | c) * (d & c) & (-c | d) + c) * (~(-c | d) + c & (~c & d) * (~d & c) + (d | c) * (d & c)) + ((~c & d) * (~d & c) + (d | c) * (d & c) | (-c | d) + c) * ((~c & d) * (~d & c) + (d | c) * (d & c) & (-c | d) + c)",
                    "attributes": {
                        "numOps": 69,
                        "nestedExprLevel": 16,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 69.19642857142857,
                        "opsPercentages": {
                            "arithmetic": 20.28985507246377,
                            "mul": 18.84057971014493,
                            "bitwise": 60.86956521739131
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_default": {
                    "expr": "((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) & (c - 1 ^ 0xffffffff | d) - (c - 1 ^ 0xffffffff)) * ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) | (c - 1 ^ 0xffffffff | d) - (c - 1 ^ 0xffffffff)) + ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) & ((c - 1 ^ 0xffffffff | d) - (c - 1 ^ 0xffffffff) ^ 0xffffffff)) * (((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) ^ 0xffffffff) & (c - 1 ^ 0xffffffff | d) - (c - 1 ^ 0xffffffff)) + (((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) | d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)) - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) & d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) )) + 1 + (0xffffffff - (((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) & (c - 1 ^ 0xffffffff | d) - (c - 1 ^ 0xffffffff)) * ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) | (c - 1 ^ 0xffffffff | d) - (c - 1 ^ 0xffffffff)) + ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) & ((c - 1 ^ 0xffffffff | d) - (c - 1 ^ 0xffffffff) ^ 0xffffffff)) * (((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) ^ 0xffffffff) & (c - 1 ^ 0xffffffff | d) - (c - 1 ^ 0xffffffff))) | 0xffffffff - (((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) | d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)) - ((c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) & d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d))))",
                    "attributes": {
                        "numOps": 214,
                        "nestedExprLevel": 74,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 4.464285714285714,
                        "opsPercentages": {
                            "arithmetic": 22.897196261682243,
                            "mul": 16.822429906542055,
                            "bitwise": 60.280373831775705
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "msvc_default": {
                    "expr": "((c & d) * (c | d) + (~d & c) * (~c & d) & (~(c - 1) | d) - ~(c - 1)) * ((c & d) * (c | d) + (~d & c) * (~c & d) | (~(c - 1) | d) - ~(c - 1)) + ((c & d) * (c | d) + (~d & c) * (~c & d) & ~((~(c - 1) | d) - ~(c - 1))) * (~((c & d) * (c | d) + (~d & c) * (~c & d)) & (~(c - 1) | d) - ~(c - 1)) + (((c & d) * (c | d) + (~d & c) * (~c & d) | d * d) - ((c & d) * (c | d) + (~d & c) * (~c & d) & d * d)) + 1 + (0xffffffff - (((c & d) * (c | d) + (~d & c) * (~c & d) & (~(c - 1) | d) - ~(c - 1)) * ((c & d) * (c | d) + (~d & c) * (~c & d) | (~(c - 1) | d) - ~(c - 1)) + ((c & d) * (c | d) + (~d & c) * (~c & d) & ~((~(c - 1) | d) - ~(c - 1))) * (~((c & d) * (c | d) + (~d & c) * (~c & d) ) & (~(c - 1) | d) - ~(c - 1))) | 0xffffffff - (((c & d) * (c | d) + (~d & c) * (~c & d) | d * d) - ((c & d) * (c | d) + (~d & c) * (~c & d) & d * d)))",
                    "attributes": {
                        "numOps": 190,
                        "nestedExprLevel": 61,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 15.178571428571427,
                        "opsPercentages": {
                            "arithmetic": 23.684210526315788,
                            "mul": 16.842105263157894,
                            "bitwise": 59.473684210526315
                        },
                        "percentageDAGsCancel": 9.375
                    }
                },
                "gcc_O3": {
                    "expr": "(d * d ^ (~d & c) * (~c & d) + (c & d) * (c | d) + (~c - 1 & d & (~d & c) * (~c & d) + (c & d) * (c | d)) * (~(~d & c) * (~c & d) + (c & d) * (c | d) & c - 1 & d) + ((~d & c) * (~c & d) + (c & d) * (c | d) & c - 1 & d) * (c - 1 & d | (~d & c) * (~c & d) + (c & d) * (c | d))) - ((~c - 1 & d & (~d & c) * (~c & d) + (c & d) * (c | d)) * (~(~d & c) * (~c & d) + (c & d) * (c | d) & c - 1 & d) + ((~d & c) * (~c & d) + (c & d) * (c | d) & c - 1 & d) * (c - 1 & d | (~d & c) * (~c & d) + (c & d) * (c | d)) & d * d ^ (~d & c) * (~c & d) + (c & d) * (c | d))",
                    "attributes": {
                        "numOps": 131,
                        "nestedExprLevel": 31,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 41.517857142857146,
                        "opsPercentages": {
                            "arithmetic": 16.793893129770993,
                            "mul": 19.84732824427481,
                            "bitwise": 63.358778625954194
                        },
                        "percentageDAGsCancel": 9.375
                    }
                }
            }
        },
        {
            "num": 235,
            "gt": {
                "expr": "(((((d-c)|c)+(c^(c*d)))^(((d-d)*d)&(c*c))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 30.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "((((((((d ^ c) - ((~ d & c) << 1)) & ~ c) + c) ^ ((c | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - (c & ((c & d) * (c | d) + (c & ~ d) * (~ c & d))))) + ((((((d ^ c) - ((~ d & c) << 1)) & ~ c) + c) & ((c | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - (c & ((c & d) * (c | d) + (c & ~ d) * (~ c & d))))) << 1)) - (((~ ((((d + ~ d) + 1) & d) * (((d + ~ d) + 1) | d) + (((d + ~ d) + 1) & ~ d) * (~ ((d + ~ d) + 1) & d)) | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + ((((d + ~ d) + 1) & d) * (((d + ~ d) + 1) | d) + (((d + ~ d) + 1) & ~ d) * (~ ((d + ~ d) + 1) & d))) + 1)) - ((((((((d ^ c) - ((~ d & c) << 1)) & ~ c) + c) ^ ((c | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - (c & ((c & d) * (c | d) + (c & ~ d) * (~ c & d))))) + ((((((d ^ c) - ((~ d & c) << 1)) & ~ c) + c) & ((c | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - (c & ((c & d) * (c | d) + (c & ~ d) * (~ c & d))))) << 1)) | ~ (((~ ((((d + ~ d) + 1) & d) * (((d + ~ d) + 1) | d) + (((d + ~ d) + 1) & ~ d) * (~ ((d + ~ d) + 1) & d)) | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + ((((d + ~ d) + 1) & d) * (((d + ~ d) + 1) | d) + (((d + ~ d) + 1) & ~ d) * (~ ((d + ~ d) + 1) & d))) + 1)) << 1)) - 2",
                "attributes": {
                    "numOps": 240,
                    "nestedExprLevel": 114,
                    "numDAGs": 49,
                    "opsPercentages": {
                        "arithmetic": 27.916666666666668,
                        "mul": 11.666666666666666,
                        "bitwise": 60.416666666666664
                    },
                    "percentageDAGsCancel": 28.57142857142857
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~c & d) * (~d & c) + (c & d) * (c | d) ^ c) & ((d ^ c) + (~d & c) * -2 & ~c) + c) * 2 + (((d ^ c) + (~d & c) * -2 & ~c) + c ^ (~c & d) * (~d & c) + (c & d) * (c | d) ^ c)",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 12,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 82.5,
                        "opsPercentages": {
                            "arithmetic": 21.428571428571427,
                            "mul": 16.666666666666664,
                            "bitwise": 61.904761904761905
                        },
                        "percentageDAGsCancel": 9.523809523809524
                    }
                },
                "msvc_O1": {
                    "expr": "((((c ^ d) + ~d & c * -2) * 2 & ~c * 2) + c * 2 & ((c | d) * (c & d) + (~c & d) * ~d & c * 2 | c * 2) + ((c | d) * (c & d) + (~c & d) * ~d & c & c) * -2) + (((c ^ d) + ~d & c * -2 & ~c) + c ^ ((c | d) * (c & d) + (~c & d) * ~d & c | c) - ((c | d) * (c & d) + (~c & d) * ~d & c & c))",
                    "attributes": {
                        "numOps": 70,
                        "nestedExprLevel": 15,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 70.83333333333334,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 22.857142857142858,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 12.903225806451612
                    }
                },
                "clang_O3": {
                    "expr": "(((d ^ c) + (~d & c) * -2 & ~c) + c ^ c) + (c & ((d ^ c) + (~d & c) * -2 & ~c) + c) * 2",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 7,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 90.83333333333333,
                        "opsPercentages": {
                            "arithmetic": 31.818181818181817,
                            "mul": 13.636363636363635,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "clang_default": {
                    "expr": "(((((d ^ c) + ((d ^ 0xffffffff) & c) * -2 & (c ^ 0xffffffff)) + c ^ (c | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d) ) - (c & (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d))) + (((d ^ c) + ((d ^ 0xffffffff) & c) * -2 & (c ^ 0xffffffff)) + c & (c | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (c & (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d))) * 2) - (((d + (d ^ 0xffffffff) + 1 & d) * (d + (d ^ 0xffffffff) + 1 | d) + (d + (d ^ 0xffffffff) + 1 & (d ^ 0xffffffff)) * ((d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) & d) ^ 0xffffffff | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) + (d + (d ^ 0xffffffff) + 1 & d) * (d + (d ^ 0xffffffff) + 1 | d) + (d + (d ^ 0xffffffff) + 1 & (d ^ 0xffffffff)) * ((d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) & d) + 1)) + ((((d ^ c) + ((d ^ 0xffffffff) & c) * -2 & (c ^ 0xffffffff)) + c ^ (c | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (c & (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d))) + (((d ^ c) + ((d ^ 0xffffffff) & c) * -2 & (c ^ 0xffffffff)) + c & (c | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (c & (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d))) * 2 | ((d + (d ^ 0xffffffff) + 1 & d) * (d + (d ^ 0xffffffff) + 1 | d) + (d + (d ^ 0xffffffff) + 1 & (d ^ 0xffffffff)) * ((d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) & d) ^ 0xffffffff | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) + (d + (d ^ 0xffffffff) + 1 & d) * (d + (d ^ 0xffffffff) + 1 | d) + (d + (d ^ 0xffffffff) + 1 & (d ^ 0xffffffff)) * ((d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) & d) + 1 ^ 0xffffffff) * -2 + -2",
                    "attributes": {
                        "numOps": 242,
                        "nestedExprLevel": 84,
                        "numDAGs": 49,
                        "percentDecreaseByOps": -0.8333333333333334,
                        "opsPercentages": {
                            "arithmetic": 30.165289256198346,
                            "mul": 14.46280991735537,
                            "bitwise": 55.371900826446286
                        },
                        "percentageDAGsCancel": 18.367346938775512
                    }
                },
                "msvc_default": {
                    "expr": "(((((d ^ c) + (~d & c) * -2 & ~c) + c ^ ((c & d) * (c | d) + (~d & c) * (~c & d) | c) - ((c & d) * (c | d) + (~d & c) * (~c & d) & c)) + (((d ^ c) + (~d & c) * -2 & ~c) + c & ((c & d) * (c | d) + (~d & c) * (~c & d) | c) - ((c & d) * (c | d) + (~d & c) * (~c & d) & c)) * 2) - ((~((d + 1 + ~d & d) * (d + 1 + ~d | d) + (d + 1 + ~d & ~d) * (~(d + 1 + ~d) & d)) | c * c) + 1 + (d + 1 + ~d & d) * (d + 1 + ~d | d) + (d + 1 + ~d & ~d) * (~(d + 1 + ~d) & d))) + ((((d ^ c) + (~d & c) * -2 & ~c) + c ^ ((c & d) * (c | d) + (~d & c) * (~c & d) | c) - ((c & d) * (c | d) + (~d & c) * (~c & d) & c)) + (((d ^ c) + (~d & c) * -2 & ~c) + c & ((c & d) * (c | d) + (~d & c) * (~c & d) | c) - ((c & d) * (c | d) + (~d & c) * (~c & d) & c)) * 2 | ~((~((d + 1 + ~d & d) * (d + 1 + ~d | d) + (d + 1 + ~d & ~d) * (~(d + 1 + ~d) & d)) | c * c) + 1 + (d + 1 + ~d & d) * (d + 1 + ~d | d) + (d + 1 + ~d & ~d) * (~(d + 1 + ~d) & d))) * -2 + -2",
                    "attributes": {
                        "numOps": 230,
                        "nestedExprLevel": 57,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 4.166666666666666,
                        "opsPercentages": {
                            "arithmetic": 30.869565217391305,
                            "mul": 14.347826086956522,
                            "bitwise": 54.78260869565217
                        },
                        "percentageDAGsCancel": 27.27272727272727
                    }
                },
                "gcc_O3": {
                    "expr": "(((d ^ c) + (~d & c) * -2 & ~c) + c ^ c) + (((d ^ c) + (~d & c) * -2 & ~c) + c & c) * 2",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 7,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 90.83333333333333,
                        "opsPercentages": {
                            "arithmetic": 31.818181818181817,
                            "mul": 13.636363636363635,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                }
            }
        },
        {
            "num": 236,
            "gt": {
                "expr": "((-((-(b*b))*b)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 50.0,
                        "bitwise": 0.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ ((((~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b)) + 1) & b) * ((~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b)) + 1) | b) + ((~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b)) + 1) & ~ b) * (~ (~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b)) + 1) & b)) - 1)",
                "attributes": {
                    "numOps": 55,
                    "nestedExprLevel": 23,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 18.181818181818183,
                        "mul": 18.181818181818183,
                        "bitwise": 63.63636363636363
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-((b * b - 1 & b) * (-(b * b) & ~b) + (-(b * b) & b) * (-(b * b) | b))",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 69.0909090909091,
                        "opsPercentages": {
                            "arithmetic": 35.294117647058826,
                            "mul": 35.294117647058826,
                            "bitwise": 29.411764705882355
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "-((~b & -(b * b)) * (~-(b * b) & b) + (-(b * b) | b) * (-(b * b) & b))",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 7,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 67.27272727272727,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 33.33333333333333,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-((b * b - 1 & b) * (-(b * b) & ~b) + (-(b * b) | b) * (-(b * b) & b))",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 69.0909090909091,
                        "opsPercentages": {
                            "arithmetic": 35.294117647058826,
                            "mul": 35.294117647058826,
                            "bitwise": 29.411764705882355
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) + 1 & b) * ((b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) + 1 | b) + ((b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * (((b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) + 1 ^ 0xffffffff) & b)) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 21,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 14.545454545454545,
                        "opsPercentages": {
                            "arithmetic": 21.27659574468085,
                            "mul": 21.27659574468085,
                            "bitwise": 57.446808510638306
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "msvc_default": {
                    "expr": "~((~(b * b) + 1 & b) * (~(b * b) + 1 | b) + -1 + (~(b * b) + 1 & ~b) * (~(~(b * b) + 1) & b))",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 8,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 56.36363636363636,
                        "opsPercentages": {
                            "arithmetic": 29.166666666666668,
                            "mul": 25.0,
                            "bitwise": 45.83333333333333
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "gcc_O3": {
                    "expr": "-((~b & -(b * b)) * (b * b - 1 & b) + (-(b * b) & b) * (-(b * b) | b))",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 7,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 69.0909090909091,
                        "opsPercentages": {
                            "arithmetic": 35.294117647058826,
                            "mul": 35.294117647058826,
                            "bitwise": 29.411764705882355
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 237,
            "gt": {
                "expr": "((((b^b)*c)|(b+(c*c))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 40.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "(((((((b - b) - ((b | ~ b) + (b | ~ b))) - 2) & c) * ((((b - b) - ((b | ~ b) + (b | ~ b))) - 2) | c) + ((((b - b) - ((b | ~ b) + (b | ~ b))) - 2) & ~ c) * (~ (((b - b) - ((b | ~ b) + (b | ~ b))) - 2) & c)) + (((b | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + (b | ((c & c) * (c | c) + (c & ~ c) * (~ c & c)))) - (b ^ ((c & c) * (c | c) + (c & ~ c) * (~ c & c))))) + 1) + ((- (((((b - b) - ((b | ~ b) + (b | ~ b))) - 2) & c) * ((((b - b) - ((b | ~ b) + (b | ~ b))) - 2) | c) + ((((b - b) - ((b | ~ b) + (b | ~ b))) - 2) & ~ c) * (~ (((b - b) - ((b | ~ b) + (b | ~ b))) - 2) & c)) - 1) | (- (((b | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + (b | ((c & c) * (c | c) + (c & ~ c) * (~ c & c)))) - (b ^ ((c & c) * (c | c) + (c & ~ c) * (~ c & c)))) - 1))",
                "attributes": {
                    "numOps": 154,
                    "nestedExprLevel": 76,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 33.116883116883116,
                        "mul": 10.38961038961039,
                        "bitwise": 56.493506493506494
                    },
                    "percentageDAGsCancel": 44.11764705882353
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c * c | b) * 2 - (c * c ^ b)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 96.1038961038961,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 50.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(c * c | b) * 2 - (c * c ^ b)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 96.1038961038961,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 50.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(c * c | b) * 2 - (c * c ^ b)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 96.1038961038961,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 50.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xfffffffe - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff)) & c) * (0xfffffffe - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff)) | c) + (0xfffffffe - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff)) & (c ^ 0xffffffff)) * ((0xfffffffe - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff)) ^ 0xffffffff) & c) + (((b | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) + (b | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))) - (b ^ c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))) + 1 + (0xffffffff - ((0xfffffffe - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff)) & c) * (0xfffffffe - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff)) | c) + (0xfffffffe - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff)) & (c ^ 0xffffffff)) * ((0xfffffffe - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff)) ^ 0xffffffff) & c)) | 0xffffffff - (((b | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) + (b | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))) - (b ^ c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))))",
                    "attributes": {
                        "numOps": 124,
                        "nestedExprLevel": 52,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 19.480519480519483,
                        "opsPercentages": {
                            "arithmetic": 26.61290322580645,
                            "mul": 12.903225806451612,
                            "bitwise": 60.483870967741936
                        },
                        "percentageDAGsCancel": 32.142857142857146
                    }
                },
                "msvc_default": {
                    "expr": "((c * c | b) + (c * c | b)) - (c * c ^ b)",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 4,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 94.8051948051948,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 37.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(c * c | b) * 2 - (c * c ^ b)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 96.1038961038961,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 50.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 238,
            "gt": {
                "expr": "((((a|a)*((d+a)-(-(a-d))))^((a&a)&(d&a))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 8,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 10.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "((((((a & ~ a) + a) & (((((d ^ ~ a) + ((d | a) + (d | a))) + 1) + ~ (~ ((a + ~ d) + 1) + 1)) + 1)) * (((a & ~ a) + a) | (((((d ^ ~ a) + ((d | a) + (d | a))) + 1) + ~ (~ ((a + ~ d) + 1) + 1)) + 1)) + (((a & ~ a) + a) & ~ (((((d ^ ~ a) + ((d | a) + (d | a))) + 1) + ~ (~ ((a + ~ d) + 1) + 1)) + 1)) * (~ ((a & ~ a) + a) & (((((d ^ ~ a) + ((d | a) + (d | a))) + 1) + ~ (~ ((a + ~ d) + 1) + 1)) + 1))) - ((~ ((~ a | a) - ~ a) | (((~ d | a) + d) + 1)) - ~ ((~ a | a) - ~ a))) - ((((((a & ~ a) + a) & (((((d ^ ~ a) + ((d | a) + (d | a))) + 1) + ~ (~ ((a + ~ d) + 1) + 1)) + 1)) * (((a & ~ a) + a) | (((((d ^ ~ a) + ((d | a) + (d | a))) + 1) + ~ (~ ((a + ~ d) + 1) + 1)) + 1)) + (((a & ~ a) + a) & ~ (((((d ^ ~ a) + ((d | a) + (d | a))) + 1) + ~ (~ ((a + ~ d) + 1) + 1)) + 1)) * (~ ((a & ~ a) + a) & (((((d ^ ~ a) + ((d | a) + (d | a))) + 1) + ~ (~ ((a + ~ d) + 1) + 1)) + 1))) | ~ ((~ ((~ a | a) - ~ a) | (((~ d | a) + d) + 1)) - ~ ((~ a | a) - ~ a))) << 1)) - 2",
                "attributes": {
                    "numOps": 200,
                    "nestedExprLevel": 100,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 43.5,
                        "mul": 2.0,
                        "bitwise": 54.50000000000001
                    },
                    "percentageDAGsCancel": 10.256410256410255
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((a + ~d + (d | a) * 2 + ~(a ^ d) + 2 & a) * (a + ~d + (d | a) * 2 + ~(a ^ d) + 2 | a) + (a + ~d + (d | a) * 2 + ~(a ^ d) + 2 & ~a) * (-((d | a) * 2 + ~(a ^ d) + 1 + a + ~d) - 2 & a)) - (d + (~d | a) + 1 & a)) + (~(d + (~d | a) + 1 & a) | (a + ~d + (d | a) * 2 + ~(a ^ d) + 2 & a) * (a + ~d + (d | a) * 2 + ~(a ^ d) + 2 | a) + (a + ~d + (d | a) * 2 + ~(a ^ d) + 2 & ~a) * (-((d | a) * 2 + ~(a ^ d) + 1 + a + ~d) - 2 & a)) * -2 + -2",
                    "attributes": {
                        "numOps": 110,
                        "nestedExprLevel": 24,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 45.0,
                        "opsPercentages": {
                            "arithmetic": 42.72727272727273,
                            "mul": 11.818181818181818,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 8.823529411764707
                    }
                },
                "msvc_O1": {
                    "expr": "(~a - 2) + ((((~a ^ d) + ~d + ((a | d) + 1) * 2 + a | a) * ((~a ^ d) + ~d + ((a | d) + 1) * 2 + a & a) - (~(a + 1 + (~d | a) + d + 1 | ~a) * 2 | (((~a ^ d) + ~d + ((a | d) + 1) * 2 + a | a) * ((~a ^ d) + ~d + ((a | d) + 1) * 2 + a & a) + (~(~a ^ d) + ~d + ((a | d) + 1) * 2 + a & a) * ((~a ^ d) + ~d + ((a | d) + 1) * 2 + a & ~a)) * 2)) - (~d | a) + d + 1 | ~a) + (~(~a ^ d) + ~d + ((a | d) + 1) * 2 + a & a) * ((~a ^ d) + ~d + ((a | d) + 1) * 2 + a & ~a)",
                    "attributes": {
                        "numOps": 113,
                        "nestedExprLevel": 24,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 43.5,
                        "opsPercentages": {
                            "arithmetic": 38.93805309734513,
                            "mul": 12.389380530973451,
                            "bitwise": 48.67256637168141
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "clang_O3": {
                    "expr": "((~a & (a - d) + (~a ^ d) + (d | a) * 2 + 1) * (-((a - d) + (~a ^ d) + (d | a) * 2) - 2 & a) + ((a - d) + (~a ^ d) + (d | a) * 2 + 1 | a) * ((a - d) + (~a ^ d) + (d | a) * 2 + 1 & a) - a) + (~a | (~a & (a - d) + (~a ^ d) + (d | a) * 2 + 1) * (-((a - d) + (~a ^ d) + (d | a) * 2) - 2 & a) + ((a - d) + (~a ^ d) + (d | a) * 2 + 1 | a) * ((a - d) + (~a ^ d) + (d | a) * 2 + 1 & a)) * -2 + -2",
                    "attributes": {
                        "numOps": 90,
                        "nestedExprLevel": 22,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 55.00000000000001,
                        "opsPercentages": {
                            "arithmetic": 45.55555555555556,
                            "mul": 14.444444444444443,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((a & (a ^ 0xffffffff)) + a & (d ^ a ^ 0xffffffff) + (d | a) + (d | a) + ((a + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 2) * ((a & (a ^ 0xffffffff)) + a | (d ^ a ^ 0xffffffff) + (d | a) + (d | a) + ((a + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 2) + ((a & (a ^ 0xffffffff)) + a & ((d ^ a ^ 0xffffffff) + (d | a) + (d | a) + ((a + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 2 ^ 0xffffffff)) * (((a & (a ^ 0xffffffff)) + a ^ 0xffffffff) & (d ^ a ^ 0xffffffff) + (d | a) + (d | a) + ((a + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 2)) - (((a ^ 0xffffffff | a) - (a ^ 0xffffffff) ^ 0xffffffff | (d ^ 0xffffffff | a) + d + 1) - ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) ^ 0xffffffff))) + (((a & (a ^ 0xffffffff)) + a & (d ^ a ^ 0xffffffff) + (d | a) + (d | a) + ((a + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 2) * ((a & (a ^ 0xffffffff)) + a | (d ^ a ^ 0xffffffff) + (d | a) + (d | a) + ((a + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 2) + ((a & (a ^ 0xffffffff)) + a & ((d ^ a ^ 0xffffffff) + (d | a) + (d | a) + ((a + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 2 ^ 0xffffffff)) * (((a & (a ^ 0xffffffff)) + a ^ 0xffffffff) & (d ^ a ^ 0xffffffff) + (d | a) + (d | a) + ((a + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 2) | ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) ^ 0xffffffff | (d ^ 0xffffffff | a) + d + 1) - ((a ^ 0xffffffff | a) - (a ^ 0xffffffff) ^ 0xffffffff) ^ 0xffffffff) * -2 + -2",
                    "attributes": {
                        "numOps": 194,
                        "nestedExprLevel": 63,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 3.0,
                        "opsPercentages": {
                            "arithmetic": 41.75257731958763,
                            "mul": 2.5773195876288657,
                            "bitwise": 55.670103092783506
                        },
                        "percentageDAGsCancel": 7.5
                    }
                },
                "msvc_default": {
                    "expr": "(((a & (~a ^ d) + (d | a) + (d | a) + 2 + ~(~(a + 1 + ~d) + 1)) * (a | (~a ^ d) + (d | a) + (d | a) + 2 + ~(~(a + 1 + ~d) + 1)) + (a & ~((~a ^ d) + (d | a) + (d | a) + 2 + ~(~(a + 1 + ~d) + 1))) * (~a & (~a ^ d) + (d | a) + (d | a) + 2 + ~(~(a + 1 + ~d) + 1))) - ((~(-~a - 1) | (~d | a) + 1 + d) - ~(-~a - 1))) + ((a & (~a ^ d) + (d | a) + (d | a) + 2 + ~(~(a + 1 + ~d) + 1)) * (a | (~a ^ d) + (d | a) + (d | a) + 2 + ~(~(a + 1 + ~d) + 1)) + (a & ~((~a ^ d) + (d | a) + (d | a) + 2 + ~(~(a + 1 + ~d) + 1))) * (~a & (~a ^ d) + (d | a) + (d | a) + 2 + ~(~(a + 1 + ~d) + 1)) | ~((~(-~a - 1) | (~d | a) + 1 + d) - ~(-~a - 1))) * -2 + -2",
                    "attributes": {
                        "numOps": 166,
                        "nestedExprLevel": 37,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 17.0,
                        "opsPercentages": {
                            "arithmetic": 46.3855421686747,
                            "mul": 3.0120481927710845,
                            "bitwise": 50.602409638554214
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "gcc_O3": {
                    "expr": "((-~(a ^ d) + 1 + (a | d) * 2 + ~d + a - 2 & a) * (~a & ~(a ^ d) + 1 + (a | d) * 2 + ~d + a + 1) + (~(a ^ d) + 1 + (a | d) * 2 + ~d + a + 1 | a) * (~(a ^ d) + 1 + (a | d) * 2 + ~d + a + 1 & a) - a) + (~a | (-~(a ^ d) + 1 + (a | d) * 2 + ~d + a - 2 & a) * (~a & ~(a ^ d) + 1 + (a | d) * 2 + ~d + a + 1) + (~(a ^ d) + 1 + (a | d) * 2 + ~d + a + 1 | a) * (~(a ^ d) + 1 + (a | d) * 2 + ~d + a + 1 & a)) * -2 + -2",
                    "attributes": {
                        "numOps": 106,
                        "nestedExprLevel": 19,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 47.0,
                        "opsPercentages": {
                            "arithmetic": 46.22641509433962,
                            "mul": 12.264150943396226,
                            "bitwise": 41.509433962264154
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                }
            }
        },
        {
            "num": 239,
            "gt": {
                "expr": "((((-(-a))^(a&a))|((-a)+(~((-a)^a)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 37.5
                }
            },
            "mba": {
                "expr": "((((~ (~ (a - 1)) + 1) | (((~ a | a) + a) + 1)) - ((~ (~ (a - 1)) + 1) & (((~ a | a) + a) + 1))) & ~ (((~ a + 1) | ((~ (a - 1) & a) + ~ (~ (a - 1) | a))) + ((~ a + 1) & ((~ (a - 1) & a) + ~ (~ (a - 1) | a))))) + (((~ a + 1) | ((~ (a - 1) & a) + ~ (~ (a - 1) | a))) + ((~ a + 1) & ((~ (a - 1) & a) + ~ (~ (a - 1) | a))))",
                "attributes": {
                    "numOps": 68,
                    "nestedExprLevel": 32,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 41.17647058823529,
                        "mul": 0.0,
                        "bitwise": 58.82352941176471
                    },
                    "percentageDAGsCancel": 27.27272727272727
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(-a | a) + (-a & a)) - a",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 89.70588235294117,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "msvc_O1": {
                    "expr": "(-a | (~(a - 1) & a) + ~(~(a - 1) | a)) + (-a & (~(a - 1) & a) + ~(~(a - 1) | a))",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 8,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 69.11764705882352,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 0.0,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(-a | a) - a) + (-a & a)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 89.70588235294117,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "clang_default": {
                    "expr": "((a | (a ^ 0xffffffff | a) + a + 1) - (a & (a ^ 0xffffffff | a) + a + 1) & (((a ^ 0xffffffff) + 1 | ((a - 1 ^ 0xffffffff) & a) + ((a - 1 ^ 0xffffffff | a) ^ 0xffffffff)) + ((a ^ 0xffffffff) + 1 & ((a - 1 ^ 0xffffffff) & a) + ((a - 1 ^ 0xffffffff | a) ^ 0xffffffff) ) ^ 0xffffffff)) + ((a ^ 0xffffffff) + 1 | ((a - 1 ^ 0xffffffff) & a) + ((a - 1 ^ 0xffffffff | a) ^ 0xffffffff)) + ((a ^ 0xffffffff) + 1 & ((a - 1 ^ 0xffffffff) & a) + ((a - 1 ^ 0xffffffff | a) ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 60,
                        "nestedExprLevel": 18,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 11.76470588235294,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 0.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 9.523809523809524
                    }
                },
                "msvc_default": {
                    "expr": "(~a + 1 | (~(a - 1) & a) + ~(~(a - 1) | a)) + (~a + 1 & (~(a - 1) & a) + ~(~(a - 1) | a))",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 8,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 66.17647058823529,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 0.0,
                            "bitwise": 60.86956521739131
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~(-a | a) + (-a & a)) - a",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 89.70588235294117,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 240,
            "gt": {
                "expr": "(((-((e+e)-((e|a)*e)))*(~(a&e))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 25.0,
                        "bitwise": 37.5
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "((~ ((((e - ~ e) - 1) + ~ ((((e & ~ a) + a) & e) * (((e & ~ a) + a) | e) + (((e & ~ a) + a) & ~ e) * (~ ((e & ~ a) + a) & e))) + 1) + 1) & (- (((~ a | e) + a) + 1) - 1)) * ((~ ((((e - ~ e) - 1) + ~ ((((e & ~ a) + a) & e) * (((e & ~ a) + a) | e) + (((e & ~ a) + a) & ~ e) * (~ ((e & ~ a) + a) & e))) + 1) + 1) | (- (((~ a | e) + a) + 1) - 1)) + ((~ ((((e - ~ e) - 1) + ~ ((((e & ~ a) + a) & e) * (((e & ~ a) + a) | e) + (((e & ~ a) + a) & ~ e) * (~ ((e & ~ a) + a) & e))) + 1) + 1) & ~ (- (((~ a | e) + a) + 1) - 1)) * (~ (~ ((((e - ~ e) - 1) + ~ ((((e & ~ a) + a) & e) * (((e & ~ a) + a) | e) + (((e & ~ a) + a) & ~ e) * (~ ((e & ~ a) + a) & e))) + 1) + 1) & (- (((~ a | e) + a) + 1) - 1))",
                "attributes": {
                    "numOps": 149,
                    "nestedExprLevel": 70,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 38.25503355704698,
                        "mul": 6.7114093959731544,
                        "bitwise": 55.033557046979865
                    },
                    "percentageDAGsCancel": 18.181818181818183
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-((~a | e) + a) - 2 & ~((~(a + (~a & e)) & e) * ((~a & e) + a & ~e) + (a + (~a & e) & e) * (a + (~a & e) | e)) + (e - ~e) + -1) * (((a + (~a & e) & e) * (a + (~a & e) | e) + (~(a + (~a & e)) & e) * ((~a & e) + a & ~e)) - ((e - ~e) + -1) & a + (~a | e) + 1) + (((a + (~a & e) & e) * (a + (~a & e) | e) + (~(a + (~a & e)) & e) * ((~a & e) + a & ~e)) - ((e - ~e) + -1) & -((~a | e) + a) - 2) * (-((~a | e) + a) - 2 | ((a + (~a & e) & e) * (a + (~a & e) | e) + (~(a + (~a & e)) & e) * ((~a & e) + a & ~e)) - ((e - ~e) + -1))",
                    "attributes": {
                        "numOps": 131,
                        "nestedExprLevel": 38,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 12.080536912751679,
                        "opsPercentages": {
                            "arithmetic": 36.6412213740458,
                            "mul": 7.633587786259542,
                            "bitwise": 55.72519083969466
                        },
                        "percentageDAGsCancel": 14.705882352941178
                    }
                },
                "msvc_O1": {
                    "expr": "(~(-2 - (~a | e)) - a & (~e & (~a & e) + a) * (~(~a & e) + a & e) + ((~a & e) + a | e) * ((~a & e) + a & e) + e * -2) * (~(~e & (~a & e) + a) * (~(~a & e) + a & e) + ((~a & e) + a | e) * ((~a & e) + a & e) + e * -2 & (-2 - (~a | e)) - a) + ((-2 - (~a | e)) - a | (~e & (~a & e) + a) * (~(~a & e) + a & e) + ((~a & e) + a | e) * ((~a & e) + a & e) + e * -2) * ((-2 - (~a | e)) - a & (~e & (~a & e) + a) * (~(~a & e) + a & e) + ((~a & e) + a | e) * ((~a & e) + a & e) + e * -2)",
                    "attributes": {
                        "numOps": 125,
                        "nestedExprLevel": 26,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 16.10738255033557,
                        "opsPercentages": {
                            "arithmetic": 32.800000000000004,
                            "mul": 11.200000000000001,
                            "bitwise": 56.00000000000001
                        },
                        "percentageDAGsCancel": 9.375
                    }
                },
                "clang_O3": {
                    "expr": "(~(~(~a & e) + a & e) * (~e & (~a & e) + a) + e * -2 + ((~a & e) + a | e) * ((~a & e) + a & e) & (-2 - e) - a) * (a + e + 1 & (~(~a & e) + a & e) * (~e & (~a & e) + a) + e * -2 + ((~a & e) + a | e) * ((~a & e) + a & e)) + ((~(~a & e) + a & e) * (~e & (~a & e) + a) + e * -2 + ((~a & e) + a | e) * ((~a & e) + a & e) | (-2 - e) - a) * ((~(~a & e) + a & e) * (~e & (~a & e) + a) + e * -2 + ((~a & e) + a | e) * ((~a & e) + a & e) & (-2 - e) - a)",
                    "attributes": {
                        "numOps": 115,
                        "nestedExprLevel": 24,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 22.818791946308725,
                        "opsPercentages": {
                            "arithmetic": 34.78260869565217,
                            "mul": 12.173913043478262,
                            "bitwise": 53.04347826086957
                        },
                        "percentageDAGsCancel": 6.451612903225806
                    }
                },
                "clang_default": {
                    "expr": "(((e - (e ^ 0xffffffff)) + (((e & (a ^ 0xffffffff)) + a & e) * ((e & (a ^ 0xffffffff)) + a | e) + ((e & (a ^ 0xffffffff)) + a & (e ^ 0xffffffff)) * (((e & (a ^ 0xffffffff)) + a ^ 0xffffffff) & e) ^ 0xffffffff) ^ 0xffffffff) + 1 & 0xffffffff - ((a ^ 0xffffffff | e) + a + 1)) * (((e - (e ^ 0xffffffff)) + (((e & (a ^ 0xffffffff)) + a & e) * ((e & (a ^ 0xffffffff)) + a | e) + ((e & (a ^ 0xffffffff)) + a & (e ^ 0xffffffff)) * (((e & (a ^ 0xffffffff)) + a ^ 0xffffffff) & e) ^ 0xffffffff) ^ 0xffffffff) + 1 | 0xffffffff - ((a ^ 0xffffffff | e) + a + 1)) + (((e - (e ^ 0xffffffff)) + (((e & (a ^ 0xffffffff)) + a & e) * ((e & (a ^ 0xffffffff)) + a | e) + ((e & (a ^ 0xffffffff)) + a & (e ^ 0xffffffff)) * (((e & (a ^ 0xffffffff)) + a ^ 0xffffffff) & e) ^ 0xffffffff) ^ 0xffffffff) + 1 & (0xffffffff - ((a ^ 0xffffffff | e) + a + 1) ^ 0xffffffff)) * ((((e - (e ^ 0xffffffff)) + (((e & (a ^ 0xffffffff)) + a & e) * ((e & (a ^ 0xffffffff)) + a | e) + ((e & (a ^ 0xffffffff)) + a & (e ^ 0xffffffff)) * (((e & (a ^ 0xffffffff)) + a ^ 0xffffffff) & e) ^ 0xffffffff) ^ 0xffffffff) + 1 ^ 0xffffffff) & 0xffffffff - ((a ^ 0xffffffff | e) + a + 1))",
                    "attributes": {
                        "numOps": 137,
                        "nestedExprLevel": 64,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 8.053691275167784,
                        "opsPercentages": {
                            "arithmetic": 32.846715328467155,
                            "mul": 7.2992700729927,
                            "bitwise": 59.854014598540154
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "msvc_default": {
                    "expr": "(~((e - ~e) + ~(((~a & e) + a & e) * ((~a & e) + a | e) + ((~a & e) + a & ~e) * (~((~a & e) + a) & e))) + 1 & ~(0xffffffff - ((~a | e) + 1 + a))) * (~(~((e - ~e) + ~(((~a & e) + a & e) * ((~a & e) + a | e) + ((~a & e) + a & ~e) * (~((~a & e) + a) & e))) + 1) & 0xffffffff - ((~a | e) + 1 + a)) + (~((e - ~e) + ~(((~a & e) + a & e) * ((~a & e) + a | e) + ((~a & e) + a & ~e) * (~((~a & e) + a) & e))) + 1 & 0xffffffff - ((~a | e) + 1 + a)) * (~((e - ~e) + ~(((~a & e) + a & e) * ((~a & e) + a | e) + ((~a & e) + a & ~e) * (~((~a & e) + a) & e))) + 1 | 0xffffffff - ((~a | e) + 1 + a))",
                    "attributes": {
                        "numOps": 137,
                        "nestedExprLevel": 40,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 8.053691275167784,
                        "opsPercentages": {
                            "arithmetic": 32.846715328467155,
                            "mul": 7.2992700729927,
                            "bitwise": 59.854014598540154
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "gcc_O3": {
                    "expr": "(~(~a & e) * (a & ~e) + (a | e) * (a & e) + (e - ~e) + -1 & -(~a | e) + a - 2) * ((~a | e) + a + 1 & (~a & e) * (a & ~e) + (a | e) * (a & e) - (e - ~e) + -1) + ((~a & e) * (a & ~e) + (a | e) * (a & e) - (e - ~e) + -1 & -(~a | e) + a - 2) * ((~a & e) * (a & ~e) + (a | e) * (a & e) - (e - ~e) + -1 | -(~a | e) + a - 2)",
                    "attributes": {
                        "numOps": 83,
                        "nestedExprLevel": 17,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 44.29530201342282,
                        "opsPercentages": {
                            "arithmetic": 38.55421686746988,
                            "mul": 12.048192771084338,
                            "bitwise": 49.39759036144578
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                }
            }
        },
        {
            "num": 241,
            "gt": {
                "expr": "(((-(a*(a+a)))|((-b)|a)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 16.666666666666664,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ ((a & ((a | a) + (a & a))) * (a | ((a | a) + (a & a))) + (a & ~ ((a | a) + (a & a))) * (~ a & ((a | a) + (a & a)))) + 1) & ~ ((((~ b + 1) + a) + 1) + ((- (~ b + 1) - 1) | (- a - 1)))) + ((((~ b + 1) + a) + 1) + ((- (~ b + 1) - 1) | (- a - 1)))",
                "attributes": {
                    "numOps": 50,
                    "nestedExprLevel": 28,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 4.0,
                        "bitwise": 46.0
                    },
                    "percentageDAGsCancel": 14.814814814814813
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~a | b - 1) + (a - b) + 1 + (-((~(a * 2) & a) * (a * 2 & ~a) + (a * 2 & a) * (a * 2 | a)) & ~((~a | b - 1) + (a - b) + 1))",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 9,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 42.0,
                        "opsPercentages": {
                            "arithmetic": 37.93103448275862,
                            "mul": 20.689655172413794,
                            "bitwise": 41.37931034482759
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_O1": {
                    "expr": "a + 2 + (-((~a * 2 & a) * (~a & a * 2) + (a * 2 | a) * (a * 2 & a)) & ~(~b + 2 + b - 1 | ~a + a)) + b - 1 | ~a + ~b",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 6,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 38.0,
                        "opsPercentages": {
                            "arithmetic": 35.483870967741936,
                            "mul": 19.35483870967742,
                            "bitwise": 45.16129032258064
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "clang_O3": {
                    "expr": "(~((a - b) + b - 1 | ~a + 1) & -((a * 2 & ~a) * (~a * 2 & a) + (a * 2 | a) * (a * 2 & a))) + (a - b) + b - 1 | ~a + 1",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 42.0,
                        "opsPercentages": {
                            "arithmetic": 37.93103448275862,
                            "mul": 20.689655172413794,
                            "bitwise": 41.37931034482759
                        },
                        "percentageDAGsCancel": 18.181818181818183
                    }
                },
                "clang_default": {
                    "expr": "(((a & a * 2) * (a | a * 2) + (a & (a * 2 ^ 0xffffffff)) * ((a ^ 0xffffffff) & a * 2) ^ 0xffffffff) + 1 & ((b ^ 0xffffffff) + a + 2 + (0xffffffff - ((b ^ 0xffffffff) + 1) | 0xffffffff - a) ^ 0xffffffff)) + (b ^ 0xffffffff) + a + 2 + (0xffffffff - ((b ^ 0xffffffff) + 1) | 0xffffffff - a)",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 13,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 28.000000000000004,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 16.666666666666664,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~((a * 2 & a) * (a * 2 | a) + (~(a * 2) & a) * (~a & a * 2)) + 1 & ~(~b + a + 2 + (0xffffffff - (~b + 1) | 0xffffffff - a))) + ~b + a + 2 + (0xffffffff - (~b + 1) | 0xffffffff - a)",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 10,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 28.000000000000004,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 16.666666666666664,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(-((~a * 2 & a) * (~a & a * 2) + (a * 2 | a) * (a * 2 & a)) & ~(a - b) + 1 + (b - 1 | ~a)) + (a - b) + 1 + (b - 1 | ~a)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 42.0,
                        "opsPercentages": {
                            "arithmetic": 37.93103448275862,
                            "mul": 20.689655172413794,
                            "bitwise": 41.37931034482759
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 242,
            "gt": {
                "expr": "((((b&c)-(c*b))|(((~b)^c)^(-(-c)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 11.11111111111111,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "((((((~ b | c) + b) + 1) ^ ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) - ((~ (((~ b | c) + b) + 1) & ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) << 1)) & ~ (((((- b - 1) | c) - ((- b - 1) & c)) | ~ ((~ c + 1) - 1)) - ((((- b - 1) | c) - ((- b - 1) & c)) & ~ ((~ c + 1) - 1)))) + (((((- b - 1) | c) - ((- b - 1) & c)) | ~ ((~ c + 1) - 1)) - ((((- b - 1) | c) - ((- b - 1) & c)) & ~ ((~ c + 1) - 1)))",
                "attributes": {
                    "numOps": 84,
                    "nestedExprLevel": 39,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 45.23809523809524,
                        "mul": 4.761904761904762,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 6.451612903225806
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b + (~b | c) + 1 ^ (~c & b) * (~b & c) + (c & b) * (c | b)) + ((~c & b) * (~b & c) + (c & b) * (c | b) & -(b + (~b | c)) - 2) * -2 & (~(b ^ c) & c) + (~c & b)) + ((~b | c) - (~(b ^ c) & c))",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 14,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 45.23809523809524,
                        "opsPercentages": {
                            "arithmetic": 26.08695652173913,
                            "mul": 10.869565217391305,
                            "bitwise": 63.04347826086957
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "msvc_O1": {
                    "expr": "((~(~b | c - ~b & c | c - ~b | c - ~b & c & c) & (b + 1 + ~b | c ^ (b | c) * (b & c) + (~c & b) * ~b & c) - (~b + 1 + ~b | c * 2 & (b | c) * (b & c) + (~c & b) * ~b & c * 2)) - ~b | c - ~b & c & c) + ~b | c - ~b & c | c",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 8,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 27.380952380952383,
                        "opsPercentages": {
                            "arithmetic": 22.950819672131146,
                            "mul": 9.836065573770492,
                            "bitwise": 67.21311475409836
                        },
                        "percentageDAGsCancel": 6.0606060606060606
                    }
                },
                "clang_O3": {
                    "expr": "(~~b | c - (c & b) & (~b | c + b + 1 ^ (~c & b) * (~b & c) + (c | b) * (c & b)) + (0x7ffffffe - (~b | c + b) & (~c & b) * (~b & c) + (c | b) * (c & b)) * -2) + ~b | c - (c & b)",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 9,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 26.190476190476193,
                            "mul": 11.904761904761903,
                            "bitwise": 61.904761904761905
                        },
                        "percentageDAGsCancel": 8.0
                    }
                },
                "clang_default": {
                    "expr": "(((b ^ 0xffffffff | c) + b + 1 ^ (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) + (((b ^ 0xffffffff | c) + b + 1 ^ 0xffffffff) & (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) * -2 & (((0xffffffff - b | c) - (0xffffffff - b & c) | c) - ((0xffffffff - b | c) - (0xffffffff - b & c) & c) ^ 0xffffffff)) + (((0xffffffff - b | c) - (0xffffffff - b & c) | c) - ((0xffffffff - b | c) - (0xffffffff - b & c) & c))",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 21,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 27.380952380952383,
                        "opsPercentages": {
                            "arithmetic": 37.704918032786885,
                            "mul": 8.19672131147541,
                            "bitwise": 54.09836065573771
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "msvc_default": {
                    "expr": "(((~b | c) + 1 + b ^ (c & b) * (c | b) + (~b & c) * (~c & b)) + (~((~b | c) + 1 + b) & (c & b) * (c | b) + (~b & c) * (~c & b)) * -2 & ~(((0xffffffff - b | c) - (0xffffffff - b & c) | c) - ((0xffffffff - b | c) - (0xffffffff - b & c) & c))) + (((0xffffffff - b | c) - (0xffffffff - b & c) | c) - ((0xffffffff - b | c) - (0xffffffff - b & c) & c))",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 19,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 27.380952380952383,
                        "opsPercentages": {
                            "arithmetic": 37.704918032786885,
                            "mul": 8.19672131147541,
                            "bitwise": 54.09836065573771
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~b | c + b + 1 ^ (b & c) * (b | c) + (~b & c) * (~c & b)) + (-~b | c + b - 2 & (b & c) * (b | c) + (~b & c) * (~c & b)) * -2 & (~c & b) + (b & c) ) + (~b | c - (b & c))",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 11,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 11.904761904761903,
                            "bitwise": 59.523809523809526
                        },
                        "percentageDAGsCancel": 8.0
                    }
                }
            }
        },
        {
            "num": 243,
            "gt": {
                "expr": "((((a+(d&b))^(-(d+d)))-((d^(-b))-(d&d))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 0.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "((((((a | ((~ d | b) - ~ d)) << 1) - (a ^ ((~ d | b) - ~ d))) | (~ ((d | d) + (d & d)) + 1)) - ((((a | ((~ d | b) - ~ d)) << 1) - (a ^ ((~ d | b) - ~ d))) & (~ ((d | d) + (d & d)) + 1))) & ~ (((((d | ~ (b - 1)) - (d & ~ (b - 1))) & ~ (((~ d | d) + d) + 1)) + (((d | ~ (b - 1)) - (d & ~ (b - 1))) & ~ (((~ d | d) + d) + 1))) - (((d | ~ (b - 1)) - (d & ~ (b - 1))) ^ (((~ d | d) + d) + 1)))) - (~ (((((a | ((~ d | b) - ~ d)) << 1) - (a ^ ((~ d | b) - ~ d))) | (~ ((d | d) + (d & d)) + 1)) - ((((a | ((~ d | b) - ~ d)) << 1) - (a ^ ((~ d | b) - ~ d))) & (~ ((d | d) + (d & d)) + 1))) & (((((d | ~ (b - 1)) - (d & ~ (b - 1))) & ~ (((~ d | d) + d) + 1)) + (((d | ~ (b - 1)) - (d & ~ (b - 1))) & ~ (((~ d | d) + d) + 1))) - (((d | ~ (b - 1)) - (d & ~ (b - 1))) ^ (((~ d | d) + d) + 1))))",
                "attributes": {
                    "numOps": 159,
                    "nestedExprLevel": 86,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 35.84905660377358,
                        "mul": 0.0,
                        "bitwise": 64.15094339622641
                    },
                    "percentageDAGsCancel": 9.090909090909092
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((b & d | a) * 2 - (b & d ^ a) ^ d * -2) & ~(b + (~d & (-b ^ d)) * 2)) - ((~((b & d | a) * 2) + (b & d ^ a) ^ d * -2) & b + (~d & (-b ^ d)) * 2)",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 12,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 77.9874213836478,
                        "opsPercentages": {
                            "arithmetic": 25.71428571428571,
                            "mul": 17.142857142857142,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "msvc_O1": {
                    "expr": "(~((~(b - 1) | d) - (~(b - 1) & d) & ~d) * 2 - ((~(b - 1) | d) - (~(b - 1) & d) ^ d) & (d * -2 | ((~d | b) + d * 2 + 2 | a * 2) - ((~d | b) + d + 1 ^ a)) - (d * -2 & ((~d | b) + d * 2 + 2 | a * 2) - ((~d | b) + d + 1 ^ a))) - (~(d * -2 | ((~d | b) + d * 2 + 2 | a * 2) - ((~d | b) + d + 1 ^ a)) - (d * -2 & ((~d | b) + d * 2 + 2 | a * 2) - ((~d | b) + d + 1 ^ a)) & ((~(b - 1) | d) - (~(b - 1) & d) & ~d) * 2 - ((~(b - 1) | d) - (~(b - 1) & d) ^ d))",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 28,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 31.446540880503143,
                        "opsPercentages": {
                            "arithmetic": 37.61467889908257,
                            "mul": 12.844036697247708,
                            "bitwise": 49.54128440366973
                        },
                        "percentageDAGsCancel": 3.0303030303030303
                    }
                },
                "clang_O3": {
                    "expr": "(~b & d * -2 ^ (d & b | a) * 2 - (d & b ^ a)) - (~d * -2 ^ (d & b | a) * 2 - (d & b ^ a) & b)",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 5,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 85.53459119496856,
                        "opsPercentages": {
                            "arithmetic": 21.73913043478261,
                            "mul": 17.391304347826086,
                            "bitwise": 60.86956521739131
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_default": {
                    "expr": "(((a | (d ^ 0xffffffff | b) - (d ^ 0xffffffff)) * 2 - (a ^ (d ^ 0xffffffff | b) - (d ^ 0xffffffff)) | (d * 2 ^ 0xffffffff) + 1) - ((a | (d ^ 0xffffffff | b) - (d ^ 0xffffffff)) * 2 - (a ^ (d ^ 0xffffffff | b) - (d ^ 0xffffffff)) & (d * 2 ^ 0xffffffff) + 1) & ((((d | b - 1 ^ 0xffffffff) - (d & (b - 1 ^ 0xffffffff)) & ((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff)) + ((d | b - 1 ^ 0xffffffff) - (d & (b - 1 ^ 0xffffffff)) & ((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff))) - ((d | b - 1 ^ 0xffffffff) - (d & (b - 1 ^ 0xffffffff)) ^ (d ^ 0xffffffff | d) + d + 1) ^ 0xffffffff)) - ((((a | (d ^ 0xffffffff | b) - (d ^ 0xffffffff)) * 2 - (a ^ (d ^ 0xffffffff | b) - (d ^ 0xffffffff)) | (d * 2 ^ 0xffffffff) + 1) - ((a | (d ^ 0xffffffff | b) - (d ^ 0xffffffff)) * 2 - (a ^ (d ^ 0xffffffff | b) - (d ^ 0xffffffff)) & (d * 2 ^ 0xffffffff) + 1) ^ 0xffffffff) & (((d | b - 1 ^ 0xffffffff) - (d & (b - 1 ^ 0xffffffff)) & ((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff)) + ((d | b - 1 ^ 0xffffffff) - (d & (b - 1 ^ 0xffffffff)) & ((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff))) - ((d | b - 1 ^ 0xffffffff) - (d & (b - 1 ^ 0xffffffff)) ^ (d ^ 0xffffffff | d) + d + 1))",
                    "attributes": {
                        "numOps": 151,
                        "nestedExprLevel": 45,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 5.031446540880504,
                        "opsPercentages": {
                            "arithmetic": 35.099337748344375,
                            "mul": 5.298013245033113,
                            "bitwise": 59.60264900662252
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "msvc_default": {
                    "expr": "((((~d | b) - ~d | a) * 2 - ((~d | b) - ~d ^ a) | ~(d * 2) + 1) - (((~d | b) - ~d | a) * 2 - ((~d | b) - ~d ^ a) & ~(d * 2) + 1) & ~((((~(b - 1) | d) - (~(b - 1) & d) & ~d) + ((~(b - 1) | d) - (~(b - 1) & d) & ~d)) - ((~(b - 1) | d) - (~(b - 1) & d) ^ d))) - (~((((~d | b) - ~d | a) * 2 - ((~d | b) - ~d ^ a) | ~(d * 2) + 1) - (((~d | b) - ~d | a) * 2 - ((~d | b) - ~d ^ a) & ~(d * 2) + 1)) & (((~(b - 1) | d) - (~(b - 1) & d) & ~d) + ((~(b - 1) | d) - (~(b - 1) & d) & ~d)) - ((~(b - 1) | d) - (~(b - 1) & d) ^ d))",
                    "attributes": {
                        "numOps": 127,
                        "nestedExprLevel": 42,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 20.125786163522015,
                        "opsPercentages": {
                            "arithmetic": 32.28346456692913,
                            "mul": 6.299212598425196,
                            "bitwise": 61.417322834645674
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "gcc_O3": {
                    "expr": "(((b & d | a) * 2 - b & d ^ a ^ d * -2) & ~b) - ((~(b & d | a) * 2 + b & d ^ a ^ d * -2) & b)",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 6,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 85.53459119496856,
                        "opsPercentages": {
                            "arithmetic": 21.73913043478261,
                            "mul": 17.391304347826086,
                            "bitwise": 60.86956521739131
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                }
            }
        },
        {
            "num": 244,
            "gt": {
                "expr": "(((-e)-((e-(c+c))+((e|c)^(-e)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 0.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((~ e + 1) & ~ ((((e + ~ (((c | c) << 1) - (c ^ c))) + 1) ^ ((((e & ~ c) + c) | ~ (e - 1)) - (((e & ~ c) + c) & ~ (e - 1)))) + ((((e + ~ (((c | c) << 1) - (c ^ c))) + 1) & ((((e & ~ c) + c) | ~ (e - 1)) - (((e & ~ c) + c) & ~ (e - 1)))) << 1))) << 1) - ((~ e + 1) ^ ((((e + ~ (((c | c) << 1) - (c ^ c))) + 1) ^ ((((e & ~ c) + c) | ~ (e - 1)) - (((e & ~ c) + c) & ~ (e - 1)))) + ((((e + ~ (((c | c) << 1) - (c ^ c))) + 1) & ((((e & ~ c) + c) | ~ (e - 1)) - (((e & ~ c) + c) & ~ (e - 1)))) << 1)))",
                "attributes": {
                    "numOps": 97,
                    "nestedExprLevel": 60,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 38.144329896907216,
                        "mul": 0.0,
                        "bitwise": 61.855670103092784
                    },
                    "percentageDAGsCancel": 19.230769230769234
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(((-e ^ (~c & e) + c) & e + ~(c * 2) + 1) * 2 + (e + ~(c * 2) + 1 ^ -e ^ (~c & e) + c)) & -e) * 2 - (-e ^ ((-e ^ (~c & e) + c) & e + ~(c * 2) + 1) * 2 + (e + ~(c * 2) + 1 ^ -e ^ (~c & e) + c))",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 14,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 47.42268041237113,
                        "opsPercentages": {
                            "arithmetic": 41.17647058823529,
                            "mul": 13.725490196078432,
                            "bitwise": 45.09803921568628
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_O1": {
                    "expr": "(~((~(e - 1) * 2 | (~c & e) + c * 2) + (~(e - 1) & (~c & e) + c) * -2 & ~(c * 2) + e * 2 + 2) + ((~(e - 1) | (~c & e) + c) - (~(e - 1) & (~c & e) + c) ^ ~(c * 2) + e + 1) * 2 & ~e * 2 + 2) - (~e + 1 ^ ((~(e - 1) * 2 | (~c & e) + c * 2) + (~(e - 1) & (~c & e) + c) * -2 & ~(c * 2) + e * 2 + 2) + ((~(e - 1) | (~c & e) + c) - (~(e - 1) & (~c & e) + c) ^ ~(c * 2) + e + 1))",
                    "attributes": {
                        "numOps": 94,
                        "nestedExprLevel": 24,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 3.0927835051546393,
                        "opsPercentages": {
                            "arithmetic": 37.234042553191486,
                            "mul": 14.893617021276595,
                            "bitwise": 47.87234042553192
                        },
                        "percentageDAGsCancel": 2.941176470588235
                    }
                },
                "clang_O3": {
                    "expr": "(~((~c & e) + c ^ -e ^ e + c * -2) + ((~c & e) + c ^ -e & e + c * -2) * 2 & -e) * 2 - (-e ^ ((~c & e) + c ^ -e ^ e + c * -2) + ((~c & e) + c ^ -e & e + c * -2) * 2)",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 8,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 51.546391752577314,
                        "opsPercentages": {
                            "arithmetic": 44.680851063829785,
                            "mul": 14.893617021276595,
                            "bitwise": 40.42553191489361
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e ^ 0xffffffff) + 1 & ((e + (c * 2 ^ 0xffffffff) + 1 ^ ((e & (c ^ 0xffffffff)) + c | e - 1 ^ 0xffffffff) - ((e & (c ^ 0xffffffff)) + c & (e - 1 ^ 0xffffffff))) + (e + (c * 2 ^ 0xffffffff) + 1 & ((e & (c ^ 0xffffffff)) + c | e - 1 ^ 0xffffffff) - ((e & (c ^ 0xffffffff)) + c & (e - 1 ^ 0xffffffff))) * 2 ^ 0xffffffff)) * 2 - ((e ^ 0xffffffff) + 1 ^ (e + (c * 2 ^ 0xffffffff) + 1 ^ ((e & (c ^ 0xffffffff)) + c | e - 1 ^ 0xffffffff) - ((e & (c ^ 0xffffffff)) + c & (e - 1 ^ 0xffffffff))) + (e + (c * 2 ^ 0xffffffff) + 1 & ((e & (c ^ 0xffffffff)) + c | e - 1 ^ 0xffffffff) - ((e & (c ^ 0xffffffff)) + c & (e - 1 ^ 0xffffffff))) * 2)",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 28,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 12.371134020618557,
                        "opsPercentages": {
                            "arithmetic": 38.82352941176471,
                            "mul": 8.235294117647058,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "msvc_default": {
                    "expr": "(~e + 1 & ~((e + 1 + ~(c * 2) ^ ((~c & e) + c | ~(e - 1)) - ((~c & e) + c & ~(e - 1))) + (e + 1 + ~(c * 2) & ((~c & e) + c | ~(e - 1)) - ((~c & e) + c & ~(e - 1))) * 2)) * 2 - (~e + 1 ^ (e + 1 + ~(c * 2) ^ ((~c & e) + c | ~(e - 1)) - ((~c & e) + c & ~(e - 1))) + (e + 1 + ~(c * 2) & ((~c & e) + c | ~(e - 1)) - ((~c & e) + c & ~(e - 1))) * 2)",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 24,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 12.371134020618557,
                        "opsPercentages": {
                            "arithmetic": 38.82352941176471,
                            "mul": 8.235294117647058,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "gcc_O3": {
                    "expr": "(~(e + c * -2 ^ (~c & e) + c ^ -e) + (e + c * -2 & (~c & e) + c ^ -e) * 2 & -e) * 2 - (-e ^ (e + c * -2 ^ (~c & e) + c ^ -e) + (e + c * -2 & (~c & e) + c ^ -e) * 2)",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 8,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 51.546391752577314,
                        "opsPercentages": {
                            "arithmetic": 44.680851063829785,
                            "mul": 14.893617021276595,
                            "bitwise": 40.42553191489361
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                }
            }
        },
        {
            "num": 245,
            "gt": {
                "expr": "((-((-c)&((c&a)*a))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ ((((~ (~ c + 1) | (((((~ c | a) + c) + 1) & a) * ((((~ c | a) + c) + 1) | a) + ((((~ c | a) + c) + 1) & ~ a) * (~ (((~ c | a) + c) + 1) & a))) + (~ c + 1)) + 1) - 1)",
                "attributes": {
                    "numOps": 35,
                    "nestedExprLevel": 19,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 5.714285714285714,
                        "bitwise": 54.285714285714285
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "c + ~((-((~c | a) + c) - 2 & a) * (c + (~c | a) + 1 & ~a) + (c + (~c | a) + 1 & a) * (c + (~c | a) + 1 | a) | c - 1)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 8,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 17.142857142857142,
                        "opsPercentages": {
                            "arithmetic": 41.37931034482759,
                            "mul": 6.896551724137931,
                            "bitwise": 51.724137931034484
                        },
                        "percentageDAGsCancel": 15.789473684210526
                    }
                },
                "msvc_O1": {
                    "expr": "~(~c + 1 + ((~a & c + 1 + (~c | a)) * (~c + 1 + (~c | a) & a) + (c + 1 + (~c | a) | a) * (c + 1 + (~c | a) & a) | ~(~c + 1)))",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 8,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 5.714285714285714,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 6.0606060606060606,
                            "bitwise": 57.57575757575758
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "clang_O3": {
                    "expr": "~((-((~c | a) + c) - 2 & a) * (~a & (~c | a) + c + 1) + ((~c | a) + c + 1 | a) * ((~c | a) + c + 1 & a) | c - 1) + c",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 8,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 17.142857142857142,
                        "opsPercentages": {
                            "arithmetic": 41.37931034482759,
                            "mul": 6.896551724137931,
                            "bitwise": 51.724137931034484
                        },
                        "percentageDAGsCancel": 22.22222222222222
                    }
                },
                "clang_default": {
                    "expr": "((c ^ 0xffffffff) + 1 ^ 0xffffffff | ((c ^ 0xffffffff | a) + c + 1 & a) * ((c ^ 0xffffffff | a) + c + 1 | a) + ((c ^ 0xffffffff | a) + c + 1 & (a ^ 0xffffffff)) * (((c ^ 0xffffffff | a) + c + 1 ^ 0xffffffff) & a)) + (c ^ 0xffffffff) + 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 9,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 5.714285714285714,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 6.0606060606060606,
                            "bitwise": 57.57575757575758
                        },
                        "percentageDAGsCancel": 15.789473684210526
                    }
                },
                "msvc_default": {
                    "expr": "~((~(~c + 1) | ((~c | a) + 1 + c & a) * ((~c | a) + 1 + c | a) + ((~c | a) + 1 + c & ~a) * (~((~c | a) + 1 + c) & a)) + 1 + ~c)",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 9,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 5.714285714285714,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 6.0606060606060606,
                            "bitwise": 57.57575757575758
                        },
                        "percentageDAGsCancel": 21.052631578947366
                    }
                },
                "gcc_O3": {
                    "expr": "~((~a & (~c | a) + c + 1) * (-(~c | a) + c - 2 & a) + ((~c | a) + c + 1 & a) * ((~c | a) + c + 1 | a) | c - 1) + c",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 17.142857142857142,
                        "opsPercentages": {
                            "arithmetic": 41.37931034482759,
                            "mul": 6.896551724137931,
                            "bitwise": 51.724137931034484
                        },
                        "percentageDAGsCancel": 21.052631578947366
                    }
                }
            }
        },
        {
            "num": 246,
            "gt": {
                "expr": "(((a*e)^(d-(e&e))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 25.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(((a & e) * (a | e) + (a & ~ e) * (~ a & e)) | ((d ^ ((~ e | e) - ~ e)) - ((~ d & ((~ e | e) - ~ e)) + (~ d & ((~ e | e) - ~ e))))) - (((a & e) * (a | e) + (a & ~ e) * (~ a & e)) & ((d ^ ((~ e | e) - ~ e)) - ((~ d & ((~ e | e) - ~ e)) + (~ d & ((~ e | e) - ~ e)))))",
                "attributes": {
                    "numOps": 59,
                    "nestedExprLevel": 26,
                    "numDAGs": 19,
                    "opsPercentages": {
                        "arithmetic": 22.033898305084744,
                        "mul": 6.779661016949152,
                        "bitwise": 71.1864406779661
                    },
                    "percentageDAGsCancel": 10.526315789473683
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(d ^ e) + (~d & e) * -2 ^ (a & e) * (a | e) + (~a & e) * (~e & a)",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 4,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 72.88135593220339,
                        "opsPercentages": {
                            "arithmetic": 18.75,
                            "mul": 18.75,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "msvc_O1": {
                    "expr": "((d ^ e) + (~d & e) * -2 | (a & e) * (a | e) + (~e & a) * (~a & e)) - ((d ^ e) + (~d & e) * -2 & (a & e) * (a | e) + (~e & a) * (~a & e))",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 44.06779661016949,
                        "opsPercentages": {
                            "arithmetic": 21.21212121212121,
                            "mul": 18.181818181818183,
                            "bitwise": 60.60606060606061
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "clang_O3": {
                    "expr": "(e ^ d) + (~d & e) * -2 ^ (~e & a) * (~a & e) + (e | a) * (e & a)",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 4,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 72.88135593220339,
                        "opsPercentages": {
                            "arithmetic": 18.75,
                            "mul": 18.75,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "clang_default": {
                    "expr": "((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) | (d ^ (e ^ 0xffffffff | e) - (e ^ 0xffffffff)) - (((d ^ 0xffffffff) & (e ^ 0xffffffff | e) - (e ^ 0xffffffff)) + ((d ^ 0xffffffff) & (e ^ 0xffffffff | e) - (e ^ 0xffffffff)))) - ((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) & (d ^ (e ^ 0xffffffff | e) - (e ^ 0xffffffff)) - (((d ^ 0xffffffff) & (e ^ 0xffffffff | e) - (e ^ 0xffffffff)) + ((d ^ 0xffffffff) & (e ^ 0xffffffff | e) - (e ^ 0xffffffff))))",
                    "attributes": {
                        "numOps": 59,
                        "nestedExprLevel": 24,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 22.033898305084744,
                            "mul": 6.779661016949152,
                            "bitwise": 71.1864406779661
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_default": {
                    "expr": "((a & e) * (a | e) + (~e & a) * (~a & e) | (-~e - 1 ^ d) - ((~d & -~e - 1) + (~d & -~e - 1))) - ((a & e) * (a | e) + (~e & a) * (~a & e) & (-~e - 1 ^ d) - ((~d & -~e - 1) + (~d & -~e - 1)))",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 11,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 10.16949152542373,
                        "opsPercentages": {
                            "arithmetic": 35.84905660377358,
                            "mul": 7.547169811320755,
                            "bitwise": 56.60377358490566
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "gcc_O3": {
                    "expr": "(~e & a) * (~a & e) + (a | e) * (a & e) ^ (e ^ d) + (~d & e) * -2",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 4,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 72.88135593220339,
                        "opsPercentages": {
                            "arithmetic": 18.75,
                            "mul": 18.75,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 12.5
                    }
                }
            }
        },
        {
            "num": 247,
            "gt": {
                "expr": "(((c|d)+(((~c)&c)|(-d))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "(((c & ~ d) + d) ^ (((((~ (- c - 1) | c) - ~ (- c - 1)) + ~ (d - 1)) + 1) + ((- ((~ (- c - 1) | c) - ~ (- c - 1)) - 1) | (- (~ (d - 1)) - 1)))) + ((((c & ~ d) + d) & (((((~ (- c - 1) | c) - ~ (- c - 1)) + ~ (d - 1)) + 1) + ((- ((~ (- c - 1) | c) - ~ (- c - 1)) - 1) | (- (~ (d - 1)) - 1)))) << 1)",
                "attributes": {
                    "numOps": 66,
                    "nestedExprLevel": 33,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 62.121212121212125,
                        "mul": 0.0,
                        "bitwise": 37.878787878787875
                    },
                    "percentageDAGsCancel": 27.27272727272727
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-d & (~d & c) + d) * 2 + ((~d & c) + d ^ -d)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 8.333333333333332,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_O1": {
                    "expr": "((~d & c) + d * 2 & d * -2) + (-d ^ (~d & c) + d)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 80.3030303030303,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 15.384615384615385,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_O3": {
                    "expr": "((~d & c) + d ^ -d) + (-d & (~d & c) + d) * 2",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 8.333333333333332,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((c & (d ^ 0xffffffff)) + d ^ ((0xffffffff - c ^ 0xffffffff | c) - (0xffffffff - c ^ 0xffffffff)) + (d - 1 ^ 0xffffffff) + 1 + (0xffffffff - ((0xffffffff - c ^ 0xffffffff | c) - (0xffffffff - c ^ 0xffffffff)) | 0xffffffff - (d - 1 ^ 0xffffffff))) + ((c & (d ^ 0xffffffff)) + d & ((0xffffffff - c ^ 0xffffffff | c) - (0xffffffff - c ^ 0xffffffff)) + (d - 1 ^ 0xffffffff) + 1 + (0xffffffff - ((0xffffffff - c ^ 0xffffffff | c) - (0xffffffff - c ^ 0xffffffff)) | 0xffffffff - (d - 1 ^ 0xffffffff))) * 2",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 16,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 18.181818181818183,
                        "opsPercentages": {
                            "arithmetic": 53.70370370370371,
                            "mul": 1.8518518518518516,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 21.052631578947366
                    }
                },
                "msvc_default": {
                    "expr": "((~d & c) + d ^ ((~(0xffffffff - c) | c) - ~(0xffffffff - c)) + ~(d - 1) + 1 + (0xffffffff - ((~(0xffffffff - c) | c) - ~(0xffffffff - c)) | 0xffffffff - ~(d - 1))) + ((~d & c) + d & ((~(0xffffffff - c) | c) - ~(0xffffffff - c)) + ~(d - 1) + 1 + (0xffffffff - ((~(0xffffffff - c) | c) - ~(0xffffffff - c)) | 0xffffffff - ~(d - 1))) * 2",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 18,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 18.181818181818183,
                        "opsPercentages": {
                            "arithmetic": 53.70370370370371,
                            "mul": 1.8518518518518516,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "gcc_O3": {
                    "expr": "((~d & c) + d ^ -d) + ((~d & c) + d & -d) * 2",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 8.333333333333332,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 248,
            "gt": {
                "expr": "(((~(a|a))&((-(d|a))|b)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 16.666666666666664,
                        "mul": 0.0,
                        "bitwise": 83.33333333333334
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "(~ (- ((a & ~ a) + a) - 1) | ((~ ((((d + a) + 1) + ((- d - 1) | (- a - 1))) - 1) & ~ b) + b)) - ~ (- ((a & ~ a) + a) - 1)",
                "attributes": {
                    "numOps": 27,
                    "nestedExprLevel": 14,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 59.25925925925925,
                        "mul": 0.0,
                        "bitwise": 40.74074074074074
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~a & (((d & a) - (a + d + 1)) + 1 & ~b) + b",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 62.96296296296296,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~(a & d) + a + d | b) + b | a) - a",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 0.0,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_O3": {
                    "expr": "(~b & -(d | a)) + b & ~a",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 74.07407407407408,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 0.0,
                            "bitwise": 71.42857142857143
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - ((a & (a ^ 0xffffffff)) + a) ^ 0xffffffff | ((d + a + (0xffffffff - d | 0xffffffff - a) ^ 0xffffffff) & (b ^ 0xffffffff)) + b) - (0xffffffff - ((a & (a ^ 0xffffffff)) + a) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 11,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 22.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 47.61904761904761,
                            "mul": 0.0,
                            "bitwise": 52.38095238095239
                        },
                        "percentageDAGsCancel": 18.75
                    }
                },
                "msvc_default": {
                    "expr": "(~(0xffffffff - a) | (~(d + a + (0xffffffff - d | 0xffffffff - a)) & ~b) + b) - ~(0xffffffff - a)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 5,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 44.44444444444444,
                        "opsPercentages": {
                            "arithmetic": 53.333333333333336,
                            "mul": 0.0,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((d & a) - d) - a & ~b) + b & ~a",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 70.37037037037037,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 0.0,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 249,
            "gt": {
                "expr": "((((b^b)+(b+a))^(((b*(~a))^b)^(a|a))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 22.22222222222222,
                        "mul": 11.11111111111111,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "(((((((b - b) - ((b | ~ b) << 1)) - 2) | (((b ^ ~ a) + ((b | a) << 1)) + 1)) + ((((b - b) - ((b | ~ b) << 1)) - 2) | (((b ^ ~ a) + ((b | a) << 1)) + 1))) - ((((b - b) - ((b | ~ b) << 1)) - 2) ^ (((b ^ ~ a) + ((b | a) << 1)) + 1))) | (((((((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))) - b) - ((((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))) | ~ b) + (((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))) | ~ b))) - 2) | ((a & ~ a) + a)) - ((((((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))) - b) - ((((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))) | ~ b) + (((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))) | ~ b))) - 2) & ((a & ~ a) + a)))) - (((((((b - b) - ((b | ~ b) << 1)) - 2) | (((b ^ ~ a) + ((b | a) << 1)) + 1)) + ((((b - b) - ((b | ~ b) << 1)) - 2) | (((b ^ ~ a) + ((b | a) << 1)) + 1))) - ((((b - b) - ((b | ~ b) << 1)) - 2) ^ (((b ^ ~ a) + ((b | a) << 1)) + 1))) & (((((((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))) - b) - ((((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))) | ~ b) + (((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))) | ~ b))) - 2) | ((a & ~ a) + a)) - ((((((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))) - b) - ((((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))) | ~ b) + (((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))) | ~ b))) - 2) & ((a & ~ a) + a))))",
                "attributes": {
                    "numOps": 339,
                    "nestedExprLevel": 144,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 48.67256637168141,
                        "mul": 7.079646017699115,
                        "bitwise": 44.24778761061947
                    },
                    "percentageDAGsCancel": 15.384615384615385
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~(b | a) * (b & a) + (~a & b) * (~a | b)) - b) + (~b | (~a & b) * (~a | b) + ~(b | a) * (b & a) ) * -2) - 2 ^ a ^ (b | a) * 2 + ~(a ^ b) + 1",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 10,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 89.67551622418878,
                        "opsPercentages": {
                            "arithmetic": 22.857142857142858,
                            "mul": 17.142857142857142,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "msvc_O1": {
                    "expr": "((a | b) * 2 + 1 + (~a ^ b) | ((((~a | b) * (~a & b) - (((~a | b) * (~a & b) + (~a & ~b) * (a & b) | ~b) * 2 + 2)) - b) + (~a & ~b) * (a & b) | a) - ((((~a | b) * (~a & b) - (((~a | b) * (~a & b) + (~a & ~b) * (a & b) | ~b) * 2 + 2)) - b) + (~a & ~b) * (a & b) & a)) - ((a | b) * 2 + 1 + (~a ^ b) & ((((~a | b) * (~a & b) - (((~a | b) * (~a & b) + (~a & ~b) * (a & b) | ~b) * 2 + 2)) - b) + (~a & ~b) * (a & b) | a) - ((((~a | b) * (~a & b) - (((~a | b) * (~a & b) + (~a & ~b) * (a & b) | ~b) * 2 + 2)) - b) + (~a & ~b) * (a & b) & a))",
                    "attributes": {
                        "numOps": 133,
                        "nestedExprLevel": 41,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 60.766961651917406,
                        "opsPercentages": {
                            "arithmetic": 20.30075187969925,
                            "mul": 16.541353383458645,
                            "bitwise": 63.1578947368421
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "clang_O3": {
                    "expr": "(b | a) * 2 - (b ^ a) ^ a ^ (((b & a) * (~b & ~a) + (~a | b) * (~a & b) - b) + (~b | (b & a) * (~b & ~a) + (~a | b) * (~a & b)) * -2) - 2",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 9,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 89.67551622418878,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 17.142857142857142,
                            "bitwise": 62.857142857142854
                        },
                        "percentageDAGsCancel": 9.523809523809524
                    }
                },
                "clang_default": {
                    "expr": "((((b | b ^ 0xffffffff) * -2 - 2 | (b ^ a ^ 0xffffffff) + (b | a) * 2 + 1) + ((b | b ^ 0xffffffff) * -2 - 2 | (b ^ a ^ 0xffffffff) + (b | a) * 2 + 1)) - ((b | b ^ 0xffffffff) * -2 - 2 ^ (b ^ a ^ 0xffffffff) + (b | a) * 2 + 1) | (((((b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a)) - b) - (((b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a) | b ^ 0xffffffff) + ((b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a) | b ^ 0xffffffff))) - 2 | (a & (a ^ 0xffffffff)) + a) - (((((b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a)) - b) - (((b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a) | b ^ 0xffffffff) + ((b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a) | b ^ 0xffffffff))) - 2 & (a & (a ^ 0xffffffff)) + a)) - ((((b | b ^ 0xffffffff) * -2 - 2 | (b ^ a ^ 0xffffffff) + (b | a) * 2 + 1) + ((b | b ^ 0xffffffff) * -2 - 2 | (b ^ a ^ 0xffffffff) + (b | a) * 2 + 1)) - ((b | b ^ 0xffffffff) * -2 - 2 ^ (b ^ a ^ 0xffffffff) + (b | a) * 2 + 1) & (((((b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a)) - b) - (((b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a) | b ^ 0xffffffff) + ((b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a) | b ^ 0xffffffff))) - 2 | (a & (a ^ 0xffffffff)) + a) - (((((b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a)) - b) - (((b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a) | b ^ 0xffffffff) + ((b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a) | b ^ 0xffffffff))) - 2 & (a & (a ^ 0xffffffff)) + a))",
                    "attributes": {
                        "numOps": 285,
                        "nestedExprLevel": 86,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 15.929203539823009,
                        "opsPercentages": {
                            "arithmetic": 38.94736842105263,
                            "mul": 12.631578947368421,
                            "bitwise": 48.421052631578945
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "msvc_default": {
                    "expr": "(((~a ^ b) + (b | a) * 2 + (~a ^ b) + 2 + (b | a) * 2) - ((~a ^ b) + 1 + (b | a) * 2) | (((((0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a)) - b) - (((0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a) | ~b) + ((0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a) | ~b))) - 2 | a) - (((((0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a)) - b) - (((0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a) | ~b) + ((0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a) | ~b))) - 2 & a)) - (((~a ^ b) + (b | a) * 2 + (~a ^ b) + 2 + (b | a) * 2) - ((~a ^ b) + 1 + (b | a) * 2) & (((((0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a)) - b) - (((0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a) | ~b) + ((0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a) | ~b))) - 2 | a) - (((((0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a)) - b) - (((0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a) | ~b) + ((0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a) | ~b))) - 2 & a))",
                    "attributes": {
                        "numOps": 235,
                        "nestedExprLevel": 77,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 30.678466076696164,
                        "opsPercentages": {
                            "arithmetic": 39.57446808510638,
                            "mul": 12.76595744680851,
                            "bitwise": 47.65957446808511
                        },
                        "percentageDAGsCancel": 3.125
                    }
                },
                "gcc_O3": {
                    "expr": "(((~a & b) * (~a | b) + (a & b) * ~(a | b) - b) + ((~a & b) * (~a | b) + (a & b) * ~(a | b) | ~b) * -2) - 2 ^ a ^ ~(b ^ a) + 1 + (a | b) * 2",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 9,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 89.67551622418878,
                        "opsPercentages": {
                            "arithmetic": 22.857142857142858,
                            "mul": 17.142857142857142,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 250,
            "gt": {
                "expr": "(((-((c|c)+c))-(b-(~b))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 0.0,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "(((~ ((((((c + c) + 1) + ((- c - 1) | (- c - 1))) ^ ~ c) + (((((c + c) + 1) + ((- c - 1) | (- c - 1))) | c) << 1)) + 1) + 1) & ~ (((b & ~ (- b - 1)) + (b & ~ (- b - 1))) - (b ^ (- b - 1)))) << 1) - ((~ ((((((c + c) + 1) + ((- c - 1) | (- c - 1))) ^ ~ c) + (((((c + c) + 1) + ((- c - 1) | (- c - 1))) | c) << 1)) + 1) + 1) ^ (((b & ~ (- b - 1)) + (b & ~ (- b - 1))) - (b ^ (- b - 1))))",
                "attributes": {
                    "numOps": 79,
                    "nestedExprLevel": 43,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 64.55696202531645,
                        "mul": 0.0,
                        "bitwise": 35.44303797468354
                    },
                    "percentageDAGsCancel": 15.384615384615385
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~b * 2 & ~((~c + c * 2 + 1 | c) * 2 + (-c - 1 ^ c))) * 2 - ((-c - 1 ^ c) + (~c + c * 2 + 1 | c) * 2 ^ ~b * 2)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 6,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 63.29113924050633,
                        "opsPercentages": {
                            "arithmetic": 37.93103448275862,
                            "mul": 24.137931034482758,
                            "bitwise": 37.93103448275862
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "(~b * 2 + 1 * 2 & ~(c * 2) * 2 + 2) - (~(c * 2) + 1 ^ b * 2 + 1)",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 4,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 79.74683544303798,
                        "opsPercentages": {
                            "arithmetic": 31.25,
                            "mul": 37.5,
                            "bitwise": 31.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((b * 2 ^ 0x7ffffffe) & c * -2) * 2 - (b * 2 + 1 ^ c * -2)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 84.81012658227847,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 41.66666666666667,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ c ^ 0xffffffff) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | c) * 2 + 1 ^ 0xffffffff) + 1 & (((b & (0xffffffff - b ^ 0xffffffff)) + (b & (0xffffffff - b ^ 0xffffffff))) - (b ^ 0xffffffff - b) ^ 0xffffffff)) * 2 - (((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ c ^ 0xffffffff) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | c) * 2 + 1 ^ 0xffffffff) + 1 ^ ((b & (0xffffffff - b ^ 0xffffffff)) + (b & (0xffffffff - b ^ 0xffffffff))) - (b ^ 0xffffffff - b))",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 18,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 17.72151898734177,
                        "opsPercentages": {
                            "arithmetic": 50.76923076923077,
                            "mul": 10.76923076923077,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_default": {
                    "expr": "(~((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ ~c) + 1 + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | c) * 2) + 1 & ~(((~(0xffffffff - b) & b) + (~(0xffffffff - b) & b)) - (0xffffffff - b ^ b))) * 2 - (~((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ ~c) + 1 + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | c) * 2) + 1 ^ ((~(0xffffffff - b) & b) + (~(0xffffffff - b) & b)) - (0xffffffff - b ^ b))",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 18,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 17.72151898734177,
                        "opsPercentages": {
                            "arithmetic": 50.76923076923077,
                            "mul": 10.76923076923077,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "gcc_O3": {
                    "expr": "(~(-c - 1 ^ c) + c * 2 & ~b * 2) * 2 - ((-c - 1 ^ c) + c * 2 ^ ~b * 2)",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 4,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 75.9493670886076,
                        "opsPercentages": {
                            "arithmetic": 36.84210526315789,
                            "mul": 26.31578947368421,
                            "bitwise": 36.84210526315789
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                }
            }
        },
        {
            "num": 251,
            "gt": {
                "expr": "(((d^d)|(-(d^(a^a)))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 60.0
                }
            },
            "mba": {
                "expr": "((((d - d) - ((d | ~ d) + (d | ~ d))) - 2) & ~ (~ ((((d - (((a - a) - ((a | ~ a) + (a | ~ a))) - 2)) - ((d | ~ (((a - a) - ((a | ~ a) + (a | ~ a))) - 2)) + (d | ~ (((a - a) - ((a | ~ a) + (a | ~ a))) - 2)))) - 2) - 1))) + ~ ((((d - (((a - a) - ((a | ~ a) + (a | ~ a))) - 2)) - ((d | ~ (((a - a) - ((a | ~ a) + (a | ~ a))) - 2)) + (d | ~ (((a - a) - ((a | ~ a) + (a | ~ a))) - 2)))) - 2) - 1)",
                "attributes": {
                    "numOps": 79,
                    "nestedExprLevel": 45,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 49.36708860759494,
                        "mul": 0.0,
                        "bitwise": 50.63291139240506
                    },
                    "percentageDAGsCancel": 30.434782608695656
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-d",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 98.73417721518987,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "-d",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 98.73417721518987,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-d",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 98.73417721518987,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xfffffffe - ((d | d ^ 0xffffffff) + (d | d ^ 0xffffffff)) & ((d - (-2 - ((a | a ^ 0xffffffff) + (a | a ^ 0xffffffff)))) - ((d | 0xfffffffe - ((a | a ^ 0xffffffff) + (a | a ^ 0xffffffff)) ^ 0xffffffff) + (d | 0xfffffffe - ((a | a ^ 0xffffffff) + (a | a ^ 0xffffffff)) ^ 0xffffffff ))) - 3) + (((d - (-2 - ((a | a ^ 0xffffffff) + (a | a ^ 0xffffffff)))) - ((d | 0xfffffffe - ((a | a ^ 0xffffffff) + (a | a ^ 0xffffffff)) ^ 0xffffffff) + (d | 0xfffffffe - ((a | a ^ 0xffffffff) + (a | a ^ 0xffffffff)) ^ 0xffffffff))) - 3 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 29,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 20.253164556962027,
                        "opsPercentages": {
                            "arithmetic": 39.682539682539684,
                            "mul": 0.0,
                            "bitwise": 60.317460317460316
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~(d - 1)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 97.46835443037975,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-d",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 98.73417721518987,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 252,
            "gt": {
                "expr": "(((a+(-(b-(-a))))|((e&a)&(~b))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "((((a ^ (~ ((b + ~ (~ a + 1)) + 1) + 1)) + ((a & (~ ((b + ~ (~ a + 1)) + 1) + 1)) << 1)) + (((((~ e | a) + e) + 1) | b) - b)) + 1) + ((- ((a ^ (~ ((b + ~ (~ a + 1)) + 1) + 1)) + ((a & (~ ((b + ~ (~ a + 1)) + 1) + 1)) << 1)) - 1) | (- (((((~ e | a) + e) + 1) | b) - b) - 1))",
                "attributes": {
                    "numOps": 56,
                    "nestedExprLevel": 35,
                    "numDAGs": 25,
                    "opsPercentages": {
                        "arithmetic": 55.35714285714286,
                        "mul": 0.0,
                        "bitwise": 44.642857142857146
                    },
                    "percentageDAGsCancel": 12.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-((~e | a) + e) - 2 | b | (b + (a - 1) ^ a) + (~(b + (a - 1)) & a) * -2) + (~b & e + (~e | a) + 1) + ~(b + (a - 1) ^ a) + (~(b + (a - 1)) & a) * 2 + 1",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 11,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 35.714285714285715,
                        "opsPercentages": {
                            "arithmetic": 52.77777777777778,
                            "mul": 5.555555555555555,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "e + 1 + (~e | a) | b + 1 + ((~~(a + b) * 2 + 2 & a * 2 - ~(a + b) + 1 ^ a | (b - e + 1 + (~e | a) | b) - 1) - b) + ~(a + b) + 1 ^ a + ~(a + b) * 2 + 2 & a * 2",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 7,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 28.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 10.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "clang_O3": {
                    "expr": "(~(-(a + b) ^ a) + (-(a + b) & a) * 2 | b | -((~e | a) + e) - 2) + (~b & e + (~e | a) + 1) + (-(a + b) ^ a) + (-(a + b) & a) * 2 + 1",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 9,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 41.07142857142857,
                        "opsPercentages": {
                            "arithmetic": 54.54545454545454,
                            "mul": 6.0606060606060606,
                            "bitwise": 39.39393939393939
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(a ^ (b + ((a ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 1) + (a & (b + ((a ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 1) * 2 + (((e ^ 0xffffffff | a) + e + 1 | b) - b) + 1 + (0xffffffff - ((a ^ (b + ((a ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 1) + (a & (b + ((a ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 1) * 2) | 0xffffffff - (((e ^ 0xffffffff | a) + e + 1 | b) - b))",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 20,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 3.571428571428571,
                        "opsPercentages": {
                            "arithmetic": 53.70370370370371,
                            "mul": 3.7037037037037033,
                            "bitwise": 42.592592592592595
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(b + 1 + ~(~a + 1)) + 1 ^ a) + (~(b + 1 + ~(~a + 1)) + 1 & a) * 2 + (((~e | a) + 1 + e | b) - b) + 1 + (0xffffffff - ((~(b + 1 + ~(~a + 1)) + 1 ^ a) + (~(b + 1 + ~(~a + 1)) + 1 & a) * 2) | 0xffffffff - (((~e | a) + 1 + e | b) - b))",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 16,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 3.571428571428571,
                        "opsPercentages": {
                            "arithmetic": 53.70370370370371,
                            "mul": 3.7037037037037033,
                            "bitwise": 42.592592592592595
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "gcc_O3": {
                    "expr": "((~e | a) + e + 1 & ~b) + (~(a - 1) + b & a * 2 - (a - 1) + b ^ a) + (-(~e | a) + e - 2 | b | (a - 1) + b ^ a + ~(a - 1) + b & a * -2)",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 7,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 39.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 52.94117647058824,
                            "mul": 5.88235294117647,
                            "bitwise": 41.17647058823529
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                }
            }
        },
        {
            "num": 253,
            "gt": {
                "expr": "((-((b^a)&((e^b)|(b&b)))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 16.666666666666664,
                        "mul": 0.0,
                        "bitwise": 83.33333333333334
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "~ (((~ (((b - a) - ((b | ~ a) << 1)) - 2) | ((((((e - b) - ((e | ~ b) << 1)) - 2) + ((~ b | b) - ~ b)) + 1) + ((- (((e - b) - ((e | ~ b) << 1)) - 2) - 1) | (- ((~ b | b) - ~ b) - 1)))) - ~ (((b - a) - ((b | ~ a) << 1)) - 2)) - 1)",
                "attributes": {
                    "numOps": 46,
                    "nestedExprLevel": 25,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 7.4074074074074066
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(((~a | b) * -2 - (~b + a)) - 3 & e + (~b | e) * -2 + -1 + (~b | ((~b | e) * 2 - (e - b)) + 1))",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 7,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 43.47826086956522,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 11.538461538461538,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "msvc_O1": {
                    "expr": "a + 1 + (((~a | b) * 2 - ((b + 1 + (~b | e * 2 - e) | ~b) + ~b | e * -2 + e + -1 | ((~a | b) * 2 - b) + 1 + a)) - b)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 7,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 34.78260869565217,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 13.333333333333334,
                            "bitwise": 36.666666666666664
                        },
                        "percentageDAGsCancel": 8.0
                    }
                },
                "clang_O3": {
                    "expr": "-(((b - a) + (~a | b) * -2) - 2 & (e + ~b | e * -2 + ((b - e) + ~b | e * 2 + 1 | ~b)) - 1)",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 7,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 47.82608695652174,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 12.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((b - a) + (b | a ^ 0xffffffff) * -2) - 2 ^ 0xffffffff | (e - b) + (e | b ^ 0xffffffff) * -2 + ((b ^ 0xffffffff | b) - (b ^ 0xffffffff)) + -1 + (0xffffffff - ((e - b) + (e | b ^ 0xffffffff) * -2 + -2) | 0xffffffff - ((b ^ 0xffffffff | b) - (b ^ 0xffffffff)))) - (((b - a) + (b | a ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 16,
                        "numDAGs": 27,
                        "percentDecreaseByOps": -6.521739130434782,
                        "opsPercentages": {
                            "arithmetic": 53.06122448979592,
                            "mul": 8.16326530612245,
                            "bitwise": 38.775510204081634
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "msvc_default": {
                    "expr": "~(((~(((b - a) + (~a | b) * -2) - 2) | (((e - b) + (~b | e) * -2) - ~b) + -2 + (0xffffffff - ((e - b) + (~b | e) * -2 + -2) | 0xffffffff - (-1 - ~b))) - ~(((b - a) + (~a | b) * -2) - 2)) - 1)",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 16,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 2.1739130434782608,
                        "opsPercentages": {
                            "arithmetic": 57.77777777777777,
                            "mul": 8.88888888888889,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "gcc_O3": {
                    "expr": "-((e - b) + (e | ~b) * -2 + -1 + b + (1 - (e - b) + (e | ~b) * -2 | ~b) & -(~b + a + (~a | b) * 2) - 3)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 36.95652173913043,
                        "opsPercentages": {
                            "arithmetic": 55.172413793103445,
                            "mul": 10.344827586206897,
                            "bitwise": 34.48275862068966
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 254,
            "gt": {
                "expr": "((-((-(-(a^(a^a))))^((a|a)+(b+a)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 0.0,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 44.44444444444444
                }
            },
            "mba": {
                "expr": "~ ((~ (~ ((((a - ((a | a) - (a & a))) - ((a | ~ ((a | a) - (a & a))) << 1)) - 2) - 1) - 1) | ((((a & ~ a) + a) ^ (((b | a) + (b | a)) - (b ^ a))) + ((((a & ~ a) + a) & (((b | a) + (b | a)) - (b ^ a))) + (((a & ~ a) + a) & (((b | a) + (b | a)) - (b ^ a)))))) - (~ (~ ((((a - ((a | a) - (a & a))) - ((a | ~ ((a | a) - (a & a))) << 1)) - 2) - 1) - 1) & ((((a & ~ a) + a) ^ (((b | a) + (b | a)) - (b ^ a))) + ((((a & ~ a) + a) & (((b | a) + (b | a)) - (b ^ a))) + (((a & ~ a) + a) & (((b | a) + (b | a)) - (b ^ a))))))) + 1",
                "attributes": {
                    "numOps": 95,
                    "nestedExprLevel": 61,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 27.586206896551722
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(((b | a) * 2 - (b ^ a) & a) * 2 + ((b | a) * 2 - (b ^ a) ^ a) ^ a)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 6,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 85.26315789473684,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 21.428571428571427,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((a | b) * 2 - (a ^ b) ^ a) + ((a | b) * 2 - (a ^ b) & a) * 2 & a) - (((a | b) * 2 - (a ^ b) ^ a) + ((a | b) * 2 - (a ^ b) & a) * 2 | a)",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 11,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 71.57894736842105,
                        "opsPercentages": {
                            "arithmetic": 25.925925925925924,
                            "mul": 22.22222222222222,
                            "bitwise": 51.85185185185185
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_O3": {
                    "expr": "-(((b | a) * 2 - (b ^ a) ^ a) + ((b | a) * 2 - (b ^ a) & a) * 2 ^ a)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 6,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 85.26315789473684,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 21.428571428571427,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((a - 1 ^ 0xffffffff) - 1 ^ 0xffffffff | ((a & (a ^ 0xffffffff)) + a ^ ((b | a) + (b | a)) - (b ^ a)) + ((a & (a ^ 0xffffffff)) + a & ((b | a) + (b | a)) - (b ^ a)) + ((a & (a ^ 0xffffffff)) + a & ((b | a) + (b | a)) - (b ^ a))) - (((a - 1 ^ 0xffffffff) - 1 ^ 0xffffffff) & ((a & (a ^ 0xffffffff)) + a ^ ((b | a) + (b | a)) - (b ^ a)) + ((a & (a ^ 0xffffffff)) + a & ((b | a) + (b | a)) - (b ^ a)) + ((a & (a ^ 0xffffffff)) + a & ((b | a) + (b | a)) - (b ^ a))) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 71,
                        "nestedExprLevel": 30,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 25.263157894736842,
                        "opsPercentages": {
                            "arithmetic": 39.436619718309856,
                            "mul": 0.0,
                            "bitwise": 60.56338028169014
                        },
                        "percentageDAGsCancel": 15.0
                    }
                },
                "msvc_default": {
                    "expr": "~((~(~(a - 1) - 1) | (a ^ ((b | a) + (b | a)) - (b ^ a)) + (a & ((b | a) + (b | a)) - (b ^ a)) + (a & ((b | a) + (b | a)) - (b ^ a))) - (~(~(a - 1) - 1) & (a ^ ((b | a) + (b | a)) - (b ^ a)) + (a & ((b | a) + (b | a)) - (b ^ a)) + (a & ((b | a) + (b | a)) - (b ^ a)))) + 1",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 25,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 44.21052631578947,
                        "opsPercentages": {
                            "arithmetic": 41.509433962264154,
                            "mul": 0.0,
                            "bitwise": 58.490566037735846
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "gcc_O3": {
                    "expr": "-(((b | a) * 2 - (b ^ a) ^ a) + ((b | a) * 2 - (b ^ a) & a) * 2 ^ a)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 6,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 85.26315789473684,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 21.428571428571427,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 255,
            "gt": {
                "expr": "((-((((c^c)|(~b))*(b|c))+(c*e))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 25.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "~ (((((((((c | c) - (c & c)) & ~ (- b - 1)) + (- b - 1)) & ((b & ~ c) + c)) * (((((c | c) - (c & c)) & ~ (- b - 1)) + (- b - 1)) | ((b & ~ c) + c)) + (((((c | c) - (c & c)) & ~ (- b - 1)) + (- b - 1)) & ~ ((b & ~ c) + c)) * (~ ((((c | c) - (c & c)) & ~ (- b - 1)) + (- b - 1)) & ((b & ~ c) + c))) - ~ ((c & e) * (c | e) + (c & ~ e) * (~ c & e))) - 1) - 1)",
                "attributes": {
                    "numOps": 75,
                    "nestedExprLevel": 36,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 44.0,
                        "mul": 5.333333333333334,
                        "bitwise": 50.66666666666667
                    },
                    "percentageDAGsCancel": 24.242424242424242
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((~c & e) * (~e & c) + (c & e) * (c | e)) + ~((c + (~c & b) & b) * ~(c + (~c & b) | b) + (~b & c + (~c & b)) * (c + (~c & b) | ~b)) + 2",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 10,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 53.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 22.857142857142858,
                            "mul": 11.428571428571429,
                            "bitwise": 65.71428571428571
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "msvc_O1": {
                    "expr": "-(((~c & b) + c & b) * (~(~c & b) + c & ~b) + (~e & c) * (~c & e) + (~b | (~c & b) + c) * (~b & (~c & b) + c) + (c | e) * (c & e))",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 9,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 54.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 23.52941176470588,
                            "mul": 11.76470588235294,
                            "bitwise": 64.70588235294117
                        },
                        "percentageDAGsCancel": 21.73913043478261
                    }
                },
                "clang_O3": {
                    "expr": "-((~e & c) * (~c & e) + (e | c) * (e & c) + ((~c & b) + c & b) * (~(~c & b) + c & ~b) + ((~c & b) + c | ~b) * ((~c & b) + c & ~b))",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 9,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 54.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 23.52941176470588,
                            "mul": 11.76470588235294,
                            "bitwise": 64.70588235294117
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "clang_default": {
                    "expr": "(((0xffffffff - b & (b & (c ^ 0xffffffff)) + c) * (0xffffffff - b | (b & (c ^ 0xffffffff)) + c) + (0xffffffff - b & ((b & (c ^ 0xffffffff)) + c ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & (b & (c ^ 0xffffffff)) + c)) - ((c & e) * (c | e) + (c & (e ^ 0xffffffff)) * ((c ^ 0xffffffff) & e) ^ 0xffffffff)) - 2 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 17,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 49.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 31.57894736842105,
                            "mul": 10.526315789473683,
                            "bitwise": 57.89473684210527
                        },
                        "percentageDAGsCancel": 16.0
                    }
                },
                "msvc_default": {
                    "expr": "~((((0xffffffff - b & (~c & b) + c) * (0xffffffff - b | (~c & b) + c) + (0xffffffff - b & ~((~c & b) + c)) * (~(0xffffffff - b) & (~c & b) + c)) - ~((c & e) * (c | e) + (~e & c) * (~c & e) )) - 2)",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 13,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 49.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 31.57894736842105,
                            "mul": 10.526315789473683,
                            "bitwise": 57.89473684210527
                        },
                        "percentageDAGsCancel": 12.0
                    }
                },
                "gcc_O3": {
                    "expr": "-((~e & c) * (~c & e) + (c & e) * (c | e)) - (~((~c & b) + c | b) * (b & (~c & b) + c) + (~b & (~c & b) + c) * (~b | (~c & b) + c))",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 10,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 56.00000000000001,
                        "opsPercentages": {
                            "arithmetic": 24.242424242424242,
                            "mul": 12.121212121212121,
                            "bitwise": 63.63636363636363
                        },
                        "percentageDAGsCancel": 13.636363636363635
                    }
                }
            }
        },
        {
            "num": 256,
            "gt": {
                "expr": "((((d&d)^(-d))^(b*(~b))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 16.666666666666664,
                        "mul": 16.666666666666664,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "((((((~ d | d) - ~ d) - ~ (d - 1)) - ((((~ d | d) - ~ d) | ~ (~ (d - 1))) << 1)) - 2) | ((b & (- b - 1)) * (b | (- b - 1)) + (b & ~ (- b - 1)) * (~ b & (- b - 1)))) - ((((((~ d | d) - ~ d) - ~ (d - 1)) - ((((~ d | d) - ~ d) | ~ (~ (d - 1))) << 1)) - 2) & ((b & (- b - 1)) * (b | (- b - 1)) + (b & ~ (- b - 1)) * (~ b & (- b - 1))))",
                "attributes": {
                    "numOps": 73,
                    "nestedExprLevel": 32,
                    "numDAGs": 25,
                    "opsPercentages": {
                        "arithmetic": 45.20547945205479,
                        "mul": 5.47945205479452,
                        "bitwise": 49.31506849315068
                    },
                    "percentageDAGsCancel": 28.000000000000004
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~b * b ^ (d * 2 + (d - 1 | d) * -2) - 2",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 86.3013698630137,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 30.0,
                            "bitwise": 30.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((d * 2 - 1) + ~(d * 2 - 2 | d * 2) | ~b * b) - ((d * 2 - 1) + ~(d * 2 - 2 | d * 2) & ~b * b)",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 68.4931506849315,
                        "opsPercentages": {
                            "arithmetic": 30.434782608695656,
                            "mul": 34.78260869565217,
                            "bitwise": 34.78260869565217
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~b * b ^ (d - (d - 1 | d)) * 2 - 2",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 89.04109589041096,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 25.0,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_default": {
                    "expr": "(((((d ^ 0xffffffff | d) - (d ^ 0xffffffff)) - (d - 1 ^ 0xffffffff) ) + ((d ^ 0xffffffff | d) - (d ^ 0xffffffff) | d - 1) * -2) - 2 | (b & 0xffffffff - b) * (b | 0xffffffff - b) + (b & (0xffffffff - b ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - b)) - (((((d ^ 0xffffffff | d) - (d ^ 0xffffffff)) - (d - 1 ^ 0xffffffff) ) + ((d ^ 0xffffffff | d) - (d ^ 0xffffffff) | d - 1) * -2) - 2 & (b & 0xffffffff - b) * (b | 0xffffffff - b) + (b & (0xffffffff - b ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - b))",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 22,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 13.698630136986301,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 9.523809523809524,
                            "bitwise": 47.61904761904761
                        },
                        "percentageDAGsCancel": 20.833333333333336
                    }
                },
                "msvc_default": {
                    "expr": "(((-~(d - 1) - ~d) + (-~d - 1 | d - 1) * -2) - 3 | (0xffffffff - b & b) * (0xffffffff - b | b) + (~(0xffffffff - b) & b) * (~b & 0xffffffff - b)) - (((-~(d - 1) - ~d) + (-~d - 1 | d - 1) * -2) - 3 & (0xffffffff - b & b) * (0xffffffff - b | b) + (~(0xffffffff - b) & b) * (~b & 0xffffffff - b))",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 15,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 21.91780821917808,
                        "opsPercentages": {
                            "arithmetic": 50.877192982456144,
                            "mul": 10.526315789473683,
                            "bitwise": 38.59649122807017
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "gcc_O3": {
                    "expr": "(d - (d - 1 | d)) * 2 - 2 ^ ~b * b",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 89.04109589041096,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 25.0,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 12.5
                    }
                }
            }
        },
        {
            "num": 257,
            "gt": {
                "expr": "(((-(c&(b&a)))&(a^a)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "(~ (~ (((~ c | ((~ b | a) - ~ b)) + c) + 1) + 1) | (((a - a) - ((a | ~ a) << 1)) - 2)) - ~ (~ (((~ c | ((~ b | a) - ~ b)) + c) + 1) + 1)",
                "attributes": {
                    "numOps": 30,
                    "nestedExprLevel": 16,
                    "numDAGs": 18,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(~(c + 1 + (b + 1 + (~b | a) | ~c)) + 1) + 2 + ~(c + 1 + (b + 1 + (~b | a) | ~c))",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 7,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 26.666666666666668,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "clang_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c ^ 0xffffffff | (b ^ 0xffffffff | a) - (b ^ 0xffffffff)) + c + 1 ^ 0xffffffff) + 1 ^ 0xffffffff | (a | a ^ 0xffffffff) * -2 - 2) - (((c ^ 0xffffffff | (b ^ 0xffffffff | a) - (b ^ 0xffffffff)) + c + 1 ^ 0xffffffff) + 1 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 9,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 3.3333333333333335,
                        "opsPercentages": {
                            "arithmetic": 37.93103448275862,
                            "mul": 3.4482758620689653,
                            "bitwise": 58.620689655172406
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~(~((~c | (~b | a) - ~b) + 1 + c) + 1) - ~(~((~c | (~b | a) - ~b) + 1 + c) + 1)",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 8,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 23.333333333333332,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 0.0,
                            "bitwise": 60.86956521739131
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "gcc_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 258,
            "gt": {
                "expr": "(((((d&e)&b)-(((b&d)-e)+e))+(b^(-(e-d)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 0.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((((~ ((~ d | e) - ~ d) | b) + ((~ d | e) - ~ d)) + 1) & ~ ((((((~ b | d) - ~ b) + ~ e) + 1) | e) + (((((~ b | d) - ~ b) + ~ e) + 1) & e))) - (~ (((~ ((~ d | e) - ~ d) | b) + ((~ d | e) - ~ d)) + 1) & ((((((~ b | d) - ~ b) + ~ e) + 1) | e) + (((((~ b | d) - ~ b) + ~ e) + 1) & e)))) ^ ~ ((b | (~ ((e & ~ d) - (~ e & d)) + 1)) - (b & (~ ((e & ~ d) - (~ e & d)) + 1)))) + (((((((~ ((~ d | e) - ~ d) | b) + ((~ d | e) - ~ d)) + 1) & ~ ((((((~ b | d) - ~ b) + ~ e) + 1) | e) + (((((~ b | d) - ~ b) + ~ e) + 1) & e))) - (~ (((~ ((~ d | e) - ~ d) | b) + ((~ d | e) - ~ d)) + 1) & ((((((~ b | d) - ~ b) + ~ e) + 1) | e) + (((((~ b | d) - ~ b) + ~ e) + 1) & e)))) | ((b | (~ ((e & ~ d) - (~ e & d)) + 1)) - (b & (~ ((e & ~ d) - (~ e & d)) + 1)))) << 1)) + 1",
                "attributes": {
                    "numOps": 166,
                    "nestedExprLevel": 85,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 34.93975903614458,
                        "mul": 0.0,
                        "bitwise": 65.06024096385542
                    },
                    "percentageDAGsCancel": 2.857142857142857
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(d + ~e + 1 ^ b | ((e & d) + (~(e & d) | b) + 1 & ~(e + ~e + (d & b) + 1)) - (e + ~e + (d & b) + 1 & -((e & d) + (~(e & d) | b)) - 2)) * 2 + (((e & d) + (~(e & d) | b) + 1 & ~(e + ~e + (d & b) + 1)) - (e + ~e + (d & b) + 1 & -((e & d) + (~(e & d) | b)) - 2) ^ (e - d) - 1 ^ b) + 1",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 16,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 60.24096385542169,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 1.5151515151515151,
                            "bitwise": 53.03030303030303
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "(~((~((~d & e) - (~e & d)) + 1 | b) - ~((~d & e) - (~e & d)) + 1 & b) ^ (d + 2 + (~(d + 1 + ~d | e) | b) + ~d | e & ~(b + 2 + (~b | d) + ~e | e) + (b + 2 + (~b | d) + ~e & e)) - ~d + 2 + (~(d + 1 + ~d | e) | b) + ~d | e & (b + 2 + (~b | d) + ~e | e) + (b + 2 + (~b | d) + ~e & e)) + 1 + ((~((~d & e) - (~e & d)) * 2 + 2 | b * 2) + ~((~d & e) - (~e & d)) + 1 & b * -2 | (d + 2 + (~(d + 1 + ~d | e) | b) + ~d | e * 2 & ~(b + 2 + (~b | d) + ~e | e) + (b + 2 + (~b | d) + ~e & e) * 2) + ~d + 2 + (~(d + 1 + ~d | e) | b) + ~d | e & (b + 2 + (~b | d) + ~e | e) + (b + 2 + (~b | d) + ~e & e) * -2)",
                    "attributes": {
                        "numOps": 161,
                        "nestedExprLevel": 29,
                        "numDAGs": 64,
                        "percentDecreaseByOps": 3.0120481927710845,
                        "opsPercentages": {
                            "arithmetic": 39.75155279503105,
                            "mul": 3.7267080745341614,
                            "bitwise": 56.52173913043478
                        },
                        "percentageDAGsCancel": 4.6875
                    }
                },
                "clang_O3": {
                    "expr": "(b | (~(d & b) & e & d + (~e & d | b) + 1) - (-((~e & d | b) + e & d) - 2 & d & b)) * 2 - ((~(d & b) & e & d + (~e & d | b) + 1) - (-((~e & d | b) + e & d) - 2 & d & b) ^ b)",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 12,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 74.69879518072288,
                        "opsPercentages": {
                            "arithmetic": 30.952380952380953,
                            "mul": 2.380952380952381,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((d ^ 0xffffffff | e) - (d ^ 0xffffffff) ^ 0xffffffff | b) + ((d ^ 0xffffffff | e) - (d ^ 0xffffffff)) + 1 & ((((b ^ 0xffffffff | d) - (b ^ 0xffffffff)) + (e ^ 0xffffffff) + 1 | e) + (((b ^ 0xffffffff | d) - (b ^ 0xffffffff)) + (e ^ 0xffffffff) + 1 & e) ^ 0xffffffff)) - ((((d ^ 0xffffffff | e) - (d ^ 0xffffffff) ^ 0xffffffff | b) + ((d ^ 0xffffffff | e) - (d ^ 0xffffffff)) + 1 ^ 0xffffffff) & (((b ^ 0xffffffff | d) - (b ^ 0xffffffff)) + (e ^ 0xffffffff) + 1 | e) + (((b ^ 0xffffffff | d) - (b ^ 0xffffffff)) + (e ^ 0xffffffff) + 1 & e)) ^ (b | ((e & (d ^ 0xffffffff)) - ((e ^ 0xffffffff) & d) ^ 0xffffffff) + 1) - (b & ((e & (d ^ 0xffffffff)) - ((e ^ 0xffffffff) & d) ^ 0xffffffff) + 1) ^ 0xffffffff) + ((((d ^ 0xffffffff | e) - (d ^ 0xffffffff) ^ 0xffffffff | b) + ((d ^ 0xffffffff | e) - (d ^ 0xffffffff)) + 1 & ((((b ^ 0xffffffff | d) - (b ^ 0xffffffff)) + (e ^ 0xffffffff) + 1 | e) + (((b ^ 0xffffffff | d) - (b ^ 0xffffffff)) + (e ^ 0xffffffff) + 1 & e) ^ 0xffffffff)) - ((((d ^ 0xffffffff | e) - (d ^ 0xffffffff) ^ 0xffffffff | b) + ((d ^ 0xffffffff | e) - (d ^ 0xffffffff)) + 1 ^ 0xffffffff) & (((b ^ 0xffffffff | d) - (b ^ 0xffffffff)) + (e ^ 0xffffffff) + 1 | e) + (((b ^ 0xffffffff | d) - (b ^ 0xffffffff)) + (e ^ 0xffffffff) + 1 & e)) | (b | ((e & (d ^ 0xffffffff)) - ((e ^ 0xffffffff) & d) ^ 0xffffffff) + 1) - (b & ((e & (d ^ 0xffffffff)) - ((e ^ 0xffffffff) & d) ^ 0xffffffff) + 1)) * 2 + 1",
                    "attributes": {
                        "numOps": 166,
                        "nestedExprLevel": 68,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 34.93975903614458,
                            "mul": 0.6024096385542169,
                            "bitwise": 64.45783132530121
                        },
                        "percentageDAGsCancel": 8.571428571428571
                    }
                },
                "msvc_default": {
                    "expr": "(((~((~d | e) - ~d) | b) + 1 + ((~d | e) - ~d) & ~((((~b | d) - ~b) + 1 + ~e | e) + (((~b | d) - ~b) + 1 + ~e & e))) - (~((~((~d | e) - ~d) | b) + 1 + ((~d | e) - ~d) ) & (((~b | d) - ~b) + 1 + ~e | e) + (((~b | d) - ~b) + 1 + ~e & e)) ^ ~((~((~d & e) - (~e & d)) + 1 | b) - (~((~d & e) - (~e & d)) + 1 & b))) + 1 + (((~((~d | e) - ~d) | b) + 1 + ((~d | e) - ~d) & ~((((~b | d) - ~b) + 1 + ~e | e) + (((~b | d) - ~b) + 1 + ~e & e))) - (~((~((~d | e) - ~d) | b) + 1 + ((~d | e) - ~d) ) & (((~b | d) - ~b) + 1 + ~e | e) + (((~b | d) - ~b) + 1 + ~e & e)) | (~((~d & e) - (~e & d)) + 1 | b) - (~((~d & e) - (~e & d)) + 1 & b)) * 2",
                    "attributes": {
                        "numOps": 166,
                        "nestedExprLevel": 52,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 34.93975903614458,
                            "mul": 0.6024096385542169,
                            "bitwise": 64.45783132530121
                        },
                        "percentageDAGsCancel": 17.142857142857142
                    }
                },
                "gcc_O3": {
                    "expr": "((e - d) - 1 ^ b ^ ((~(e & d) | b) + (e & d) + 1 & ~(d & b)) - (-(~(e & d) | b) + (e & d) - 2 & d & b)) + 1 + (d - e ^ b | ((~(e & d) | b) + (e & d) + 1 & ~(d & b)) - (-(~(e & d) | b) + (e & d) - 2 & d & b)) * 2",
                    "attributes": {
                        "numOps": 48,
                        "nestedExprLevel": 15,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 71.08433734939759,
                        "opsPercentages": {
                            "arithmetic": 35.41666666666667,
                            "mul": 2.083333333333333,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 12.5
                    }
                }
            }
        },
        {
            "num": 259,
            "gt": {
                "expr": "(((e*c)|(c|(e|b))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 25.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((e & c) * (e | c) + (e & ~ c) * (~ e & c)) & ~ (((c + (((e + b) + 1) + ((- e - 1) | (- b - 1)))) + 1) + ((- c - 1) | (- (((e + b) + 1) + ((- e - 1) | (- b - 1))) - 1)))) + (((c + (((e + b) + 1) + ((- e - 1) | (- b - 1)))) + 1) + ((- c - 1) | (- (((e + b) + 1) + ((- e - 1) | (- b - 1))) - 1)))",
                "attributes": {
                    "numOps": 60,
                    "nestedExprLevel": 31,
                    "numDAGs": 28,
                    "opsPercentages": {
                        "arithmetic": 73.33333333333333,
                        "mul": 3.3333333333333335,
                        "bitwise": 23.333333333333332
                    },
                    "percentageDAGsCancel": 3.571428571428571
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((e & b) - (b + e + 1) | ~c) + c + b + e + ~(e & b) + 2 + ((e & c) * (e | c) + (~e & c) * (~c & e) & ~(((e & b) - (b + e + 1) | ~c) + c + b + e + ~(e & b) + 2))",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 10,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 36.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 47.368421052631575,
                            "mul": 5.263157894736842,
                            "bitwise": 47.368421052631575
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "msvc_O1": {
                    "expr": "e + 2 + ((~e & c) * (~c & e) + (c | e) * (c & e) & ~(~(b & e) + 2 + ((-2 - ~(b & e)) - b) - e | ~c + b + c + e)) + ((-2 - ~(b & e)) - b) - e | ~c + ~(b & e) + b + c",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 10,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 30.0,
                        "opsPercentages": {
                            "arithmetic": 47.61904761904761,
                            "mul": 4.761904761904762,
                            "bitwise": 47.61904761904761
                        },
                        "percentageDAGsCancel": 12.903225806451612
                    }
                },
                "clang_O3": {
                    "expr": "(~b & (~e & c) * (~c & e) + (e & c) * (e | c)) + b",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 80.0,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_default": {
                    "expr": "((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) & (c + e + b + (0xffffffff - e | 0xffffffff - b) + 2 + (0xffffffff - c | 0xffffffff - (e + b + 1 + (0xffffffff - e | 0xffffffff - b))) ^ 0xffffffff)) + c + e + b + (0xffffffff - e | 0xffffffff - b) + 2 + (0xffffffff - c | 0xffffffff - (e + b + 1 + (0xffffffff - e | 0xffffffff - b)))",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 12,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 23.333333333333332,
                        "opsPercentages": {
                            "arithmetic": 65.21739130434783,
                            "mul": 4.3478260869565215,
                            "bitwise": 30.434782608695656
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((e & c) * (e | c) + (~c & e) * (~e & c) & ~((0xffffffff - e | 0xffffffff - b) + c + e + b + 2 + (0xffffffff - c | 0xffffffff - (e + b + 1 + (0xffffffff - e | 0xffffffff - b))))) + (0xffffffff - e | 0xffffffff - b) + c + e + b + 2 + (0xffffffff - c | 0xffffffff - (e + b + 1 + (0xffffffff - e | 0xffffffff - b)))",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 11,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 23.333333333333332,
                        "opsPercentages": {
                            "arithmetic": 65.21739130434783,
                            "mul": 4.3478260869565215,
                            "bitwise": 30.434782608695656
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "gcc_O3": {
                    "expr": "((~e & c) * (~c & e) + (e | c) * (e & c) & ~(b + 1 + e - (b & e)) + c + ((b & e) - b + 1 + e | ~c)) + (b + 1 + e - (b & e)) + c + ((b & e) - b + 1 + e | ~c)",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 9,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 40.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 5.555555555555555,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 260,
            "gt": {
                "expr": "((((e*a)-((-e)*a))|(a|((e|(-a))-(d&d)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "((((((e & a) * (e | a) + (e & ~ a) * (~ e & a)) + ~ (((~ e + 1) & a) * ((~ e + 1) | a) + ((~ e + 1) & ~ a) * (~ (~ e + 1) & a))) + 1) + ((a & ~ ((((e & ~ (~ (a - 1))) + ~ (a - 1)) + ~ ((~ d | d) - ~ d)) + 1)) + ((((e & ~ (~ (a - 1))) + ~ (a - 1)) + ~ ((~ d | d) - ~ d)) + 1))) + 1) + ((- ((((e & a) * (e | a) + (e & ~ a) * (~ e & a)) + ~ (((~ e + 1) & a) * ((~ e + 1) | a) + ((~ e + 1) & ~ a) * (~ (~ e + 1) & a))) + 1) - 1) | (- ((a & ~ ((((e & ~ (~ (a - 1))) + ~ (a - 1)) + ~ ((~ d | d) - ~ d)) + 1)) + ((((e & ~ (~ (a - 1))) + ~ (a - 1)) + ~ ((~ d | d) - ~ d)) + 1)) - 1))",
                "attributes": {
                    "numOps": 128,
                    "nestedExprLevel": 59,
                    "numDAGs": 43,
                    "opsPercentages": {
                        "arithmetic": 38.28125,
                        "mul": 6.25,
                        "bitwise": 55.46875
                    },
                    "percentageDAGsCancel": 4.651162790697675
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(~d + ((a - 1 & e) - a) + 1 + ((d - ((a - 1 & e) - a)) - 1 & a)) | (((-e & a) * (-e | a) + (e - 1 & a) * (-e & ~a) ) - ((e & a) * (e | a) + (~e & a) * (~a & e))) - 1) + ~d + ((a - 1 & e) - a) + ((d - ((a - 1 & e) - a)) - 1 & a) + ~((e - 1 & a) * (-e & ~a) + (-e & a) * (-e | a)) + (e & a) * (e | a) + (~e & a) * (~a & e) + 3",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 23,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 40.625,
                        "opsPercentages": {
                            "arithmetic": 46.05263157894737,
                            "mul": 10.526315789473683,
                            "bitwise": 43.42105263157895
                        },
                        "percentageDAGsCancel": 7.317073170731707
                    }
                },
                "msvc_O1": {
                    "expr": "~(~e + 1 | a) * (~e + 1 & a) + (~~e + 1 & a) * (~e + 1 & ~a) + ((~~(~d + 1 + ~(a - 1) + a - 1 & e) & a - a - 1 & e) + a + d | (((~e + 1 | a) * (~e + 1 & a) + (~~e + 1 & a) * (~e + 1 & ~a) - (~e & a) * (~a & e)) - (a | e) * (a & e)) - 1) + ~(~d + 1 + ~(a - 1) + a - 1 & e) & a + ~(a - 1) + a - 1 & e + ~d + (~e & a) * (~a & e) + (a | e) * (a & e) + 3",
                    "attributes": {
                        "numOps": 94,
                        "nestedExprLevel": 16,
                        "numDAGs": 52,
                        "percentDecreaseByOps": 26.5625,
                        "opsPercentages": {
                            "arithmetic": 39.361702127659576,
                            "mul": 8.51063829787234,
                            "bitwise": 52.12765957446809
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "clang_O3": {
                    "expr": "(~(a - 1 & e) - (d + a) & a) + (a - 1 & e) - (d + a) | ((~e & a) * (~a & e) + (e | a) * (e & a)) - ((e - 1 & a) * (-e & ~a) + (-e | a) * (-e & a))",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 10,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 73.4375,
                        "opsPercentages": {
                            "arithmetic": 41.17647058823529,
                            "mul": 11.76470588235294,
                            "bitwise": 47.05882352941176
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "clang_default": {
                    "expr": "(e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) + (((e ^ 0xffffffff) + 1 & a) * ((e ^ 0xffffffff) + 1 | a) + ((e ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * (((e ^ 0xffffffff) + 1 ^ 0xffffffff) & a) ^ 0xffffffff) + (a & ((e & a - 1) + (a - 1 ^ 0xffffffff) + ((d ^ 0xffffffff | d) - (d ^ 0xffffffff) ^ 0xffffffff) + 1 ^ 0xffffffff)) + (e & a - 1) + (a - 1 ^ 0xffffffff) + ((d ^ 0xffffffff | d) - (d ^ 0xffffffff) ^ 0xffffffff) + 3 + (0xffffffff - ((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) + (((e ^ 0xffffffff) + 1 & a) * ((e ^ 0xffffffff) + 1 | a) + ((e ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * (((e ^ 0xffffffff) + 1 ^ 0xffffffff) & a) ^ 0xffffffff) + 1) | 0xffffffff - ((a & ((e & a - 1) + (a - 1 ^ 0xffffffff) + ((d ^ 0xffffffff | d) - (d ^ 0xffffffff) ^ 0xffffffff) + 1 ^ 0xffffffff)) + (e & a - 1) + (a - 1 ^ 0xffffffff) + ((d ^ 0xffffffff | d) - (d ^ 0xffffffff) ^ 0xffffffff) + 1))",
                    "attributes": {
                        "numOps": 116,
                        "nestedExprLevel": 40,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 9.375,
                        "opsPercentages": {
                            "arithmetic": 38.793103448275865,
                            "mul": 6.896551724137931,
                            "bitwise": 54.310344827586206
                        },
                        "percentageDAGsCancel": 6.521739130434782
                    }
                },
                "msvc_default": {
                    "expr": "(e & a) * (e | a) + (~a & e) * (~e & a) + ~((~e + 1 & a) * (~e + 1 | a) + (~e + 1 & ~a) * (~(~e + 1) & a)) + (~((a - 1 & e) + ~(a - 1) + 1 + ~(-~d - 1)) & a) + (a - 1 & e) + ~(a - 1) + ~(-~d - 1) + 3 + (0xffffffff - ((e & a) * (e | a) + (~a & e) * (~e & a) + 1 + ~((~e + 1 & a) * (~e + 1 | a) + (~e + 1 & ~a) * (~(~e + 1) & a))) | 0xffffffff - ((~((a - 1 & e) + ~(a - 1) + 1 + ~(-~d - 1)) & a) + 1 + (a - 1 & e) + ~(a - 1) + ~(-~d - 1)))",
                    "attributes": {
                        "numOps": 112,
                        "nestedExprLevel": 24,
                        "numDAGs": 47,
                        "percentDecreaseByOps": 12.5,
                        "opsPercentages": {
                            "arithmetic": 43.75,
                            "mul": 7.142857142857142,
                            "bitwise": 49.107142857142854
                        },
                        "percentageDAGsCancel": 6.382978723404255
                    }
                },
                "gcc_O3": {
                    "expr": "((d - (a - 1 & e) - a) - 1 & a) + ((a - 1 & e) - a - d) + 1 + ((~e & a) * (~a & e) + (e & a) * (e | a) - (e - 1 & a) * (~a & -e) + (-e | a) * (-e & a)) + (((e - 1 & a) * (~a & -e) + (-e | a) * (-e & a) - (~e & a) * (~a & e) + (e & a) * (e | a)) - 1 | ~((d - (a - 1 & e) - a) - 1 & a) + ((a - 1 & e) - a - d))",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 19,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 43.75,
                        "opsPercentages": {
                            "arithmetic": 47.22222222222222,
                            "mul": 11.11111111111111,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                }
            }
        },
        {
            "num": 261,
            "gt": {
                "expr": "((a-(~(-(-(-a))))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 7,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 80.0,
                        "mul": 0.0,
                        "bitwise": 20.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(a + ~ (~ ((~ a + 1) - 1) - 1)) + 1",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 5,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 62.5,
                        "mul": 0.0,
                        "bitwise": 37.5
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "1",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "1",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "1",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "a + (a - 1 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 75.0,
                            "mul": 0.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "a + 1 + ~(a - 1)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 75.0,
                            "mul": 0.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "1",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 262,
            "gt": {
                "expr": "(((b-b)-(-(((-(~b))&(b*c))^(b|b)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 11.11111111111111,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "((((b & ~ b) << 1) - (b ^ b)) ^ ~ (((((~ (b + 1) | ((b & c) * (b | c) + (b & ~ c) * (~ b & c))) - ~ (b + 1)) | ((b & ~ b) + b)) - (((~ (b + 1) | ((b & c) * (b | c) + (b & ~ c) * (~ b & c))) - ~ (b + 1)) & ((b & ~ b) + b))) - 1)) - ((~ (((b & ~ b) << 1) - (b ^ b)) & ~ (((((~ (b + 1) | ((b & c) * (b | c) + (b & ~ c) * (~ b & c))) - ~ (b + 1)) | ((b & ~ b) + b)) - (((~ (b + 1) | ((b & c) * (b | c) + (b & ~ c) * (~ b & c))) - ~ (b + 1)) & ((b & ~ b) + b))) - 1)) + (~ (((b & ~ b) << 1) - (b ^ b)) & ~ (((((~ (b + 1) | ((b & c) * (b | c) + (b & ~ c) * (~ b & c))) - ~ (b + 1)) | ((b & ~ b) + b)) - (((~ (b + 1) | ((b & c) * (b | c) + (b & ~ c) * (~ b & c))) - ~ (b + 1)) & ((b & ~ b) + b))) - 1)))",
                "attributes": {
                    "numOps": 145,
                    "nestedExprLevel": 63,
                    "numDAGs": 28,
                    "opsPercentages": {
                        "arithmetic": 28.27586206896552,
                        "mul": 8.275862068965518,
                        "bitwise": 63.44827586206897
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "b + 1 & (b & c) * (b | c) + (~b & c) * (~c & b) ^ b",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 91.72413793103448,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(b + 2 + ((~c & b) * (~b & c) + (b | c) * (b & c) | ~(b + 1)) | b) - (b + 2 + ((~c & b) * (~b & c) + (b | c) * (b & c) | ~(b + 1)) & b)",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 10,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 78.62068965517241,
                        "opsPercentages": {
                            "arithmetic": 29.03225806451613,
                            "mul": 12.903225806451612,
                            "bitwise": 58.06451612903226
                        },
                        "percentageDAGsCancel": 17.647058823529413
                    }
                },
                "clang_O3": {
                    "expr": "b + 1 & (~b & c) * (~c & b) + (c | b) * (c & b) ^ b",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 91.72413793103448,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_default": {
                    "expr": "((b & (b ^ 0xffffffff)) * 2 ^ (((b + 1 ^ 0xffffffff | (b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c)) - (b + 1 ^ 0xffffffff) | (b & (b ^ 0xffffffff)) + b) - ((b + 1 ^ 0xffffffff | (b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c)) - (b + 1 ^ 0xffffffff) & (b & (b ^ 0xffffffff)) + b)) - 1 ^ 0xffffffff) - ((((b & (b ^ 0xffffffff)) * 2 ^ 0xffffffff) & ((((b + 1 ^ 0xffffffff | (b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c)) - (b + 1 ^ 0xffffffff) | (b & (b ^ 0xffffffff)) + b) - ((b + 1 ^ 0xffffffff | (b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c)) - (b + 1 ^ 0xffffffff) & (b & (b ^ 0xffffffff)) + b)) - 1 ^ 0xffffffff)) + (((b & (b ^ 0xffffffff)) * 2 ^ 0xffffffff) & ((((b + 1 ^ 0xffffffff | (b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c)) - (b + 1 ^ 0xffffffff) | (b & (b ^ 0xffffffff)) + b) - ((b + 1 ^ 0xffffffff | (b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c)) - (b + 1 ^ 0xffffffff) & (b & (b ^ 0xffffffff)) + b)) - 1 ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 139,
                        "nestedExprLevel": 58,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 4.137931034482759,
                        "opsPercentages": {
                            "arithmetic": 27.33812949640288,
                            "mul": 10.79136690647482,
                            "bitwise": 61.87050359712231
                        },
                        "percentageDAGsCancel": 14.814814814814813
                    }
                },
                "msvc_default": {
                    "expr": "~((((~(b + 1) | (b & c) * (b | c) + (~c & b) * (~b & c) ) - ~(b + 1) | b) - ((~(b + 1) | (b & c) * (b | c) + (~c & b) * (~b & c)) - ~(b + 1) & b)) - 1) - (~((((~(b + 1) | (b & c) * (b | c) + (~c & b) * (~b & c)) - ~(b + 1) | b) - ((~(b + 1) | (b & c) * (b | c) + (~c & b) * (~b & c) ) - ~(b + 1) & b)) - 1) + ~((((~(b + 1) | (b & c) * (b | c) + (~c & b) * (~b & c) ) - ~(b + 1) | b) - ((~(b + 1) | (b & c) * (b | c) + (~c & b) * (~b & c)) - ~(b + 1) & b)) - 1))",
                    "attributes": {
                        "numOps": 107,
                        "nestedExprLevel": 38,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 26.20689655172414,
                        "opsPercentages": {
                            "arithmetic": 29.906542056074763,
                            "mul": 11.214953271028037,
                            "bitwise": 58.87850467289719
                        },
                        "percentageDAGsCancel": 15.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~c & b) * (~b & c) + (b & c) * (c | b) & b + 1 ^ b",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 91.72413793103448,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                }
            }
        },
        {
            "num": 263,
            "gt": {
                "expr": "((((~a)+(c*c))^(e^(((a+c)+a)*c))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 25.0,
                        "bitwise": 37.5
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((- a - 1) ^ ~ ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + (((- a - 1) | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) << 1)) + 1) | ((e | (((((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) & c) * ((((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) | c) + ((((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) & ~ c) * (~ (((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) & c))) - (e & (((((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) & c) * ((((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) | c) + ((((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) & ~ c) * (~ (((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) & c))))) - (((((- a - 1) ^ ~ ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + (((- a - 1) | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) << 1)) + 1) & ((e | (((((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) & c) * ((((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) | c) + ((((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) & ~ c) * (~ (((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) & c))) - (e & (((((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) & c) * ((((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) | c) + ((((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) & ~ c) * (~ (((((a | c) + (a & c)) ^ ~ a) + ((((a | c) + (a & c)) | a) + (((a | c) + (a & c)) | a))) + 1) & c)))))",
                "attributes": {
                    "numOps": 357,
                    "nestedExprLevel": 243,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 4.481792717086835,
                        "bitwise": 62.18487394957983
                    },
                    "percentageDAGsCancel": 12.82051282051282
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((c + a ^ a) + (c + a | a) * -2) - 1 & c) * ((c + a | a) * 2 + ~(c + a ^ a) + 1 & ~c) + ((c + a | a) * 2 + ~(c + a ^ a) + 1 & c) * ((c + a | a) * 2 + ~(c + a ^ a) + 1 | c) ^ e ^ (c * c | ~a) * 2 + (c * c ^ a) + 1",
                    "attributes": {
                        "numOps": 50,
                        "nestedExprLevel": 11,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 85.99439775910365,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 18.0,
                            "bitwise": 42.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((-1 - a) * 2 | c * c * 2) + (c * c ^ a) + 1 | ((((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c)) | c) * (((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c)) & c) + (~((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c)) & c) * (~c & ((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c))) | e) - ((((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c)) | c) * (((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c)) & c) + (~((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c)) & c) * (~c & ((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c))) & e)) - (((-1 - a) * 2 | c * c * 2) + (c * c ^ a) + 1 & ((((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c)) | c) * (((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c)) & c) + (~((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c)) & c) * (~c & ((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c))) | e) - ((((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c)) | c) * (((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c)) & c) + (~((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c)) & c) * (~c & ((a | c) + (a & c) | a) * 2 + 1 + (~a ^ (a | c) + (a & c))) & e))",
                    "attributes": {
                        "numOps": 257,
                        "nestedExprLevel": 91,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 28.011204481792717,
                        "opsPercentages": {
                            "arithmetic": 30.739299610894943,
                            "mul": 12.45136186770428,
                            "bitwise": 56.809338521400775
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(c * c ^ a) + (c * c | ~a) * 2 + 1 ^ e ^ (~(c + a | a) * 2 - (c + a ^ a) & c) * (~c & (c + a | a) * 2 - (c + a ^ a)) + ((c + a | a) * 2 - (c + a ^ a) | c) * ((c + a | a) * 2 - (c + a ^ a) & c)",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 10,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 87.95518207282913,
                        "opsPercentages": {
                            "arithmetic": 34.883720930232556,
                            "mul": 20.930232558139537,
                            "bitwise": 44.18604651162791
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((0xffffffff - a ^ c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) ^ 0xffffffff) + (0xffffffff - a | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) * 2 + 1 | (e | (((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 & c) * (((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 | c) + (((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 & (c ^ 0xffffffff)) * ((((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 ^ 0xffffffff) & c)) - (e & (((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 & c) * (((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 | c) + (((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 & (c ^ 0xffffffff)) * ((((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 ^ 0xffffffff) & c))) - ((0xffffffff - a ^ c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) ^ 0xffffffff) + (0xffffffff - a | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) * 2 + 1 & (e | (((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 & c) * (((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 | c) + (((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 & (c ^ 0xffffffff)) * ((((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 ^ 0xffffffff) & c)) - (e & (((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 & c) * (((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 | c) + (((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 & (c ^ 0xffffffff)) * ((((a | c) + (a & c) ^ a ^ 0xffffffff) + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) + 1 ^ 0xffffffff) & c)))",
                    "attributes": {
                        "numOps": 345,
                        "nestedExprLevel": 135,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 3.361344537815126,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 5.217391304347826,
                            "bitwise": 61.44927536231884
                        },
                        "percentageDAGsCancel": 13.88888888888889
                    }
                },
                "msvc_default": {
                    "expr": "((0xffffffff - a ^ ~(c * c)) + 1 + (0xffffffff - a | c * c) * 2 | ((((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) & c) * (((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) | c) + (((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) & ~c) * (~(((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a)) & c) | e) - ((((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) & c) * (((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) | c) + (((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) & ~c) * (~(((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a)) & c) & e)) - ((0xffffffff - a ^ ~(c * c)) + 1 + (0xffffffff - a | c * c) * 2 & ((((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) & c) * (((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) | c) + (((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) & ~c) * (~(((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a)) & c) | e) - ((((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) & c) * (((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) | c) + (((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a) & ~c) * (~(((a | c) + (a & c) ^ ~a) + 1 + ((a | c) + (a & c) | a) + ((a | c) + (a & c) | a)) & c) & e))",
                    "attributes": {
                        "numOps": 321,
                        "nestedExprLevel": 127,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 10.084033613445378,
                        "opsPercentages": {
                            "arithmetic": 34.57943925233645,
                            "mul": 4.361370716510903,
                            "bitwise": 61.059190031152646
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((c + a ^ a + c + a | a * -2) - 1 & c) * (~c & c + a | a * 2 - c + a ^ a) + (c + a | a * 2 - c + a ^ a & c) * (c + a | a * 2 - c + a ^ a | c) ^ (c * c ^ a) + 1 + (~a | c * c) * 2 ^ e",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 5,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 87.6750700280112,
                        "opsPercentages": {
                            "arithmetic": 38.63636363636363,
                            "mul": 20.454545454545457,
                            "bitwise": 40.909090909090914
                        },
                        "percentageDAGsCancel": 6.0606060606060606
                    }
                }
            }
        },
        {
            "num": 264,
            "gt": {
                "expr": "(((((a^d)-d)&(d-a))^(-(-(a+(~a))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 0.0,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((~ ((((((a - d) - ((a | ~ d) + (a | ~ d))) - 2) & ~ d) + ((((a - d) - ((a | ~ d) + (a | ~ d))) - 2) & ~ d)) - ((((a - d) - ((a | ~ d) + (a | ~ d))) - 2) ^ d)) | ((d + ~ a) + 1)) - ~ ((((((a - d) - ((a | ~ d) + (a | ~ d))) - 2) & ~ d) + ((((a - d) - ((a | ~ d) + (a | ~ d))) - 2) & ~ d)) - ((((a - d) - ((a | ~ d) + (a | ~ d))) - 2) ^ d))) | (~ (~ (((a ^ (- a - 1)) + ((a & (- a - 1)) + (a & (- a - 1)))) - 1)) + 1)) - (((~ ((((((a - d) - ((a | ~ d) + (a | ~ d))) - 2) & ~ d) + ((((a - d) - ((a | ~ d) + (a | ~ d))) - 2) & ~ d)) - ((((a - d) - ((a | ~ d) + (a | ~ d))) - 2) ^ d)) | ((d + ~ a) + 1)) - ~ ((((((a - d) - ((a | ~ d) + (a | ~ d))) - 2) & ~ d) + ((((a - d) - ((a | ~ d) + (a | ~ d))) - 2) & ~ d)) - ((((a - d) - ((a | ~ d) + (a | ~ d))) - 2) ^ d))) & (~ (~ (((a ^ (- a - 1)) + ((a & (- a - 1)) + (a & (- a - 1)))) - 1)) + 1))",
                "attributes": {
                    "numOps": 171,
                    "nestedExprLevel": 94,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 48.53801169590643,
                        "mul": 0.0,
                        "bitwise": 51.461988304093566
                    },
                    "percentageDAGsCancel": 10.344827586206897
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(d + ~a + 1 & (~d & ((a - d) + (~d | a) * -2) - 2) * 2 - (((a - d) + (~d | a) * -2) - 2 ^ d))",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 8,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 85.96491228070175,
                        "opsPercentages": {
                            "arithmetic": 45.83333333333333,
                            "mul": 12.5,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_O1": {
                    "expr": "~(((~(((a - ((~d | a) * 2 + 2)) - d & ~d) * 2 - (a - ((~d | a) * 2 + 2)) - d ^ d) | d - a) - (a - ((~d | a) * 2 + 2)) - d ^ d) + 1 + ((a - ((~d | a) * 2 + 2)) - d & ~d) * 2)",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 16,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 76.60818713450293,
                        "opsPercentages": {
                            "arithmetic": 42.5,
                            "mul": 15.0,
                            "bitwise": 42.5
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "clang_O3": {
                    "expr": "~(d - a & (~d & ((a - d) + (~d | a) * -2) - 2) * 2 - (((a - d) + (~d | a) * -2) - 2 ^ d))",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 8,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 87.13450292397661,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 13.636363636363635,
                            "bitwise": 40.909090909090914
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_default": {
                    "expr": "((((((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 & (d ^ 0xffffffff)) + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 & (d ^ 0xffffffff))) - (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ d) ^ 0xffffffff | d + (a ^ 0xffffffff) + 1) - (((((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 & (d ^ 0xffffffff)) + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 & (d ^ 0xffffffff))) - (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ d) ^ 0xffffffff) | (a ^ 0xffffffff - a) + (a & 0xffffffff - a) + (a & 0xffffffff - a)) - ((((((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 & (d ^ 0xffffffff)) + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 & (d ^ 0xffffffff))) - (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ d) ^ 0xffffffff | d + (a ^ 0xffffffff) + 1) - (((((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 & (d ^ 0xffffffff)) + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 & (d ^ 0xffffffff))) - (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ d) ^ 0xffffffff) & (a ^ 0xffffffff - a) + (a & 0xffffffff - a) + (a & 0xffffffff - a))",
                    "attributes": {
                        "numOps": 157,
                        "nestedExprLevel": 62,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 8.187134502923977,
                        "opsPercentages": {
                            "arithmetic": 46.496815286624205,
                            "mul": 0.0,
                            "bitwise": 53.503184713375795
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "msvc_default": {
                    "expr": "((~(((((a - d) - ((~d | a) + (~d | a))) - 2 & ~d ) + (((a - d) - ((~d | a) + (~d | a))) - 2 & ~d)) - (((a - d) - ((~d | a) + (~d | a))) - 2 ^ d)) | d + 1 + ~a) - ~(((((a - d) - ((~d | a) + (~d | a))) - 2 & ~d) + (((a - d) - ((~d | a) + (~d | a))) - 2 & ~d )) - (((a - d) - ((~d | a) + (~d | a))) - 2 ^ d)) | (0xffffffff - a ^ a) + (0xffffffff - a & a) + (0xffffffff - a & a)) - ((~(((((a - d) - ((~d | a) + (~d | a))) - 2 & ~d ) + (((a - d) - ((~d | a) + (~d | a))) - 2 & ~d)) - (((a - d) - ((~d | a) + (~d | a))) - 2 ^ d)) | d + 1 + ~a) - ~(((((a - d) - ((~d | a) + (~d | a))) - 2 & ~d) + (((a - d) - ((~d | a) + (~d | a))) - 2 & ~d )) - (((a - d) - ((~d | a) + (~d | a))) - 2 ^ d)) & (0xffffffff - a ^ a) + (0xffffffff - a & a) + (0xffffffff - a & a))",
                    "attributes": {
                        "numOps": 157,
                        "nestedExprLevel": 64,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 8.187134502923977,
                        "opsPercentages": {
                            "arithmetic": 46.496815286624205,
                            "mul": 0.0,
                            "bitwise": 53.503184713375795
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "gcc_O3": {
                    "expr": "~((~d & ((a - d) + (~d | a) * -2) - 2) * 2 - (((a - d) + (~d | a) * -2) - 2 ^ d) & d - a)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 8,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 87.13450292397661,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 13.636363636363635,
                            "bitwise": 40.909090909090914
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                }
            }
        },
        {
            "num": 265,
            "gt": {
                "expr": "((((a|a)|c)-(~(-(~(a&((c-a)+c)))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 0.0,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "(((((((a + a) + 1) + ((- a - 1) | (- a - 1))) + c) + 1) + ((- (((a + a) + 1) + ((- a - 1) | (- a - 1))) - 1) | (- c - 1))) + ~ ((- (((~ a | ((((c ^ a) - ((~ c & a) << 1)) ^ c) + ((((c ^ a) - ((~ c & a) << 1)) & c) << 1))) + a) + 1) - 1) - 1)) + 1",
                "attributes": {
                    "numOps": 48,
                    "nestedExprLevel": 29,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 64.58333333333334,
                        "mul": 0.0,
                        "bitwise": 35.41666666666667
                    },
                    "percentageDAGsCancel": 6.0606060606060606
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "a * 3 + (~a | ((c ^ a) + (~c & a) * -2 & c) * 2 + ((c ^ a) + (~c & a) * -2 ^ c)) + c + ~a + (~c | -a - 1) + 5",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 39.58333333333333,
                        "opsPercentages": {
                            "arithmetic": 41.37931034482759,
                            "mul": 13.793103448275861,
                            "bitwise": 44.827586206896555
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "msvc_O1": {
                    "expr": "~(a & c) + ~((-3 - ((((a ^ c) + (~c & a) * -2) * 2 & c * 2) + ((a ^ c) + (~c & a) * -2 ^ c) | ~a)) - a ) + a + c + 2",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 9,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 39.58333333333333,
                        "opsPercentages": {
                            "arithmetic": 41.37931034482759,
                            "mul": 13.793103448275861,
                            "bitwise": 44.827586206896555
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(((c ^ a) + (~c & a) * -2 ^ c) + ((c ^ a) + (~c & a) * -2 & c) * 2 | ~a) + (c | a) + a + 3",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 7,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 54.166666666666664,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 13.636363636363635,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "clang_default": {
                    "expr": "a * 2 + (0xffffffff - a | 0xffffffff - a) + c + (0xffffffff - (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a)) | 0xffffffff - c) + (0xfffffffe - ((a ^ 0xffffffff | ((c ^ a) + ((c ^ 0xffffffff) & a) * -2 ^ c) + ((c ^ a) + ((c ^ 0xffffffff) & a) * -2 & c) * 2) + a + 1) ^ 0xffffffff) + 3",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 11,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 16.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 52.5,
                            "mul": 12.5,
                            "bitwise": 35.0
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - a | 0xffffffff - a) + a * 2 + c + (0xffffffff - (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a)) | 0xffffffff - c) + 3 + ~(0xfffffffe - ((~a | ((c ^ a) + (~c & a) * -2 ^ c) + ((c ^ a) + (~c & a) * -2 & c) * 2) + 1 + a))",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 10,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 16.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 52.5,
                            "mul": 12.5,
                            "bitwise": 35.0
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                },
                "gcc_O3": {
                    "expr": "a + (((a ^ c) + (~c & a) * -2 ^ c) + ((a ^ c) + (~c & a) * -2 & c) * 2 | ~a) + (a - a * 2 + 1 | ~c) + c + 4 + ~a + a * 2 + 1",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 7,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 33.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 43.75,
                            "mul": 15.625,
                            "bitwise": 40.625
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 266,
            "gt": {
                "expr": "(((b^(e^e))&(((e&b)&(~e))*(b+(~e)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 11.11111111111111,
                        "mul": 11.11111111111111,
                        "bitwise": 77.77777777777779
                    },
                    "percentageDAGsCancel": 62.5
                }
            },
            "mba": {
                "expr": "(~ (((b - (((e - e) - ((e | ~ e) + (e | ~ e))) - 2)) - ((b | ~ (((e - e) - ((e | ~ e) + (e | ~ e))) - 2)) << 1)) - 2) | ((((((~ e | b) - ~ e) | e) - e) & (((b | (- e - 1)) << 1) - (b ^ (- e - 1)))) * (((((~ e | b) - ~ e) | e) - e) | (((b | (- e - 1)) << 1) - (b ^ (- e - 1)))) + (((((~ e | b) - ~ e) | e) - e) & ~ (((b | (- e - 1)) << 1) - (b ^ (- e - 1)))) * (~ ((((~ e | b) - ~ e) | e) - e) & (((b | (- e - 1)) << 1) - (b ^ (- e - 1)))))) - ~ (((b - (((e - e) - ((e | ~ e) + (e | ~ e))) - 2)) - ((b | ~ (((e - e) - ((e | ~ e) + (e | ~ e))) - 2)) << 1)) - 2)",
                "attributes": {
                    "numOps": 113,
                    "nestedExprLevel": 61,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 46.017699115044245,
                        "mul": 1.7699115044247788,
                        "bitwise": 52.21238938053098
                    },
                    "percentageDAGsCancel": 35.294117647058826
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "b + 1 + ((~((~e | b) + 1 + e | e) - e & ((-1 - e) * 2 | b * 2) - (~e ^ b)) * (~((-1 - e) * 2 | b * 2) - (~e ^ b) & ((~e | b) + 1 + e | e) - e) + (((-1 - e) * 2 | b * 2) - (~e ^ b) | ((~e | b) + 1 + e | e) - e) * (((-1 - e) * 2 | b * 2) - (~e ^ b) & ((~e | b) + 1 + e | e) - e) | ~b)",
                    "attributes": {
                        "numOps": 69,
                        "nestedExprLevel": 19,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 38.93805309734513,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 14.492753623188406,
                            "bitwise": 46.3768115942029
                        },
                        "percentageDAGsCancel": 32.142857142857146
                    }
                },
                "clang_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b - (-2 - ((e | e ^ 0xffffffff) + (e | e ^ 0xffffffff)))) + (b | 0xfffffffe - ((e | e ^ 0xffffffff) + (e | e ^ 0xffffffff)) ^ 0xffffffff) * -2) - 2 ^ 0xffffffff | (((e ^ 0xffffffff | b) - (e ^ 0xffffffff) | e) - e & (b | 0xffffffff - e) * 2 - (b ^ 0xffffffff - e)) * (((e ^ 0xffffffff | b) - (e ^ 0xffffffff) | e) - e | (b | 0xffffffff - e) * 2 - (b ^ 0xffffffff - e)) + (((e ^ 0xffffffff | b) - (e ^ 0xffffffff) | e) - e & ((b | 0xffffffff - e) * 2 - (b ^ 0xffffffff - e) ^ 0xffffffff)) * ((((e ^ 0xffffffff | b) - (e ^ 0xffffffff) | e) - e ^ 0xffffffff) & (b | 0xffffffff - e) * 2 - (b ^ 0xffffffff - e))) - (((b - (-2 - ((e | e ^ 0xffffffff) + (e | e ^ 0xffffffff)))) + (b | 0xfffffffe - ((e | e ^ 0xffffffff) + (e | e ^ 0xffffffff)) ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 101,
                        "nestedExprLevel": 37,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 10.619469026548673,
                        "opsPercentages": {
                            "arithmetic": 39.603960396039604,
                            "mul": 7.920792079207921,
                            "bitwise": 52.475247524752476
                        },
                        "percentageDAGsCancel": 24.242424242424242
                    }
                },
                "msvc_default": {
                    "expr": "(~b | (((~e | b) - ~e | e) - e & (0xffffffff - e | b) * 2 - (0xffffffff - e ^ b)) * (((~e | b) - ~e | e) - e | (0xffffffff - e | b) * 2 - (0xffffffff - e ^ b)) + (((~e | b) - ~e | e) - e & ~((0xffffffff - e | b) * 2 - (0xffffffff - e ^ b))) * (~(((~e | b) - ~e | e) - e) & (0xffffffff - e | b) * 2 - (0xffffffff - e ^ b))) - ~b",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 17,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 46.017699115044245,
                        "opsPercentages": {
                            "arithmetic": 36.0655737704918,
                            "mul": 9.836065573770492,
                            "bitwise": 54.09836065573771
                        },
                        "percentageDAGsCancel": 36.36363636363637
                    }
                },
                "gcc_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 267,
            "gt": {
                "expr": "((~(-(-(((a+e)*(b^a))*(b+a))))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 25.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ (((((((a | e) << 1) - (a ^ e)) & (((b - a) - ((b | ~ a) << 1)) - 2)) * ((((a | e) << 1) - (a ^ e)) | (((b - a) - ((b | ~ a) << 1)) - 2)) + ((((a | e) << 1) - (a ^ e)) & ~ (((b - a) - ((b | ~ a) << 1)) - 2)) * (~ (((a | e) << 1) - (a ^ e)) & (((b - a) - ((b | ~ a) << 1)) - 2))) & ((b ^ a) + ((b & a) + (b & a)))) * ((((((a | e) << 1) - (a ^ e)) & (((b - a) - ((b | ~ a) << 1)) - 2)) * ((((a | e) << 1) - (a ^ e)) | (((b - a) - ((b | ~ a) << 1)) - 2)) + ((((a | e) << 1) - (a ^ e)) & ~ (((b - a) - ((b | ~ a) << 1)) - 2)) * (~ (((a | e) << 1) - (a ^ e)) & (((b - a) - ((b | ~ a) << 1)) - 2))) | ((b ^ a) + ((b & a) + (b & a)))) + ((((((a | e) << 1) - (a ^ e)) & (((b - a) - ((b | ~ a) << 1)) - 2)) * ((((a | e) << 1) - (a ^ e)) | (((b - a) - ((b | ~ a) << 1)) - 2)) + ((((a | e) << 1) - (a ^ e)) & ~ (((b - a) - ((b | ~ a) << 1)) - 2)) * (~ (((a | e) << 1) - (a ^ e)) & (((b - a) - ((b | ~ a) << 1)) - 2))) & ~ ((b ^ a) + ((b & a) + (b & a)))) * (~ (((((a | e) << 1) - (a ^ e)) & (((b - a) - ((b | ~ a) << 1)) - 2)) * ((((a | e) << 1) - (a ^ e)) | (((b - a) - ((b | ~ a) << 1)) - 2)) + ((((a | e) << 1) - (a ^ e)) & ~ (((b - a) - ((b | ~ a) << 1)) - 2)) * (~ (((a | e) << 1) - (a ^ e)) & (((b - a) - ((b | ~ a) << 1)) - 2))) & ((b ^ a) + ((b & a) + (b & a))))) + 1) - 1",
                "attributes": {
                    "numOps": 228,
                    "nestedExprLevel": 135,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 34.64912280701755,
                        "mul": 4.385964912280701,
                        "bitwise": 60.96491228070175
                    },
                    "percentageDAGsCancel": 2.857142857142857
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((b & a) * 2 + (b ^ a) & ~((((b - a) + (~a | b) * -2) - 2 & ~((a | e) * 2) + (a ^ e)) * ((a | e) * 2 - (a ^ e) & (~a | b) * 2 + ~b + a + 2) + ((a | e) * 2 - (a ^ e) & ((b - a) + (~a | b) * -2) - 2) * (((b - a) + (~a | b) * -2) - 2 | (a | e) * 2 - (a ^ e)))) * (((a | e) * 2 - (a ^ e) & ((b - a) + (~a | b) * -2) - 2) * (((b - a) + (~a | b) * -2) - 2 | (a | e) * 2 - (a ^ e)) + (((b - a) + (~a | b) * -2) - 2 & ~((a | e) * 2) + (a ^ e)) * ((a | e) * 2 - (a ^ e) & (~a | b) * 2 + ~b + a + 2) & ~((b & a) * 2 + (b ^ a))) + (((a | e) * 2 - (a ^ e) & ((b - a) + (~a | b) * -2) - 2) * (((b - a) + (~a | b) * -2) - 2 | (a | e) * 2 - (a ^ e)) + (((b - a) + (~a | b) * -2) - 2 & ~((a | e) * 2) + (a ^ e)) * ((a | e) * 2 - (a ^ e) & (~a | b) * 2 + ~b + a + 2) & (b & a) * 2 + (b ^ a)) * ((b & a) * 2 + (b ^ a) | ((a | e) * 2 - (a ^ e) & ((b - a) + (~a | b) * -2) - 2) * (((b - a) + (~a | b) * -2) - 2 | (a | e) * 2 - (a ^ e)) + (((b - a) + (~a | b) * -2) - 2 & ~((a | e) * 2) + (a ^ e)) * ((a | e) * 2 - (a ^ e) & (~a | b) * 2 + ~b + a + 2)))",
                    "attributes": {
                        "numOps": 234,
                        "nestedExprLevel": 73,
                        "numDAGs": 40,
                        "percentDecreaseByOps": -2.631578947368421,
                        "opsPercentages": {
                            "arithmetic": 36.324786324786324,
                            "mul": 19.65811965811966,
                            "bitwise": 44.01709401709402
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~((~(a ^ b) + (a & b) * 2 & ((a | e) * 2 - (a ^ e) & ((b + (~a | b) * -2) - a) - 2) * ((a | e) * 2 - (a ^ e) | ((b + (~a | b) * -2) - a) - 2) + (~((b + (~a | b) * -2) - a) - 2 & (a | e) * 2 - (a ^ e)) * (~(a | e) * 2 - (a ^ e) & ((b + (~a | b) * -2) - a) - 2)) * (~((a | e) * 2 - (a ^ e) & ((b + (~a | b) * -2) - a) - 2) * ((a | e) * 2 - (a ^ e) | ((b + (~a | b) * -2) - a) - 2) + (~((b + (~a | b) * -2) - a) - 2 & (a | e) * 2 - (a ^ e)) * (~(a | e) * 2 - (a ^ e) & ((b + (~a | b) * -2) - a) - 2) & (a ^ b) + (a & b) * 2) + (((a | e) * 2 - (a ^ e) & ((b + (~a | b) * -2) - a) - 2) * ((a | e) * 2 - (a ^ e) | ((b + (~a | b) * -2) - a) - 2) + (~((b + (~a | b) * -2) - a) - 2 & (a | e) * 2 - (a ^ e)) * (~(a | e) * 2 - (a ^ e) & ((b + (~a | b) * -2) - a) - 2) | (a ^ b) + (a & b) * 2) * (((a | e) * 2 - (a ^ e) & ((b + (~a | b) * -2) - a) - 2) * ((a | e) * 2 - (a ^ e) | ((b + (~a | b) * -2) - a) - 2) + (~((b + (~a | b) * -2) - a) - 2 & (a | e) * 2 - (a ^ e)) * (~(a | e) * 2 - (a ^ e) & ((b + (~a | b) * -2) - a) - 2) & (a ^ b) + (a & b) * 2))",
                    "attributes": {
                        "numOps": 238,
                        "nestedExprLevel": 75,
                        "numDAGs": 40,
                        "percentDecreaseByOps": -4.385964912280701,
                        "opsPercentages": {
                            "arithmetic": 37.39495798319328,
                            "mul": 19.327731092436977,
                            "bitwise": 43.27731092436975
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "clang_O3": {
                    "expr": "~((~(~(e | a) * 2 - (e ^ a) & (b - a) + (~a | b) * -2 - 2) * (1 - (b - a) + (~a | b) * -2 & (e | a) * 2 - (e ^ a)) + ((e | a) * 2 - (e ^ a) | (b - a) + (~a | b) * -2 - 2) * ((e | a) * 2 - (e ^ a) & (b - a) + (~a | b) * -2 - 2) & (b ^ a) + (b & a) * 2) * (~(b ^ a) + (b & a) * 2 & (~(e | a) * 2 - (e ^ a) & (b - a) + (~a | b) * -2 - 2) * (1 - (b - a) + (~a | b) * -2 & (e | a) * 2 - (e ^ a)) + ((e | a) * 2 - (e ^ a) | (b - a) + (~a | b) * -2 - 2) * ((e | a) * 2 - (e ^ a) & (b - a) + (~a | b) * -2 - 2)) + ((~(e | a) * 2 - (e ^ a) & (b - a) + (~a | b) * -2 - 2) * (1 - (b - a) + (~a | b) * -2 & (e | a) * 2 - (e ^ a)) + ((e | a) * 2 - (e ^ a) | (b - a) + (~a | b) * -2 - 2) * ((e | a) * 2 - (e ^ a) & (b - a) + (~a | b) * -2 - 2) | (b ^ a) + (b & a) * 2) * ((~(e | a) * 2 - (e ^ a) & (b - a) + (~a | b) * -2 - 2) * (1 - (b - a) + (~a | b) * -2 & (e | a) * 2 - (e ^ a)) + ((e | a) * 2 - (e ^ a) | (b - a) + (~a | b) * -2 - 2) * ((e | a) * 2 - (e ^ a) & (b - a) + (~a | b) * -2 - 2) & (b ^ a) + (b & a) * 2))",
                    "attributes": {
                        "numOps": 234,
                        "nestedExprLevel": 58,
                        "numDAGs": 40,
                        "percentDecreaseByOps": -2.631578947368421,
                        "opsPercentages": {
                            "arithmetic": 38.034188034188034,
                            "mul": 19.65811965811966,
                            "bitwise": 42.30769230769231
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "clang_default": {
                    "expr": "(((a | e) * 2 - (a ^ e) & ((b - a) + (b | a ^ 0xffffffff) * -2) - 2) * ((a | e) * 2 - (a ^ e) | ((b - a) + (b | a ^ 0xffffffff) * -2) - 2) + ((a | e) * 2 - (a ^ e) & (((b - a) + (b | a ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * (((a | e) * 2 - (a ^ e) ^ 0xffffffff) & ((b - a) + (b | a ^ 0xffffffff) * -2) - 2) & (b ^ a) + (b & a) + (b & a)) * (((a | e) * 2 - (a ^ e) & ((b - a) + (b | a ^ 0xffffffff) * -2) - 2) * ((a | e) * 2 - (a ^ e) | ((b - a) + (b | a ^ 0xffffffff) * -2) - 2) + ((a | e) * 2 - (a ^ e) & (((b - a) + (b | a ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * (((a | e) * 2 - (a ^ e) ^ 0xffffffff) & ((b - a) + (b | a ^ 0xffffffff) * -2) - 2) | (b ^ a) + (b & a) + (b & a)) + (((a | e) * 2 - (a ^ e) & ((b - a) + (b | a ^ 0xffffffff) * -2) - 2) * ((a | e) * 2 - (a ^ e) | ((b - a) + (b | a ^ 0xffffffff) * -2) - 2) + ((a | e) * 2 - (a ^ e) & (((b - a) + (b | a ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * (((a | e) * 2 - (a ^ e) ^ 0xffffffff) & ((b - a) + (b | a ^ 0xffffffff) * -2) - 2) & ((b ^ a) + (b & a) + (b & a) ^ 0xffffffff)) * ((((a | e) * 2 - (a ^ e) & ((b - a) + (b | a ^ 0xffffffff) * -2) - 2) * ((a | e) * 2 - (a ^ e) | ((b - a) + (b | a ^ 0xffffffff) * -2) - 2) + ((a | e) * 2 - (a ^ e) & (((b - a) + (b | a ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * (((a | e) * 2 - (a ^ e) ^ 0xffffffff) & ((b - a) + (b | a ^ 0xffffffff) * -2) - 2) ^ 0xffffffff) & (b ^ a) + (b & a) + (b & a)) ^ 0xffffffff",
                    "attributes": {
                        "numOps": 242,
                        "nestedExprLevel": 84,
                        "numDAGs": 34,
                        "percentDecreaseByOps": -6.140350877192982,
                        "opsPercentages": {
                            "arithmetic": 38.429752066115704,
                            "mul": 17.355371900826448,
                            "bitwise": 44.214876033057855
                        },
                        "percentageDAGsCancel": 2.941176470588235
                    }
                },
                "msvc_default": {
                    "expr": "~((((a | e) * 2 - (a ^ e) & ((b - a) + (~a | b) * -2) - 2) * ((a | e) * 2 - (a ^ e) | ((b - a) + (~a | b) * -2) - 2) + ((a | e) * 2 - (a ^ e) & ~(((b - a) + (~a | b) * -2) - 2)) * (~((a | e) * 2 - (a ^ e)) & ((b - a) + (~a | b) * -2) - 2) & (b ^ a) + (b & a) + (b & a)) * (((a | e) * 2 - (a ^ e) & ((b - a) + (~a | b) * -2) - 2) * ((a | e) * 2 - (a ^ e) | ((b - a) + (~a | b) * -2) - 2) + ((a | e) * 2 - (a ^ e) & ~(((b - a) + (~a | b) * -2) - 2)) * (~((a | e) * 2 - (a ^ e)) & ((b - a) + (~a | b) * -2) - 2) | (b ^ a) + (b & a) + (b & a)) + (((a | e) * 2 - (a ^ e) & ((b - a) + (~a | b) * -2) - 2) * ((a | e) * 2 - (a ^ e) | ((b - a) + (~a | b) * -2) - 2) + ((a | e) * 2 - (a ^ e) & ~(((b - a) + (~a | b) * -2) - 2)) * (~((a | e) * 2 - (a ^ e)) & ((b - a) + (~a | b) * -2) - 2) & ~((b ^ a) + (b & a) + (b & a))) * (~(((a | e) * 2 - (a ^ e) & ((b - a) + (~a | b) * -2) - 2) * ((a | e) * 2 - (a ^ e) | ((b - a) + (~a | b) * -2) - 2) + ((a | e) * 2 - (a ^ e) & ~(((b - a) + (~a | b) * -2) - 2)) * (~((a | e) * 2 - (a ^ e)) & ((b - a) + (~a | b) * -2) - 2)) & (b ^ a) + (b & a) + (b & a)))",
                    "attributes": {
                        "numOps": 242,
                        "nestedExprLevel": 85,
                        "numDAGs": 34,
                        "percentDecreaseByOps": -6.140350877192982,
                        "opsPercentages": {
                            "arithmetic": 38.429752066115704,
                            "mul": 17.355371900826448,
                            "bitwise": 44.214876033057855
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "gcc_O3": {
                    "expr": "~((~(a ^ b) + (a & b) * 2 & ((~a | b) * 2 + 2 + ~b + a & (e | a) * 2 - (e ^ a)) * (~(e | a) * 2 + (e ^ a) & ((b - a) + (~a | b) * -2) - 2) + ((e | a) * 2 - (e ^ a) & ((b - a) + (~a | b) * -2) - 2) * ((e | a) * 2 - (e ^ a) | ((b - a) + (~a | b) * -2) - 2)) * (~((~a | b) * 2 + 2 + ~b + a & (e | a) * 2 - (e ^ a)) * (~(e | a) * 2 + (e ^ a) & ((b - a) + (~a | b) * -2) - 2) + ((e | a) * 2 - (e ^ a) & ((b - a) + (~a | b) * -2) - 2) * ((e | a) * 2 - (e ^ a) | ((b - a) + (~a | b) * -2) - 2) & (a ^ b) + (a & b) * 2) + (((~a | b) * 2 + 2 + ~b + a & (e | a) * 2 - (e ^ a)) * (~(e | a) * 2 + (e ^ a) & ((b - a) + (~a | b) * -2) - 2) + ((e | a) * 2 - (e ^ a) & ((b - a) + (~a | b) * -2) - 2) * ((e | a) * 2 - (e ^ a) | ((b - a) + (~a | b) * -2) - 2) | (a ^ b) + (a & b) * 2) * (((~a | b) * 2 + 2 + ~b + a & (e | a) * 2 - (e ^ a)) * (~(e | a) * 2 + (e ^ a) & ((b - a) + (~a | b) * -2) - 2) + ((e | a) * 2 - (e ^ a) & ((b - a) + (~a | b) * -2) - 2) * ((e | a) * 2 - (e ^ a) | ((b - a) + (~a | b) * -2) - 2) & (a ^ b) + (a & b) * 2))",
                    "attributes": {
                        "numOps": 234,
                        "nestedExprLevel": 66,
                        "numDAGs": 43,
                        "percentDecreaseByOps": -2.631578947368421,
                        "opsPercentages": {
                            "arithmetic": 36.324786324786324,
                            "mul": 19.65811965811966,
                            "bitwise": 44.01709401709402
                        },
                        "percentageDAGsCancel": 4.651162790697675
                    }
                }
            }
        },
        {
            "num": 268,
            "gt": {
                "expr": "(((d*b)^(~(~((d*d)+b)))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 16.666666666666664,
                        "mul": 33.33333333333333,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((d & b) * (d | b) + (d & ~ b) * (~ d & b)) - (- (- (((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) ^ ~ b) + ((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | b) + (((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | b))) + 1) - 1) - 1)) - ((((d & b) * (d | b) + (d & ~ b) * (~ d & b)) | ~ (- (- (((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) ^ ~ b) + ((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | b) + (((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | b))) + 1) - 1) - 1)) << 1)) - 2",
                "attributes": {
                    "numOps": 100,
                    "nestedExprLevel": 45,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 16.0,
                        "bitwise": 59.0
                    },
                    "percentageDAGsCancel": 16.129032258064516
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((d & b) * (d | b) + (~d & b) * (~b & d)) - ((d * d | b) * 2 - (d * d ^ b))) + ((d * d ^ b) + ~((d * d | b) * 2) | (d & b) * (d | b) + (~d & b) * (~b & d)) * -2 + -2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 12,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 62.0,
                        "opsPercentages": {
                            "arithmetic": 23.684210526315788,
                            "mul": 28.947368421052634,
                            "bitwise": 47.368421052631575
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "msvc_O1": {
                    "expr": "(~d & b) * (~b & d) + -3 + ((d * d | b * -2 - (~(d * d | b * 2 + 1 + ~b ^ d * d) * 2 | ((~d & b) * (~b & d) + (b | d) * (b & d)) * 2)) - ~b ^ d * d) + (b | d) * (b & d)",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 9,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 57.99999999999999,
                        "opsPercentages": {
                            "arithmetic": 23.809523809523807,
                            "mul": 28.57142857142857,
                            "bitwise": 47.61904761904761
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                },
                "clang_O3": {
                    "expr": "~(~b ^ d * d) + (d * d | b) * 2 + (~d & b) * (~b & d) + (d | b) * (d & b) + (0x7ffffffe - (~b ^ d * d) + (d * d | b) * 2 | (~d & b) * (~b & d) + (d | b) * (d & b)) * -2 + -2",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 8,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 59.0,
                        "opsPercentages": {
                            "arithmetic": 24.390243902439025,
                            "mul": 26.82926829268293,
                            "bitwise": 48.78048780487805
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b)) - (-1 - (-1 - ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ b ^ 0xffffffff) + (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) | b) + (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) | b) + 1)))) + ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) | 0xffffffff - (-1 - ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ b ^ 0xffffffff) + (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) | b) + (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) | b) + 1)) ^ 0xffffffff) * -2 + -2",
                    "attributes": {
                        "numOps": 89,
                        "nestedExprLevel": 34,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 11.0,
                        "opsPercentages": {
                            "arithmetic": 29.213483146067414,
                            "mul": 19.101123595505616,
                            "bitwise": 51.68539325842697
                        },
                        "percentageDAGsCancel": 12.903225806451612
                    }
                },
                "msvc_default": {
                    "expr": "(((d & b) * (d | b) + (~b & d) * (~d & b)) - (-1 - (-1 - ((d * d ^ ~b) + 1 + (d * d | b) + (d * d | b))))) + ((d & b) * (d | b) + (~b & d) * (~d & b) | ~(0xffffffff - (-1 - ((d * d ^ ~b) + 1 + (d * d | b) + (d * d | b))))) * -2 + -2",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 17,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 47.0,
                        "opsPercentages": {
                            "arithmetic": 37.735849056603776,
                            "mul": 20.754716981132077,
                            "bitwise": 41.509433962264154
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "gcc_O3": {
                    "expr": "((~b & d) * (~d & b) + (d & b) * (d | b) - ((d * d | b) * 2 - d * d ^ b)) + (~(d * d | b) * 2 + d * d ^ b | (~b & d) * (~d & b) + (d & b) * (d | b)) * -2 + -2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 9,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 62.0,
                        "opsPercentages": {
                            "arithmetic": 23.684210526315788,
                            "mul": 28.947368421052634,
                            "bitwise": 47.368421052631575
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 269,
            "gt": {
                "expr": "((-(((c^(c&b))|c)^a)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 7,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "~ ((((((((((c - (((~ c | b) + c) + 1)) - ((c | ~ (((~ c | b) + c) + 1)) << 1)) - 2) + c) + 1) + ((- (((c - (((~ c | b) + c) + 1)) - ((c | ~ (((~ c | b) + c) + 1)) << 1)) - 2) - 1) | (- c - 1))) - a) - ((((((((c - (((~ c | b) + c) + 1)) - ((c | ~ (((~ c | b) + c) + 1)) << 1)) - 2) + c) + 1) + ((- (((c - (((~ c | b) + c) + 1)) - ((c | ~ (((~ c | b) + c) + 1)) << 1)) - 2) - 1) | (- c - 1))) | ~ a) << 1)) - 2) - 1)",
                "attributes": {
                    "numOps": 80,
                    "nestedExprLevel": 55,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 57.49999999999999,
                        "mul": 0.0,
                        "bitwise": 42.5
                    },
                    "percentageDAGsCancel": 3.8461538461538463
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~a | (c - (~c | b)) + (-((~c | b) + c) - 2 | c) * -2 + -2 + (~c | ((-((~c | b) + c) - 2 | c) * 2 - (-1 - (~c | b))) + 1)) * 2 + ~((~c | ((-((~c | b) + c) - 2 | c) * 2 - (-1 - (~c | b))) + 1) + (c - (~c | b)) + (-((~c | b) + c) - 2 | c) * -2 + -2) + a + 3",
                    "attributes": {
                        "numOps": 67,
                        "nestedExprLevel": 20,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 16.25,
                        "opsPercentages": {
                            "arithmetic": 52.23880597014925,
                            "mul": 7.462686567164178,
                            "bitwise": 40.298507462686565
                        },
                        "percentageDAGsCancel": 10.714285714285714
                    }
                },
                "msvc_O1": {
                    "expr": "(((((((-1 - c) * 2 | ~c | b + 2 + ~(c + 1 + ~c | b) | c * 2 * 2) + ((c + ~(c + 1 + ~c | b) | c * -2) - ~c | b) * 2) - 4 | ~a * 2) - (~c | b + 2 + ~(c + 1 + ~c | b) | c * 2 | ~c)) + (~(c + 1 + ~c | b) | c + 2) * 2) - c) + ~c | b + a",
                    "attributes": {
                        "numOps": 62,
                        "nestedExprLevel": 13,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 22.5,
                        "opsPercentages": {
                            "arithmetic": 40.32258064516129,
                            "mul": 12.903225806451612,
                            "bitwise": 46.774193548387096
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                },
                "clang_O3": {
                    "expr": "(a - ((1 - ~(b | ~c) + c + c + (0x7ffffffe - (b | ~c) + c | c) * -2 | ~c) + ~(b | ~c) + c + c + (0x7ffffffe - (b | ~c) + c | c) * -2 + c) - 1) + (~a | ((1 - ~(b | ~c) + c + c + (0x7ffffffe - (b | ~c) + c | c) * -2 | ~c) + ~(b | ~c) + c + c + (0x7ffffffe - (b | ~c) + c | c) * -2 + c) - 1) * 2 + 2",
                    "attributes": {
                        "numOps": 70,
                        "nestedExprLevel": 14,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 12.5,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 7.142857142857142,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((c - (c ^ 0xffffffff | b)) + (c | (c ^ 0xffffffff | b) + c + 1 ^ 0xffffffff) * -2 + (1 - ((-1 - (c ^ 0xffffffff | b)) + (c | (c ^ 0xffffffff | b) + c + 1 ^ 0xffffffff) * -2) | 0xffffffff - c)) - a) + ((c - (c ^ 0xffffffff | b)) + (c | (c ^ 0xffffffff | b) + c + 1 ^ 0xffffffff) * -2 + -2 + (1 - ((-1 - (c ^ 0xffffffff | b)) + (c | (c ^ 0xffffffff | b) + c + 1 ^ 0xffffffff) * -2) | 0xffffffff - c) | a ^ 0xffffffff) * -2) - 5 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 68,
                        "nestedExprLevel": 18,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 15.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 7.352941176470589,
                            "bitwise": 42.64705882352941
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "msvc_default": {
                    "expr": "~(((((c - ((~c | b) + 1)) + (~((~c | b) + 1 + c) | c) * -2 + (1 - ((~((~c | b) + 1 + c) | c) * -2 - ((~c | b) + 1)) | 0xffffffff - c)) - a) + ((c - ((~c | b) + 1)) + (~((~c | b) + 1 + c) | c) * -2 + -1 + (1 - ((~((~c | b) + 1 + c) | c) * -2 - ((~c | b) + 1)) | 0xffffffff - c) | ~a) * -2) - 4)",
                    "attributes": {
                        "numOps": 68,
                        "nestedExprLevel": 25,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 15.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 7.352941176470589,
                            "bitwise": 42.64705882352941
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(c - ((b | ~c) + c + 1)) + (-(b | ~c) + c - 2 | c) * -2 + -1 + c + (1 - (c - ((b | ~c) + c + 1)) + (-(b | ~c) + c - 2 | c) * -2 | ~c) + a + 3 + (~a | (c - ((b | ~c) + c + 1)) + (-(b | ~c) + c - 2 | c) * -2 + -1 + c + (1 - (c - ((b | ~c) + c + 1)) + (-(b | ~c) + c - 2 | c) * -2 | ~c)) * 2",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 17,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 3.75,
                        "opsPercentages": {
                            "arithmetic": 58.44155844155844,
                            "mul": 6.493506493506493,
                            "bitwise": 35.064935064935064
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 270,
            "gt": {
                "expr": "(((-((c+b)^(-(b*c))))&c))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 16.666666666666664,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ (~ ((((((c ^ b) + ((c & b) << 1)) - (~ ((b & c) * (b | c) + (b & ~ c) * (~ b & c)) + 1)) - ((((c ^ b) + ((c & b) << 1)) | ~ (~ ((b & c) * (b | c) + (b & ~ c) * (~ b & c)) + 1)) << 1)) - 2) - 1)) | c) - ~ (~ ((((((c ^ b) + ((c & b) << 1)) - (~ ((b & c) * (b | c) + (b & ~ c) * (~ b & c)) + 1)) - ((((c ^ b) + ((c & b) << 1)) | ~ (~ ((b & c) * (b | c) + (b & ~ c) * (~ b & c)) + 1)) << 1)) - 2) - 1))",
                "attributes": {
                    "numOps": 80,
                    "nestedExprLevel": 40,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 26.25,
                        "mul": 10.0,
                        "bitwise": 63.74999999999999
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~b & c) * (~c & b) + (b & c) * (b | c)) - 1 | (c ^ b) + (c & b) * 2) * 2 + ~((~b & c) * (~c & b) + (b & c) * (b | c) + (c ^ b) + (c & b) * 2) + 3 & c",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 10,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 57.49999999999999,
                        "opsPercentages": {
                            "arithmetic": 23.52941176470588,
                            "mul": 20.588235294117645,
                            "bitwise": 55.88235294117647
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "msvc_O1": {
                    "expr": "~(b & c * (b | c) + (~c & b) * (~b & c)) + 4 + ((((~c & b) * (~b & c) + -3 + (((b | c) + 2) * b & c - (b ^ c + b & c * 2) * 2 | ~(~(b & c * (b | c) + (~c & b) * (~b & c)) + 1) * 2) + b ^ c | c) + b & c * -2) - b ^ c) + (b ^ c + b & c * 2) * 2 | ~(~(b & c * (b | c) + (~c & b) * (~b & c)) + 1) * 2",
                    "attributes": {
                        "numOps": 73,
                        "nestedExprLevel": 18,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 8.75,
                        "opsPercentages": {
                            "arithmetic": 26.027397260273972,
                            "mul": 20.54794520547945,
                            "bitwise": 53.42465753424658
                        },
                        "percentageDAGsCancel": 2.564102564102564
                    }
                },
                "clang_O3": {
                    "expr": "((((c | b) * (c & b) + (~b & c) * (~c & b)) - 1 | (c ^ b) + (c & b) * 2) * 2 - ((c | b) * (c & b) + (~b & c) * (~c & b) + (c ^ b) + (c & b) * 2)) + 2 & c",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 11,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 58.75,
                        "opsPercentages": {
                            "arithmetic": 24.242424242424242,
                            "mul": 21.21212121212121,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "clang_default": {
                    "expr": "(((((c ^ b) + (c & b) * 2) - (((b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c) ^ 0xffffffff) + 1)) + ((c ^ b) + (c & b) * 2 | ((b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c) ^ 0xffffffff) + 1 ^ 0xffffffff) * -2) - 3 | c) - ((((c ^ b) + (c & b) * 2) - (((b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c) ^ 0xffffffff) + 1)) + ((c ^ b) + (c & b) * 2 | ((b & c) * (b | c) + (b & (c ^ 0xffffffff)) * ((b ^ 0xffffffff) & c) ^ 0xffffffff) + 1 ^ 0xffffffff) * -2 + -3)",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 33,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 3.75,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 18.181818181818183,
                            "bitwise": 53.246753246753244
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "msvc_default": {
                    "expr": "(((((c ^ b) + (c & b) * 2) - (~((b & c) * (b | c) + (~c & b) * (~b & c)) + 1)) + ((c ^ b) + (c & b) * 2 | ~(~((b & c) * (b | c) + (~c & b) * (~b & c)) + 1)) * -2) - 3 | c) - ((((c ^ b) + (c & b) * 2) - (~((b & c) * (b | c) + (~c & b) * (~b & c) ) + 1)) + ((c ^ b) + (c & b) * 2 | ~(~((b & c) * (b | c) + (~c & b) * (~b & c)) + 1)) * -2 + -3)",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 30,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 3.75,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 18.181818181818183,
                            "bitwise": 53.246753246753244
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "gcc_O3": {
                    "expr": "~((c ^ b) + (c & b) * 2 + (~c & b) * (~b & c) + (b | c) * (c & b)) + 3 + ((~c & b) * (~b & c) + (b | c) * (c & b) - 1 | (c ^ b) + (c & b) * 2) * 2 & c",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 9,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 57.49999999999999,
                        "opsPercentages": {
                            "arithmetic": 23.52941176470588,
                            "mul": 20.588235294117645,
                            "bitwise": 55.88235294117647
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                }
            }
        },
        {
            "num": 271,
            "gt": {
                "expr": "((((b|(d*c))|((-b)+c))+(c&d)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 14.285714285714285,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((((b & ~ ((d & c) * (d | c) + (d & ~ c) * (~ d & c))) + ((d & c) * (d | c) + (d & ~ c) * (~ d & c))) + ((~ (b - 1) ^ c) + ((~ (b - 1) & c) + (~ (b - 1) & c)))) + 1) + ((- ((b & ~ ((d & c) * (d | c) + (d & ~ c) * (~ d & c))) + ((d & c) * (d | c) + (d & ~ c) * (~ d & c))) - 1) | (- ((~ (b - 1) ^ c) + ((~ (b - 1) & c) + (~ (b - 1) & c))) - 1))) ^ ~ ((~ c | d) - ~ c)) + (((((((b & ~ ((d & c) * (d | c) + (d & ~ c) * (~ d & c))) + ((d & c) * (d | c) + (d & ~ c) * (~ d & c))) + ((~ (b - 1) ^ c) + ((~ (b - 1) & c) + (~ (b - 1) & c)))) + 1) + ((- ((b & ~ ((d & c) * (d | c) + (d & ~ c) * (~ d & c))) + ((d & c) * (d | c) + (d & ~ c) * (~ d & c))) - 1) | (- ((~ (b - 1) ^ c) + ((~ (b - 1) & c) + (~ (b - 1) & c))) - 1))) | ((~ c | d) - ~ c)) << 1)) + 1",
                "attributes": {
                    "numOps": 158,
                    "nestedExprLevel": 72,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 31.645569620253166,
                        "mul": 10.126582278481013,
                        "bitwise": 58.22784810126582
                    },
                    "percentageDAGsCancel": 2.941176470588235
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(d & c | (-b & c) * 2 + (-b ^ c) + (~((~d & c) * (~c & d) + (d & c) * (d | c)) & b) + (~d & c) * (~c & d) + (d & c) * (d | c) + 1 + ~((-b & c) * 2 + (-b ^ c) & (~((~d & c) * (~c & d) + (d & c) * (d | c)) & b) + (~d & c) * (~c & d) + (d & c) * (d | c))) * 2 + (d & c ^ ((~((~d & c) * (~c & d) + (d & c) * (d | c)) & b) + (~d & c) * (~c & d) + (d & c) * (d | c) & (-b & c) * 2 + (-b ^ c)) - ((-b & c) * 2 + (-b ^ c) + (~((~d & c) * (~c & d) + (d & c) * (d | c)) & b) + (~d & c) * (~c & d) + (d & c) * (d | c) + 1)) + 1",
                    "attributes": {
                        "numOps": 124,
                        "nestedExprLevel": 34,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 21.518987341772153,
                        "opsPercentages": {
                            "arithmetic": 25.806451612903224,
                            "mul": 16.93548387096774,
                            "bitwise": 57.25806451612904
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "msvc_O1": {
                    "expr": "((d | ~c) + c * 2 + 2 | ((~(b - 1) ^ c + (~(b - 1) & c) * 2) * -2 - 2 | (-1 - (~d & c) * (~c & d) + ~((~d & c) * (~c & d) + (c | d) * (c & d)) & b + (c | d) * (c & d)) * 2) + (~(b - 1) ^ c + (~(b - 1) & c) * 2 + (~d & c) * (~c & d) + ~((~d & c) * (~c & d) + (c | d) * (c & d)) & b + (c | d) * (c & d)) * 2 + 2) + 1 + ((c | d) * (c & d) + 1 + ((~~((~d & c) * (~c & d) + (c | d) * (c & d)) & b - (~d & c) * (~c & d)) - (c | d) * (c & d) | ~(~(b - 1) & c) * 2 - ~(b - 1) ^ c) + ~(b - 1) ^ c + (~(b - 1) & c) * 2 + ~((~d & c) * (~c & d) + (c | d) * (c & d)) & b + (~d & c) * (~c & d) ^ ~((d | ~c) + c + 1))",
                    "attributes": {
                        "numOps": 147,
                        "nestedExprLevel": 36,
                        "numDAGs": 60,
                        "percentDecreaseByOps": 6.962025316455696,
                        "opsPercentages": {
                            "arithmetic": 27.2108843537415,
                            "mul": 16.3265306122449,
                            "bitwise": 56.4625850340136
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "clang_O3": {
                    "expr": "((-b ^ c) + (-b & c) * 2 | (~(~d & c) * (~c & d) + (d | c) * d & c & b) + (~d & c) * (~c & d) + (d | c) * d & c | d & c) * 2 - ((-b ^ c) + (-b & c) * 2 | (~(~d & c) * (~c & d) + (d | c) * d & c & b) + (~d & c) * (~c & d) + (d | c) * d & c ^ d & c)",
                    "attributes": {
                        "numOps": 62,
                        "nestedExprLevel": 13,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 60.75949367088608,
                        "opsPercentages": {
                            "arithmetic": 20.967741935483872,
                            "mul": 17.741935483870968,
                            "bitwise": 61.29032258064516
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "clang_default": {
                    "expr": "((b & ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) ^ 0xffffffff)) + (d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) + (b - 1 ^ 0xffffffff ^ c) + ((b - 1 ^ 0xffffffff) & c) + ((b - 1 ^ 0xffffffff) & c) + 1 + (0xffffffff - ((b & ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) ^ 0xffffffff)) + (d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) | 0xffffffff - ((b - 1 ^ 0xffffffff ^ c) + ((b - 1 ^ 0xffffffff) & c) + ((b - 1 ^ 0xffffffff) & c))) ^ (c ^ 0xffffffff | d) - (c ^ 0xffffffff) ^ 0xffffffff) + ((b & ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) ^ 0xffffffff)) + (d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) + (b - 1 ^ 0xffffffff ^ c) + ((b - 1 ^ 0xffffffff) & c) + ((b - 1 ^ 0xffffffff) & c) + 1 + (0xffffffff - ((b & ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) ^ 0xffffffff)) + (d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c)) | 0xffffffff - ((b - 1 ^ 0xffffffff ^ c) + ((b - 1 ^ 0xffffffff) & c) + ((b - 1 ^ 0xffffffff) & c))) | (c ^ 0xffffffff | d) - (c ^ 0xffffffff)) * 2 + 1",
                    "attributes": {
                        "numOps": 154,
                        "nestedExprLevel": 54,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 2.5316455696202533,
                        "opsPercentages": {
                            "arithmetic": 29.87012987012987,
                            "mul": 11.03896103896104,
                            "bitwise": 59.09090909090909
                        },
                        "percentageDAGsCancel": 8.571428571428571
                    }
                },
                "msvc_default": {
                    "expr": "((~((d & c) * (d | c) + (~c & d) * (~d & c) ) & b) + (d & c) * (d | c) + (~c & d) * (~d & c) + (~(b - 1) ^ c) + (~(b - 1) & c) + (~(b - 1) & c) + 1 + (0xffffffff - ((~((d & c) * (d | c) + (~c & d) * (~d & c)) & b) + (d & c) * (d | c) + (~c & d) * (~d & c)) | 0xffffffff - ((~(b - 1) ^ c) + (~(b - 1) & c) + (~(b - 1) & c))) ^ ~((~c | d) - ~c)) + 1 + ((~((d & c) * (d | c) + (~c & d) * (~d & c) ) & b) + (d & c) * (d | c) + (~c & d) * (~d & c) + (~(b - 1) ^ c) + (~(b - 1) & c) + (~(b - 1) & c) + 1 + (0xffffffff - ((~((d & c) * (d | c) + (~c & d) * (~d & c)) & b) + (d & c) * (d | c) + (~c & d) * (~d & c)) | 0xffffffff - ((~(b - 1) ^ c) + (~(b - 1) & c) + (~(b - 1) & c))) | (~c | d) - ~c) * 2",
                    "attributes": {
                        "numOps": 154,
                        "nestedExprLevel": 47,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 2.5316455696202533,
                        "opsPercentages": {
                            "arithmetic": 29.87012987012987,
                            "mul": 11.03896103896104,
                            "bitwise": 59.09090909090909
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~(~c & d) * (~d & c) + (d | c) * d & c & b) + (~c & d) * (~d & c) + (d | c) * d & c & (-b ^ c) + (-b & c) * 2 - (~(~c & d) * (~d & c) + (d | c) * d & c & b) + (~c & d) * (~d & c) + (d | c) * d & c + 1 + (-b ^ c) + (-b & c) * 2 ^ d & c) + 1 + (~(~(~c & d) * (~d & c) + (d | c) * d & c & b) + (~c & d) * (~d & c) + (d | c) * d & c & (-b ^ c) + (-b & c) * 2 + (~(~c & d) * (~d & c) + (d | c) * d & c & b) + (~c & d) * (~d & c) + (d | c) * d & c + 1 + (-b ^ c) + (-b & c) * 2 | d & c) * 2",
                    "attributes": {
                        "numOps": 124,
                        "nestedExprLevel": 23,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 21.518987341772153,
                        "opsPercentages": {
                            "arithmetic": 25.806451612903224,
                            "mul": 16.93548387096774,
                            "bitwise": 57.25806451612904
                        },
                        "percentageDAGsCancel": 9.30232558139535
                    }
                }
            }
        },
        {
            "num": 272,
            "gt": {
                "expr": "((((e&(a+(a*a)))&(c|(a*c)))|((c*c)*e)))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 11.11111111111111,
                        "mul": 44.44444444444444,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((~ ((~ e | ((a | ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) + (a & ((a & a) * (a | a) + (a & ~ a) * (~ a & a))))) - ~ e) | (((c + ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + 1) + ((- c - 1) | (- ((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - 1)))) - ~ ((~ e | ((a | ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) + (a & ((a & a) * (a | a) + (a & ~ a) * (~ a & a))))) - ~ e)) + ((((c & c) * (c | c) + (c & ~ c) * (~ c & c)) & e) * (((c & c) * (c | c) + (c & ~ c) * (~ c & c)) | e) + (((c & c) * (c | c) + (c & ~ c) * (~ c & c)) & ~ e) * (~ ((c & c) * (c | c) + (c & ~ c) * (~ c & c)) & e))) + 1) + ((- ((~ ((~ e | ((a | ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) + (a & ((a & a) * (a | a) + (a & ~ a) * (~ a & a))))) - ~ e) | (((c + ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + 1) + ((- c - 1) | (- ((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - 1)))) - ~ ((~ e | ((a | ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) + (a & ((a & a) * (a | a) + (a & ~ a) * (~ a & a))))) - ~ e)) - 1) | (- ((((c & c) * (c | c) + (c & ~ c) * (~ c & c)) & e) * (((c & c) * (c | c) + (c & ~ c) * (~ c & c)) | e) + (((c & c) * (c | c) + (c & ~ c) * (~ c & c)) & ~ e) * (~ ((c & c) * (c | c) + (c & ~ c) * (~ c & c)) & e)) - 1))",
                "attributes": {
                    "numOps": 258,
                    "nestedExprLevel": 110,
                    "numDAGs": 56,
                    "opsPercentages": {
                        "arithmetic": 20.54263565891473,
                        "mul": 17.05426356589147,
                        "bitwise": 62.4031007751938
                    },
                    "percentageDAGsCancel": 17.857142857142858
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((~(c * c) & e) * (c * c & ~e) + (c * c & e) * (c * c | e) & c + (a & c) * (a | c) + (~a & c) * (~c & a) + 1 + ~((~a & c) * (~c & a) + (a & c) * (a | c) & c) & a + a * a & e) + (~(c * c) & e) * (c * c & ~e) + (c * c & e) * (c * c | e) + (c + (a & c) * (a | c) + (~a & c) * (~c & a) + 1 + ~((~a & c) * (~c & a) + (a & c) * (a | c) & c) & a + a * a & e) + 1",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 19,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 67.05426356589147,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 25.882352941176475,
                            "bitwise": 54.11764705882353
                        },
                        "percentageDAGsCancel": 5.405405405405405
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~c * c & e) * (c * c & ~e) - (c * c | e) * (c * c & e) | (~((a * a | a) + (a * a & a) | ~e + e + 1) - c + 1 + (~(~a & c) * (~c & a) - (a | c) * (a & c) | ~c) + (a | c) * (a & c) + (~a & c) * (~c & a) | ~((a * a | a) + (a * a & a) | ~e + e + 1)) - 1) + (c * c | e) * (c * c & e) + (~c * c & e) * (c * c & ~e) + c + 1 + (~(~a & c) * (~c & a) - (a | c) * (a & c) | ~c) + (a | c) * (a & c) + (~a & c) * (~c & a) | ~((a * a | a) + (a * a & a) | ~e + e + 1) + (a * a | a) + (a * a & a) | ~e + e + 3",
                    "attributes": {
                        "numOps": 122,
                        "nestedExprLevel": 24,
                        "numDAGs": 52,
                        "percentDecreaseByOps": 52.71317829457365,
                        "opsPercentages": {
                            "arithmetic": 23.770491803278688,
                            "mul": 22.950819672131146,
                            "bitwise": 53.278688524590166
                        },
                        "percentageDAGsCancel": 1.9230769230769231
                    }
                },
                "clang_O3": {
                    "expr": "(e & ~c * c) * (~e & c * c) + (c * c | e) * (c * c & e) | ((~a & c) * (~c & a) + (c | a) * (c & a) | c) & a * a + a & e",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 6,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 89.14728682170544,
                        "opsPercentages": {
                            "arithmetic": 10.714285714285714,
                            "mul": 32.142857142857146,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 8.0
                    }
                },
                "clang_default": {
                    "expr": "(((e ^ 0xffffffff | (a | a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a)) + (a & a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a))) - (e ^ 0xffffffff) ^ 0xffffffff | c + (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) + 1 + (0xffffffff - c | 0xffffffff - ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)))) - ((e ^ 0xffffffff | (a | a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a)) + (a & a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a))) - (e ^ 0xffffffff) ^ 0xffffffff)) + (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) & e) * (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) | e) + (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) & (e ^ 0xffffffff)) * ((c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) ^ 0xffffffff) & e) + 1 + (0xffffffff - (((e ^ 0xffffffff | (a | a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a)) + (a & a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a))) - (e ^ 0xffffffff) ^ 0xffffffff | c + (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) + 1 + (0xffffffff - c | 0xffffffff - ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)))) - ((e ^ 0xffffffff | (a | a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a)) + (a & a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a))) - (e ^ 0xffffffff) ^ 0xffffffff)) | 0xffffffff - ((c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) & e) * (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) | e) + (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) & (e ^ 0xffffffff)) * ((c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) ^ 0xffffffff) & e)))",
                    "attributes": {
                        "numOps": 220,
                        "nestedExprLevel": 86,
                        "numDAGs": 50,
                        "percentDecreaseByOps": 14.728682170542637,
                        "opsPercentages": {
                            "arithmetic": 21.363636363636363,
                            "mul": 20.0,
                            "bitwise": 58.63636363636363
                        },
                        "percentageDAGsCancel": 14.000000000000002
                    }
                },
                "msvc_default": {
                    "expr": "((~((~e | (a * a | a) + (a * a & a)) - ~e) | (~c & a) * (~a & c) + c + (a & c) * (a | c) + 1 + (0xffffffff - c | 0xffffffff - ((a & c) * (a | c) + (~c & a) * (~a & c) ))) - ~((~e | (a * a | a) + (a * a & a)) - ~e)) + (c * c & e) * (c * c | e) + (c * c & ~e) * (~(c * c) & e) + 1 + (0xffffffff - ((~((~e | (a * a | a) + (a * a & a)) - ~e) | (~c & a) * (~a & c) + c + (a & c) * (a | c) + 1 + (0xffffffff - c | 0xffffffff - ((a & c) * (a | c) + (~c & a) * (~a & c)))) - ~((~e | (a * a | a) + (a * a & a)) - ~e)) | 0xffffffff - ((c * c & e) * (c * c | e) + (c * c & ~e) * (~(c * c) & e)))",
                    "attributes": {
                        "numOps": 124,
                        "nestedExprLevel": 36,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 51.93798449612403,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 22.58064516129032,
                            "bitwise": 52.41935483870967
                        },
                        "percentageDAGsCancel": 2.380952380952381
                    }
                },
                "gcc_O3": {
                    "expr": "((~e & c * c) * (~c * c & e) + (c * c & e) * (c * c | e) + ((~c & a) * (~a & c) + (a & c) * (a | c) + c) - ((~c & a) * (~a & c) + (a & c) * (a | c) & c) & a + a * a & e) - (((~c & a) * (~a & c) + (a & c) * (a | c) + c) - ((~c & a) * (~a & c) + (a & c) * (a | c) & c) & a + a * a & e & (~e & c * c) * (~c * c & e) + (c * c & e) * (c * c | e))",
                    "attributes": {
                        "numOps": 79,
                        "nestedExprLevel": 19,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 69.37984496124031,
                        "opsPercentages": {
                            "arithmetic": 17.72151898734177,
                            "mul": 27.848101265822784,
                            "bitwise": 54.43037974683544
                        },
                        "percentageDAGsCancel": 6.25
                    }
                }
            }
        },
        {
            "num": 273,
            "gt": {
                "expr": "((~(d|(d|(d&b)))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 0.0,
                        "bitwise": 100.0
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "- (((d + (((d + (((~ d | b) + d) + 1)) + 1) + ((- d - 1) | (- (((~ d | b) + d) + 1) - 1)))) + 1) + ((- d - 1) | (- (((d + (((~ d | b) + d) + 1)) + 1) + ((- d - 1) | (- (((~ d | b) + d) + 1) - 1))) - 1))) - 1",
                "attributes": {
                    "numOps": 42,
                    "nestedExprLevel": 25,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 73.80952380952381,
                        "mul": 0.0,
                        "bitwise": 26.190476190476193
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((-((~d | b) + d) - 2 | ~d) + d * 2 + (~d | b) + 2 & d) + (-3 - (d * 3 + (~d | b) + (-((~d | b) + d) - 2 | ~d)))",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 10,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 30.952380952380953,
                        "opsPercentages": {
                            "arithmetic": 48.275862068965516,
                            "mul": 6.896551724137931,
                            "bitwise": 44.827586206896555
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "msvc_O1": {
                    "expr": "(((d * -3 - (((d * -2 + -3) - (-2 - ~d | b) - d | ~d) - ~d | b | ~d)) - (-2 - ~d | b) - d | ~d) - ~d | b) + -4",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 8,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 21.428571428571427,
                        "opsPercentages": {
                            "arithmetic": 51.515151515151516,
                            "mul": 6.0606060606060606,
                            "bitwise": 42.42424242424242
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "clang_O3": {
                    "expr": "(-(b | ~d) + d - 2 | ~d + (b | ~d) + d + d + 2 & d) + ~(d + (b | ~d) + d + d + -(b | ~d) + d - 2 | ~d + 2)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 5,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 28.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 53.333333333333336,
                            "mul": 0.0,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "clang_default": {
                    "expr": "(-(0xffffffff - d | 0xffffffff - ((d ^ 0xffffffff | b) + d * 2 + 2 + (0xffffffff - d | 0xffffffff - ((d ^ 0xffffffff | b) + d + 1)))) - ((d ^ 0xffffffff | b) + d * 3 + (0xffffffff - d | 0xffffffff - ((d ^ 0xffffffff | b) + d + 1)) + 3) ) + -1",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 10,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 21.428571428571427,
                        "opsPercentages": {
                            "arithmetic": 60.60606060606061,
                            "mul": 6.0606060606060606,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(-(0xffffffff - d | 0xffffffff - ((~d | b) + d * 2 + 2 + (0xffffffff - d | 0xffffffff - ((~d | b) + 1 + d)))) - ((0xffffffff - d | 0xffffffff - ((~d | b) + 1 + d)) + d * 3 + (~d | b) + 3)) + -1",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 10,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 21.428571428571427,
                        "opsPercentages": {
                            "arithmetic": 60.60606060606061,
                            "mul": 6.0606060606060606,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((b | ~d) + d + 2 + d + (-(b | ~d) + d - 2 | ~d) & d) - ((b | ~d) + d + 2 + d + (-(b | ~d) + d - 2 | ~d) + 1 + d)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 28.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 56.666666666666664,
                            "mul": 0.0,
                            "bitwise": 43.333333333333336
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                }
            }
        },
        {
            "num": 274,
            "gt": {
                "expr": "((-(-(((-(e&d))*(-e))|(~((~d)*d))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 11,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (~ ((((((~ ((((~ e | d) + e) + 1) - 1) & ~ (e - 1)) * (~ ((((~ e | d) + e) + 1) - 1) | ~ (e - 1)) + (~ ((((~ e | d) + e) + 1) - 1) & ~ (~ (e - 1))) * (~ (~ ((((~ e | d) + e) + 1) - 1)) & ~ (e - 1))) + (- (((- d - 1) & d) * ((- d - 1) | d) + ((- d - 1) & ~ d) * (~ (- d - 1) & d)) - 1)) + 1) + ((- ((~ ((((~ e | d) + e) + 1) - 1) & ~ (e - 1)) * (~ ((((~ e | d) + e) + 1) - 1) | ~ (e - 1)) + (~ ((((~ e | d) + e) + 1) - 1) & ~ (~ (e - 1))) * (~ (~ ((((~ e | d) + e) + 1) - 1)) & ~ (e - 1))) - 1) | (- (- (((- d - 1) & d) * ((- d - 1) | d) + ((- d - 1) & ~ d) * (~ (- d - 1) & d)) - 1) - 1))) - 1)) + 1",
                "attributes": {
                    "numOps": 132,
                    "nestedExprLevel": 66,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 49.24242424242424,
                        "mul": 6.0606060606060606,
                        "bitwise": 44.696969696969695
                    },
                    "percentageDAGsCancel": 11.904761904761903
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~d * d | ~((-e & (~e | d) + e) * (~(e + (~e | d)) & e - 1) + (~(e + (~e | d)) & -e) * (-e | ~(e + (~e | d))))) + ~(~d * d) + (~(e + (~e | d)) & -e) * (-e | ~(e + (~e | d))) + (-e & (~e | d) + e) * (~(e + (~e | d)) & e - 1) + 1",
                    "attributes": {
                        "numOps": 62,
                        "nestedExprLevel": 19,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 53.03030303030303,
                        "opsPercentages": {
                            "arithmetic": 33.87096774193548,
                            "mul": 9.67741935483871,
                            "bitwise": 56.451612903225815
                        },
                        "percentageDAGsCancel": 13.043478260869565
                    }
                },
                "msvc_O1": {
                    "expr": "((~(~(e - 1) | ~(~e | d) + e) * (~(e - 1) & ~(~e | d) + e) - (~(~e | d) + e & e - 1) * (~(e - 1) & (~e | d) + e) | ~d * d) - ~d * d) + (~(~e | d) + e & e - 1) * (~(e - 1) & (~e | d) + e) + (~(e - 1) | ~(~e | d) + e) * (~(e - 1) & ~(~e | d) + e)",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 17,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 30.303030303030305,
                            "mul": 9.090909090909092,
                            "bitwise": 60.60606060606061
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_O3": {
                    "expr": "(-(d + 1) * d | ~(-e & (~e | d) + e) * (e - 1 & ~(~e | d) + e) + (~(~e | d) + e | -e) * (~(~e | d) + e & -e)) + (-e & (~e | d) + e) * (e - 1 & ~(~e | d) + e) + (~(~e | d) + e | -e) * (~(~e | d) + e & -e) + (d + 1) * d",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 11,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 53.78787878787878,
                        "opsPercentages": {
                            "arithmetic": 37.704918032786885,
                            "mul": 9.836065573770492,
                            "bitwise": 52.459016393442624
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((((e ^ 0xffffffff | d) + e ^ 0xffffffff) & (e - 1 ^ 0xffffffff)) * ((e ^ 0xffffffff | d) + e ^ 0xffffffff | e - 1 ^ 0xffffffff) + (((e ^ 0xffffffff | d) + e ^ 0xffffffff) & e - 1) * ((e ^ 0xffffffff | d) + e & (e - 1 ^ 0xffffffff))) - ((0xffffffff - d & d) * (0xffffffff - d | d) + (0xffffffff - d & (d ^ 0xffffffff)) * ((0xffffffff - d ^ 0xffffffff) & d))) + (0xffffffff - ((((e ^ 0xffffffff | d) + e ^ 0xffffffff) & (e - 1 ^ 0xffffffff)) * ((e ^ 0xffffffff | d) + e ^ 0xffffffff | e - 1 ^ 0xffffffff) + (((e ^ 0xffffffff | d) + e ^ 0xffffffff) & e - 1) * ((e ^ 0xffffffff | d) + e & (e - 1 ^ 0xffffffff))) | 0xffffffff - (-1 - ((0xffffffff - d & d) * (0xffffffff - d | d) + (0xffffffff - d & (d ^ 0xffffffff)) * ((0xffffffff - d ^ 0xffffffff) & d))))",
                    "attributes": {
                        "numOps": 91,
                        "nestedExprLevel": 31,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 31.060606060606062,
                        "opsPercentages": {
                            "arithmetic": 37.362637362637365,
                            "mul": 8.791208791208792,
                            "bitwise": 53.84615384615385
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_default": {
                    "expr": "(((~((~e | d) + e) & ~(e - 1)) * (~((~e | d) + e) | ~(e - 1)) + (~((~e | d) + e) & e - 1) * ((~e | d) + e & ~(e - 1))) - ((0xffffffff - d & d) * (0xffffffff - d | d) + (0xffffffff - d & ~d) * (~(0xffffffff - d) & d))) + (0xffffffff - ((~((~e | d) + e) & ~(e - 1)) * (~((~e | d) + e) | ~(e - 1)) + (~((~e | d) + e) & e - 1) * ((~e | d) + e & ~(e - 1))) | 0xffffffff - (-1 - ((0xffffffff - d & d) * (0xffffffff - d | d) + (0xffffffff - d & ~d) * (~(0xffffffff - d) & d))))",
                    "attributes": {
                        "numOps": 91,
                        "nestedExprLevel": 33,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 31.060606060606062,
                        "opsPercentages": {
                            "arithmetic": 37.362637362637365,
                            "mul": 8.791208791208792,
                            "bitwise": 53.84615384615385
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "gcc_O3": {
                    "expr": "((e - 1 & ~(~e | d) + e) * ((~e | d) + e & -e) + (~(~e | d) + e & -e) * (~(~e | d) + e | -e) - ~d * d) + (~(e - 1 & ~(~e | d) + e) * ((~e | d) + e & -e) + (~(~e | d) + e & -e) * (~(~e | d) + e | -e) | ~d * d)",
                    "attributes": {
                        "numOps": 60,
                        "nestedExprLevel": 12,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 54.54545454545454,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 10.0,
                            "bitwise": 56.666666666666664
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                }
            }
        },
        {
            "num": 275,
            "gt": {
                "expr": "((((e+a)&c)-((c-a)&a)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 0.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((~ ((e | a) + (e & a)) | c) + ((e | a) + (e & a))) + 1) & ~ (((~ ((c & ~ a) - (~ c & a)) | a) + ((c & ~ a) - (~ c & a))) + 1)) << 1) - ((((~ ((e | a) + (e & a)) | c) + ((e | a) + (e & a))) + 1) ^ (((~ ((c & ~ a) - (~ c & a)) | a) + ((c & ~ a) - (~ c & a))) + 1))",
                "attributes": {
                    "numOps": 53,
                    "nestedExprLevel": 32,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 32.075471698113205,
                        "mul": 0.0,
                        "bitwise": 67.9245283018868
                    },
                    "percentageDAGsCancel": 9.523809523809524
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-((a + ~c | a) + ((~a & c) - (~c & a))) - 2 & (~(a + e) | c) + a + e + 1) * 2 - ((~(a + e) | c) + a + e + 1 ^ ((~a & c) - (~c & a)) + (a + ~c | a) + 1)",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 11,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 30.18867924528302,
                        "opsPercentages": {
                            "arithmetic": 48.64864864864865,
                            "mul": 2.7027027027027026,
                            "bitwise": 48.64864864864865
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "msvc_O1": {
                    "expr": "((~((a & e) + (a | e)) | c) + (a & e) + (a | e) * 2 + 2 & ~(~a & c) + 1 + ((~((~a & c) - (~c & a)) | a) - (~c & a)) * 2) - ((~((a & e) + (a | e)) | c) + (a & e) + (a | e) + 1 ^ (~a & c) + 1 + ((~((~a & c) - (~c & a)) | a) - (~c & a)))",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 20,
                        "numDAGs": 28,
                        "percentDecreaseByOps": -1.8867924528301887,
                        "opsPercentages": {
                            "arithmetic": 31.48148148148148,
                            "mul": 3.7037037037037033,
                            "bitwise": 64.81481481481481
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "clang_O3": {
                    "expr": "(0x7ffffffe - ((~(~a & c) - (~c & a) | a) + (~a & c) - (~c & a)) & (~(e + a) | c) + e + a + 1) * 2 - ((~(~a & c) - (~c & a) | a) + (~a & c) - (~c & a) + 1 ^ (~(e + a) | c) + e + a + 1)",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 13,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 16.9811320754717,
                        "opsPercentages": {
                            "arithmetic": 38.63636363636363,
                            "mul": 2.272727272727273,
                            "bitwise": 59.09090909090909
                        },
                        "percentageDAGsCancel": 9.523809523809524
                    }
                },
                "clang_default": {
                    "expr": "(((e | a) + (e & a) ^ 0xffffffff | c) + (e | a) + (e & a) + 1 & (((c & (a ^ 0xffffffff)) - ((c ^ 0xffffffff) & a) ^ 0xffffffff | a ) + ((c & (a ^ 0xffffffff)) - ((c ^ 0xffffffff) & a)) + 1 ^ 0xffffffff )) * 2 - (((e | a) + (e & a) ^ 0xffffffff | c) + (e | a) + (e & a) + 1 ^ ((c & (a ^ 0xffffffff)) - ((c ^ 0xffffffff) & a) ^ 0xffffffff | a) + ((c & (a ^ 0xffffffff)) - ((c ^ 0xffffffff) & a)) + 1)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 23,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 32.075471698113205,
                            "mul": 1.8867924528301887,
                            "bitwise": 66.0377358490566
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "msvc_default": {
                    "expr": "((~((e | a) + (e & a)) | c) + 1 + (e | a) + (e & a) & ~((~((~a & c) - (~c & a)) | a) + 1 + ((~a & c) - (~c & a)))) * 2 - ((~((e | a) + (e & a)) | c) + 1 + (e | a) + (e & a) ^ (~((~a & c) - (~c & a)) | a) + 1 + ((~a & c) - (~c & a)))",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 22,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 32.075471698113205,
                            "mul": 1.8867924528301887,
                            "bitwise": 66.0377358490566
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "gcc_O3": {
                    "expr": "(-((~a & c) - (~c & a)) + (~c + a | a) - 2 & e + a + 1 + (~(e + a) | c)) * 2 - (((~a & c) - (~c & a)) + (~c + a | a) + 1 ^ e + a + 1 + (~(e + a) | c))",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 10,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 30.18867924528302,
                        "opsPercentages": {
                            "arithmetic": 48.64864864864865,
                            "mul": 2.7027027027027026,
                            "bitwise": 48.64864864864865
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                }
            }
        },
        {
            "num": 276,
            "gt": {
                "expr": "((((c|((e&b)|e))&((b*b)*c))^(b^(e*b))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 33.33333333333333,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "((((~ (((c + ((((~ e | b) - ~ e) & ~ e) + e)) + 1) + ((- c - 1) | (- ((((~ e | b) - ~ e) & ~ e) + e) - 1))) | ((((b & b) * (b | b) + (b & ~ b) * (~ b & b)) & c) * (((b & b) * (b | b) + (b & ~ b) * (~ b & b)) | c) + (((b & b) * (b | b) + (b & ~ b) * (~ b & b)) & ~ c) * (~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b)) & c))) - ~ (((c + ((((~ e | b) - ~ e) & ~ e) + e)) + 1) + ((- c - 1) | (- ((((~ e | b) - ~ e) & ~ e) + e) - 1)))) - ((b | ((e & b) * (e | b) + (e & ~ b) * (~ e & b))) - (b & ((e & b) * (e | b) + (e & ~ b) * (~ e & b))))) - ((((~ (((c + ((((~ e | b) - ~ e) & ~ e) + e)) + 1) + ((- c - 1) | (- ((((~ e | b) - ~ e) & ~ e) + e) - 1))) | ((((b & b) * (b | b) + (b & ~ b) * (~ b & b)) & c) * (((b & b) * (b | b) + (b & ~ b) * (~ b & b)) | c) + (((b & b) * (b | b) + (b & ~ b) * (~ b & b)) & ~ c) * (~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b)) & c))) - ~ (((c + ((((~ e | b) - ~ e) & ~ e) + e)) + 1) + ((- c - 1) | (- ((((~ e | b) - ~ e) & ~ e) + e) - 1)))) | ~ ((b | ((e & b) * (e | b) + (e & ~ b) * (~ e & b))) - (b & ((e & b) * (e | b) + (e & ~ b) * (~ e & b))))) + (((~ (((c + ((((~ e | b) - ~ e) & ~ e) + e)) + 1) + ((- c - 1) | (- ((((~ e | b) - ~ e) & ~ e) + e) - 1))) | ((((b & b) * (b | b) + (b & ~ b) * (~ b & b)) & c) * (((b & b) * (b | b) + (b & ~ b) * (~ b & b)) | c) + (((b & b) * (b | b) + (b & ~ b) * (~ b & b)) & ~ c) * (~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b)) & c))) - ~ (((c + ((((~ e | b) - ~ e) & ~ e) + e)) + 1) + ((- c - 1) | (- ((((~ e | b) - ~ e) & ~ e) + e) - 1)))) | ~ ((b | ((e & b) * (e | b) + (e & ~ b) * (~ e & b))) - (b & ((e & b) * (e | b) + (e & ~ b) * (~ e & b))))))) - 2",
                "attributes": {
                    "numOps": 350,
                    "nestedExprLevel": 156,
                    "numDAGs": 49,
                    "opsPercentages": {
                        "arithmetic": 27.714285714285715,
                        "mul": 12.0,
                        "bitwise": 60.285714285714285
                    },
                    "percentageDAGsCancel": 16.3265306122449
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((b * b & c) * (b * b | c) + (~(b * b) & c) * (b * b & ~c) & c + (b & e & ~e) + e + 1 + ~(e + (b & e & ~e) & c)) - ((~e & b) * (~b & e) + (e & b) * (e | b) ^ b)) + (~((~e & b) * (~b & e) + (e & b) * (e | b) ^ b) | (b * b & c) * (b * b | c) + (~(b * b) & c) * (b * b & ~c) & c + (b & e & ~e) + e + 1 + ~(e + (b & e & ~e) & c)) * -2 + -2",
                    "attributes": {
                        "numOps": 82,
                        "nestedExprLevel": 19,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 76.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 23.170731707317074,
                            "mul": 20.73170731707317,
                            "bitwise": 56.09756097560976
                        },
                        "percentageDAGsCancel": 13.513513513513514
                    }
                },
                "msvc_O1": {
                    "expr": "(~b * b & c) * (~c & b * b) + (b * b | c) * (b * b & c) | ~((~e | b) + 1 + e & ~e + ~(~e | b) + 1 + e & ~e - e | ~c + c + e + 1) + (((~e & b) * (~b & e) + (b | e) * (b & e) & b + (e + 2 + (~b * b & c) * (~c & b * b) + (b * b | c) * (b * b & c) | ~((~e | b) + 1 + e & ~e + ~(~e | b) + 1 + e & ~e - e | ~c + c + e + 1) + ~(~e | b) + 1 + e & ~e - e | ~c + (~e | b) + 1 + e & ~e + c | ~((~e & b) * (~b & e) + (b | e) * (b & e) | b - (~e & b) * (~b & e) + (b | e) * (b & e) & b)) * -2) - (~e & b) * (~b & e) + (b | e) * (b & e) | b) + ~(~e | b) + 1 + e & ~e - e | ~c + (~e | b) + 1 + e & ~e + c + e",
                    "attributes": {
                        "numOps": 159,
                        "nestedExprLevel": 23,
                        "numDAGs": 70,
                        "percentDecreaseByOps": 54.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 30.18867924528302,
                            "mul": 13.20754716981132,
                            "bitwise": 56.60377358490566
                        },
                        "percentageDAGsCancel": 11.428571428571429
                    }
                },
                "clang_O3": {
                    "expr": "((~b & c) * (~c & b) + (b | c) * (b & c) & (e | c) - (~e & b) * (~b & e) + (e | b) * (e & b) ^ b) + (~(~e & b) * (~b & e) + (e | b) * (e & b) ^ b | (~b & c) * (~c & b) + (b | c) * (b & c) & (e | c)) * -2 + -2",
                    "attributes": {
                        "numOps": 50,
                        "nestedExprLevel": 12,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 85.71428571428571,
                        "opsPercentages": {
                            "arithmetic": 18.0,
                            "mul": 18.0,
                            "bitwise": 64.0
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "clang_default": {
                    "expr": "((((c + ((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) + e + 1 + (0xffffffff - c | 0xffffffff - (((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) + e)) ^ 0xffffffff | (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) & c) * (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) | c) + (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) & (c ^ 0xffffffff)) * ((b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) & c)) - (c + ((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) + e + 1 + (0xffffffff - c | 0xffffffff - (((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) + e)) ^ 0xffffffff)) - ((b | (e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b)) - (b & (e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b)))) - (((c + ((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) + e + 1 + (0xffffffff - c | 0xffffffff - (((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) + e)) ^ 0xffffffff | (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) & c) * (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) | c) + (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) & (c ^ 0xffffffff)) * ((b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) & c)) - (c + ((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) + e + 1 + (0xffffffff - c | 0xffffffff - (((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) + e)) ^ 0xffffffff) | (b | (e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b)) - (b & (e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b)) ^ 0xffffffff) + ((c + ((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) + e + 1 + (0xffffffff - c | 0xffffffff - (((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) + e)) ^ 0xffffffff | (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) & c) * (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) | c) + (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) & (c ^ 0xffffffff)) * ((b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) & c)) - (c + ((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) + e + 1 + (0xffffffff - c | 0xffffffff - (((e ^ 0xffffffff | b) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) + e)) ^ 0xffffffff) | (b | (e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b)) - (b & (e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b)) ^ 0xffffffff))) + -2",
                    "attributes": {
                        "numOps": 315,
                        "nestedExprLevel": 117,
                        "numDAGs": 47,
                        "percentDecreaseByOps": 10.0,
                        "opsPercentages": {
                            "arithmetic": 27.3015873015873,
                            "mul": 13.333333333333334,
                            "bitwise": 59.36507936507937
                        },
                        "percentageDAGsCancel": 17.02127659574468
                    }
                },
                "msvc_default": {
                    "expr": "((((~(((~e | b) - ~e & ~e) + e + c + 1 + (0xffffffff - c | 0xffffffff - (((~e | b) - ~e & ~e) + e))) | (b * b & c) * (b * b | c) + (b * b & ~c) * (~(b * b) & c)) - ~(((~e | b) - ~e & ~e) + e + c + 1 + (0xffffffff - c | 0xffffffff - (((~e | b) - ~e & ~e) + e)))) - (((e & b) * (e | b) + (~b & e) * (~e & b) | b) - ((e & b) * (e | b) + (~b & e) * (~e & b) & b))) - (((~(((~e | b) - ~e & ~e) + e + c + 1 + (0xffffffff - c | 0xffffffff - (((~e | b) - ~e & ~e) + e))) | (b * b & c) * (b * b | c) + (b * b & ~c) * (~(b * b) & c)) - ~(((~e | b) - ~e & ~e) + e + c + 1 + (0xffffffff - c | 0xffffffff - (((~e | b) - ~e & ~e) + e))) | ~(((e & b) * (e | b) + (~b & e) * (~e & b) | b) - ((e & b) * (e | b) + (~b & e) * (~e & b) & b))) + ((~(((~e | b) - ~e & ~e) + e + c + 1 + (0xffffffff - c | 0xffffffff - (((~e | b) - ~e & ~e) + e))) | (b * b & c) * (b * b | c) + (b * b & ~c) * (~(b * b) & c)) - ~(((~e | b) - ~e & ~e) + e + c + 1 + (0xffffffff - c | 0xffffffff - (((~e | b) - ~e & ~e) + e))) | ~(((e & b) * (e | b) + (~b & e) * (~e & b) | b) - ((e & b) * (e | b) + (~b & e) * (~e & b) & b))))) + -2",
                    "attributes": {
                        "numOps": 243,
                        "nestedExprLevel": 70,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 30.571428571428573,
                        "opsPercentages": {
                            "arithmetic": 30.45267489711934,
                            "mul": 12.345679012345679,
                            "bitwise": 57.20164609053497
                        },
                        "percentageDAGsCancel": 9.523809523809524
                    }
                },
                "gcc_O3": {
                    "expr": "((~c & b * b) * (~b * b & c) + (b * b | c) * (b * b & c) & ((b & e & ~e) + e + c) - ((b & e & ~e) + e & c) - b) + (~b | (~c & b * b) * (~b * b & c) + (b * b | c) * (b * b & c) & ((b & e & ~e) + e + c) - ((b & e & ~e) + e & c)) * -2 + -2",
                    "attributes": {
                        "numOps": 58,
                        "nestedExprLevel": 12,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 83.42857142857143,
                        "opsPercentages": {
                            "arithmetic": 25.862068965517242,
                            "mul": 22.413793103448278,
                            "bitwise": 51.724137931034484
                        },
                        "percentageDAGsCancel": 11.538461538461538
                    }
                }
            }
        },
        {
            "num": 277,
            "gt": {
                "expr": "(((c*((c*a)^a))|(c|a)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 40.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((c & ((((c & a) * (c | a) + (c & ~ a) * (~ c & a)) | a) - (((c & a) * (c | a) + (c & ~ a) * (~ c & a)) & a))) * (c | ((((c & a) * (c | a) + (c & ~ a) * (~ c & a)) | a) - (((c & a) * (c | a) + (c & ~ a) * (~ c & a)) & a))) + (c & ~ ((((c & a) * (c | a) + (c & ~ a) * (~ c & a)) | a) - (((c & a) * (c | a) + (c & ~ a) * (~ c & a)) & a))) * (~ c & ((((c & a) * (c | a) + (c & ~ a) * (~ c & a)) | a) - (((c & a) * (c | a) + (c & ~ a) * (~ c & a)) & a)))) + (((c + a) + 1) + ((- c - 1) | (- a - 1)))) + 1) + ((- ((c & ((((c & a) * (c | a) + (c & ~ a) * (~ c & a)) | a) - (((c & a) * (c | a) + (c & ~ a) * (~ c & a)) & a))) * (c | ((((c & a) * (c | a) + (c & ~ a) * (~ c & a)) | a) - (((c & a) * (c | a) + (c & ~ a) * (~ c & a)) & a))) + (c & ~ ((((c & a) * (c | a) + (c & ~ a) * (~ c & a)) | a) - (((c & a) * (c | a) + (c & ~ a) * (~ c & a)) & a))) * (~ c & ((((c & a) * (c | a) + (c & ~ a) * (~ c & a)) | a) - (((c & a) * (c | a) + (c & ~ a) * (~ c & a)) & a)))) - 1) | (- (((c + a) + 1) + ((- c - 1) | (- a - 1))) - 1))",
                "attributes": {
                    "numOps": 210,
                    "nestedExprLevel": 96,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 22.380952380952383,
                        "mul": 17.142857142857142,
                        "bitwise": 60.476190476190474
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((c & a) - (a + c + 1) | ~((((~c & a) * (~a & c) + (c & a) * (c | a) ^ a) & ~c) * (~((~c & a) * (~a & c) + (c & a) * (c | a) ^ a) & c) + (((~c & a) * (~a & c) + (c & a) * (c | a) ^ a ) & c) * ((~c & a) * (~a & c) + (c & a) * (c | a) ^ a | c))) + ~(c & a) + a + c + (((~c & a) * (~a & c) + (c & a) * (c | a) ^ a) & c) * ((~c & a) * (~a & c) + (c & a) * (c | a) ^ a | c) + (((~c & a) * (~a & c) + (c & a) * (c | a) ^ a) & ~c) * (~((~c & a) * (~a & c) + (c & a) * (c | a) ^ a) & c) + 2",
                    "attributes": {
                        "numOps": 111,
                        "nestedExprLevel": 34,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 47.14285714285714,
                        "opsPercentages": {
                            "arithmetic": 16.216216216216218,
                            "mul": 18.01801801801802,
                            "bitwise": 65.76576576576578
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "msvc_O1": {
                    "expr": "c + 2 + (((-2 - ~(a & c)) - a) - c | ~(~((a | c) * (a & c) + (~a & c) * (~c & a) | a) - ((a | c) * (a & c) + (~a & c) * (~c & a) & a) & c) * (((a | c) * (a & c) + (~a & c) * (~c & a) | a) - ((a | c) * (a & c) + (~a & c) * (~c & a) & a) & ~c) - (((a | c) * (a & c) + (~a & c) * (~c & a) | a) - ((a | c) * (a & c) + (~a & c) * (~c & a) & a) | c) * (((a | c) * (a & c) + (~a & c) * (~c & a) | a) - ((a | c) * (a & c) + (~a & c) * (~c & a) & a) & c)) + ~(a & c) + (((a | c) * (a & c) + (~a & c) * (~c & a) | a) - ((a | c) * (a & c) + (~a & c) * (~c & a) & a) | c) * (((a | c) * (a & c) + (~a & c) * (~c & a) | a) - ((a | c) * (a & c) + (~a & c) * (~c & a) & a) & c) + (~((a | c) * (a & c) + (~a & c) * (~c & a) | a) - ((a | c) * (a & c) + (~a & c) * (~c & a) & a) & c) * (((a | c) * (a & c) + (~a & c) * (~c & a) | a) - ((a | c) * (a & c) + (~a & c) * (~c & a) & a) & ~c) + a",
                    "attributes": {
                        "numOps": 201,
                        "nestedExprLevel": 60,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 4.285714285714286,
                        "opsPercentages": {
                            "arithmetic": 17.412935323383085,
                            "mul": 17.91044776119403,
                            "bitwise": 64.6766169154229
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((~c & a) * (~a & c) + (c & a) * (c | a) ^ a & ~c) * (~(~c & a) * (~a & c) + (c & a) * (c | a) ^ a & c) + ((~c & a) * (~a & c) + (c & a) * (c | a) ^ a | c) * ((~c & a) * (~a & c) + (c & a) * (c | a) ^ a & c) | c | a",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 13,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 75.71428571428571,
                        "opsPercentages": {
                            "arithmetic": 9.803921568627452,
                            "mul": 19.607843137254903,
                            "bitwise": 70.58823529411765
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "clang_default": {
                    "expr": "(c & ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) | a) - ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) & a)) * (c | ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) | a) - ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) & a)) + (c & (((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) | a) - ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) & a) ^ 0xffffffff)) * ((c ^ 0xffffffff) & ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) | a) - ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) & a)) + c + a + (0xffffffff - c | 0xffffffff - a) + 2 + (0xffffffff - ((c & ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) | a) - ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) & a )) * (c | ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) | a) - ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) & a )) + (c & (((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) | a) - ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) & a ) ^ 0xffffffff)) * ((c ^ 0xffffffff) & ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) | a) - ((c & a) * (c | a) + (c & (a ^ 0xffffffff)) * ((c ^ 0xffffffff) & a) & a))) | 0xffffffff - (c + a + 1 + (0xffffffff - c | 0xffffffff - a)))",
                    "attributes": {
                        "numOps": 203,
                        "nestedExprLevel": 80,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 3.3333333333333335,
                        "opsPercentages": {
                            "arithmetic": 19.704433497536947,
                            "mul": 17.733990147783253,
                            "bitwise": 62.5615763546798
                        },
                        "percentageDAGsCancel": 2.941176470588235
                    }
                },
                "msvc_default": {
                    "expr": "(((c & a) * (c | a) + (~a & c) * (~c & a) | a) - ((c & a) * (c | a) + (~a & c) * (~c & a) & a) & c) * (((c & a) * (c | a) + (~a & c) * (~c & a) | a) - ((c & a) * (c | a) + (~a & c) * (~c & a) & a) | c) + (~(((c & a) * (c | a) + (~a & c) * (~c & a) | a) - ((c & a) * (c | a) + (~a & c) * (~c & a) & a)) & c) * (~c & ((c & a) * (c | a) + (~a & c) * (~c & a) | a) - ((c & a) * (c | a) + (~a & c) * (~c & a) & a)) + c + a + (0xffffffff - c | 0xffffffff - a) + 2 + (0xffffffff - ((((c & a) * (c | a) + (~a & c) * (~c & a) | a) - ((c & a) * (c | a) + (~a & c) * (~c & a) & a) & c) * (((c & a) * (c | a) + (~a & c) * (~c & a) | a) - ((c & a) * (c | a) + (~a & c) * (~c & a) & a) | c) + (~(((c & a) * (c | a) + (~a & c) * (~c & a) | a) - ((c & a) * (c | a) + (~a & c) * (~c & a) & a)) & c) * (~c & ((c & a) * (c | a) + (~a & c) * (~c & a) | a) - ((c & a) * (c | a) + (~a & c) * (~c & a) & a))) | 0xffffffff - (c + a + 1 + (0xffffffff - c | 0xffffffff - a)))",
                    "attributes": {
                        "numOps": 203,
                        "nestedExprLevel": 63,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 3.3333333333333335,
                        "opsPercentages": {
                            "arithmetic": 19.704433497536947,
                            "mul": 17.733990147783253,
                            "bitwise": 62.5615763546798
                        },
                        "percentageDAGsCancel": 2.941176470588235
                    }
                },
                "gcc_O3": {
                    "expr": "((~(~a & c) * (~c & a) + (c | a) * c & a ^ a & c) * (~c & (~a & c) * (~c & a) + (c | a) * c & a ^ a) + ((~a & c) * (~c & a) + (c | a) * c & a ^ a | c) * ((~a & c) * (~c & a) + (c | a) * c & a ^ a & c) - c & a) + a + 1 + c + (~(~(~a & c) * (~c & a) + (c | a) * c & a ^ a & c) * (~c & (~a & c) * (~c & a) + (c | a) * c & a ^ a) + ((~a & c) * (~c & a) + (c | a) * c & a ^ a | c) * ((~a & c) * (~c & a) + (c | a) * c & a ^ a & c) | c & a - a + 1 + c)",
                    "attributes": {
                        "numOps": 110,
                        "nestedExprLevel": 20,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 47.61904761904761,
                        "opsPercentages": {
                            "arithmetic": 16.363636363636363,
                            "mul": 18.181818181818183,
                            "bitwise": 65.45454545454545
                        },
                        "percentageDAGsCancel": 7.894736842105263
                    }
                }
            }
        },
        {
            "num": 278,
            "gt": {
                "expr": "(((a&(a^b))^(((a+a)*a)^(a^a))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 14.285714285714285,
                        "mul": 14.285714285714285,
                        "bitwise": 71.42857142857143
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "(((~ a | (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) - ~ a) | (((((((a | a) + (a & a)) & a) * (((a | a) + (a & a)) | a) + (((a | a) + (a & a)) & ~ a) * (~ ((a | a) + (a & a)) & a)) - (((a - a) - ((a | ~ a) << 1)) - 2)) - ((((((a | a) + (a & a)) & a) * (((a | a) + (a & a)) | a) + (((a | a) + (a & a)) & ~ a) * (~ ((a | a) + (a & a)) & a)) | ~ (((a - a) - ((a | ~ a) << 1)) - 2)) + (((((a | a) + (a & a)) & a) * (((a | a) + (a & a)) | a) + (((a | a) + (a & a)) & ~ a) * (~ ((a | a) + (a & a)) & a)) | ~ (((a - a) - ((a | ~ a) << 1)) - 2)))) - 2)) - (((~ a | (((a - b) - ((a | ~ b) + (a | ~ b))) - 2)) - ~ a) & (((((((a | a) + (a & a)) & a) * (((a | a) + (a & a)) | a) + (((a | a) + (a & a)) & ~ a) * (~ ((a | a) + (a & a)) & a)) - (((a - a) - ((a | ~ a) << 1)) - 2)) - ((((((a | a) + (a & a)) & a) * (((a | a) + (a & a)) | a) + (((a | a) + (a & a)) & ~ a) * (~ ((a | a) + (a & a)) & a)) | ~ (((a - a) - ((a | ~ a) << 1)) - 2)) + (((((a | a) + (a & a)) & a) * (((a | a) + (a & a)) | a) + (((a | a) + (a & a)) & ~ a) * (~ ((a | a) + (a & a)) & a)) | ~ (((a - a) - ((a | ~ a) << 1)) - 2)))) - 2))",
                "attributes": {
                    "numOps": 205,
                    "nestedExprLevel": 124,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 32.6829268292683,
                        "mul": 5.853658536585367,
                        "bitwise": 61.46341463414634
                    },
                    "percentageDAGsCancel": 14.705882352941178
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(a * 2) & a) * (a * 2 & ~a) + (a * 2 & a) * (a * 2 | a) ^ ((a - b) + (~b | a) * -2) - 2 & a",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 6,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 89.26829268292683,
                        "opsPercentages": {
                            "arithmetic": 22.727272727272727,
                            "mul": 31.818181818181817,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_O1": {
                    "expr": "(((a - ((~b | a) * 2 + 2)) - b | ~a) + a + 1 | (a * 2 & a) * (a * 2 | a) + (~a * 2 & a) * (~a & a * 2)) - (((a - ((~b | a) * 2 + 2)) - b | ~a) + a + 1 & (a * 2 & a) * (a * 2 | a) + (~a * 2 & a) * (~a & a * 2))",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 14,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 76.09756097560975,
                        "opsPercentages": {
                            "arithmetic": 26.53061224489796,
                            "mul": 28.57142857142857,
                            "bitwise": 44.89795918367347
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~a * 2 & a) * (~a & a * 2) + (a * 2 | a) * (a * 2 & a) ^ ((a - b) + (~b | a) * -2) - 2 & a",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 5,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 89.26829268292683,
                        "opsPercentages": {
                            "arithmetic": 22.727272727272727,
                            "mul": 31.818181818181817,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a ^ 0xffffffff | ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) - (a ^ 0xffffffff) | ((((a * 2 & a) * (a * 2 | a) + (a * 2 & (a ^ 0xffffffff)) * ((a * 2 ^ 0xffffffff) & a)) - ((a | a ^ 0xffffffff) * -2 + -2)) - (((a * 2 & a) * (a * 2 | a) + (a * 2 & (a ^ 0xffffffff)) * ((a * 2 ^ 0xffffffff) & a) | (a | a ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) + ((a * 2 & a) * (a * 2 | a) + (a * 2 & (a ^ 0xffffffff)) * ((a * 2 ^ 0xffffffff) & a) | (a | a ^ 0xffffffff) * -2 - 2 ^ 0xffffffff))) - 2) - ((a ^ 0xffffffff | ((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2) - (a ^ 0xffffffff) & ((((a * 2 & a) * (a * 2 | a) + (a * 2 & (a ^ 0xffffffff)) * ((a * 2 ^ 0xffffffff) & a)) - ((a | a ^ 0xffffffff) * -2 + -2)) - (((a * 2 & a) * (a * 2 | a) + (a * 2 & (a ^ 0xffffffff)) * ((a * 2 ^ 0xffffffff) & a) | (a | a ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) + ((a * 2 & a) * (a * 2 | a) + (a * 2 & (a ^ 0xffffffff)) * ((a * 2 ^ 0xffffffff) & a) | (a | a ^ 0xffffffff) * -2 - 2 ^ 0xffffffff))) - 2)",
                    "attributes": {
                        "numOps": 153,
                        "nestedExprLevel": 47,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 25.365853658536587,
                        "opsPercentages": {
                            "arithmetic": 25.49019607843137,
                            "mul": 27.450980392156865,
                            "bitwise": 47.05882352941176
                        },
                        "percentageDAGsCancel": 3.125
                    }
                },
                "msvc_default": {
                    "expr": "((~a | ((a - b) - ((~b | a) + (~b | a))) - 2) - ~a | (a * 2 & a) * (a * 2 | a) + (a * 2 & ~a) * (~(a * 2) & a)) - ((~a | ((a - b) - ((~b | a) + (~b | a))) - 2) - ~a & (a * 2 & a) * (a * 2 | a) + (a * 2 & ~a) * (~(a * 2) & a))",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 16,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 74.14634146341463,
                        "opsPercentages": {
                            "arithmetic": 24.528301886792452,
                            "mul": 22.641509433962266,
                            "bitwise": 52.83018867924528
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "gcc_O3": {
                    "expr": "(~a & a * 2) * (~a * 2 & a) + (a * 2 | a) * (a * 2 & a) ^ a & ((a - b) + (~b | a) * -2) - 2",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 5,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 89.26829268292683,
                        "opsPercentages": {
                            "arithmetic": 22.727272727272727,
                            "mul": 31.818181818181817,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 279,
            "gt": {
                "expr": "(((-(d&d))*(-d)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 25.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((~ (((~ d | d) + d) + 1) + 1) & (~ d + 1)) * ((~ (((~ d | d) + d) + 1) + 1) | (~ d + 1)) + ((~ (((~ d | d) + d) + 1) + 1) & ~ (~ d + 1)) * (~ (~ (((~ d | d) + d) + 1) + 1) & (~ d + 1))",
                "attributes": {
                    "numOps": 41,
                    "nestedExprLevel": 21,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 41.46341463414634,
                        "mul": 4.878048780487805,
                        "bitwise": 53.65853658536586
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-d & d - 1) * (-d & d - 1) + d * d",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 78.04878048780488,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 22.22222222222222,
                            "bitwise": 22.22222222222222
                        },
                        "percentageDAGsCancel": 33.33333333333333
                    }
                },
                "msvc_O1": {
                    "expr": "d * d",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 97.5609756097561,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 100.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "d * d",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 97.5609756097561,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 100.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff) + 1 & (d ^ 0xffffffff) + 1) * (((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff) + 1 | (d ^ 0xffffffff) + 1) + (((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff) + 1 & ((d ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) & (d ^ 0xffffffff) + 1)",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 14,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 41.46341463414634,
                            "mul": 4.878048780487805,
                            "bitwise": 53.65853658536586
                        },
                        "percentageDAGsCancel": 18.75
                    }
                },
                "msvc_default": {
                    "expr": "(~d + 1 & ~d + 1) * (~d + 1 | ~d + 1) + (~d + 1 & ~(~d + 1)) * (~(~d + 1) & ~d + 1)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 5,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 39.02439024390244,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 8.0,
                            "bitwise": 56.00000000000001
                        },
                        "percentageDAGsCancel": 30.0
                    }
                },
                "gcc_O3": {
                    "expr": "d * d + -d & d - 1 * -d & d - 1",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 1,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 78.04878048780488,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 22.22222222222222,
                            "bitwise": 22.22222222222222
                        },
                        "percentageDAGsCancel": 12.5
                    }
                }
            }
        },
        {
            "num": 280,
            "gt": {
                "expr": "((((a+a)*e)^((e^e)|(e*a))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 16.666666666666664,
                        "mul": 33.33333333333333,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "(((((((a ^ ~ a) + ((a | a) << 1)) + 1) & e) * ((((a ^ ~ a) + ((a | a) << 1)) + 1) | e) + ((((a ^ ~ a) + ((a | a) << 1)) + 1) & ~ e) * (~ (((a ^ ~ a) + ((a | a) << 1)) + 1) & e)) - ((((((e - e) - ((e | ~ e) + (e | ~ e))) - 2) + ((e & a) * (e | a) + (e & ~ a) * (~ e & a))) + 1) + ((- (((e - e) - ((e | ~ e) + (e | ~ e))) - 2) - 1) | (- ((e & a) * (e | a) + (e & ~ a) * (~ e & a)) - 1)))) - (((((((a ^ ~ a) + ((a | a) << 1)) + 1) & e) * ((((a ^ ~ a) + ((a | a) << 1)) + 1) | e) + ((((a ^ ~ a) + ((a | a) << 1)) + 1) & ~ e) * (~ (((a ^ ~ a) + ((a | a) << 1)) + 1) & e)) | ~ ((((((e - e) - ((e | ~ e) + (e | ~ e))) - 2) + ((e & a) * (e | a) + (e & ~ a) * (~ e & a))) + 1) + ((- (((e - e) - ((e | ~ e) + (e | ~ e))) - 2) - 1) | (- ((e & a) * (e | a) + (e & ~ a) * (~ e & a)) - 1)))) + ((((((a ^ ~ a) + ((a | a) << 1)) + 1) & e) * ((((a ^ ~ a) + ((a | a) << 1)) + 1) | e) + ((((a ^ ~ a) + ((a | a) << 1)) + 1) & ~ e) * (~ (((a ^ ~ a) + ((a | a) << 1)) + 1) & e)) | ~ ((((((e - e) - ((e | ~ e) + (e | ~ e))) - 2) + ((e & a) * (e | a) + (e & ~ a) * (~ e & a))) + 1) + ((- (((e - e) - ((e | ~ e) + (e | ~ e))) - 2) - 1) | (- ((e & a) * (e | a) + (e & ~ a) * (~ e & a)) - 1)))))) - 2",
                "attributes": {
                    "numOps": 233,
                    "nestedExprLevel": 117,
                    "numDAGs": 41,
                    "opsPercentages": {
                        "arithmetic": 35.1931330472103,
                        "mul": 7.725321888412018,
                        "bitwise": 57.08154506437768
                    },
                    "percentageDAGsCancel": 9.75609756097561
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((a * 2 & e) * (a * 2 | e) + (~(a * 2) & e) * (a * 2 & ~e)) - ((~e & a) * (~a & e) + (e & a) * (e | a))) + (~((~e & a) * (~a & e) + (e & a) * (e | a)) | (a * 2 & e) * (a * 2 | e) + (~(a * 2) & e) * (a * 2 & ~e)) * -2 + -2",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 16,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 77.6824034334764,
                        "opsPercentages": {
                            "arithmetic": 17.307692307692307,
                            "mul": 32.69230769230769,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 12.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~(~((~a & e) * (~e & a) + (a | e) * (a & e)) | (a * 2 | e) * (a * 2 & e) + (~a * 2 & e) * (~e & a * 2)) * 2 - (~a & e) * (~e & a)) - (a | e) * (a & e)) + (a * 2 | e) * (a * 2 & e) + (~a * 2 & e) * (~e & a * 2)",
                    "attributes": {
                        "numOps": 50,
                        "nestedExprLevel": 13,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 78.54077253218884,
                        "opsPercentages": {
                            "arithmetic": 12.0,
                            "mul": 34.0,
                            "bitwise": 54.0
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "clang_O3": {
                    "expr": "((~a * 2 & e) * (a * 2 & ~e) + (a * 2 | e) * (a * 2 & e) - (~e & a) * (~a & e) + (e | a) * (e & a)) + (~(~e & a) * (~a & e) + (e | a) * (e & a) | (~a * 2 & e) * (a * 2 & ~e) + (a * 2 | e) * (a * 2 & e)) * -2 + -2",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 11,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 77.6824034334764,
                        "opsPercentages": {
                            "arithmetic": 17.307692307692307,
                            "mul": 32.69230769230769,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "clang_default": {
                    "expr": "(((((a ^ a ^ 0xffffffff) + a * 2 + 1 & e) * ((a ^ a ^ 0xffffffff) + a * 2 + 1 | e) + ((a ^ a ^ 0xffffffff) + a * 2 + 1 & (e ^ 0xffffffff)) * (((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff) & e)) - ((((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a)) - ((e | e ^ 0xffffffff) + (e | e ^ 0xffffffff))) + -1 + (0xffffffff - (-2 - ((e | e ^ 0xffffffff) + (e | e ^ 0xffffffff))) | 0xffffffff - ((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a))))) - ((((a ^ a ^ 0xffffffff) + a * 2 + 1 & e) * ((a ^ a ^ 0xffffffff) + a * 2 + 1 | e) + ((a ^ a ^ 0xffffffff) + a * 2 + 1 & (e ^ 0xffffffff)) * (((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff) & e) | (((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a)) - ((e | e ^ 0xffffffff) + (e | e ^ 0xffffffff))) + -1 + (0xffffffff - (-2 - ((e | e ^ 0xffffffff) + (e | e ^ 0xffffffff))) | 0xffffffff - ((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a))) ^ 0xffffffff) + (((a ^ a ^ 0xffffffff) + a * 2 + 1 & e) * ((a ^ a ^ 0xffffffff) + a * 2 + 1 | e) + ((a ^ a ^ 0xffffffff) + a * 2 + 1 & (e ^ 0xffffffff)) * (((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff) & e) | (((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a)) - ((e | e ^ 0xffffffff) + (e | e ^ 0xffffffff))) + -1 + (0xffffffff - (-2 - ((e | e ^ 0xffffffff) + (e | e ^ 0xffffffff))) | 0xffffffff - ((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a))) ^ 0xffffffff))) + -2",
                    "attributes": {
                        "numOps": 207,
                        "nestedExprLevel": 72,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 11.158798283261802,
                        "opsPercentages": {
                            "arithmetic": 32.850241545893724,
                            "mul": 14.492753623188406,
                            "bitwise": 52.65700483091788
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                },
                "msvc_default": {
                    "expr": "((((a * 2 & e) * (a * 2 | e) + (a * 2 & ~e) * (~(a * 2) & e)) - ((e & a) * (e | a) + (~a & e) * (~e & a))) - (((a * 2 & e) * (a * 2 | e) + (a * 2 & ~e) * (~(a * 2) & e) | ~((e & a) * (e | a) + (~a & e) * (~e & a))) + ((a * 2 & e) * (a * 2 | e) + (a * 2 & ~e) * (~(a * 2) & e) | ~((e & a) * (e | a) + (~a & e) * (~e & a) )))) + -2",
                    "attributes": {
                        "numOps": 75,
                        "nestedExprLevel": 22,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 67.81115879828327,
                        "opsPercentages": {
                            "arithmetic": 14.666666666666666,
                            "mul": 32.0,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~a * 2 & e) * (a * 2 & ~e) + (a * 2 | e) * (a * 2 & e) - (~a & e) * (~e & a) + (a | e) * (a & e)) + (~(~a & e) * (~e & a) + (a | e) * (a & e) | (~a * 2 & e) * (a * 2 & ~e) + (a * 2 | e) * (a * 2 & e)) * -2 + -2",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 11,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 77.6824034334764,
                        "opsPercentages": {
                            "arithmetic": 17.307692307692307,
                            "mul": 32.69230769230769,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 281,
            "gt": {
                "expr": "((((e-e)&((e*e)^c))|(c|e)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 16.666666666666664,
                        "mul": 16.666666666666664,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "((((~ ((e & ~ e) - (~ e & e)) | ((((e & e) * (e | e) + (e & ~ e) * (~ e & e)) | c) - (((e & e) * (e | e) + (e & ~ e) * (~ e & e)) & c))) + ((e & ~ e) - (~ e & e))) + 1) & ~ (((c + e) + 1) + ((- c - 1) | (- e - 1)))) + (((c + e) + 1) + ((- c - 1) | (- e - 1)))",
                "attributes": {
                    "numOps": 54,
                    "nestedExprLevel": 26,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 40.74074074074074,
                        "mul": 7.4074074074074066,
                        "bitwise": 51.85185185185185
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(c & e) + e + c + 1",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 90.74074074074075,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(c - (c & e)) + e",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 3,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 94.44444444444444,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "c | e",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 98.14814814814815,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 100.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e & (e ^ 0xffffffff)) - ((e ^ 0xffffffff) & e) ^ 0xffffffff | (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) | c) - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) & c)) + ((e & (e ^ 0xffffffff)) - ((e ^ 0xffffffff) & e)) + 1 & (c + e + 1 + (0xffffffff - c | 0xffffffff - e) ^ 0xffffffff)) + c + e + 1 + (0xffffffff - c | 0xffffffff - e)",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 16,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 14.814814814814813,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 8.695652173913043,
                            "bitwise": 52.17391304347826
                        },
                        "percentageDAGsCancel": 19.230769230769234
                    }
                },
                "msvc_default": {
                    "expr": "c + e + 1 + (0xffffffff - c | 0xffffffff - e)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 88.88888888888889,
                        "opsPercentages": {
                            "arithmetic": 83.33333333333334,
                            "mul": 0.0,
                            "bitwise": 16.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(e + c) - (c & e)",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 94.44444444444444,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 282,
            "gt": {
                "expr": "((-((e*((-e)&e))|((d-e)-(d&d)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 12.5,
                        "bitwise": 37.5
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "~ ((((e & ((~ (~ e + 1) | e) - ~ (~ e + 1))) * (e | ((~ (~ e + 1) | e) - ~ (~ e + 1))) + (e & ~ ((~ (~ e + 1) | e) - ~ (~ e + 1))) * (~ e & ((~ (~ e + 1) | e) - ~ (~ e + 1)))) & ~ ((((d + ~ e) + 1) ^ (((~ d | d) + d) + 1)) - ((~ ((d + ~ e) + 1) & (((~ d | d) + d) + 1)) + (~ ((d + ~ e) + 1) & (((~ d | d) + d) + 1))))) + ((((d + ~ e) + 1) ^ (((~ d | d) + d) + 1)) - ((~ ((d + ~ e) + 1) & (((~ d | d) + d) + 1)) + (~ ((d + ~ e) + 1) & (((~ d | d) + d) + 1))))) + 1",
                "attributes": {
                    "numOps": 102,
                    "nestedExprLevel": 49,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 42.15686274509804,
                        "mul": 1.9607843137254901,
                        "bitwise": 55.88235294117647
                    },
                    "percentageDAGsCancel": 24.137931034482758
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-((d + ~e + 1 ^ d) + ((e - d) - 1 & d) * -2 + ((-e & e) * e + (e - 1 & e) * (-e & e & ~e) & ((e - d) - 1 & d) * 2 + ((e - d) - 1 ^ d)))",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 8,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 68.62745098039215,
                        "opsPercentages": {
                            "arithmetic": 53.125,
                            "mul": 12.5,
                            "bitwise": 34.375
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_O1": {
                    "expr": "(~d + 1 + ~e & d * 2 - ((~~e + 2 + (~(~e + 1) | e) & e) * (~e + 2 + (~(~e + 1) | e) & ~e) + (~e + 2 + (~(~e + 1) | e) | e) * (~e + 2 + (~(~e + 1) | e) & e) & ~(d + 1 + ~e ^ d + ~d + 1 + ~e & d * -2))) - d + 1 + ~e ^ d",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 12,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 38.23529411764706,
                        "opsPercentages": {
                            "arithmetic": 39.682539682539684,
                            "mul": 6.349206349206349,
                            "bitwise": 53.96825396825397
                        },
                        "percentageDAGsCancel": 21.62162162162162
                    }
                },
                "clang_O3": {
                    "expr": "-((~(d - e ^ d) + (~(d - e) & d) * -2 & (-e & e) * e) + (d - e ^ d) + (~(d - e) & d) * -2)",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 7,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 77.45098039215686,
                        "opsPercentages": {
                            "arithmetic": 47.82608695652174,
                            "mul": 13.043478260869565,
                            "bitwise": 39.130434782608695
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_default": {
                    "expr": "(((e & ((e ^ 0xffffffff) + 1 ^ 0xffffffff | e) - ((e ^ 0xffffffff) + 1 ^ 0xffffffff)) * (e | ((e ^ 0xffffffff) + 1 ^ 0xffffffff | e) - ((e ^ 0xffffffff) + 1 ^ 0xffffffff)) + (e & (((e ^ 0xffffffff) + 1 ^ 0xffffffff | e) - ((e ^ 0xffffffff) + 1 ^ 0xffffffff) ^ 0xffffffff)) * ((e ^ 0xffffffff) & ((e ^ 0xffffffff) + 1 ^ 0xffffffff | e) - ((e ^ 0xffffffff) + 1 ^ 0xffffffff)) & ((d + (e ^ 0xffffffff) + 1 ^ (d ^ 0xffffffff | d) + d + 1) - (((d + (e ^ 0xffffffff) + 1 ^ 0xffffffff) & (d ^ 0xffffffff | d) + d + 1) + ((d + (e ^ 0xffffffff) + 1 ^ 0xffffffff) & (d ^ 0xffffffff | d) + d + 1)) ^ 0xffffffff)) + ((d + (e ^ 0xffffffff) + 1 ^ (d ^ 0xffffffff | d) + d + 1) - (((d + (e ^ 0xffffffff) + 1 ^ 0xffffffff) & (d ^ 0xffffffff | d) + d + 1) + ((d + (e ^ 0xffffffff) + 1 ^ 0xffffffff) & (d ^ 0xffffffff | d) + d + 1))) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 102,
                        "nestedExprLevel": 36,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 42.15686274509804,
                            "mul": 1.9607843137254901,
                            "bitwise": 55.88235294117647
                        },
                        "percentageDAGsCancel": 17.24137931034483
                    }
                },
                "msvc_default": {
                    "expr": "~((((~(~e + 1) | e) - ~(~e + 1) & e) * ((~(~e + 1) | e) - ~(~e + 1) | e) + (~((~(~e + 1) | e) - ~(~e + 1)) & e) * (~e & (~(~e + 1) | e) - ~(~e + 1)) & ~((d + 1 + ~e ^ d) - ((~(d + 1 + ~e) & d) + (~(d + 1 + ~e) & d)))) + ((d + 1 + ~e ^ d) - ((~(d + 1 + ~e) & d) + (~(d + 1 + ~e) & d)))) + 1",
                    "attributes": {
                        "numOps": 78,
                        "nestedExprLevel": 25,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 23.52941176470588,
                        "opsPercentages": {
                            "arithmetic": 39.743589743589745,
                            "mul": 2.564102564102564,
                            "bitwise": 57.692307692307686
                        },
                        "percentageDAGsCancel": 32.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((e - d) - 1 & d) * 2 - ((e - 1 & e) * (-e & e & ~e) + (-e & e) * e & ((e - d) - 1 ^ d) + ((e - d) - 1 & d) * 2)) - (~e + 1 + d ^ d)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 8,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 70.58823529411765,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 13.333333333333334,
                            "bitwise": 36.666666666666664
                        },
                        "percentageDAGsCancel": 23.809523809523807
                    }
                }
            }
        },
        {
            "num": 283,
            "gt": {
                "expr": "((~((~(((a*d)+(d-d))*d))*(a^(d+d)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 33.33333333333333,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "- (((- (((((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) & d) * ((((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) | d) + ((((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) & ~ d) * (~ (((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) & d)) - 1) & (((a - (((d | d) << 1) - (d ^ d))) - ((a | ~ (((d | d) << 1) - (d ^ d))) + (a | ~ (((d | d) << 1) - (d ^ d))))) - 2)) * ((- (((((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) & d) * ((((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) | d) + ((((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) & ~ d) * (~ (((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) & d)) - 1) | (((a - (((d | d) << 1) - (d ^ d))) - ((a | ~ (((d | d) << 1) - (d ^ d))) + (a | ~ (((d | d) << 1) - (d ^ d))))) - 2)) + ((- (((((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) & d) * ((((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) | d) + ((((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) & ~ d) * (~ (((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) & d)) - 1) & ~ (((a - (((d | d) << 1) - (d ^ d))) - ((a | ~ (((d | d) << 1) - (d ^ d))) + (a | ~ (((d | d) << 1) - (d ^ d))))) - 2)) * (~ (- (((((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) & d) * ((((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) | d) + ((((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) & ~ d) * (~ (((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d)))) + (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | ((d ^ d) - ((~ d & d) + (~ d & d))))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) ^ ((d ^ d) - ((~ d & d) + (~ d & d))))) & d)) - 1) & (((a - (((d | d) << 1) - (d ^ d))) - ((a | ~ (((d | d) << 1) - (d ^ d))) + (a | ~ (((d | d) << 1) - (d ^ d))))) - 2))) - 1",
                "attributes": {
                    "numOps": 983,
                    "nestedExprLevel": 458,
                    "numDAGs": 47,
                    "opsPercentages": {
                        "arithmetic": 22.278738555442523,
                        "mul": 10.783316378433367,
                        "bitwise": 66.9379450661241
                    },
                    "percentageDAGsCancel": 17.02127659574468
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((a + d * -2 + (~(d * 2) | a) * -2) - 2 & ((~a & d) * (~d & a) + (a & d) * (a | d) & d) * ((~a & d) * (~d & a) + (a & d) * (a | d) | d) + (~((~a & d) * (~d & a) + (a & d) * (a | d)) & d) * ((a & d) * (a | d) + (~a & d) * (~d & a) & ~d)) * (~((~((~a & d) * (~d & a) + (a & d) * (a | d) ) & d) * ((a & d) * (a | d) + (~a & d) * (~d & a) & ~d) + ((~a & d) * (~d & a) + (a & d) * (a | d) & d) * ((~a & d) * (~d & a) + (a & d) * (a | d) | d)) & (~(d * 2) | a) * 2 + ~a + d * 2 + 2) + (~((~((~a & d) * (~d & a) + (a & d) * (a | d)) & d) * ((a & d) * (a | d) + (~a & d) * (~d & a) & ~d) + ((~a & d) * (~d & a) + (a & d) * (a | d) & d) * ((~a & d) * (~d & a) + (a & d) * (a | d) | d)) & (a + d * -2 + (~(d * 2) | a) * -2) - 2) * ((a + d * -2 + (~(d * 2) | a) * -2) - 2 | ~((~((~a & d) * (~d & a) + (a & d) * (a | d)) & d) * ((a & d) * (a | d) + (~a & d) * (~d & a) & ~d) + ((~a & d) * (~d & a) + (a & d) * (a | d) & d) * ((~a & d) * (~d & a) + (a & d) * (a | d) | d))))",
                    "attributes": {
                        "numOps": 230,
                        "nestedExprLevel": 68,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 76.60223804679552,
                        "opsPercentages": {
                            "arithmetic": 16.956521739130434,
                            "mul": 23.47826086956522,
                            "bitwise": 59.56521739130435
                        },
                        "percentageDAGsCancel": 4.878048780487805
                    }
                },
                "msvc_O1": {
                    "expr": "~((~~((~(a | d) * (a & d) + (~a & d) * (~d & a) & d) * ((a | d) * (a & d) + (~a & d) * (~d & a) & ~d)) - ((a | d) * (a & d) + (~a & d) * (~d & a) | d) * ((a | d) * (a & d) + (~a & d) * (~d & a) & d) & (a - ((~(d * 2) | a) * 2 + 2)) + d * -2) * (~(a - ((~(d * 2) | a) * 2 + 2)) + d * -2 & ~((~(a | d) * (a & d) + (~a & d) * (~d & a) & d) * ((a | d) * (a & d) + (~a & d) * (~d & a) & ~d)) - ((a | d) * (a & d) + (~a & d) * (~d & a) | d) * ((a | d) * (a & d) + (~a & d) * (~d & a) & d))) - ((a - ((~(d * 2) | a) * 2 + 2)) + d * -2 | ~((~(a | d) * (a & d) + (~a & d) * (~d & a) & d) * ((a | d) * (a & d) + (~a & d) * (~d & a) & ~d)) - ((a | d) * (a & d) + (~a & d) * (~d & a) | d) * ((a | d) * (a & d) + (~a & d) * (~d & a) & d)) * ((a - ((~(d * 2) | a) * 2 + 2)) + d * -2 & ~((~(a | d) * (a & d) + (~a & d) * (~d & a) & d) * ((a | d) * (a & d) + (~a & d) * (~d & a) & ~d)) - ((a | d) * (a & d) + (~a & d) * (~d & a) | d) * ((a | d) * (a & d) + (~a & d) * (~d & a) & d))",
                    "attributes": {
                        "numOps": 230,
                        "nestedExprLevel": 70,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 76.60223804679552,
                        "opsPercentages": {
                            "arithmetic": 16.08695652173913,
                            "mul": 23.47826086956522,
                            "bitwise": 60.43478260869565
                        },
                        "percentageDAGsCancel": 2.4390243902439024
                    }
                },
                "clang_O3": {
                    "expr": "~((1 - a + d * -2 + (~(d * 2) | a) * -2 & ~(~(~a & d) * (~d & a) + (d | a) * (d & a) & d) * (~d & (~a & d) * (~d & a) + (d | a) * (d & a)) + ((~a & d) * (~d & a) + (d | a) * (d & a) | d) * ((~a & d) * (~d & a) + (d | a) * (d & a) & d)) * ((~(~a & d) * (~d & a) + (d | a) * (d & a) & d) * (~d & (~a & d) * (~d & a) + (d | a) * (d & a)) + ((~a & d) * (~d & a) + (d | a) * (d & a) | d) * ((~a & d) * (~d & a) + (d | a) * (d & a) & d) & a + d * -2 + (~(d * 2) | a) * -2 - 2) + (a + d * -2 + (~(d * 2) | a) * -2 - 2 | ~(~(~a & d) * (~d & a) + (d | a) * (d & a) & d) * (~d & (~a & d) * (~d & a) + (d | a) * (d & a)) + ((~a & d) * (~d & a) + (d | a) * (d & a) | d) * ((~a & d) * (~d & a) + (d | a) * (d & a) & d)) * (a + d * -2 + (~(d * 2) | a) * -2 - 2 & ~(~(~a & d) * (~d & a) + (d | a) * (d & a) & d) * (~d & (~a & d) * (~d & a) + (d | a) * (d & a)) + ((~a & d) * (~d & a) + (d | a) * (d & a) | d) * ((~a & d) * (~d & a) + (d | a) * (d & a) & d)))",
                    "attributes": {
                        "numOps": 231,
                        "nestedExprLevel": 58,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 76.500508646999,
                        "opsPercentages": {
                            "arithmetic": 17.74891774891775,
                            "mul": 23.376623376623375,
                            "bitwise": 58.87445887445888
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((0xffffffff - (((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) & d) * ((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) | d) + ((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) & (d ^ 0xffffffff)) * (((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) ^ 0xffffffff) & d)) & ((a + d * -2) - ((a | d * 2 ^ 0xffffffff) + (a | d * 2 ^ 0xffffffff))) - 2) * (0xffffffff - (((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) & d) * ((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) | d) + ((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) & (d ^ 0xffffffff)) * (((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) ^ 0xffffffff) & d)) | ((a + d * -2) - ((a | d * 2 ^ 0xffffffff) + (a | d * 2 ^ 0xffffffff))) - 2) + (0xffffffff - (((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) & d) * ((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) | d) + ((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) & (d ^ 0xffffffff)) * (((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) ^ 0xffffffff) & d)) & (((a + d * -2) - ((a | d * 2 ^ 0xffffffff) + (a | d * 2 ^ 0xffffffff))) - 2 ^ 0xffffffff)) * ((0xffffffff - (((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) & d) * ((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) | d) + ((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) & (d ^ 0xffffffff)) * (((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) + ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)))) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) ^ -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d))) ^ 0xffffffff) & d)) ^ 0xffffffff) & ((a + d * -2) - ((a | d * 2 ^ 0xffffffff) + (a | d * 2 ^ 0xffffffff))) - 2))",
                    "attributes": {
                        "numOps": 899,
                        "nestedExprLevel": 400,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 8.54526958290946,
                        "opsPercentages": {
                            "arithmetic": 23.02558398220245,
                            "mul": 13.125695216907676,
                            "bitwise": 63.84872080088988
                        },
                        "percentageDAGsCancel": 8.88888888888889
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((0xffffffff - ((((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d)) & d) * (((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d)) | d) + (((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d)) & ~d) * (~(((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d))) & d)) & ((a + d * -2) - ((~(d * 2) | a) + (~(d * 2) | a)) ) - 2) * (0xffffffff - ((((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d)) & d) * (((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d)) | d) + (((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d)) & ~d) * (~(((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d))) & d)) | ((a + d * -2) - ((~(d * 2) | a) + (~(d * 2) | a))) - 2) + (0xffffffff - ((((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d)) & d) * (((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d)) | d) + (((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d)) & ~d) * (~(((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d))) & d)) & ~(((a + d * -2) - ((~(d * 2) | a) + (~(d * 2) | a))) - 2)) * (~(0xffffffff - ((((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d)) & d) * (((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d)) | d) + (((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d)) & ~d) * (~(((a & d) * (a | d) + (~d & a) * (~a & d) + (a & d) * (a | d) + (~d & a) * (~a & d)) - ((a & d) * (a | d) + (~d & a) * (~a & d))) & d))) & ((a + d * -2) - ((~(d * 2) | a) + (~(d * 2) | a))) - 2))",
                    "attributes": {
                        "numOps": 563,
                        "nestedExprLevel": 177,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 42.726347914547304,
                        "opsPercentages": {
                            "arithmetic": 19.715808170515096,
                            "mul": 20.959147424511546,
                            "bitwise": 59.32504440497336
                        },
                        "percentageDAGsCancel": 4.878048780487805
                    }
                },
                "gcc_O3": {
                    "expr": "~((~(~(a & d) * (a | d) + (~d & a) * (~a & d) & d) * (~d & (a & d) * (a | d) + (~d & a) * (~a & d)) + ((a & d) * (a | d) + (~d & a) * (~a & d) | d) * ((a & d) * (a | d) + (~d & a) * (~a & d) & d) & (a + d * -2 + ~(d * 2) | a * -2) - 2) * (~(~(a & d) * (a | d) + (~d & a) * (~a & d) & d) * (~d & (a & d) * (a | d) + (~d & a) * (~a & d)) + ((a & d) * (a | d) + (~d & a) * (~a & d) | d) * ((a & d) * (a | d) + (~d & a) * (~a & d) & d) | (a + d * -2 + ~(d * 2) | a * -2) - 2) + (~(d * 2) | a * 2 + 2 + ~a + d * 2 & ~(~(a & d) * (a | d) + (~d & a) * (~a & d) & d) * (~d & (a & d) * (a | d) + (~d & a) * (~a & d)) + ((a & d) * (a | d) + (~d & a) * (~a & d) | d) * ((a & d) * (a | d) + (~d & a) * (~a & d) & d)) * ((~(a & d) * (a | d) + (~d & a) * (~a & d) & d) * (~d & (a & d) * (a | d) + (~d & a) * (~a & d)) + ((a & d) * (a | d) + (~d & a) * (~a & d) | d) * ((a & d) * (a | d) + (~d & a) * (~a & d) & d) & (a + d * -2 + ~(d * 2) | a * -2) - 2))",
                    "attributes": {
                        "numOps": 230,
                        "nestedExprLevel": 58,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 76.60223804679552,
                        "opsPercentages": {
                            "arithmetic": 16.956521739130434,
                            "mul": 23.47826086956522,
                            "bitwise": 59.56521739130435
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                }
            }
        },
        {
            "num": 284,
            "gt": {
                "expr": "((((c&a)-a)*(-(a|(a^(a+c))))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 14.285714285714285,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "(((((((~ c | a) + c) + 1) & ~ a) + ((((~ c | a) + c) + 1) & ~ a)) - ((((~ c | a) + c) + 1) ^ a)) & ~ (((a & ~ (((a - ((a | c) + (a & c))) - ((a | ~ ((a | c) + (a & c))) << 1)) - 2)) + (((a - ((a | c) + (a & c))) - ((a | ~ ((a | c) + (a & c))) << 1)) - 2)) - 1)) * (((((((~ c | a) + c) + 1) & ~ a) + ((((~ c | a) + c) + 1) & ~ a)) - ((((~ c | a) + c) + 1) ^ a)) | ~ (((a & ~ (((a - ((a | c) + (a & c))) - ((a | ~ ((a | c) + (a & c))) << 1)) - 2)) + (((a - ((a | c) + (a & c))) - ((a | ~ ((a | c) + (a & c))) << 1)) - 2)) - 1)) + (((((((~ c | a) + c) + 1) & ~ a) + ((((~ c | a) + c) + 1) & ~ a)) - ((((~ c | a) + c) + 1) ^ a)) & ~ (~ (((a & ~ (((a - ((a | c) + (a & c))) - ((a | ~ ((a | c) + (a & c))) << 1)) - 2)) + (((a - ((a | c) + (a & c))) - ((a | ~ ((a | c) + (a & c))) << 1)) - 2)) - 1))) * (~ ((((((~ c | a) + c) + 1) & ~ a) + ((((~ c | a) + c) + 1) & ~ a)) - ((((~ c | a) + c) + 1) ^ a)) & ~ (((a & ~ (((a - ((a | c) + (a & c))) - ((a | ~ ((a | c) + (a & c))) << 1)) - 2)) + (((a - ((a | c) + (a & c))) - ((a | ~ ((a | c) + (a & c))) << 1)) - 2)) - 1))",
                "attributes": {
                    "numOps": 201,
                    "nestedExprLevel": 134,
                    "numDAGs": 32,
                    "opsPercentages": {
                        "arithmetic": 40.298507462686565,
                        "mul": 0.9950248756218906,
                        "bitwise": 58.70646766169154
                    },
                    "percentageDAGsCancel": 9.375
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-(((~(c + a) | a) * -2 - c) + -2 + ((~(c + a) | a) * 2 + c + 1 & a)) & ~((~a & c + (~c | a) + 1) * 2) + (c + (~c | a) + 1 ^ a)) * ((~a & c + (~c | a) + 1) * 2 - (c + (~c | a) + 1 ^ a) & (((~(c + a) | a) * -2 - c) + ((~(c + a) | a) * 2 + c + 1 & a)) - 3) + ((~a & c + (~c | a) + 1) * 2 - (c + (~c | a) + 1 ^ a) & -(((~(c + a) | a) * -2 - c) + -2 + ((~(c + a) | a) * 2 + c + 1 & a))) * (-(((~(c + a) | a) * -2 - c) + -2 + ((~(c + a) | a) * 2 + c + 1 & a)) | (~a & c + (~c | a) + 1) * 2 - (c + (~c | a) + 1 ^ a))",
                    "attributes": {
                        "numOps": 126,
                        "nestedExprLevel": 35,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 37.3134328358209,
                        "opsPercentages": {
                            "arithmetic": 46.82539682539682,
                            "mul": 11.11111111111111,
                            "bitwise": 42.06349206349206
                        },
                        "percentageDAGsCancel": 6.0606060606060606
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~a & (~c | a) + c + 1) * 2 - ((~c | a) + c + 1 ^ a) & ~a + -3 + (((((~(a & c + a | c) | a * 2 - a) + 1 + a & c + a | c & a) + ~(a & c + a | c) | a * -2) - a & c) - a | c)) * ((~a & (~c | a) + c + 1) * 2 - ((~c | a) + c + 1 ^ a) & a + -3 + (((((~(a & c + a | c) | a * 2 - a) + 1 + a & c + a | c & a) + ~(a & c + a | c) | a * -2) - a & c) - a | c)) + ((~a & (~c | a) + c + 1) * 2 - ((~c | a) + c + 1 ^ a) | ~a + -3 + (((((~(a & c + a | c) | a * 2 - a) + 1 + a & c + a | c & a) + ~(a & c + a | c) | a * -2) - a & c) - a | c)) * ((~a & (~c | a) + c + 1) * 2 - ((~c | a) + c + 1 ^ a) & ~a + -3 + (((((~(a & c + a | c) | a * 2 - a) + 1 + a & c + a | c & a) + ~(a & c + a | c) | a * -2) - a & c) - a | c))",
                    "attributes": {
                        "numOps": 175,
                        "nestedExprLevel": 37,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 12.935323383084576,
                        "opsPercentages": {
                            "arithmetic": 41.714285714285715,
                            "mul": 8.0,
                            "bitwise": 50.28571428571429
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_O3": {
                    "expr": "(~(~a & c + (~c | a) + 1) * 2 - (c + (~c | a) + 1 ^ a) & 2 - (c + ~(c + a) | a * 2 + 1 & a) - (c + ~(c + a) | a * 2)) * ((c + ~(c + a) | a * 2 + 1 & a) - (c + ~(c + a) | a * 2) - 3 & (~a & c + (~c | a) + 1) * 2 - (c + (~c | a) + 1 ^ a)) + ((~a & c + (~c | a) + 1) * 2 - (c + (~c | a) + 1 ^ a) | 2 - (c + ~(c + a) | a * 2 + 1 & a) - (c + ~(c + a) | a * 2)) * ((~a & c + (~c | a) + 1) * 2 - (c + (~c | a) + 1 ^ a) & 2 - (c + ~(c + a) | a * 2 + 1 & a) - (c + ~(c + a) | a * 2))",
                    "attributes": {
                        "numOps": 116,
                        "nestedExprLevel": 22,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 42.28855721393035,
                        "opsPercentages": {
                            "arithmetic": 42.241379310344826,
                            "mul": 12.068965517241379,
                            "bitwise": 45.689655172413794
                        },
                        "percentageDAGsCancel": 12.903225806451612
                    }
                },
                "clang_default": {
                    "expr": "((((c ^ 0xffffffff | a) + c + 1 & (a ^ 0xffffffff)) + ((c ^ 0xffffffff | a) + c + 1 & (a ^ 0xffffffff))) - ((c ^ 0xffffffff | a) + c + 1 ^ a) & (((a & (((a - ((a | c) + (a & c))) + (a | (a | c) + (a & c) ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) + (a - ((a | c) + (a & c))) + (a | (a | c) + (a & c) ^ 0xffffffff) * -2) - 3 ^ 0xffffffff)) * ((((c ^ 0xffffffff | a) + c + 1 & (a ^ 0xffffffff)) + ((c ^ 0xffffffff | a) + c + 1 & (a ^ 0xffffffff))) - ((c ^ 0xffffffff | a) + c + 1 ^ a) | ((a & (((a - ((a | c) + (a & c))) + (a | (a | c) + (a & c) ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) + (a - ((a | c) + (a & c))) + (a | (a | c) + (a & c) ^ 0xffffffff) * -2) - 3 ^ 0xffffffff) + ((((c ^ 0xffffffff | a) + c + 1 & (a ^ 0xffffffff)) + ((c ^ 0xffffffff | a) + c + 1 & (a ^ 0xffffffff))) - ((c ^ 0xffffffff | a) + c + 1 ^ a) & ((a & (((a - ((a | c) + (a & c))) + (a | (a | c) + (a & c) ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) + (a - ((a | c) + (a & c))) + (a | (a | c) + (a & c) ^ 0xffffffff) * -2) - 3) * (((((c ^ 0xffffffff | a) + c + 1 & (a ^ 0xffffffff)) + ((c ^ 0xffffffff | a) + c + 1 & (a ^ 0xffffffff))) - ((c ^ 0xffffffff | a) + c + 1 ^ a) ^ 0xffffffff) & (((a & (((a - ((a | c) + (a & c))) + (a | (a | c) + (a & c) ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) + (a - ((a | c) + (a & c))) + (a | (a | c) + (a & c) ^ 0xffffffff) * -2) - 3 ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 203,
                        "nestedExprLevel": 88,
                        "numDAGs": 33,
                        "percentDecreaseByOps": -0.9950248756218906,
                        "opsPercentages": {
                            "arithmetic": 41.87192118226601,
                            "mul": 4.926108374384237,
                            "bitwise": 53.20197044334976
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_default": {
                    "expr": "((((~c | a) + 1 + c & ~a) + ((~c | a) + 1 + c & ~a)) - ((~c | a) + 1 + c ^ a) & ~(((~(((a - ((a | c) + (a & c))) + (~((a | c) + (a & c)) | a) * -2) - 2) & a) - 3) + (a - ((a | c) + (a & c))) + (~((a | c) + (a & c)) | a) * -2)) * ((((~c | a) + 1 + c & ~a) + ((~c | a) + 1 + c & ~a)) - ((~c | a) + 1 + c ^ a) | ~(((~(((a - ((a | c) + (a & c))) + (~((a | c) + (a & c)) | a) * -2) - 2) & a) - 3) + (a - ((a | c) + (a & c))) + (~((a | c) + (a & c)) | a) * -2)) + ((((~c | a) + 1 + c & ~a) + ((~c | a) + 1 + c & ~a)) - ((~c | a) + 1 + c ^ a) & ((~(((a - ((a | c) + (a & c))) + (~((a | c) + (a & c)) | a) * -2) - 2) & a) - 3) + (a - ((a | c) + (a & c))) + (~((a | c) + (a & c)) | a) * -2) * (~((((~c | a) + 1 + c & ~a) + ((~c | a) + 1 + c & ~a)) - ((~c | a) + 1 + c ^ a)) & ~(((~(((a - ((a | c) + (a & c))) + (~((a | c) + (a & c)) | a) * -2) - 2) & a) - 3) + (a - ((a | c) + (a & c))) + (~((a | c) + (a & c)) | a) * -2))",
                    "attributes": {
                        "numOps": 203,
                        "nestedExprLevel": 89,
                        "numDAGs": 33,
                        "percentDecreaseByOps": -0.9950248756218906,
                        "opsPercentages": {
                            "arithmetic": 41.87192118226601,
                            "mul": 4.926108374384237,
                            "bitwise": 53.20197044334976
                        },
                        "percentageDAGsCancel": 15.151515151515152
                    }
                },
                "gcc_O3": {
                    "expr": "(~(~a & c + 1 + (~c | a)) * 2 + c + 1 + (~c | a) ^ a & -((~(c + a) | a * 2 + 1 + c & a) - 2) + (~(c + a) | a * -2 - c)) * (((~(c + a) | a * 2 + 1 + c & a) - 2) + (~(c + a) | a * -2 - c) - 1 & (~a & c + 1 + (~c | a)) * 2 - c + 1 + (~c | a) ^ a) + ((~a & c + 1 + (~c | a)) * 2 - c + 1 + (~c | a) ^ a & -((~(c + a) | a * 2 + 1 + c & a) - 2) + (~(c + a) | a * -2 - c)) * ((~a & c + 1 + (~c | a)) * 2 - c + 1 + (~c | a) ^ a | -((~(c + a) | a * 2 + 1 + c & a) - 2) + (~(c + a) | a * -2 - c))",
                    "attributes": {
                        "numOps": 124,
                        "nestedExprLevel": 26,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 38.308457711442784,
                        "opsPercentages": {
                            "arithmetic": 45.96774193548387,
                            "mul": 11.29032258064516,
                            "bitwise": 42.74193548387097
                        },
                        "percentageDAGsCancel": 4.878048780487805
                    }
                }
            }
        },
        {
            "num": 285,
            "gt": {
                "expr": "((~((d&a)^(a^c))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 0.0,
                        "bitwise": 100.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((~ d | a) - ~ d) & (((a - c) - ((a | ~ c) + (a | ~ c))) - 2)) + ~ (((~ d | a) - ~ d) | (((a - c) - ((a | ~ c) + (a | ~ c))) - 2))",
                "attributes": {
                    "numOps": 28,
                    "nestedExprLevel": 13,
                    "numDAGs": 13,
                    "opsPercentages": {
                        "arithmetic": 39.285714285714285,
                        "mul": 0.0,
                        "bitwise": 60.71428571428571
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((a - c) + (~c | a) * -2) - 2 | a & d) + (a & d & ((a - c) + (~c | a) * -2) - 2)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 7,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 28.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 45.0,
                            "mul": 10.0,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(d + 1 + (~d | a) | (a - ((~c | a) * 2 + 2)) - c) + (d + 1 + (~d | a) & (a - ((~c | a) * 2 + 2)) - c)",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 8,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 14.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 45.83333333333333,
                            "mul": 8.333333333333332,
                            "bitwise": 45.83333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~(((a - c) + (~c | a) * -2) - 2 | d & a) + (((a - c) + (~c | a) * -2) - 2 & d & a)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 7,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 28.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 45.0,
                            "mul": 10.0,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((d ^ 0xffffffff | a) - (d ^ 0xffffffff) & ((a - c) - ((a | c ^ 0xffffffff) + (a | c ^ 0xffffffff))) - 2 ) + (((d ^ 0xffffffff | a) - (d ^ 0xffffffff) | ((a - c) - ((a | c ^ 0xffffffff) + (a | c ^ 0xffffffff)) ) - 2) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 12,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 39.285714285714285,
                            "mul": 0.0,
                            "bitwise": 60.71428571428571
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~d | a) - ~d & ((a - c) - ((~c | a) + (~c | a))) - 2) + ~((~d | a) - ~d | ((a - c) - ((~c | a) + (~c | a))) - 2)",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 9,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 39.285714285714285,
                            "mul": 0.0,
                            "bitwise": 60.71428571428571
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(d & a | ((a - c) + (~c | a) * -2) - 2) + (d & a & ((a - c) + (~c | a) * -2) - 2)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 7,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 28.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 45.0,
                            "mul": 10.0,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 286,
            "gt": {
                "expr": "((((c+c)&(d&d))+((((~d)&(d^c))&c)|(c|d))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((((~ ((c - ~ c) - 1) | ((~ d | d) - ~ d)) + ((c - ~ c) - 1)) + 1) ^ ~ ((((~ ((~ (- d - 1) | (((d - c) - ((d | ~ c) + (d | ~ c))) - 2)) - ~ (- d - 1)) | c) - ~ ((~ (- d - 1) | (((d - c) - ((d | ~ c) + (d | ~ c))) - 2)) - ~ (- d - 1))) & ~ ((c & ~ d) + d)) + ((c & ~ d) + d))) + (((((~ ((c - ~ c) - 1) | ((~ d | d) - ~ d)) + ((c - ~ c) - 1)) + 1) | ((((~ ((~ (- d - 1) | (((d - c) - ((d | ~ c) + (d | ~ c))) - 2)) - ~ (- d - 1)) | c) - ~ ((~ (- d - 1) | (((d - c) - ((d | ~ c) + (d | ~ c))) - 2)) - ~ (- d - 1))) & ~ ((c & ~ d) + d)) + ((c & ~ d) + d))) + ((((~ ((c - ~ c) - 1) | ((~ d | d) - ~ d)) + ((c - ~ c) - 1)) + 1) | ((((~ ((~ (- d - 1) | (((d - c) - ((d | ~ c) + (d | ~ c))) - 2)) - ~ (- d - 1)) | c) - ~ ((~ (- d - 1) | (((d - c) - ((d | ~ c) + (d | ~ c))) - 2)) - ~ (- d - 1))) & ~ ((c & ~ d) + d)) + ((c & ~ d) + d))))) + 1",
                "attributes": {
                    "numOps": 184,
                    "nestedExprLevel": 79,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 48.91304347826087,
                        "mul": 0.0,
                        "bitwise": 51.08695652173913
                    },
                    "percentageDAGsCancel": 11.76470588235294
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(d + (~d & c) + (~((~c | d) * 2 + ~d + c + 2 | d) & c & ~(d + (~d & c))) | (c - ~c) + (~c * 2 + 1 | d)) * 2 + ((~((~c | d) * 2 + ~d + c + 2 | d) & c & ~(d + (~d & c))) + d + (~d & c) ^ -((~c * 2 + 1 | d) + (c - ~c) + -1) - 2) + 1",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 13,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 66.84782608695652,
                        "opsPercentages": {
                            "arithmetic": 39.34426229508197,
                            "mul": 8.19672131147541,
                            "bitwise": 52.459016393442624
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~d & c) + ((d - ((~c | d) * 2 + 2)) - c | d + ((~((d - ((~c | d) * 2 + 2)) - c | d - d) | c) - d) + 1 & ~((~d & c) + d)) + d ^ c * 2 + 1 + (~(c * 2) | d)) + (c * 2 + 1 + (~(c * 2) | d) | (~d & c) + ((d - ((~c | d) * 2 + 2)) - c | d + ((~((d - ((~c | d) * 2 + 2)) - c | d - d) | c) - d) + 1 & ~((~d & c) + d)) + d) * 2 + 1",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 25,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 58.69565217391305,
                        "opsPercentages": {
                            "arithmetic": 42.10526315789473,
                            "mul": 11.842105263157894,
                            "bitwise": 46.05263157894737
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "clang_O3": {
                    "expr": "((~((c - d) + (~c | d) * 2 + 1 | d | (~d & c) + d) & c) + (~d & c) + d | (~(c * 2) | d) + c * 2 + 1) * 2 - ((~((c - d) + (~c | d) * 2 + 1 | d | (~d & c) + d) & c) + (~d & c) + d ^ (~(c * 2) | d) + c * 2 + 1)",
                    "attributes": {
                        "numOps": 50,
                        "nestedExprLevel": 14,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 72.82608695652173,
                        "opsPercentages": {
                            "arithmetic": 34.0,
                            "mul": 14.000000000000002,
                            "bitwise": 52.0
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_default": {
                    "expr": "(((c - (c ^ 0xffffffff)) - 1 ^ 0xffffffff | (d ^ 0xffffffff | d) - (d ^ 0xffffffff)) + (c - (c ^ 0xffffffff)) ^ (((0xffffffff - d ^ 0xffffffff | ((d - c) - ((d | c ^ 0xffffffff) + (d | c ^ 0xffffffff)) ) - 2) - (0xffffffff - d ^ 0xffffffff) ^ 0xffffffff | c) - ((0xffffffff - d ^ 0xffffffff | ((d - c) - ((d | c ^ 0xffffffff) + (d | c ^ 0xffffffff)) ) - 2) - (0xffffffff - d ^ 0xffffffff) ^ 0xffffffff) & ((c & (d ^ 0xffffffff)) + d ^ 0xffffffff)) + (c & (d ^ 0xffffffff)) + d ^ 0xffffffff) + (((c - (c ^ 0xffffffff)) - 1 ^ 0xffffffff | (d ^ 0xffffffff | d) - (d ^ 0xffffffff)) + (c - (c ^ 0xffffffff)) | (((0xffffffff - d ^ 0xffffffff | ((d - c) - ((d | c ^ 0xffffffff) + (d | c ^ 0xffffffff)) ) - 2) - (0xffffffff - d ^ 0xffffffff) ^ 0xffffffff | c) - ((0xffffffff - d ^ 0xffffffff | ((d - c) - ((d | c ^ 0xffffffff) + (d | c ^ 0xffffffff)) ) - 2) - (0xffffffff - d ^ 0xffffffff) ^ 0xffffffff) & ((c & (d ^ 0xffffffff)) + d ^ 0xffffffff)) + (c & (d ^ 0xffffffff)) + d) + (((c - (c ^ 0xffffffff)) - 1 ^ 0xffffffff | (d ^ 0xffffffff | d) - (d ^ 0xffffffff)) + (c - (c ^ 0xffffffff)) | (((0xffffffff - d ^ 0xffffffff | ((d - c) - ((d | c ^ 0xffffffff) + (d | c ^ 0xffffffff)) ) - 2) - (0xffffffff - d ^ 0xffffffff) ^ 0xffffffff | c) - ((0xffffffff - d ^ 0xffffffff | ((d - c) - ((d | c ^ 0xffffffff) + (d | c ^ 0xffffffff)) ) - 2) - (0xffffffff - d ^ 0xffffffff) ^ 0xffffffff) & ((c & (d ^ 0xffffffff)) + d ^ 0xffffffff)) + (c & (d ^ 0xffffffff)) + d) + 1",
                    "attributes": {
                        "numOps": 166,
                        "nestedExprLevel": 59,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 9.782608695652174,
                        "opsPercentages": {
                            "arithmetic": 43.373493975903614,
                            "mul": 0.0,
                            "bitwise": 56.62650602409639
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_default": {
                    "expr": "((~((c - ~c) - 1) | -~d - 1) + (c - ~c) ^ ~((~d & c) + ((~((~(0xffffffff - d) | ((d - c) - ((~c | d) + (~c | d))) - 2) - ~(0xffffffff - d)) | c) - ~((~(0xffffffff - d) | ((d - c) - ((~c | d) + (~c | d))) - 2) - ~(0xffffffff - d)) & ~((~d & c) + d)) + d)) + 1 + ((~((c - ~c) - 1) | -~d - 1) + (c - ~c) | (~d & c) + ((~((~(0xffffffff - d) | ((d - c) - ((~c | d) + (~c | d))) - 2) - ~(0xffffffff - d)) | c) - ~((~(0xffffffff - d) | ((d - c) - ((~c | d) + (~c | d))) - 2) - ~(0xffffffff - d)) & ~((~d & c) + d)) + d) + ((~((c - ~c) - 1) | -~d - 1) + (c - ~c) | (~d & c) + ((~((~(0xffffffff - d) | ((d - c) - ((~c | d) + (~c | d))) - 2) - ~(0xffffffff - d)) | c) - ~((~(0xffffffff - d) | ((d - c) - ((~c | d) + (~c | d))) - 2) - ~(0xffffffff - d)) & ~((~d & c) + d)) + d)",
                    "attributes": {
                        "numOps": 163,
                        "nestedExprLevel": 54,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 11.41304347826087,
                        "opsPercentages": {
                            "arithmetic": 46.012269938650306,
                            "mul": 0.0,
                            "bitwise": 53.987730061349694
                        },
                        "percentageDAGsCancel": 6.0606060606060606
                    }
                },
                "gcc_O3": {
                    "expr": "(~(c - ~c) - d ^ (~(~d + c + 2 + (~c | d) * 2 | d) & ~(~d & c) + d & c) + (~d & c) + d) + 1 + (d + (c - ~c) | (~(~d + c + 2 + (~c | d) * 2 | d) & ~(~d & c) + d & c) + (~d & c) + d) * 2",
                    "attributes": {
                        "numOps": 50,
                        "nestedExprLevel": 10,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 72.82608695652173,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 6.0,
                            "bitwise": 57.99999999999999
                        },
                        "percentageDAGsCancel": 8.0
                    }
                }
            }
        },
        {
            "num": 287,
            "gt": {
                "expr": "((-(((-c)-a)+(-c))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 100.0,
                        "mul": 0.0,
                        "bitwise": 0.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ ((((((((~ c + 1) & ~ a) << 1) - ((~ c + 1) ^ a)) | ~ (c - 1)) + (((((~ c + 1) & ~ a) << 1) - ((~ c + 1) ^ a)) | ~ (c - 1))) - (((((~ c + 1) & ~ a) << 1) - ((~ c + 1) ^ a)) ^ ~ (c - 1))) - 1)",
                "attributes": {
                    "numOps": 40,
                    "nestedExprLevel": 22,
                    "numDAGs": 15,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 0.0,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-c ^ (~a & -c) * 2 - (-c ^ a)) + ~((-c | (~a & -c) * 2 - (-c ^ a)) * 2) + 1",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 45.0,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 13.636363636363635,
                            "bitwise": 40.909090909090914
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~c * 2 + 2 & ~a * 2) - (~c + 1 ^ a) ^ ~(c - 1)) + ((~c * 2 + 2 & ~a * 2) - (~c + 1 ^ a) | ~(c - 1)) * -2",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 6,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 27.500000000000004,
                        "opsPercentages": {
                            "arithmetic": 34.48275862068966,
                            "mul": 17.24137931034483,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((~a & -c) * 2 - (-c ^ a) ^ -c) + ((~a & -c) * 2 - (-c ^ a) | -c) * -2",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 47.5,
                        "opsPercentages": {
                            "arithmetic": 47.61904761904761,
                            "mul": 14.285714285714285,
                            "bitwise": 38.095238095238095
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((((c ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * 2 - ((c ^ 0xffffffff) + 1 ^ a) | c - 1 ^ 0xffffffff) + (((c ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * 2 - ((c ^ 0xffffffff) + 1 ^ a) | c - 1 ^ 0xffffffff)) - (((c ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * 2 - ((c ^ 0xffffffff) + 1 ^ a) ^ c - 1 ^ 0xffffffff)) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 16,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 7.5,
                            "bitwise": 55.00000000000001
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~(((((~c + 1 & ~a) * 2 - (~c + 1 ^ a) | ~(c - 1)) + ((~c + 1 & ~a) * 2 - (~c + 1 ^ a) | ~(c - 1))) - ((~c + 1 & ~a) * 2 - (~c + 1 ^ a) ^ ~(c - 1))) - 1)",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 11,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 7.5,
                            "bitwise": 55.00000000000001
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(-c ^ (~a & -c) * 2 - (a ^ -c)) + (-c | (~a & -c) * 2 - (a ^ -c)) * -2",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 47.5,
                        "opsPercentages": {
                            "arithmetic": 47.61904761904761,
                            "mul": 14.285714285714285,
                            "bitwise": 38.095238095238095
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 288,
            "gt": {
                "expr": "((((e-e)+(e*c))*(a-a)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 40.0,
                        "bitwise": 0.0
                    },
                    "percentageDAGsCancel": 60.0
                }
            },
            "mba": {
                "expr": "((((((e + ~ e) + 1) ^ ~ ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) + ((((e + ~ e) + 1) | ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) + (((e + ~ e) + 1) | ((e & c) * (e | c) + (e & ~ c) * (~ e & c))))) + 1) & ((a & ~ a) - (~ a & a))) * ((((((e + ~ e) + 1) ^ ~ ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) + ((((e + ~ e) + 1) | ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) + (((e + ~ e) + 1) | ((e & c) * (e | c) + (e & ~ c) * (~ e & c))))) + 1) | ((a & ~ a) - (~ a & a))) + ((((((e + ~ e) + 1) ^ ~ ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) + ((((e + ~ e) + 1) | ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) + (((e + ~ e) + 1) | ((e & c) * (e | c) + (e & ~ c) * (~ e & c))))) + 1) & ~ ((a & ~ a) - (~ a & a))) * (~ (((((e + ~ e) + 1) ^ ~ ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) + ((((e + ~ e) + 1) | ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) + (((e + ~ e) + 1) | ((e & c) * (e | c) + (e & ~ c) * (~ e & c))))) + 1) & ((a & ~ a) - (~ a & a)))",
                "attributes": {
                    "numOps": 201,
                    "nestedExprLevel": 85,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 26.368159203980102,
                        "mul": 12.935323383084576,
                        "bitwise": 60.69651741293532
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e + (e ^ 0xffffffff) + 1 ^ (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) ^ 0xffffffff) + (e + (e ^ 0xffffffff) + 1 | (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) + (e + (e ^ 0xffffffff) + 1 | (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) + 1 & (a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) * ((e + (e ^ 0xffffffff) + 1 ^ (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) ^ 0xffffffff) + (e + (e ^ 0xffffffff) + 1 | (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) + (e + (e ^ 0xffffffff) + 1 | (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) + 1 | (a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a)) + ((e + (e ^ 0xffffffff) + 1 ^ (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) ^ 0xffffffff) + (e + (e ^ 0xffffffff) + 1 | (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) + (e + (e ^ 0xffffffff) + 1 | (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) + 1 & ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) ^ 0xffffffff)) * (((e + (e ^ 0xffffffff) + 1 ^ (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) ^ 0xffffffff) + (e + (e ^ 0xffffffff) + 1 | (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) + (e + (e ^ 0xffffffff) + 1 | (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) + 1 ^ 0xffffffff) & (a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a))",
                    "attributes": {
                        "numOps": 201,
                        "nestedExprLevel": 64,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 26.368159203980102,
                            "mul": 12.935323383084576,
                            "bitwise": 60.69651741293532
                        },
                        "percentageDAGsCancel": 36.666666666666664
                    }
                },
                "msvc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 289,
            "gt": {
                "expr": "((((~(-b))^(~(b^e)))*((-b)^(-e))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 11.11111111111111,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((b - 1) | ((b & e) + ~ (b | e))) - ((b - 1) & ((b & e) + ~ (b | e)))) & (((~ (b - 1) - ~ (e - 1)) - ((~ (b - 1) | ~ (~ (e - 1))) + (~ (b - 1) | ~ (~ (e - 1))))) - 2)) * ((((b - 1) | ((b & e) + ~ (b | e))) - ((b - 1) & ((b & e) + ~ (b | e)))) | (((~ (b - 1) - ~ (e - 1)) - ((~ (b - 1) | ~ (~ (e - 1))) + (~ (b - 1) | ~ (~ (e - 1))))) - 2)) + ((((b - 1) | ((b & e) + ~ (b | e))) - ((b - 1) & ((b & e) + ~ (b | e)))) & ~ (((~ (b - 1) - ~ (e - 1)) - ((~ (b - 1) | ~ (~ (e - 1))) + (~ (b - 1) | ~ (~ (e - 1))))) - 2)) * (~ (((b - 1) | ((b & e) + ~ (b | e))) - ((b - 1) & ((b & e) + ~ (b | e)))) & (((~ (b - 1) - ~ (e - 1)) - ((~ (b - 1) | ~ (~ (e - 1))) + (~ (b - 1) | ~ (~ (e - 1))))) - 2))",
                "attributes": {
                    "numOps": 141,
                    "nestedExprLevel": 70,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 43.262411347517734,
                        "mul": 1.4184397163120568,
                        "bitwise": 55.319148936170215
                    },
                    "percentageDAGsCancel": 7.6923076923076925
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((e - b) + (e - 1 | -b) * -2) - 2 & (-b ^ ~(b | e) + (b & e))) * ((b - 1 ^ ~(b | e) + (b & e)) & (e - 1 | -b) * 2 + ~e + b + 2) + ((b - 1 ^ ~(b | e) + (b & e)) & ((e - b) + (e - 1 | -b) * -2) - 2) * (((e - b) + (e - 1 | -b) * -2) - 2 | b - 1 ^ ~(b | e) + (b & e))",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 18,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 55.319148936170215,
                        "opsPercentages": {
                            "arithmetic": 50.79365079365079,
                            "mul": 9.523809523809524,
                            "bitwise": 39.682539682539684
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "msvc_O1": {
                    "expr": "(~(b - 1 | ~(b | e) + (b & e)) - (b - 1 & ~(b | e) + (b & e)) & (~b - 1 - ((e - 1 | ~b - 1) * 2 + 2)) + e) * (~(~b - 1 - ((e - 1 | ~b - 1) * 2 + 2)) + e & (b - 1 | ~(b | e) + (b & e)) - (b - 1 & ~(b | e) + (b & e))) + ((~b - 1 - ((e - 1 | ~b - 1) * 2 + 2)) + e | (b - 1 | ~(b | e) + (b & e)) - (b - 1 & ~(b | e) + (b & e))) * ((~b - 1 - ((e - 1 | ~b - 1) * 2 + 2)) + e & (b - 1 | ~(b | e) + (b & e)) - (b - 1 & ~(b | e) + (b & e)))",
                    "attributes": {
                        "numOps": 101,
                        "nestedExprLevel": 29,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 28.368794326241137,
                        "opsPercentages": {
                            "arithmetic": 44.554455445544555,
                            "mul": 5.9405940594059405,
                            "bitwise": 49.504950495049506
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "clang_O3": {
                    "expr": "(~~(e | b) + (e & b) ^ b - 1 & (e - b) + (e - 1 | -b) * -2 - 2) * (1 - (e - b) + (e - 1 | -b) * -2 & ~(e | b) + (e & b) ^ b - 1) + ((e - b) + (e - 1 | -b) * -2 - 2 | ~(e | b) + (e & b) ^ b - 1) * ((e - b) + (e - 1 | -b) * -2 - 2 & ~(e | b) + (e & b) ^ b - 1)",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 13,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 54.60992907801418,
                        "opsPercentages": {
                            "arithmetic": 51.5625,
                            "mul": 9.375,
                            "bitwise": 39.0625
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "clang_default": {
                    "expr": "((b - 1 | (b & e) + ((b | e) ^ 0xffffffff)) - (b - 1 & (b & e) + ((b | e) ^ 0xffffffff)) & (((b - 1 ^ 0xffffffff) - (e - 1 ^ 0xffffffff)) - ((b - 1 ^ 0xffffffff | e - 1) + (b - 1 ^ 0xffffffff | e - 1))) - 2) * ((b - 1 | (b & e) + ((b | e) ^ 0xffffffff)) - (b - 1 & (b & e) + ((b | e) ^ 0xffffffff)) | (((b - 1 ^ 0xffffffff) - (e - 1 ^ 0xffffffff)) - ((b - 1 ^ 0xffffffff | e - 1) + (b - 1 ^ 0xffffffff | e - 1))) - 2) + ((b - 1 | (b & e) + ((b | e) ^ 0xffffffff)) - (b - 1 & (b & e) + ((b | e) ^ 0xffffffff)) & ((((b - 1 ^ 0xffffffff) - (e - 1 ^ 0xffffffff)) - ((b - 1 ^ 0xffffffff | e - 1) + (b - 1 ^ 0xffffffff | e - 1))) - 2 ^ 0xffffffff)) * (((b - 1 | (b & e) + ((b | e) ^ 0xffffffff)) - (b - 1 & (b & e) + ((b | e) ^ 0xffffffff)) ^ 0xffffffff) & (((b - 1 ^ 0xffffffff) - (e - 1 ^ 0xffffffff)) - ((b - 1 ^ 0xffffffff | e - 1) + (b - 1 ^ 0xffffffff | e - 1))) - 2)",
                    "attributes": {
                        "numOps": 125,
                        "nestedExprLevel": 43,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 11.347517730496454,
                        "opsPercentages": {
                            "arithmetic": 48.8,
                            "mul": 1.6,
                            "bitwise": 49.6
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((b - 1 | (b & e) + ~(b | e)) - (b - 1 & (b & e) + ~(b | e)) & ((~(b - 1) - ~(e - 1)) - ((~(b - 1) | e - 1) + (~(b - 1) | e - 1))) - 2) * ((b - 1 | (b & e) + ~(b | e)) - (b - 1 & (b & e) + ~(b | e)) | ((~(b - 1) - ~(e - 1)) - ((~(b - 1) | e - 1) + (~(b - 1) | e - 1))) - 2) + ((b - 1 | (b & e) + ~(b | e)) - (b - 1 & (b & e) + ~(b | e)) & ~(((~(b - 1) - ~(e - 1)) - ((~(b - 1) | e - 1) + (~(b - 1) | e - 1))) - 2)) * (~((b - 1 | (b & e) + ~(b | e)) - (b - 1 & (b & e) + ~(b | e))) & ((~(b - 1) - ~(e - 1)) - ((~(b - 1) | e - 1) + (~(b - 1) | e - 1))) - 2)",
                    "attributes": {
                        "numOps": 125,
                        "nestedExprLevel": 48,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 11.347517730496454,
                        "opsPercentages": {
                            "arithmetic": 48.8,
                            "mul": 1.6,
                            "bitwise": 49.6
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(e - 1 | -b * 2 + 2 + b + ~e & b - 1 ^ ~(b | e) + (b & e)) * ((~(b | e) + (b & e) ^ -b) & ((e - b) + e - 1 | -b * -2) - 2) + (b - 1 ^ ~(b | e) + (b & e) & ((e - b) + e - 1 | -b * -2) - 2) * (b - 1 ^ ~(b | e) + (b & e) | ((e - b) + e - 1 | -b * -2) - 2)",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 14,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 55.319148936170215,
                        "opsPercentages": {
                            "arithmetic": 50.79365079365079,
                            "mul": 9.523809523809524,
                            "bitwise": 39.682539682539684
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 290,
            "gt": {
                "expr": "(((a^b)^((~a)-(-b))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 5,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((a - b) - ((a | ~ b) + (a | ~ b))) - 2) - (((- a - 1) & ~ (~ (b - 1))) - (~ (- a - 1) & ~ (b - 1)))) - (((((a - b) - ((a | ~ b) + (a | ~ b))) - 2) | ~ (((- a - 1) & ~ (~ (b - 1))) - (~ (- a - 1) & ~ (b - 1)))) << 1)) - 2",
                "attributes": {
                    "numOps": 48,
                    "nestedExprLevel": 23,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 52.083333333333336,
                        "mul": 0.0,
                        "bitwise": 47.91666666666667
                    },
                    "percentageDAGsCancel": 4.761904761904762
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((a - b) + (~b | a) * -2) - ((~a & b - 1) - (-b & a))) + (a - b | ((a - b) + (~b | a) * -2) - 2) * -2 + -4",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 9,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 43.75,
                        "opsPercentages": {
                            "arithmetic": 59.25925925925925,
                            "mul": 11.11111111111111,
                            "bitwise": 29.629629629629626
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "a + -4 + ((((~(~a | b - 1) - (((a + (~b | a) * -2) - b) * 2 - 4 | ~(~a & b - 1 - ~(~a | b - 1)) * 2)) + (~b | a) * -2) - ~a & b - 1) - b)",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 10,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 22.916666666666664,
                        "opsPercentages": {
                            "arithmetic": 45.94594594594595,
                            "mul": 10.81081081081081,
                            "bitwise": 43.24324324324324
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(((a - b) + (~b | a) * -2) - 2 - (b - 1 & ~a) - (-b & a)) + (~(b - 1 & ~a) - (-b & a) | ((a - b) + (~b | a) * -2) - 2) * -2 + -2",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 9,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 29.166666666666668,
                        "opsPercentages": {
                            "arithmetic": 55.88235294117647,
                            "mul": 8.823529411764707,
                            "bitwise": 35.294117647058826
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - ((0xffffffff - a & b - 1) - ((0xffffffff - a ^ 0xffffffff) & (b - 1 ^ 0xffffffff)))) + (((a - b) - ((a | b ^ 0xffffffff) + (a | b ^ 0xffffffff))) - 2 | (0xffffffff - a & b - 1) - ((0xffffffff - a ^ 0xffffffff) & (b - 1 ^ 0xffffffff)) ^ 0xffffffff) * -2 + -4",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 14,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 14.583333333333334,
                        "opsPercentages": {
                            "arithmetic": 53.65853658536586,
                            "mul": 2.4390243902439024,
                            "bitwise": 43.90243902439025
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "msvc_default": {
                    "expr": "(((a - b) - ((~b | a) + (~b | a))) - ((0xffffffff - a & b - 1) - (~(0xffffffff - a) & ~(b - 1)))) + (((a - b) - ((~b | a) + (~b | a))) - 2 | ~((0xffffffff - a & b - 1) - (~(0xffffffff - a) & ~(b - 1)))) * -2 + -4",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 15,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 14.583333333333334,
                        "opsPercentages": {
                            "arithmetic": 53.65853658536586,
                            "mul": 2.4390243902439024,
                            "bitwise": 43.90243902439025
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((a - b) + (~b | a) * -2) - 2 - ((~a & b - 1) - (-b & a))) + (a - b | ((a - b) + (~b | a) * -2) - 2) * -2 + -2",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 41.66666666666667,
                        "opsPercentages": {
                            "arithmetic": 60.71428571428571,
                            "mul": 10.714285714285714,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 291,
            "gt": {
                "expr": "((a&(~((~c)|(~(e+(~(e&e))))))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 12.5,
                        "mul": 0.0,
                        "bitwise": 87.5
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "(a | ((((- c - 1) + (- ((e ^ (- ((~ e | e) - ~ e) - 1)) + ((e & (- ((~ e | e) - ~ e) - 1)) + (e & (- ((~ e | e) - ~ e) - 1)))) - 1)) + 1) + ((- (- c - 1) - 1) | (- (- ((e ^ (- ((~ e | e) - ~ e) - 1)) + ((e & (- ((~ e | e) - ~ e) - 1)) + (e & (- ((~ e | e) - ~ e) - 1)))) - 1) - 1)))) - ((((- c - 1) + (- ((e ^ (- ((~ e | e) - ~ e) - 1)) + ((e & (- ((~ e | e) - ~ e) - 1)) + (e & (- ((~ e | e) - ~ e) - 1)))) - 1)) + 1) + ((- (- c - 1) - 1) | (- (- ((e ^ (- ((~ e | e) - ~ e) - 1)) + ((e & (- ((~ e | e) - ~ e) - 1)) + (e & (- ((~ e | e) - ~ e) - 1)))) - 1) - 1)))",
                "attributes": {
                    "numOps": 126,
                    "nestedExprLevel": 63,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 59.523809523809526,
                        "mul": 0.0,
                        "bitwise": 40.476190476190474
                    },
                    "percentageDAGsCancel": 26.08695652173913
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "a & c",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 99.20634920634922,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 100.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~c | a) + 1 + c",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 96.82539682539682,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "a & c",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 99.20634920634922,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 100.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(a | ((-1 - ((e ^ 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff))) + (e & 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff)) ) + (e & 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff))))) - c) + (0xffffffff - (-1 - c) | 0xffffffff - (-1 - ((e ^ 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff))) + (e & 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff))) + (e & 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff))))))) - (((-1 - ((e ^ 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff))) + (e & 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff))) + (e & 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff))))) - c) + (0xffffffff - (-1 - c) | 0xffffffff - (-1 - ((e ^ 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff))) + (e & 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff)) ) + (e & 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff)))))))",
                    "attributes": {
                        "numOps": 104,
                        "nestedExprLevel": 51,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 17.46031746031746,
                        "opsPercentages": {
                            "arithmetic": 50.96153846153846,
                            "mul": 0.0,
                            "bitwise": 49.03846153846153
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_default": {
                    "expr": "((-((0xffffffff - (-1 - ~e) ^ e) + (0xffffffff - (-1 - ~e) & e) + (0xffffffff - (-1 - ~e) & e)) - c) + -1 + (0xffffffff - (-1 - c) | 0xffffffff - (-1 - ((0xffffffff - (-1 - ~e) ^ e) + (0xffffffff - (-1 - ~e) & e) + (0xffffffff - (-1 - ~e) & e)))) | a) - ((-((0xffffffff - (-1 - ~e) ^ e) + (0xffffffff - (-1 - ~e) & e) + (0xffffffff - (-1 - ~e) & e)) - c) + -1 + (0xffffffff - (-1 - c) | 0xffffffff - (-1 - ((0xffffffff - (-1 - ~e) ^ e) + (0xffffffff - (-1 - ~e) & e) + (0xffffffff - (-1 - ~e) & e) ))))",
                    "attributes": {
                        "numOps": 94,
                        "nestedExprLevel": 26,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 25.396825396825395,
                        "opsPercentages": {
                            "arithmetic": 71.27659574468085,
                            "mul": 0.0,
                            "bitwise": 28.723404255319153
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "gcc_O3": {
                    "expr": "a & c",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 99.20634920634922,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 100.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 292,
            "gt": {
                "expr": "(((b-((b-b)*b))-((((-d)&d)|d)|(d*b))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 22.22222222222222,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 44.44444444444444
                }
            },
            "mba": {
                "expr": "((((b & ~ ((((b + ~ b) + 1) & b) * (((b + ~ b) + 1) | b) + (((b + ~ b) + 1) & ~ b) * (~ ((b + ~ b) + 1) & b))) + (b & ~ ((((b + ~ b) + 1) & b) * (((b + ~ b) + 1) | b) + (((b + ~ b) + 1) & ~ b) * (~ ((b + ~ b) + 1) & b)))) - (b ^ ((((b + ~ b) + 1) & b) * (((b + ~ b) + 1) | b) + (((b + ~ b) + 1) & ~ b) * (~ ((b + ~ b) + 1) & b)))) ^ ((((((((~ (~ (d - 1)) | d) + ~ (d - 1)) + 1) + d) + 1) + ((- (((~ (~ (d - 1)) | d) + ~ (d - 1)) + 1) - 1) | (- d - 1))) & ~ ((d & b) * (d | b) + (d & ~ b) * (~ d & b))) + ((d & b) * (d | b) + (d & ~ b) * (~ d & b)))) - ((~ (((b & ~ ((((b + ~ b) + 1) & b) * (((b + ~ b) + 1) | b) + (((b + ~ b) + 1) & ~ b) * (~ ((b + ~ b) + 1) & b))) + (b & ~ ((((b + ~ b) + 1) & b) * (((b + ~ b) + 1) | b) + (((b + ~ b) + 1) & ~ b) * (~ ((b + ~ b) + 1) & b)))) - (b ^ ((((b + ~ b) + 1) & b) * (((b + ~ b) + 1) | b) + (((b + ~ b) + 1) & ~ b) * (~ ((b + ~ b) + 1) & b)))) & ((((((((~ (~ (d - 1)) | d) + ~ (d - 1)) + 1) + d) + 1) + ((- (((~ (~ (d - 1)) | d) + ~ (d - 1)) + 1) - 1) | (- d - 1))) & ~ ((d & b) * (d | b) + (d & ~ b) * (~ d & b))) + ((d & b) * (d | b) + (d & ~ b) * (~ d & b)))) + (~ (((b & ~ ((((b + ~ b) + 1) & b) * (((b + ~ b) + 1) | b) + (((b + ~ b) + 1) & ~ b) * (~ ((b + ~ b) + 1) & b))) + (b & ~ ((((b + ~ b) + 1) & b) * (((b + ~ b) + 1) | b) + (((b + ~ b) + 1) & ~ b) * (~ ((b + ~ b) + 1) & b)))) - (b ^ ((((b + ~ b) + 1) & b) * (((b + ~ b) + 1) | b) + (((b + ~ b) + 1) & ~ b) * (~ ((b + ~ b) + 1) & b)))) & ((((((((~ (~ (d - 1)) | d) + ~ (d - 1)) + 1) + d) + 1) + ((- (((~ (~ (d - 1)) | d) + ~ (d - 1)) + 1) - 1) | (- d - 1))) & ~ ((d & b) * (d | b) + (d & ~ b) * (~ d & b))) + ((d & b) * (d | b) + (d & ~ b) * (~ d & b)))))",
                "attributes": {
                    "numOps": 352,
                    "nestedExprLevel": 170,
                    "numDAGs": 46,
                    "opsPercentages": {
                        "arithmetic": 40.625,
                        "mul": 8.522727272727272,
                        "bitwise": 50.85227272727273
                    },
                    "percentageDAGsCancel": 32.608695652173914
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~d & b) * (~b & d) + (d & b) * (d | b) + (d + (~d & d - 1) + 2 + (~d | (-d | d) - 1) & ~((~d & b) * (~b & d) + (d & b) * (d | b))) ^ b) + ((~d & b) * (~b & d) + (d & b) * (d | b) + (d + (~d & d - 1) + 2 + (~d | (-d | d) - 1) & ~((~d & b) * (~b & d) + (d & b) * (d | b))) & ~b) * -2",
                    "attributes": {
                        "numOps": 70,
                        "nestedExprLevel": 17,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 80.11363636363636,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 12.857142857142856,
                            "bitwise": 58.57142857142858
                        },
                        "percentageDAGsCancel": 11.538461538461538
                    }
                },
                "msvc_O1": {
                    "expr": "((~((b | d) * (b & d) + (~d & b) * (~b & d)) & d - 1 | d + 2 + ((d - d - 1 | d) - 2 | ~d)) + (b | d) * (b & d) + (~d & b) * (~b & d) ^ b) + ((~((b | d) * (b & d) + (~d & b) * (~b & d)) & d - 1 | d + 2 + ((d - d - 1 | d) - 2 | ~d)) + (b | d) * (b & d) + (~d & b) * (~b & d) & ~b) * -2",
                    "attributes": {
                        "numOps": 68,
                        "nestedExprLevel": 18,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 80.68181818181817,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 13.23529411764706,
                            "bitwise": 57.35294117647059
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "clang_O3": {
                    "expr": "(b ^ (~(~d & b) * (~b & d) + (d | b) * (d & b) & ((-d | d) - 1 | ~d) + (d - 1 & ~d) + d + 2) + (~d & b) * (~b & d) + (d | b) * (d & b)) + ((~(~d & b) * (~b & d) + (d | b) * (d & b) & ((-d | d) - 1 | ~d) + (d - 1 & ~d) + d + 2) + (~d & b) * (~b & d) + (d | b) * (d & b) & ~b) * -2",
                    "attributes": {
                        "numOps": 70,
                        "nestedExprLevel": 17,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 80.11363636363636,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 12.857142857142856,
                            "bitwise": 58.57142857142858
                        },
                        "percentageDAGsCancel": 10.714285714285714
                    }
                },
                "clang_default": {
                    "expr": "(((b & ((b + (b ^ 0xffffffff) + 1 & b) * (b + (b ^ 0xffffffff) + 1 | b) + (b + (b ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((b + (b ^ 0xffffffff) + 1 ^ 0xffffffff) & b) ^ 0xffffffff)) + (b & ((b + (b ^ 0xffffffff) + 1 & b) * (b + (b ^ 0xffffffff) + 1 | b) + (b + (b ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((b + (b ^ 0xffffffff) + 1 ^ 0xffffffff) & b) ^ 0xffffffff))) - (b ^ (b + (b ^ 0xffffffff) + 1 & b) * (b + (b ^ 0xffffffff) + 1 | b) + (b + (b ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((b + (b ^ 0xffffffff) + 1 ^ 0xffffffff) & b)) ^ ((d - 1 | d) + (d - 1 ^ 0xffffffff) + d + 2 + (0xffffffff - ((d - 1 | d) + (d - 1 ^ 0xffffffff) + 1) | 0xffffffff - d) & ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) ^ 0xffffffff)) + (d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b)) - (((((b & ((b + (b ^ 0xffffffff) + 1 & b) * (b + (b ^ 0xffffffff) + 1 | b) + (b + (b ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((b + (b ^ 0xffffffff) + 1 ^ 0xffffffff) & b) ^ 0xffffffff)) + (b & ((b + (b ^ 0xffffffff) + 1 & b) * (b + (b ^ 0xffffffff) + 1 | b) + (b + (b ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((b + (b ^ 0xffffffff) + 1 ^ 0xffffffff) & b) ^ 0xffffffff)) ) - (b ^ (b + (b ^ 0xffffffff) + 1 & b) * (b + (b ^ 0xffffffff) + 1 | b) + (b + (b ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((b + (b ^ 0xffffffff) + 1 ^ 0xffffffff) & b)) ^ 0xffffffff ) & ((d - 1 | d) + (d - 1 ^ 0xffffffff) + d + 2 + (0xffffffff - ((d - 1 | d) + (d - 1 ^ 0xffffffff) + 1) | 0xffffffff - d) & ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) ^ 0xffffffff)) + (d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b)) + ((((b & ((b + (b ^ 0xffffffff) + 1 & b) * (b + (b ^ 0xffffffff) + 1 | b) + (b + (b ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((b + (b ^ 0xffffffff) + 1 ^ 0xffffffff) & b) ^ 0xffffffff)) + (b & ((b + (b ^ 0xffffffff) + 1 & b) * (b + (b ^ 0xffffffff) + 1 | b) + (b + (b ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((b + (b ^ 0xffffffff) + 1 ^ 0xffffffff) & b) ^ 0xffffffff))) - (b ^ (b + (b ^ 0xffffffff) + 1 & b) * (b + (b ^ 0xffffffff) + 1 | b) + (b + (b ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((b + (b ^ 0xffffffff) + 1 ^ 0xffffffff) & b)) ^ 0xffffffff) & ((d - 1 | d) + (d - 1 ^ 0xffffffff) + d + 2 + (0xffffffff - ((d - 1 | d) + (d - 1 ^ 0xffffffff) + 1) | 0xffffffff - d) & ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) ^ 0xffffffff)) + (d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b)))",
                    "attributes": {
                        "numOps": 331,
                        "nestedExprLevel": 116,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 5.965909090909091,
                        "opsPercentages": {
                            "arithmetic": 40.483383685800604,
                            "mul": 9.06344410876133,
                            "bitwise": 50.453172205438065
                        },
                        "percentageDAGsCancel": 22.727272727272727
                    }
                },
                "msvc_default": {
                    "expr": "(((~((b + 1 + ~b & b) * (b + 1 + ~b | b) + (b + 1 + ~b & ~b) * (~(b + 1 + ~b) & b)) & b) + (~((b + 1 + ~b & b) * (b + 1 + ~b | b) + (b + 1 + ~b & ~b) * (~(b + 1 + ~b) & b)) & b )) - ((b + 1 + ~b & b) * (b + 1 + ~b | b) + (b + 1 + ~b & ~b) * (~(b + 1 + ~b) & b) ^ b) ^ (~(d - 1) + (d - 1 | d) + d + 2 + (0xffffffff - ((d - 1 | d) + 1 + ~(d - 1)) | 0xffffffff - d) & ~((d & b) * (d | b) + (~b & d) * (~d & b))) + (d & b) * (d | b) + (~b & d) * (~d & b)) - ((~(((~((b + 1 + ~b & b) * (b + 1 + ~b | b) + (b + 1 + ~b & ~b) * (~(b + 1 + ~b) & b)) & b) + (~((b + 1 + ~b & b) * (b + 1 + ~b | b) + (b + 1 + ~b & ~b) * (~(b + 1 + ~b) & b)) & b)) - ((b + 1 + ~b & b) * (b + 1 + ~b | b) + (b + 1 + ~b & ~b) * (~(b + 1 + ~b) & b) ^ b )) & (~(d - 1) + (d - 1 | d) + d + 2 + (0xffffffff - ((d - 1 | d) + 1 + ~(d - 1)) | 0xffffffff - d) & ~((d & b) * (d | b) + (~b & d) * (~d & b))) + (d & b) * (d | b) + (~b & d) * (~d & b)) + (~(((~((b + 1 + ~b & b) * (b + 1 + ~b | b) + (b + 1 + ~b & ~b) * (~(b + 1 + ~b) & b)) & b) + (~((b + 1 + ~b & b) * (b + 1 + ~b | b) + (b + 1 + ~b & ~b) * (~(b + 1 + ~b) & b)) & b)) - ((b + 1 + ~b & b) * (b + 1 + ~b | b) + (b + 1 + ~b & ~b) * (~(b + 1 + ~b) & b) ^ b) ) & (~(d - 1) + (d - 1 | d) + d + 2 + (0xffffffff - ((d - 1 | d) + 1 + ~(d - 1)) | 0xffffffff - d) & ~((d & b) * (d | b) + (~b & d) * (~d & b))) + (d & b) * (d | b) + (~b & d) * (~d & b)))",
                    "attributes": {
                        "numOps": 331,
                        "nestedExprLevel": 73,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 5.965909090909091,
                        "opsPercentages": {
                            "arithmetic": 40.483383685800604,
                            "mul": 9.06344410876133,
                            "bitwise": 50.453172205438065
                        },
                        "percentageDAGsCancel": 31.11111111111111
                    }
                },
                "gcc_O3": {
                    "expr": "(b ^ (d + 2 + (d - 1 & ~d) + ((d | -d) - 1 | ~d) & ~(d & b) * (d | b) + (~b & d) * (~d & b)) + (d & b) * (d | b) + (~b & d) * (~d & b)) + (~b & (d + 2 + (d - 1 & ~d) + ((d | -d) - 1 | ~d) & ~(d & b) * (d | b) + (~b & d) * (~d & b)) + (d & b) * (d | b) + (~b & d) * (~d & b)) * -2",
                    "attributes": {
                        "numOps": 70,
                        "nestedExprLevel": 16,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 80.11363636363636,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 12.857142857142856,
                            "bitwise": 58.57142857142858
                        },
                        "percentageDAGsCancel": 10.714285714285714
                    }
                }
            }
        },
        {
            "num": 293,
            "gt": {
                "expr": "(((e+(e*b))*((e-e)+b)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 40.0,
                        "bitwise": 0.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "(((e - ~ ((e & b) * (e | b) + (e & ~ b) * (~ e & b))) - 1) & (((((e + ~ e) + 1) ^ ~ b) + ((((e + ~ e) + 1) | b) + (((e + ~ e) + 1) | b))) + 1)) * (((e - ~ ((e & b) * (e | b) + (e & ~ b) * (~ e & b))) - 1) | (((((e + ~ e) + 1) ^ ~ b) + ((((e + ~ e) + 1) | b) + (((e + ~ e) + 1) | b))) + 1)) + (((e - ~ ((e & b) * (e | b) + (e & ~ b) * (~ e & b))) - 1) & ~ (((((e + ~ e) + 1) ^ ~ b) + ((((e + ~ e) + 1) | b) + (((e + ~ e) + 1) | b))) + 1)) * (~ ((e - ~ ((e & b) * (e | b) + (e & ~ b) * (~ e & b))) - 1) & (((((e + ~ e) + 1) ^ ~ b) + ((((e + ~ e) + 1) | b) + (((e + ~ e) + 1) | b))) + 1))",
                "attributes": {
                    "numOps": 121,
                    "nestedExprLevel": 62,
                    "numDAGs": 28,
                    "opsPercentages": {
                        "arithmetic": 40.49586776859504,
                        "mul": 8.264462809917356,
                        "bitwise": 51.2396694214876
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(b * 2 + ~b + 1 & ~((~e & b) * (~b & e) + (e & b) * (e | b)) + ~e + 1) * ((e - ~((~e & b) * (~b & e) + (e & b) * (e | b))) - 1 & ~b) + ((e - ~((~e & b) * (~b & e) + (e & b) * (e | b))) - 1 & b * 2 + ~b + 1) * (b * 2 + ~b + 1 | (e - ~((~e & b) * (~b & e) + (e & b) * (e | b))) - 1 )",
                    "attributes": {
                        "numOps": 69,
                        "nestedExprLevel": 20,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 42.97520661157025,
                        "opsPercentages": {
                            "arithmetic": 27.536231884057973,
                            "mul": 18.84057971014493,
                            "bitwise": 53.62318840579711
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_O1": {
                    "expr": "(~e + (~e & b) * (~b & e) + (b | e) * (b & e) & b * 2 + 1 + ~b) * (~b * 2 + 1 + ~b & e + (~e & b) * (~b & e) + (b | e) * (b & e)) + (b * 2 + 1 + ~b | e + (~e & b) * (~b & e) + (b | e) * (b & e)) * (b * 2 + 1 + ~b & e + (~e & b) * (~b & e) + (b | e) * (b & e))",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 13,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 46.28099173553719,
                        "opsPercentages": {
                            "arithmetic": 26.153846153846157,
                            "mul": 21.53846153846154,
                            "bitwise": 52.307692307692314
                        },
                        "percentageDAGsCancel": 12.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(~e & b) * (~b & e) + e + (e | b) * (e & b) & b) * (~b & (~e & b) * (~b & e) + e + (e | b) * (e & b)) + ((~e & b) * (~b & e) + e + (e | b) * (e & b) | b) * ((~e & b) * (~b & e) + e + (e | b) * (e & b) & b)",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 13,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 59.50413223140496,
                        "opsPercentages": {
                            "arithmetic": 18.367346938775512,
                            "mul": 20.408163265306122,
                            "bitwise": 61.224489795918366
                        },
                        "percentageDAGsCancel": 19.047619047619047
                    }
                },
                "clang_default": {
                    "expr": "((e - ((e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b) ^ 0xffffffff)) - 1 & (e + (e ^ 0xffffffff) + 1 ^ b ^ 0xffffffff) + (e + (e ^ 0xffffffff) + 1 | b) + (e + (e ^ 0xffffffff) + 1 | b) + 1) * ((e - ((e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b) ^ 0xffffffff)) - 1 | (e + (e ^ 0xffffffff) + 1 ^ b ^ 0xffffffff) + (e + (e ^ 0xffffffff) + 1 | b) + (e + (e ^ 0xffffffff) + 1 | b) + 1) + ((e - ((e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b) ^ 0xffffffff)) - 1 & ((e + (e ^ 0xffffffff) + 1 ^ b ^ 0xffffffff) + (e + (e ^ 0xffffffff) + 1 | b) + (e + (e ^ 0xffffffff) + 1 | b) + 1 ^ 0xffffffff)) * (((e - ((e & b) * (e | b) + (e & (b ^ 0xffffffff)) * ((e ^ 0xffffffff) & b) ^ 0xffffffff)) - 1 ^ 0xffffffff) & (e + (e ^ 0xffffffff) + 1 ^ b ^ 0xffffffff) + (e + (e ^ 0xffffffff) + 1 | b) + (e + (e ^ 0xffffffff) + 1 | b) + 1)",
                    "attributes": {
                        "numOps": 121,
                        "nestedExprLevel": 40,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 40.49586776859504,
                            "mul": 8.264462809917356,
                            "bitwise": 51.2396694214876
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((e - ~((e & b) * (e | b) + (~b & e) * (~e & b)) ) - 1 & (e + 1 + ~e ^ ~b) + 1 + (e + 1 + ~e | b) + (e + 1 + ~e | b)) * ((e - ~((e & b) * (e | b) + (~b & e) * (~e & b)) ) - 1 | (e + 1 + ~e ^ ~b) + 1 + (e + 1 + ~e | b) + (e + 1 + ~e | b)) + ((e - ~((e & b) * (e | b) + (~b & e) * (~e & b)) ) - 1 & ~((e + 1 + ~e ^ ~b) + 1 + (e + 1 + ~e | b) + (e + 1 + ~e | b))) * (~((e - ~((e & b) * (e | b) + (~b & e) * (~e & b))) - 1) & (e + 1 + ~e ^ ~b) + 1 + (e + 1 + ~e | b) + (e + 1 + ~e | b))",
                    "attributes": {
                        "numOps": 121,
                        "nestedExprLevel": 28,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 40.49586776859504,
                            "mul": 8.264462809917356,
                            "bitwise": 51.2396694214876
                        },
                        "percentageDAGsCancel": 21.428571428571427
                    }
                },
                "gcc_O3": {
                    "expr": "(~e - (e & b) * (e | b) + (~b & e) * (~e & b) & ~b + 1 + b * 2) * (~b & e + (e & b) * (e | b) + (~b & e) * (~e & b)) + (e + (e & b) * (e | b) + (~b & e) * (~e & b) & ~b + 1 + b * 2) * (e + (e & b) * (e | b) + (~b & e) * (~e & b) | ~b + 1 + b * 2)",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 13,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 49.586776859504134,
                        "opsPercentages": {
                            "arithmetic": 24.59016393442623,
                            "mul": 21.311475409836063,
                            "bitwise": 54.09836065573771
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 294,
            "gt": {
                "expr": "(((((-c)^c)*b)&(~(b+(c*c)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 28.57142857142857,
                        "mul": 28.57142857142857,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((~ (c - 1) | c) - (~ (c - 1) & c)) & b) * (((~ (c - 1) | c) - (~ (c - 1) & c)) | b) + (((~ (c - 1) | c) - (~ (c - 1) & c)) & ~ b) * (~ ((~ (c - 1) | c) - (~ (c - 1) & c)) & b)) - (((((~ (c - 1) | c) - (~ (c - 1) & c)) & b) * (((~ (c - 1) | c) - (~ (c - 1) & c)) | b) + (((~ (c - 1) | c) - (~ (c - 1) & c)) & ~ b) * (~ ((~ (c - 1) | c) - (~ (c - 1) & c)) & b)) & (((b ^ ~ ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + ((b | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + (b | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))))) + 1))",
                "attributes": {
                    "numOps": 110,
                    "nestedExprLevel": 51,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 9.090909090909092,
                        "bitwise": 60.909090909090914
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((c - 1 ^ c) & b) * ((-c ^ c) & ~b) + ((-c ^ c) & b) * (-c ^ c | b) & ((c * c ^ b) + (c * c | b) * -2) - 1",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 7,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 77.27272727272727,
                        "opsPercentages": {
                            "arithmetic": 32.0,
                            "mul": 20.0,
                            "bitwise": 48.0
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((~(c - 1) | c) - (~(c - 1) & c) | b) * ((~(c - 1) | c) - (~(c - 1) & c) & b) - ((c * c | b) * 2 + 1 + (~(c * c) ^ b) & ((~(c - 1) | c) - (~(c - 1) & c) | b) * ((~(c - 1) | c) - (~(c - 1) & c) & b) + (~b & (~(c - 1) | c) - (~(c - 1) & c)) * (~(~(c - 1) | c) - (~(c - 1) & c) & b))) + (~b & (~(c - 1) | c) - (~(c - 1) & c)) * (~(~(c - 1) | c) - (~(c - 1) & c) & b)",
                    "attributes": {
                        "numOps": 84,
                        "nestedExprLevel": 29,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 23.636363636363637,
                        "opsPercentages": {
                            "arithmetic": 34.523809523809526,
                            "mul": 8.333333333333332,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "clang_O3": {
                    "expr": "~((c * c | b) * 2) + (c * c ^ b) & (~-c ^ c & b) * (~b & -c ^ c) + (-c ^ c | b) * (-c ^ c & b)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 5,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 77.27272727272727,
                        "opsPercentages": {
                            "arithmetic": 24.0,
                            "mul": 20.0,
                            "bitwise": 56.00000000000001
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c - 1 ^ 0xffffffff | c) - ((c - 1 ^ 0xffffffff) & c) & b) * ((c - 1 ^ 0xffffffff | c) - ((c - 1 ^ 0xffffffff) & c) | b) + ((c - 1 ^ 0xffffffff | c) - ((c - 1 ^ 0xffffffff) & c) & (b ^ 0xffffffff)) * (((c - 1 ^ 0xffffffff | c) - ((c - 1 ^ 0xffffffff) & c) ^ 0xffffffff) & b)) - (((c - 1 ^ 0xffffffff | c) - ((c - 1 ^ 0xffffffff) & c) & b) * ((c - 1 ^ 0xffffffff | c) - ((c - 1 ^ 0xffffffff) & c) | b) + ((c - 1 ^ 0xffffffff | c) - ((c - 1 ^ 0xffffffff) & c) & (b ^ 0xffffffff)) * (((c - 1 ^ 0xffffffff | c) - ((c - 1 ^ 0xffffffff) & c) ^ 0xffffffff) & b) & (b ^ c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) ^ 0xffffffff) + (b | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) + (b | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) + 1)",
                    "attributes": {
                        "numOps": 104,
                        "nestedExprLevel": 33,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 5.454545454545454,
                        "opsPercentages": {
                            "arithmetic": 31.73076923076923,
                            "mul": 9.615384615384617,
                            "bitwise": 58.65384615384615
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_default": {
                    "expr": "(((~(c - 1) | c) - (~(c - 1) & c) & b) * ((~(c - 1) | c) - (~(c - 1) & c) | b) + ((~(c - 1) | c) - (~(c - 1) & c) & ~b) * (~((~(c - 1) | c) - (~(c - 1) & c)) & b)) - (((~(c - 1) | c) - (~(c - 1) & c) & b) * ((~(c - 1) | c) - (~(c - 1) & c) | b) + ((~(c - 1) | c) - (~(c - 1) & c) & ~b) * (~((~(c - 1) | c) - (~(c - 1) & c)) & b) & (~(c * c) ^ b) + 1 + (c * c | b) + (c * c | b))",
                    "attributes": {
                        "numOps": 86,
                        "nestedExprLevel": 32,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 21.818181818181817,
                        "opsPercentages": {
                            "arithmetic": 34.883720930232556,
                            "mul": 8.13953488372093,
                            "bitwise": 56.97674418604651
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "gcc_O3": {
                    "expr": "((c - 1 ^ c) & b) * (~b & -c ^ c) + (-c ^ c | b) * (-c ^ c & b) & ((c * c ^ b) + (c * c | b) * -2) - 1",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 6,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 77.27272727272727,
                        "opsPercentages": {
                            "arithmetic": 32.0,
                            "mul": 20.0,
                            "bitwise": 48.0
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                }
            }
        },
        {
            "num": 295,
            "gt": {
                "expr": "((((d*a)|(a^d))+(a^(a+a))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 16.666666666666664,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((d & a) * (d | a) + (d & ~ a) * (~ d & a)) + ((a | d) - (a & d))) + 1) + ((- ((d & a) * (d | a) + (d & ~ a) * (~ d & a)) - 1) | (- ((a | d) - (a & d)) - 1))) | (((a - ((a ^ a) + ((a & a) << 1))) - ((a | ~ ((a ^ a) + ((a & a) << 1))) << 1)) - 2)) + ((((((d & a) * (d | a) + (d & ~ a) * (~ d & a)) + ((a | d) - (a & d))) + 1) + ((- ((d & a) * (d | a) + (d & ~ a) * (~ d & a)) - 1) | (- ((a | d) - (a & d)) - 1))) & (((a - ((a ^ a) + ((a & a) << 1))) - ((a | ~ ((a ^ a) + ((a & a) << 1))) << 1)) - 2))",
                "attributes": {
                    "numOps": 95,
                    "nestedExprLevel": 54,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 34.73684210526316,
                        "mul": 8.421052631578947,
                        "bitwise": 56.84210526315789
                    },
                    "percentageDAGsCancel": 12.121212121212121
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~(a * 2) | a) * -2 - a) + (a ^ d) + (d & a) * (d | a) + (~d & a) * (~a & d) + -1 + ~((a ^ d) & (d & a) * (d | a) + (~d & a) * (~a & d))",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 10,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 65.26315789473685,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 18.181818181818183,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_O1": {
                    "expr": "(((~(a * 2) | a) * -2 - a) - 2 | ((~(~d & a) * (~a & d) - a & d * a | d | (a & d - a | d) - 1) - a & d) + a & d * a | d + a | d + (~d & a) * (~a & d) + 1) + (((~(a * 2) | a) * -2 - a) - 2 & ((~(~d & a) * (~a & d) - a & d * a | d | (a & d - a | d) - 1) - a & d) + a & d * a | d + a | d + (~d & a) * (~a & d) + 1)",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 16,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 18.947368421052634,
                        "opsPercentages": {
                            "arithmetic": 29.87012987012987,
                            "mul": 15.584415584415584,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "clang_O3": {
                    "expr": "((d ^ a | (~d & a) * (~a & d) + (d | a) * (d & a)) - (a + (~(a * 2) | a) * 2)) + -2",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 8,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 80.0,
                        "opsPercentages": {
                            "arithmetic": 26.31578947368421,
                            "mul": 21.052631578947366,
                            "bitwise": 52.63157894736842
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) + ((a | d) - (a & d)) + 1 + (0xffffffff - ((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a)) | 0xffffffff - ((a | d) - (a & d))) | ((a | a * 2 ^ 0xffffffff) * -2 - a) - 2) + ((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) + ((a | d) - (a & d)) + 1 + (0xffffffff - ((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a)) | 0xffffffff - ((a | d) - (a & d))) & ((a | a * 2 ^ 0xffffffff) * -2 - a) - 2)",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 30,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 18.947368421052634,
                        "opsPercentages": {
                            "arithmetic": 32.467532467532465,
                            "mul": 15.584415584415584,
                            "bitwise": 51.94805194805194
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "msvc_default": {
                    "expr": "((d & a) * (d | a) + (~a & d) * (~d & a) + ((a | d) - (a & d)) + 1 + (0xffffffff - ((d & a) * (d | a) + (~a & d) * (~d & a)) | 0xffffffff - ((a | d) - (a & d))) | ((~(a * 2) | a) * -2 - a) - 2) + ((d & a) * (d | a) + (~a & d) * (~d & a) + ((a | d) - (a & d)) + 1 + (0xffffffff - ((d & a) * (d | a) + (~a & d) * (~d & a)) | 0xffffffff - ((a | d) - (a & d))) & ((~(a * 2) | a) * -2 - a) - 2)",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 28,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 18.947368421052634,
                        "opsPercentages": {
                            "arithmetic": 32.467532467532465,
                            "mul": 15.584415584415584,
                            "bitwise": 51.94805194805194
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((a | ~(a * 2)) * -2 - a) + -2 + (((d ^ a) + (~a & d) * (~d & a) + (d & a) * (d | a)) - ((~a & d) * (~d & a) + (d & a) * (d | a) & (d ^ a)))",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 11,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 66.3157894736842,
                        "opsPercentages": {
                            "arithmetic": 28.125,
                            "mul": 18.75,
                            "bitwise": 53.125
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 296,
            "gt": {
                "expr": "(((((d|d)*(-(d^b)))+(b+b))|((b+(b-b))^b)))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 10.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "((((((((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (((d | b) - (d & b)) - 1)) * ((((d + d) + 1) + ((- d - 1) | (- d - 1))) | ~ (((d | b) - (d & b)) - 1)) + ((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (~ (((d | b) - (d & b)) - 1))) * (~ (((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (((d | b) - (d & b)) - 1))) ^ ~ ((b ^ b) + ((b & b) << 1))) + (((((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (((d | b) - (d & b)) - 1)) * ((((d + d) + 1) + ((- d - 1) | (- d - 1))) | ~ (((d | b) - (d & b)) - 1)) + ((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (~ (((d | b) - (d & b)) - 1))) * (~ (((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (((d | b) - (d & b)) - 1))) | ((b ^ b) + ((b & b) << 1))) + ((((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (((d | b) - (d & b)) - 1)) * ((((d + d) + 1) + ((- d - 1) | (- d - 1))) | ~ (((d | b) - (d & b)) - 1)) + ((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (~ (((d | b) - (d & b)) - 1))) * (~ (((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (((d | b) - (d & b)) - 1))) | ((b ^ b) + ((b & b) << 1))))) + 1) + (((((b - ~ (((b & ~ b) << 1) - (b ^ b))) - 1) - b) - ((((b - ~ (((b & ~ b) << 1) - (b ^ b))) - 1) | ~ b) + (((b - ~ (((b & ~ b) << 1) - (b ^ b))) - 1) | ~ b))) - 2)) + 1) + ((- ((((((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (((d | b) - (d & b)) - 1)) * ((((d + d) + 1) + ((- d - 1) | (- d - 1))) | ~ (((d | b) - (d & b)) - 1)) + ((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (~ (((d | b) - (d & b)) - 1))) * (~ (((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (((d | b) - (d & b)) - 1))) ^ ~ ((b ^ b) + ((b & b) << 1))) + (((((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (((d | b) - (d & b)) - 1)) * ((((d + d) + 1) + ((- d - 1) | (- d - 1))) | ~ (((d | b) - (d & b)) - 1)) + ((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (~ (((d | b) - (d & b)) - 1))) * (~ (((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (((d | b) - (d & b)) - 1))) | ((b ^ b) + ((b & b) << 1))) + ((((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (((d | b) - (d & b)) - 1)) * ((((d + d) + 1) + ((- d - 1) | (- d - 1))) | ~ (((d | b) - (d & b)) - 1)) + ((((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (~ (((d | b) - (d & b)) - 1))) * (~ (((d + d) + 1) + ((- d - 1) | (- d - 1))) & ~ (((d | b) - (d & b)) - 1))) | ((b ^ b) + ((b & b) << 1))))) + 1) - 1) | (- (((((b - ~ (((b & ~ b) << 1) - (b ^ b))) - 1) - b) - ((((b - ~ (((b & ~ b) << 1) - (b ^ b))) - 1) | ~ b) + (((b - ~ (((b & ~ b) << 1) - (b ^ b))) - 1) | ~ b))) - 2) - 1))",
                "attributes": {
                    "numOps": 476,
                    "nestedExprLevel": 276,
                    "numDAGs": 50,
                    "opsPercentages": {
                        "arithmetic": 56.09243697478992,
                        "mul": 2.5210084033613445,
                        "bitwise": 41.38655462184874
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(b * 2 | (d * 2 + 1 + ~d & -(d ^ b)) * (-(d ^ b) | d * 2 + 1 + ~d) + (-(d ^ b) & -d - 1) * (d * 2 + 1 + ~d & (d ^ b) - 1)) * 2 + ~((-(d ^ b) & -d - 1) * (d * 2 + 1 + ~d & (d ^ b) - 1) + (d * 2 + 1 + ~d & -(d ^ b)) * (-(d ^ b) | d * 2 + 1 + ~d) ^ b * 2) + 1",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 12,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 86.1344537815126,
                        "opsPercentages": {
                            "arithmetic": 42.42424242424242,
                            "mul": 19.696969696969695,
                            "bitwise": 37.878787878787875
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "msvc_O1": {
                    "expr": "(~(((b | d) - (b & d)) - 1 | d) * (((b | d) - (b & d)) - 1 & d) + (~((b | d) - (b & d)) - 1 | d) * (~((b | d) - (b & d)) - 1 & d) | b * 2) * 2 + 1 + (~(b * 2) ^ ~(((b | d) - (b & d)) - 1 | d) * (((b | d) - (b & d)) - 1 & d) + (~((b | d) - (b & d)) - 1 | d) * (~((b | d) - (b & d)) - 1 & d))",
                    "attributes": {
                        "numOps": 60,
                        "nestedExprLevel": 27,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 87.39495798319328,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 11.666666666666666,
                            "bitwise": 55.00000000000001
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "clang_O3": {
                    "expr": "((~d & -(d ^ b)) * ((d ^ b) - 1 & d) + (-(d ^ b) | d) * (-(d ^ b) & d) | b * 2) * 2 - ((~d & -(d ^ b)) * ((d ^ b) - 1 & d) + (-(d ^ b) | d) * (-(d ^ b) & d) ^ b * 2)",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 12,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 92.01680672268907,
                        "opsPercentages": {
                            "arithmetic": 28.947368421052634,
                            "mul": 18.421052631578945,
                            "bitwise": 52.63157894736842
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_default": {
                    "expr": "((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & (((d | b) - (d & b)) - 1 ^ 0xffffffff)) * (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | ((d | b) - (d & b)) - 1 ^ 0xffffffff) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ((d | b) - (d & b)) - 1) * ((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) ^ 0xffffffff) & (((d | b) - (d & b)) - 1 ^ 0xffffffff)) ^ b * 2 ^ 0xffffffff) + ((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & (((d | b) - (d & b)) - 1 ^ 0xffffffff)) * (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | ((d | b) - (d & b)) - 1 ^ 0xffffffff) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ((d | b) - (d & b)) - 1) * ((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) ^ 0xffffffff) & (((d | b) - (d & b)) - 1 ^ 0xffffffff)) | b * 2) + ((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & (((d | b) - (d & b)) - 1 ^ 0xffffffff)) * (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | ((d | b) - (d & b)) - 1 ^ 0xffffffff) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ((d | b) - (d & b)) - 1) * ((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) ^ 0xffffffff) & (((d | b) - (d & b)) - 1 ^ 0xffffffff)) | b * 2) + (-(((b - ((b & (b ^ 0xffffffff)) * 2 ^ 0xffffffff)) - 1 | b ^ 0xffffffff) + ((b - ((b & (b ^ 0xffffffff)) * 2 ^ 0xffffffff)) - 1 | b ^ 0xffffffff )) - ((b & (b ^ 0xffffffff)) * 2 ^ 0xffffffff)) + -1 + (0xffffffff - (((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & (((d | b) - (d & b)) - 1 ^ 0xffffffff)) * (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | ((d | b) - (d & b)) - 1 ^ 0xffffffff) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ((d | b) - (d & b)) - 1) * ((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) ^ 0xffffffff) & (((d | b) - (d & b)) - 1 ^ 0xffffffff)) ^ b * 2 ^ 0xffffffff) + ((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & (((d | b) - (d & b)) - 1 ^ 0xffffffff)) * (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | ((d | b) - (d & b)) - 1 ^ 0xffffffff) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ((d | b) - (d & b)) - 1) * ((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) ^ 0xffffffff) & (((d | b) - (d & b)) - 1 ^ 0xffffffff)) | b * 2) + ((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & (((d | b) - (d & b)) - 1 ^ 0xffffffff)) * (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | ((d | b) - (d & b)) - 1 ^ 0xffffffff) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ((d | b) - (d & b)) - 1) * ((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) ^ 0xffffffff) & (((d | b) - (d & b)) - 1 ^ 0xffffffff)) | b * 2) + 1) | 0xffffffff - ((-(((b - ((b & (b ^ 0xffffffff)) * 2 ^ 0xffffffff)) - 1 | b ^ 0xffffffff) + ((b - ((b & (b ^ 0xffffffff)) * 2 ^ 0xffffffff)) - 1 | b ^ 0xffffffff)) - ((b & (b ^ 0xffffffff)) * 2 ^ 0xffffffff)) + -3))",
                    "attributes": {
                        "numOps": 380,
                        "nestedExprLevel": 125,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 20.168067226890756,
                        "opsPercentages": {
                            "arithmetic": 46.578947368421055,
                            "mul": 12.631578947368421,
                            "bitwise": 40.78947368421053
                        },
                        "percentageDAGsCancel": 6.8181818181818175
                    }
                },
                "msvc_default": {
                    "expr": "((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ~(((d | b) - (d & b)) - 1)) * (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | ~(((d | b) - (d & b)) - 1)) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ((d | b) - (d & b)) - 1) * (~(d * 2 + 1 + (0xffffffff - d | 0xffffffff - d)) & ~(((d | b) - (d & b)) - 1)) ^ ~(b * 2)) + ((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ~(((d | b) - (d & b)) - 1)) * (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | ~(((d | b) - (d & b)) - 1)) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ((d | b) - (d & b)) - 1) * (~(d * 2 + 1 + (0xffffffff - d | 0xffffffff - d)) & ~(((d | b) - (d & b)) - 1)) | b * 2) + ((d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ~(((d | b) - (d & b)) - 1)) * (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | ~(((d | b) - (d & b)) - 1)) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) & ((d | b) - (d & b)) - 1) * (~(d * 2 + 1 + (0xffffffff - d | 0xffffffff - d)) & ~(((d | b) - (d & b)) - 1)) | b * 2) + 1",
                    "attributes": {
                        "numOps": 163,
                        "nestedExprLevel": 52,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 65.75630252100841,
                        "opsPercentages": {
                            "arithmetic": 47.85276073619632,
                            "mul": 12.883435582822086,
                            "bitwise": 39.263803680981596
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(b * 2 ^ ((b ^ d) - 1 & d) * (-d - 1 & -(b ^ d)) + (d | -(b ^ d)) * (d & -(b ^ d))) + 1 + (b * 2 | ((b ^ d) - 1 & d) * (-d - 1 & -(b ^ d)) + (d | -(b ^ d)) * (d & -(b ^ d))) * 2",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 12,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 91.17647058823529,
                        "opsPercentages": {
                            "arithmetic": 38.095238095238095,
                            "mul": 16.666666666666664,
                            "bitwise": 45.23809523809524
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 297,
            "gt": {
                "expr": "((((-(~e))-e)-((b&(b-b))+((b+b)^b))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 0.0,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "(((((e + 1) + ~ e) + 1) & ~ (((((~ b | ((b + ~ b) + 1)) + b) + 1) ^ ((((b ^ b) + ((b & b) << 1)) | b) - (((b ^ b) + ((b & b) << 1)) & b))) + (((((~ b | ((b + ~ b) + 1)) + b) + 1) & ((((b ^ b) + ((b & b) << 1)) | b) - (((b ^ b) + ((b & b) << 1)) & b))) << 1))) << 1) - ((((e + 1) + ~ e) + 1) ^ (((((~ b | ((b + ~ b) + 1)) + b) + 1) ^ ((((b ^ b) + ((b & b) << 1)) | b) - (((b ^ b) + ((b & b) << 1)) & b))) + (((((~ b | ((b + ~ b) + 1)) + b) + 1) & ((((b ^ b) + ((b & b) << 1)) | b) - (((b ^ b) + ((b & b) << 1)) & b))) << 1)))",
                "attributes": {
                    "numOps": 93,
                    "nestedExprLevel": 61,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 39.784946236559136,
                        "mul": 0.0,
                        "bitwise": 60.215053763440864
                    },
                    "percentageDAGsCancel": 26.923076923076923
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0 - (b * 2 ^ b ^ 1)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 95.6989247311828,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~((~b + b) * 2 + 2 & (b * 2 | b) - (b * 2 & b) * 2) + (b * 2 | b) - (b * 2 & b) & 1) * 2 - (((~b + b) * 2 + 2 & (b * 2 | b) - (b * 2 & b) * 2) + (b * 2 | b) - (b * 2 & b) ^ 1)",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 10,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 58.06451612903226,
                        "opsPercentages": {
                            "arithmetic": 28.205128205128204,
                            "mul": 33.33333333333333,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 21.052631578947366
                    }
                },
                "clang_O3": {
                    "expr": "(b ^ b * 2 ^ 0xfffffffe) - (b * 2 | 0xfffffffd)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 93.54838709677419,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 33.33333333333333,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(e + (e ^ 0xffffffff) + 2 & (((b ^ 0xffffffff | b + (b ^ 0xffffffff) + 1) + b + 1 ^ (b * 2 | b) - (b * 2 & b)) + ((b ^ 0xffffffff | b + (b ^ 0xffffffff) + 1) + b + 1 & (b * 2 | b) - (b * 2 & b)) * 2 ^ 0xffffffff)) * 2 - (e + (e ^ 0xffffffff) + 2 ^ ((b ^ 0xffffffff | b + (b ^ 0xffffffff) + 1) + b + 1 ^ (b * 2 | b) - (b * 2 & b)) + ((b ^ 0xffffffff | b + (b ^ 0xffffffff) + 1) + b + 1 & (b * 2 | b) - (b * 2 & b)) * 2)",
                    "attributes": {
                        "numOps": 67,
                        "nestedExprLevel": 17,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 27.956989247311824,
                        "opsPercentages": {
                            "arithmetic": 40.298507462686565,
                            "mul": 16.417910447761194,
                            "bitwise": 43.28358208955223
                        },
                        "percentageDAGsCancel": 18.181818181818183
                    }
                },
                "msvc_default": {
                    "expr": "(e + 2 + ~e & ~(((~b | b + 1 + ~b) + 1 + b ^ (b * 2 | b) - (b * 2 & b)) + ((~b | b + 1 + ~b) + 1 + b & (b * 2 | b) - (b * 2 & b)) * 2)) * 2 - (e + 2 + ~e ^ ((~b | b + 1 + ~b) + 1 + b ^ (b * 2 | b) - (b * 2 & b)) + ((~b | b + 1 + ~b) + 1 + b & (b * 2 | b) - (b * 2 & b)) * 2)",
                    "attributes": {
                        "numOps": 67,
                        "nestedExprLevel": 13,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 27.956989247311824,
                        "opsPercentages": {
                            "arithmetic": 40.298507462686565,
                            "mul": 16.417910447761194,
                            "bitwise": 43.28358208955223
                        },
                        "percentageDAGsCancel": 27.27272727272727
                    }
                },
                "gcc_O3": {
                    "expr": "(~b * 2 & 2) - (b ^ 1)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 94.6236559139785,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 298,
            "gt": {
                "expr": "(((~(~(-a)))*((~((b+b)|(a*b)))+(b+a))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "((- (a - 1) - 1) & (((- ((((((b | b) + (b | b)) - (b ^ b)) + ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + 1) + ((- (((b | b) + (b | b)) - (b ^ b)) - 1) | (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1))) - 1) ^ (((b | a) + (b | a)) - (b ^ a))) + (((- ((((((b | b) + (b | b)) - (b ^ b)) + ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + 1) + ((- (((b | b) + (b | b)) - (b ^ b)) - 1) | (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1))) - 1) & (((b | a) + (b | a)) - (b ^ a))) + ((- ((((((b | b) + (b | b)) - (b ^ b)) + ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + 1) + ((- (((b | b) + (b | b)) - (b ^ b)) - 1) | (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1))) - 1) & (((b | a) + (b | a)) - (b ^ a)))))) * ((- (a - 1) - 1) | (((- ((((((b | b) + (b | b)) - (b ^ b)) + ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + 1) + ((- (((b | b) + (b | b)) - (b ^ b)) - 1) | (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1))) - 1) ^ (((b | a) + (b | a)) - (b ^ a))) + (((- ((((((b | b) + (b | b)) - (b ^ b)) + ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + 1) + ((- (((b | b) + (b | b)) - (b ^ b)) - 1) | (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1))) - 1) & (((b | a) + (b | a)) - (b ^ a))) + ((- ((((((b | b) + (b | b)) - (b ^ b)) + ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + 1) + ((- (((b | b) + (b | b)) - (b ^ b)) - 1) | (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1))) - 1) & (((b | a) + (b | a)) - (b ^ a)))))) + ((- (a - 1) - 1) & ~ (((- ((((((b | b) + (b | b)) - (b ^ b)) + ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + 1) + ((- (((b | b) + (b | b)) - (b ^ b)) - 1) | (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1))) - 1) ^ (((b | a) + (b | a)) - (b ^ a))) + (((- ((((((b | b) + (b | b)) - (b ^ b)) + ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + 1) + ((- (((b | b) + (b | b)) - (b ^ b)) - 1) | (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1))) - 1) & (((b | a) + (b | a)) - (b ^ a))) + ((- ((((((b | b) + (b | b)) - (b ^ b)) + ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + 1) + ((- (((b | b) + (b | b)) - (b ^ b)) - 1) | (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1))) - 1) & (((b | a) + (b | a)) - (b ^ a)))))) * (~ (- (a - 1) - 1) & (((- ((((((b | b) + (b | b)) - (b ^ b)) + ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + 1) + ((- (((b | b) + (b | b)) - (b ^ b)) - 1) | (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1))) - 1) ^ (((b | a) + (b | a)) - (b ^ a))) + (((- ((((((b | b) + (b | b)) - (b ^ b)) + ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + 1) + ((- (((b | b) + (b | b)) - (b ^ b)) - 1) | (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1))) - 1) & (((b | a) + (b | a)) - (b ^ a))) + ((- ((((((b | b) + (b | b)) - (b ^ b)) + ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + 1) + ((- (((b | b) + (b | b)) - (b ^ b)) - 1) | (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1))) - 1) & (((b | a) + (b | a)) - (b ^ a))))))",
                "attributes": {
                    "numOps": 557,
                    "nestedExprLevel": 294,
                    "numDAGs": 43,
                    "opsPercentages": {
                        "arithmetic": 40.394973070017954,
                        "mul": 8.976660682226212,
                        "bitwise": 50.62836624775583
                    },
                    "percentageDAGsCancel": 6.976744186046512
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~((~((~a & b) * (~b & a) + (a & b) * (a | b)) | b * -2 - 1) + (~a & b) * (~b & a) + (a & b) * (a | b) + b * 2 + 1) & (b | a) * 2 - (b ^ a)) * 2 + ((~a & b) * (~b & a) + (a & b) * (a | b) + b * 2 + 1 + (~((~a & b) * (~b & a) + (a & b) * (a | b)) | b * -2 - 1) ^ (b ^ a) + ~((b | a) * 2)) & a - 1) * (-a & ~((~((~((~a & b) * (~b & a) + (a & b) * (a | b)) | b * -2 - 1) + (~a & b) * (~b & a) + (a & b) * (a | b) + b * 2 + 1) & (b | a) * 2 - (b ^ a)) * 2 + ((~a & b) * (~b & a) + (a & b) * (a | b) + b * 2 + 1 + (~((~a & b) * (~b & a) + (a & b) * (a | b)) | b * -2 - 1) ^ (b ^ a) + ~((b | a) * 2)))) + (-a & (~((~((~a & b) * (~b & a) + (a & b) * (a | b)) | b * -2 - 1) + (~a & b) * (~b & a) + (a & b) * (a | b) + b * 2 + 1) & (b | a) * 2 - (b ^ a)) * 2 + ((~a & b) * (~b & a) + (a & b) * (a | b) + b * 2 + 1 + (~((~a & b) * (~b & a) + (a & b) * (a | b)) | b * -2 - 1) ^ (b ^ a) + ~((b | a) * 2))) * ((~((~((~a & b) * (~b & a) + (a & b) * (a | b)) | b * -2 - 1) + (~a & b) * (~b & a) + (a & b) * (a | b) + b * 2 + 1) & (b | a) * 2 - (b ^ a)) * 2 + ((~a & b) * (~b & a) + (a & b) * (a | b) + b * 2 + 1 + (~((~a & b) * (~b & a) + (a & b) * (a | b)) | b * -2 - 1) ^ (b ^ a) + ~((b | a) * 2)) | -a)",
                    "attributes": {
                        "numOps": 284,
                        "nestedExprLevel": 75,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 49.012567324955114,
                        "opsPercentages": {
                            "arithmetic": 25.704225352112676,
                            "mul": 21.830985915492956,
                            "bitwise": 52.46478873239436
                        },
                        "percentageDAGsCancel": 6.976744186046512
                    }
                },
                "msvc_O1": {
                    "expr": "(a - 1 & ((a | b) * 2 - (a ^ b) ^ (((-1 - b) * 2 - (~(~b & a) * (~a & b) - (a & b) * (a | b) | ~(b * 2))) - (a & b) * (a | b)) - (~b & a) * (~a & b)) + ((a | b) * 2 - (a ^ b) & (((-1 - b) * 2 - (~(~b & a) * (~a & b) - (a & b) * (a | b) | ~(b * 2))) - (a & b) * (a | b)) - (~b & a) * (~a & b)) * 2) * (~((a | b) * 2 - (a ^ b) ^ (((-1 - b) * 2 - (~(~b & a) * (~a & b) - (a & b) * (a | b) | ~(b * 2))) - (a & b) * (a | b)) - (~b & a) * (~a & b)) + ((a | b) * 2 - (a ^ b) & (((-1 - b) * 2 - (~(~b & a) * (~a & b) - (a & b) * (a | b) | ~(b * 2))) - (a & b) * (a | b)) - (~b & a) * (~a & b)) * 2 & -a) + (((a | b) * 2 - (a ^ b) ^ (((-1 - b) * 2 - (~(~b & a) * (~a & b) - (a & b) * (a | b) | ~(b * 2))) - (a & b) * (a | b)) - (~b & a) * (~a & b)) + ((a | b) * 2 - (a ^ b) & (((-1 - b) * 2 - (~(~b & a) * (~a & b) - (a & b) * (a | b) | ~(b * 2))) - (a & b) * (a | b)) - (~b & a) * (~a & b)) * 2 | -a) * (((a | b) * 2 - (a ^ b) ^ (((-1 - b) * 2 - (~(~b & a) * (~a & b) - (a & b) * (a | b) | ~(b * 2))) - (a & b) * (a | b)) - (~b & a) * (~a & b)) + ((a | b) * 2 - (a ^ b) & (((-1 - b) * 2 - (~(~b & a) * (~a & b) - (a & b) * (a | b) | ~(b * 2))) - (a & b) * (a | b)) - (~b & a) * (~a & b)) * 2 & -a)",
                    "attributes": {
                        "numOps": 276,
                        "nestedExprLevel": 78,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 50.44883303411131,
                        "opsPercentages": {
                            "arithmetic": 23.55072463768116,
                            "mul": 22.463768115942027,
                            "bitwise": 53.985507246376805
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(a - 1 & ((b | a) * 2 - (b ^ a) ^ ~((~a & b) * (~b & a) + (b & a) * (b | a) | b * 2)) + ((b | a) * 2 - (b ^ a) & ~((~a & b) * (~b & a) + (b & a) * (b | a) | b * 2)) * 2) * (~((b | a) * 2 - (b ^ a) ^ ~((~a & b) * (~b & a) + (b & a) * (b | a) | b * 2)) + ((b | a) * 2 - (b ^ a) & ~((~a & b) * (~b & a) + (b & a) * (b | a) | b * 2)) * 2 & -a) + (((b | a) * 2 - (b ^ a) ^ ~((~a & b) * (~b & a) + (b & a) * (b | a) | b * 2)) + ((b | a) * 2 - (b ^ a) & ~((~a & b) * (~b & a) + (b & a) * (b | a) | b * 2)) * 2 | -a) * (((b | a) * 2 - (b ^ a) ^ ~((~a & b) * (~b & a) + (b & a) * (b | a) | b * 2)) + ((b | a) * 2 - (b ^ a) & ~((~a & b) * (~b & a) + (b & a) * (b | a) | b * 2)) * 2 & -a)",
                    "attributes": {
                        "numOps": 156,
                        "nestedExprLevel": 45,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 71.99281867145422,
                        "opsPercentages": {
                            "arithmetic": 16.025641025641026,
                            "mul": 24.358974358974358,
                            "bitwise": 59.61538461538461
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - (a - 1) & (0xffffffff - (b * 2 + (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)))) ^ ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)))) & ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)))) & ((b | a) + (b | a)) - (b ^ a))) * (0xffffffff - (a - 1) | (0xffffffff - (b * 2 + (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)))) ^ ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)))) & ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)))) & ((b | a) + (b | a)) - (b ^ a))) + (0xffffffff - (a - 1) & ((0xffffffff - (b * 2 + (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)))) ^ ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)))) & ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)))) & ((b | a) + (b | a)) - (b ^ a)) ^ 0xffffffff)) * ((0xffffffff - (a - 1) ^ 0xffffffff) & (0xffffffff - (b * 2 + (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)))) ^ ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)))) & ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)))) & ((b | a) + (b | a)) - (b ^ a)))",
                    "attributes": {
                        "numOps": 433,
                        "nestedExprLevel": 152,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 22.262118491921004,
                        "opsPercentages": {
                            "arithmetic": 34.41108545034642,
                            "mul": 17.090069284064665,
                            "bitwise": 48.49884526558891
                        },
                        "percentageDAGsCancel": 2.564102564102564
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - (a + -1) & ~((0xffffffff - (b * 2 + (a & b) * (a | b) + (~b & a) * (~a & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)))) ^ ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (~b & a) * (~a & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)))) & ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (~b & a) * (~a & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)))) & ((b | a) + (b | a)) - (b ^ a)))) * (~(0xffffffff - (a + -1)) & (0xffffffff - (b * 2 + (a & b) * (a | b) + (~b & a) * (~a & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)))) ^ ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (~b & a) * (~a & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)))) & ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (~b & a) * (~a & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)))) & ((b | a) + (b | a)) - (b ^ a))) + (0xffffffff - (a + -1) & (0xffffffff - (b * 2 + (a & b) * (a | b) + (~b & a) * (~a & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)))) ^ ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (~b & a) * (~a & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)))) & ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (~b & a) * (~a & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)))) & ((b | a) + (b | a)) - (b ^ a))) * (0xffffffff - (a + -1) | (0xffffffff - (b * 2 + (a & b) * (a | b) + (~b & a) * (~a & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)))) ^ ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (~b & a) * (~a & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)))) & ((b | a) + (b | a)) - (b ^ a)) + (0xffffffff - (b * 2 + (a & b) * (a | b) + (~b & a) * (~a & b) + 1 + (b * -2 - 1 | 0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)))) & ((b | a) + (b | a)) - (b ^ a)))",
                    "attributes": {
                        "numOps": 437,
                        "nestedExprLevel": 128,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 21.543985637342907,
                        "opsPercentages": {
                            "arithmetic": 35.01144164759725,
                            "mul": 16.933638443935926,
                            "bitwise": 48.05491990846682
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "gcc_O3": {
                    "expr": "(~(~b * 2 & (~b & a) * (~a & b) + (a & b) * (a | b) + b * 2 + 1 + (~b & a) * (~a & b) + (a & b) * (a | b) ^ ~(a | b) * 2 + (b ^ a)) + (b * 2 & (~b & a) * (~a & b) + (a & b) * (a | b) - b * 2 + 1 + (~b & a) * (~a & b) + (a & b) * (a | b) & (a | b) * 2 - (b ^ a)) * 2 & -a) * (a - 1 & (~b * 2 & (~b & a) * (~a & b) + (a & b) * (a | b) + b * 2 + 1 + (~b & a) * (~a & b) + (a & b) * (a | b) ^ ~(a | b) * 2 + (b ^ a)) + (b * 2 & (~b & a) * (~a & b) + (a & b) * (a | b) - b * 2 + 1 + (~b & a) * (~a & b) + (a & b) * (a | b) & (a | b) * 2 - (b ^ a)) * 2) + (-a & (~b * 2 & (~b & a) * (~a & b) + (a & b) * (a | b) + b * 2 + 1 + (~b & a) * (~a & b) + (a & b) * (a | b) ^ ~(a | b) * 2 + (b ^ a)) + (b * 2 & (~b & a) * (~a & b) + (a & b) * (a | b) - b * 2 + 1 + (~b & a) * (~a & b) + (a & b) * (a | b) & (a | b) * 2 - (b ^ a)) * 2) * (-a | (~b * 2 & (~b & a) * (~a & b) + (a & b) * (a | b) + b * 2 + 1 + (~b & a) * (~a & b) + (a & b) * (a | b) ^ ~(a | b) * 2 + (b ^ a)) + (b * 2 & (~b & a) * (~a & b) + (a & b) * (a | b) - b * 2 + 1 + (~b & a) * (~a & b) + (a & b) * (a | b) & (a | b) * 2 - (b ^ a)) * 2)",
                    "attributes": {
                        "numOps": 260,
                        "nestedExprLevel": 53,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 53.3213644524237,
                        "opsPercentages": {
                            "arithmetic": 21.923076923076923,
                            "mul": 23.846153846153847,
                            "bitwise": 54.230769230769226
                        },
                        "percentageDAGsCancel": 2.380952380952381
                    }
                }
            }
        },
        {
            "num": 299,
            "gt": {
                "expr": "((((d-a)+(d^d))^(a^d)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "((((((d + ~ a) + 1) | ((d | d) - (d & d))) << 1) - (((d + ~ a) + 1) ^ ((d | d) - (d & d)))) | (((a - d) - ((a | ~ d) << 1)) - 2)) - ((((((d + ~ a) + 1) | ((d | d) - (d & d))) << 1) - (((d + ~ a) + 1) ^ ((d | d) - (d & d)))) & (((a - d) - ((a | ~ d) << 1)) - 2))",
                "attributes": {
                    "numOps": 47,
                    "nestedExprLevel": 30,
                    "numDAGs": 19,
                    "opsPercentages": {
                        "arithmetic": 44.680851063829785,
                        "mul": 0.0,
                        "bitwise": 55.319148936170215
                    },
                    "percentageDAGsCancel": 15.789473684210526
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((a - d) + (~d | a) * -2) - 2 ^ d + ~a * 2 + (1 - ~a)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 70.2127659574468,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 14.285714285714285,
                            "bitwise": 35.714285714285715
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~a * 2 + d + 2 + a | ((a + (~d | a) * -2) - d) - 2) - (~a * 2 + d + 2 + a & ((a + (~d | a) * -2) - d) - 2)",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 8,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 42.5531914893617,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 14.814814814814813,
                            "bitwise": 29.629629629629626
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((a - d) + (~d | a) * -2) - 2 ^ d - a",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 80.85106382978722,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 11.11111111111111,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(d + (a ^ 0xffffffff) * 2 + (1 - (a ^ 0xffffffff)) | ((a - d) + (a | d ^ 0xffffffff) * -2) - 2) - (d + (a ^ 0xffffffff) * 2 + (1 - (a ^ 0xffffffff)) & ((a - d) + (a | d ^ 0xffffffff) * -2) - 2)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 9,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 38.297872340425535,
                        "opsPercentages": {
                            "arithmetic": 51.724137931034484,
                            "mul": 13.793103448275861,
                            "bitwise": 34.48275862068966
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(d + ~a * 2 + (1 - ~a) | ((a - d) + (~d | a) * -2) - 2) - (d + ~a * 2 + (1 - ~a) & ((a - d) + (~d | a) * -2) - 2)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 38.297872340425535,
                        "opsPercentages": {
                            "arithmetic": 51.724137931034484,
                            "mul": 13.793103448275861,
                            "bitwise": 34.48275862068966
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((a - d) + (~d | a) * -2) - 2 ^ d - a",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 80.85106382978722,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 11.11111111111111,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 300,
            "gt": {
                "expr": "((-((-(-(d|e)))|((~(e-d))+(d-e)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 0.0,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "~ ((((~ (~ (((d + e) + 1) + ((- d - 1) | (- e - 1))) + 1) + 1) & ~ (((((d - e) - 1) ^ ~ ((d ^ e) - ((~ d & e) + (~ d & e)))) + ((((d - e) - 1) | ((d ^ e) - ((~ d & e) + (~ d & e)))) + (((d - e) - 1) | ((d ^ e) - ((~ d & e) + (~ d & e)))))) + 1)) + (((((d - e) - 1) ^ ~ ((d ^ e) - ((~ d & e) + (~ d & e)))) + ((((d - e) - 1) | ((d ^ e) - ((~ d & e) + (~ d & e)))) + (((d - e) - 1) | ((d ^ e) - ((~ d & e) + (~ d & e)))))) + 1)) - 1)",
                "attributes": {
                    "numOps": 85,
                    "nestedExprLevel": 46,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 48.23529411764706,
                        "mul": 0.0,
                        "bitwise": 51.76470588235295
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(((d ^ e) + (~d & e) * -2 | (d - e) - 1) * 2 + ((d - e) - 1 ^ (~d & e) * 2 + ~(d ^ e)) + 1 + (~(d & e) + e + d + 1 & -(((d - e) - 1 ^ (~d & e) * 2 + ~(d ^ e)) + ((d ^ e) + (~d & e) * -2 | (d - e) - 1) * 2) - 2))",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 13,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 40.0,
                        "opsPercentages": {
                            "arithmetic": 47.05882352941176,
                            "mul": 11.76470588235294,
                            "bitwise": 41.17647058823529
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "msvc_O1": {
                    "expr": "~((e + (d - (d & e)) & ~(((d - e) - 1 | (d ^ e) + (~d & e) * -2) * 2 + 1 + ~(d ^ e) + (~d & e) * -2 ^ (d - e) - 1)) + ~(d ^ e) + (~d & e) * -2 ^ (d - e) - 1 + ((d - e) - 1 | (d ^ e) + (~d & e) * -2) * 2)",
                    "attributes": {
                        "numOps": 50,
                        "nestedExprLevel": 13,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 41.17647058823529,
                        "opsPercentages": {
                            "arithmetic": 44.0,
                            "mul": 12.0,
                            "bitwise": 44.0
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "clang_O3": {
                    "expr": "-((~((e ^ d) + (~d & e) * -2 | ~e + d) * 2 - ((e ^ d) + (~d & e) * -2 ^ ~e + d) & (e | d)) + ((e ^ d) + (~d & e) * -2 | ~e + d) * 2 - ((e ^ d) + (~d & e) * -2 ^ ~e + d))",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 11,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 47.05882352941176,
                        "opsPercentages": {
                            "arithmetic": 35.55555555555556,
                            "mul": 13.333333333333334,
                            "bitwise": 51.11111111111111
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d + e + 1 + (0xffffffff - d | 0xffffffff - e) ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 & (((d - e) - 1 ^ (d ^ e) - (((d ^ 0xffffffff) & e) + ((d ^ 0xffffffff) & e)) ^ 0xffffffff) + ((d - e) - 1 | (d ^ e) - (((d ^ 0xffffffff) & e) + ((d ^ 0xffffffff) & e))) + ((d - e) - 1 | (d ^ e) - (((d ^ 0xffffffff) & e) + ((d ^ 0xffffffff) & e))) + 1 ^ 0xffffffff)) + ((d - e) - 1 ^ (d ^ e) - (((d ^ 0xffffffff) & e) + ((d ^ 0xffffffff) & e)) ^ 0xffffffff) + ((d - e) - 1 | (d ^ e) - (((d ^ 0xffffffff) & e) + ((d ^ 0xffffffff) & e))) + ((d - e) - 1 | (d ^ e) - (((d ^ 0xffffffff) & e) + ((d ^ 0xffffffff) & e))) ^ 0xffffffff",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 36,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 4.705882352941177,
                        "opsPercentages": {
                            "arithmetic": 45.67901234567901,
                            "mul": 0.0,
                            "bitwise": 54.32098765432099
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~((~(~(d + e + 1 + (0xffffffff - d | 0xffffffff - e)) + 1) + 1 & ~(((d - e) - 1 ^ ~((d ^ e) - ((~d & e) + (~d & e)))) + 1 + ((d - e) - 1 | (d ^ e) - ((~d & e) + (~d & e))) + ((d - e) - 1 | (d ^ e) - ((~d & e) + (~d & e))))) + ((d - e) - 1 ^ ~((d ^ e) - ((~d & e) + (~d & e)))) + ((d - e) - 1 | (d ^ e) - ((~d & e) + (~d & e))) + ((d - e) - 1 | (d ^ e) - ((~d & e) + (~d & e))))",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 30,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 4.705882352941177,
                        "opsPercentages": {
                            "arithmetic": 45.67901234567901,
                            "mul": 0.0,
                            "bitwise": 54.32098765432099
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                },
                "gcc_O3": {
                    "expr": "-((~(d ^ e) + (~d & e) * 2 ^ (d - e) - 1) + ((d ^ e) + (~d & e) * -2 | (d - e) - 1) * 2 + 1 + ((d + e) - (d & e) & -(~(d ^ e) + (~d & e) * 2 ^ (d - e) - 1) + ((d ^ e) + (~d & e) * -2 | (d - e) - 1) * 2 - 2))",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 13,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 42.35294117647059,
                        "opsPercentages": {
                            "arithmetic": 46.93877551020408,
                            "mul": 12.244897959183673,
                            "bitwise": 40.816326530612244
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 301,
            "gt": {
                "expr": "(((a^((a-c)&c))&((a|c)|a)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 16.666666666666664,
                        "mul": 0.0,
                        "bitwise": 83.33333333333334
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ (((a - (((~ ((a & ~ c) - (~ a & c)) | c) + ((a & ~ c) - (~ a & c))) + 1)) - ((a | ~ (((~ ((a & ~ c) - (~ a & c)) | c) + ((a & ~ c) - (~ a & c))) + 1)) << 1)) - 2) | ((((((a + c) + 1) + ((- a - 1) | (- c - 1))) + a) + 1) + ((- (((a + c) + 1) + ((- a - 1) | (- c - 1))) - 1) | (- a - 1)))) + (((a - (((~ ((a & ~ c) - (~ a & c)) | c) + ((a & ~ c) - (~ a & c))) + 1)) - ((a | ~ (((~ ((a & ~ c) - (~ a & c)) | c) + ((a & ~ c) - (~ a & c))) + 1)) << 1)) - 2)) + 1",
                "attributes": {
                    "numOps": 96,
                    "nestedExprLevel": 54,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 46.875,
                        "mul": 0.0,
                        "bitwise": 53.125
                    },
                    "percentageDAGsCancel": 3.0303030303030303
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a - (((~c & a) - (~a & c)) + (c + ~a | c) + 1)) + (-((c + ~a | c) + ((~c & a) - (~a & c))) - 2 | a) * -2 + ((-((c + ~a | c) + ((~c & a) - (~a & c))) - 2 | a) * 2 + ~a + ((~c & a) - (~a & c)) + (c + ~a | c) + 3 | (~a | (a & c) - (c + a + 1)) + c + a * 2 + ~(a & c) + 2) + -1",
                    "attributes": {
                        "numOps": 69,
                        "nestedExprLevel": 19,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 28.125,
                        "opsPercentages": {
                            "arithmetic": 47.82608695652174,
                            "mul": 4.3478260869565215,
                            "bitwise": 47.82608695652174
                        },
                        "percentageDAGsCancel": 2.7027027027027026
                    }
                },
                "msvc_O1": {
                    "expr": "a + -2 + (((((((-2 - ~c | ~a) - a) - c | ~a) + ~c | ~a + a * 2 + c + 2 | ((~((~(~c & a - ~a & c) | c - ~a & c) + ~c & a + 1) | a * 2 - ~a & c) - a) + 2 + ~(~c & a - ~a & c) | c + ~c & a) + ~((~(~c & a - ~a & c) | c - ~a & c) + ~c & a + 1) | a * -2) - ~(~c & a - ~a & c) | c) - ~c & a) + ~a & c",
                    "attributes": {
                        "numOps": 87,
                        "nestedExprLevel": 15,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 9.375,
                        "opsPercentages": {
                            "arithmetic": 35.63218390804598,
                            "mul": 3.4482758620689653,
                            "bitwise": 60.91954022988506
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "clang_O3": {
                    "expr": "~(~(~c & a) - (~a & c) | c) + (~c & a) - (~a & c) + a + (0x7ffffffe - (~(~c & a) - (~a & c) | c) + (~c & a) - (~a & c) | a) * -2 + (a + a + c + 1 + (~c | ~a) + 1 + (~a + c + 1 + (~c | ~a) | ~a) | 1 - ~(~(~c & a) - (~a & c) | c) + (~c & a) - (~a & c) + a + (0x7ffffffe - (~(~c & a) - (~a & c) | c) + (~c & a) - (~a & c) | a) * -2) + -1",
                    "attributes": {
                        "numOps": 89,
                        "nestedExprLevel": 17,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 7.291666666666667,
                        "opsPercentages": {
                            "arithmetic": 37.07865168539326,
                            "mul": 2.247191011235955,
                            "bitwise": 60.67415730337079
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((a - (((a & (c ^ 0xffffffff)) - ((a ^ 0xffffffff) & c) ^ 0xffffffff | c) + ((a & (c ^ 0xffffffff)) - ((a ^ 0xffffffff) & c)) + 1)) + (a | ((a & (c ^ 0xffffffff)) - ((a ^ 0xffffffff) & c) ^ 0xffffffff | c) + ((a & (c ^ 0xffffffff)) - ((a ^ 0xffffffff) & c)) + 1 ^ 0xffffffff) * -2) - 2 ^ 0xffffffff | a * 2 + c + (0xffffffff - a | 0xffffffff - c) + 2 + (0xffffffff - (a + c + 1 + (0xffffffff - a | 0xffffffff - c)) | 0xffffffff - a)) + (a - (((a & (c ^ 0xffffffff)) - ((a ^ 0xffffffff) & c) ^ 0xffffffff | c) + ((a & (c ^ 0xffffffff)) - ((a ^ 0xffffffff) & c)) + 1)) + (a | ((a & (c ^ 0xffffffff)) - ((a ^ 0xffffffff) & c) ^ 0xffffffff | c) + ((a & (c ^ 0xffffffff)) - ((a ^ 0xffffffff) & c)) + 1 ^ 0xffffffff) * -2 + -1",
                    "attributes": {
                        "numOps": 91,
                        "nestedExprLevel": 37,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 5.208333333333334,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 3.296703296703297,
                            "bitwise": 53.84615384615385
                        },
                        "percentageDAGsCancel": 2.857142857142857
                    }
                },
                "msvc_default": {
                    "expr": "((~(((a - ((~((~c & a) - (~a & c)) | c) + 1 + ((~c & a) - (~a & c)))) + (~((~((~c & a) - (~a & c)) | c) + 1 + ((~c & a) - (~a & c))) | a) * -2) - 2) | (0xffffffff - a | 0xffffffff - c) + a * 2 + c + 2 + (0xffffffff - (a + c + 1 + (0xffffffff - a | 0xffffffff - c)) | 0xffffffff - a)) - 1) + (a - ((~((~c & a) - (~a & c)) | c) + 1 + ((~c & a) - (~a & c)))) + (~((~((~c & a) - (~a & c)) | c) + 1 + ((~c & a) - (~a & c))) | a) * -2",
                    "attributes": {
                        "numOps": 90,
                        "nestedExprLevel": 35,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 6.25,
                        "opsPercentages": {
                            "arithmetic": 42.22222222222222,
                            "mul": 3.3333333333333335,
                            "bitwise": 54.44444444444444
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((-((~c & a) - (~a & c)) + (~a + c | c) - 2 | a * 2 + 2 + ~a + ((~c & a) - (~a & c)) + (~a + c | c) + 1 | (a + 1 + c - (c & a)) + a + ((c & a) - a + 1 + c | ~a)) - 1) + (a - ((~c & a) - (~a & c)) + (~a + c | c) + 1) + -((~c & a) - (~a & c)) + (~a + c | c) - 2 | a * -2",
                    "attributes": {
                        "numOps": 68,
                        "nestedExprLevel": 15,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 29.166666666666668,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 2.941176470588235,
                            "bitwise": 47.05882352941176
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                }
            }
        },
        {
            "num": 302,
            "gt": {
                "expr": "((~((~(d-d))&((a&(d^(d-a)))&d))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "- ((~ (~ d + d) | (((~ ((~ a | ((d | ((d + ~ a) + 1)) - (d & ((d + ~ a) + 1)))) - ~ a) | d) + ((~ a | ((d | ((d + ~ a) + 1)) - (d & ((d + ~ a) + 1)))) - ~ a)) + 1)) - ~ (~ d + d)) - 1",
                "attributes": {
                    "numOps": 40,
                    "nestedExprLevel": 21,
                    "numDAGs": 19,
                    "opsPercentages": {
                        "arithmetic": 47.5,
                        "mul": 0.0,
                        "bitwise": 52.5
                    },
                    "percentageDAGsCancel": 26.31578947368421
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-2 - ((~((d + ~a + 1 ^ d) & a) | d) + ((d + ~a + 1 ^ d) & a))",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 62.5,
                        "opsPercentages": {
                            "arithmetic": 46.666666666666664,
                            "mul": 0.0,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_O1": {
                    "expr": "((-3 - (~(a + 1 + (d + 1 + ~a | d) - (d + 1 + ~a & d) | ~a) | d)) - (d + 1 + ~a | d) - (d + 1 + ~a & d) | ~a) - a",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 7,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 25.0,
                        "opsPercentages": {
                            "arithmetic": 53.333333333333336,
                            "mul": 0.0,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "clang_O3": {
                    "expr": "-2 - ((~a | d) + a)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 87.5,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((d ^ 0xffffffff) + d ^ 0xffffffff | ((a ^ 0xffffffff | (d | d + (a ^ 0xffffffff) + 1) - (d & d + (a ^ 0xffffffff) + 1)) - (a ^ 0xffffffff) ^ 0xffffffff | d) + ((a ^ 0xffffffff | (d | d + (a ^ 0xffffffff) + 1) - (d & d + (a ^ 0xffffffff) + 1)) - (a ^ 0xffffffff)) + 1) - ((d ^ 0xffffffff) + d ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 15,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 47.5,
                            "mul": 0.0,
                            "bitwise": 52.5
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((~(~d + d) | (~((~a | (d + 1 + ~a | d) - (d + 1 + ~a & d)) - ~a) | d) + 1 + ((~a | (d + 1 + ~a | d) - (d + 1 + ~a & d)) - ~a)) - ~(~d + d))",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 11,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 47.5,
                            "mul": 0.0,
                            "bitwise": 52.5
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "gcc_O3": {
                    "expr": "-2 - ((~a | d) + a)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 87.5,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 303,
            "gt": {
                "expr": "((e-(~((c*e)*c))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 50.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(e & ~ (- ((((c & e) * (c | e) + (c & ~ e) * (~ c & e)) & c) * (((c & e) * (c | e) + (c & ~ e) * (~ c & e)) | c) + (((c & e) * (c | e) + (c & ~ e) * (~ c & e)) & ~ c) * (~ ((c & e) * (c | e) + (c & ~ e) * (~ c & e)) & c)) - 1)) - (~ e & (- ((((c & e) * (c | e) + (c & ~ e) * (~ c & e)) & c) * (((c & e) * (c | e) + (c & ~ e) * (~ c & e)) | c) + (((c & e) * (c | e) + (c & ~ e) * (~ c & e)) & ~ c) * (~ ((c & e) * (c | e) + (c & ~ e) * (~ c & e)) & c)) - 1))",
                "attributes": {
                    "numOps": 99,
                    "nestedExprLevel": 39,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 15.151515151515152,
                        "mul": 20.2020202020202,
                        "bitwise": 64.64646464646465
                    },
                    "percentageDAGsCancel": 4.3478260869565215
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~((~c & e) * (~e & c) + (c & e) * (c | e)) & c) * ((c & e) * (c | e) + (~c & e) * (~e & c) & ~c) + ((~c & e) * (~e & c) + (c & e) * (c | e) & c) * ((~c & e) * (~e & c) + (c & e) * (c | e) | c) & e) - ~((~((~c & e) * (~e & c) + (c & e) * (c | e)) & c) * ((c & e) * (c | e) + (~c & e) * (~e & c) & ~c) + ((~c & e) * (~e & c) + (c & e) * (c | e) & c) * ((~c & e) * (~e & c) + (c & e) * (c | e) | c) | e)",
                    "attributes": {
                        "numOps": 94,
                        "nestedExprLevel": 29,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 5.05050505050505,
                        "opsPercentages": {
                            "arithmetic": 11.702127659574469,
                            "mul": 21.27659574468085,
                            "bitwise": 67.02127659574468
                        },
                        "percentageDAGsCancel": 13.636363636363635
                    }
                },
                "msvc_O1": {
                    "expr": "(~~((~(c | e) * (c & e) + (~c & e) * (~e & c) & c) * ((c | e) * (c & e) + (~c & e) * (~e & c) & ~c)) - ((c | e) * (c & e) + (~c & e) * (~e & c) | c) * ((c | e) * (c & e) + (~c & e) * (~e & c) & c) & e) - (~((~(c | e) * (c & e) + (~c & e) * (~e & c) & c) * ((c | e) * (c & e) + (~c & e) * (~e & c) & ~c)) - ((c | e) * (c & e) + (~c & e) * (~e & c) | c) * ((c | e) * (c & e) + (~c & e) * (~e & c) & c) & ~e)",
                    "attributes": {
                        "numOps": 97,
                        "nestedExprLevel": 29,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 2.0202020202020203,
                        "opsPercentages": {
                            "arithmetic": 11.34020618556701,
                            "mul": 20.618556701030926,
                            "bitwise": 68.04123711340206
                        },
                        "percentageDAGsCancel": 8.0
                    }
                },
                "clang_O3": {
                    "expr": "((~(~c & e) * (~e & c) + (e | c) * (e & c) & c) * (~c & (~c & e) * (~e & c) + (e | c) * (e & c)) + ((~c & e) * (~e & c) + (e | c) * (e & c) | c) * ((~c & e) * (~e & c) + (e | c) * (e & c) & c) & e) - (~(~(~c & e) * (~e & c) + (e | c) * (e & c) & c) * (~c & (~c & e) * (~e & c) + (e | c) * (e & c)) + ((~c & e) * (~e & c) + (e | c) * (e & c) | c) * ((~c & e) * (~e & c) + (e | c) * (e & c) & c) & ~e)",
                    "attributes": {
                        "numOps": 95,
                        "nestedExprLevel": 27,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 4.040404040404041,
                        "opsPercentages": {
                            "arithmetic": 11.578947368421053,
                            "mul": 21.052631578947366,
                            "bitwise": 67.36842105263158
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(e & (0xffffffff - (((c & e) * (c | e) + (c & (e ^ 0xffffffff)) * ((c ^ 0xffffffff) & e) & c) * ((c & e) * (c | e) + (c & (e ^ 0xffffffff)) * ((c ^ 0xffffffff) & e) | c) + ((c & e) * (c | e) + (c & (e ^ 0xffffffff)) * ((c ^ 0xffffffff) & e) & (c ^ 0xffffffff)) * (((c & e) * (c | e) + (c & (e ^ 0xffffffff)) * ((c ^ 0xffffffff) & e) ^ 0xffffffff) & c)) ^ 0xffffffff)) - ((e ^ 0xffffffff) & 0xffffffff - (((c & e) * (c | e) + (c & (e ^ 0xffffffff)) * ((c ^ 0xffffffff) & e) & c) * ((c & e) * (c | e) + (c & (e ^ 0xffffffff)) * ((c ^ 0xffffffff) & e) | c) + ((c & e) * (c | e) + (c & (e ^ 0xffffffff)) * ((c ^ 0xffffffff) & e) & (c ^ 0xffffffff)) * (((c & e) * (c | e) + (c & (e ^ 0xffffffff)) * ((c ^ 0xffffffff) & e) ^ 0xffffffff) & c)))",
                    "attributes": {
                        "numOps": 97,
                        "nestedExprLevel": 43,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 2.0202020202020203,
                        "opsPercentages": {
                            "arithmetic": 13.402061855670103,
                            "mul": 20.618556701030926,
                            "bitwise": 65.97938144329896
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_default": {
                    "expr": "(~(0xffffffff - (((c & e) * (c | e) + (~e & c) * (~c & e) & c) * ((c & e) * (c | e) + (~e & c) * (~c & e) | c) + ((c & e) * (c | e) + (~e & c) * (~c & e) & ~c) * (~((c & e) * (c | e) + (~e & c) * (~c & e)) & c))) & e) - (~e & 0xffffffff - (((c & e) * (c | e) + (~e & c) * (~c & e) & c) * ((c & e) * (c | e) + (~e & c) * (~c & e) | c) + ((c & e) * (c | e) + (~e & c) * (~c & e) & ~c) * (~((c & e) * (c | e) + (~e & c) * (~c & e)) & c)))",
                    "attributes": {
                        "numOps": 97,
                        "nestedExprLevel": 32,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 2.0202020202020203,
                        "opsPercentages": {
                            "arithmetic": 13.402061855670103,
                            "mul": 20.618556701030926,
                            "bitwise": 65.97938144329896
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "gcc_O3": {
                    "expr": "((~c & (~e & c) * (~c & e) + (c & e) * (c | e)) * (~(~e & c) * (~c & e) + (c & e) * (c | e) & c) + ((~e & c) * (~c & e) + (c & e) * (c | e) | c) * ((~e & c) * (~c & e) + (c & e) * (c | e) & c) & e) - ~((~c & (~e & c) * (~c & e) + (c & e) * (c | e)) * (~(~e & c) * (~c & e) + (c & e) * (c | e) & c) + ((~e & c) * (~c & e) + (c & e) * (c | e) | c) * ((~e & c) * (~c & e) + (c & e) * (c | e) & c) | e)",
                    "attributes": {
                        "numOps": 94,
                        "nestedExprLevel": 27,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 5.05050505050505,
                        "opsPercentages": {
                            "arithmetic": 11.702127659574469,
                            "mul": 21.27659574468085,
                            "bitwise": 67.02127659574468
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                }
            }
        },
        {
            "num": 304,
            "gt": {
                "expr": "((~((b|b)*(~(e*(e-(b-b)))))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 28.57142857142857,
                        "mul": 28.57142857142857,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 42.857142857142854
                }
            },
            "mba": {
                "expr": "- (((((b + b) + 1) + ((- b - 1) | (- b - 1))) & (- ((e & ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1))) * (e | ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1))) + (e & ~ ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1))) * (~ e & ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1)))) - 1)) * ((((b + b) + 1) + ((- b - 1) | (- b - 1))) | (- ((e & ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1))) * (e | ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1))) + (e & ~ ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1))) * (~ e & ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1)))) - 1)) + ((((b + b) + 1) + ((- b - 1) | (- b - 1))) & ~ (- ((e & ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1))) * (e | ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1))) + (e & ~ ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1))) * (~ e & ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1)))) - 1)) * (~ (((b + b) + 1) + ((- b - 1) | (- b - 1))) & (- ((e & ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1))) * (e | ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1))) + (e & ~ ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1))) * (~ e & ((e ^ (((b & ~ b) << 1) - (b ^ b))) - ((~ e & (((b & ~ b) << 1) - (b ^ b))) << 1)))) - 1))) - 1",
                "attributes": {
                    "numOps": 327,
                    "nestedExprLevel": 206,
                    "numDAGs": 37,
                    "opsPercentages": {
                        "arithmetic": 27.82874617737003,
                        "mul": 3.058103975535168,
                        "bitwise": 69.1131498470948
                    },
                    "percentageDAGsCancel": 40.54054054054054
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((~(e * e) & -b - 1) * (b * 2 + 1 + ~b & e * e) + (b * 2 + 1 + ~b & ~(e * e)) * (~(e * e) | b * 2 + 1 + ~b))",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 91.13149847094802,
                        "opsPercentages": {
                            "arithmetic": 31.03448275862069,
                            "mul": 31.03448275862069,
                            "bitwise": 37.93103448275862
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_O1": {
                    "expr": "~((~b & ~(e * e)) * (e * e & b)) - (~(e * e) | b) * (~(e * e) & b)",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 7,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 95.10703363914374,
                        "opsPercentages": {
                            "arithmetic": 6.25,
                            "mul": 37.5,
                            "bitwise": 56.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((~(e * e) & ~b) * (e * e & b) + (~(e * e) | b) * (~(e * e) & b))",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 7,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 95.10703363914374,
                        "opsPercentages": {
                            "arithmetic": 6.25,
                            "mul": 37.5,
                            "bitwise": 56.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) & 0xffffffff - ((e & (e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2) * (e | (e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2) + (e & ((e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2 ^ 0xffffffff)) * ((e ^ 0xffffffff) & (e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2))) * (b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) | 0xffffffff - ((e & (e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2) * (e | (e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2) + (e & ((e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2 ^ 0xffffffff)) * ((e ^ 0xffffffff) & (e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2))) + (b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) & (0xffffffff - ((e & (e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2) * (e | (e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2) + (e & ((e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2 ^ 0xffffffff)) * ((e ^ 0xffffffff) & (e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2)) ^ 0xffffffff )) * ((b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) ^ 0xffffffff) & 0xffffffff - ((e & (e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2) * (e | (e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2) + (e & ((e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2 ^ 0xffffffff)) * ((e ^ 0xffffffff) & (e ^ (b & (b ^ 0xffffffff)) * 2) + ((e ^ 0xffffffff) & (b & (b ^ 0xffffffff)) * 2) * -2))))",
                    "attributes": {
                        "numOps": 267,
                        "nestedExprLevel": 97,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 18.34862385321101,
                        "opsPercentages": {
                            "arithmetic": 22.09737827715356,
                            "mul": 23.220973782771537,
                            "bitwise": 54.68164794007491
                        },
                        "percentageDAGsCancel": 35.294117647058826
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) & 0xffffffff - e * e) * (b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) | 0xffffffff - e * e) + (b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) & ~(0xffffffff - e * e)) * (~(b * 2 + 1 + (0xffffffff - b | 0xffffffff - b)) & 0xffffffff - e * e))",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 86.85015290519877,
                        "opsPercentages": {
                            "arithmetic": 53.48837209302325,
                            "mul": 23.25581395348837,
                            "bitwise": 23.25581395348837
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~((-b - 1 & ~(e * e)) * (e * e & b) + (b & ~(e * e)) * (b | ~(e * e)))",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 7,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 94.80122324159022,
                        "opsPercentages": {
                            "arithmetic": 17.647058823529413,
                            "mul": 35.294117647058826,
                            "bitwise": 47.05882352941176
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 305,
            "gt": {
                "expr": "(((((a*e)&e)*b)-((~b)^(a^(-(-e))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 22.22222222222222,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "(((((~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e)) | e) - ~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e))) & b) * (((~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e)) | e) - ~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e))) | b) + (((~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e)) | e) - ~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e))) & ~ b) * (~ ((~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e)) | e) - ~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e))) & b)) & ~ (((- b - 1) | ((a | ~ ((~ e + 1) - 1)) - (a & ~ ((~ e + 1) - 1)))) - ((- b - 1) & ((a | ~ ((~ e + 1) - 1)) - (a & ~ ((~ e + 1) - 1)))))) - (~ ((((~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e)) | e) - ~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e))) & b) * (((~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e)) | e) - ~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e))) | b) + (((~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e)) | e) - ~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e))) & ~ b) * (~ ((~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e)) | e) - ~ ((a & e) * (a | e) + (a & ~ e) * (~ a & e))) & b)) & (((- b - 1) | ((a | ~ ((~ e + 1) - 1)) - (a & ~ ((~ e + 1) - 1)))) - ((- b - 1) & ((a | ~ ((~ e + 1) - 1)) - (a & ~ ((~ e + 1) - 1))))))",
                "attributes": {
                    "numOps": 257,
                    "nestedExprLevel": 104,
                    "numDAGs": 37,
                    "opsPercentages": {
                        "arithmetic": 22.17898832684825,
                        "mul": 14.007782101167315,
                        "bitwise": 63.81322957198443
                    },
                    "percentageDAGsCancel": 5.405405405405405
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~a & e) * (~e & a) + (a & e) * (a | e) & e & b) * ((~a & e) * (~e & a) + (a & e) * (a | e) & e | b) + (~((~a & e) * (~e & a) + (a & e) * (a | e) & e) & b) * ((~a & e) * (~e & a) + (a & e) * (a | e) & e & ~b) & (a ^ e ^ b)) - ~(a ^ e ^ b | ((~a & e) * (~e & a) + (a & e) * (a | e) & e & b) * ((~a & e) * (~e & a) + (a & e) * (a | e) & e | b) + (~((~a & e) * (~e & a) + (a & e) * (a | e) & e) & b) * ((~a & e) * (~e & a) + (a & e) * (a | e) & e & ~b))",
                    "attributes": {
                        "numOps": 106,
                        "nestedExprLevel": 29,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 58.754863813229576,
                        "opsPercentages": {
                            "arithmetic": 10.377358490566039,
                            "mul": 18.867924528301888,
                            "bitwise": 70.75471698113208
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~((a | e) - (a & e) | ~b) - ((a | e) - (a & e) & ~b) & (b & (~e & a) * (~a & e) + 1 + (~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) + (a & e) * (a | e)) * ((~e & a) * (~a & e) + 1 + (~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) + (a & e) * (a | e) | b) + (~(~e & a) * (~a & e) + 1 + (~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) + (a & e) * (a | e) & b) * ((~e & a) * (~a & e) + 1 + (~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) + (a & e) * (a | e) & ~b)) - (~(b & (~e & a) * (~a & e) + 1 + (~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) + (a & e) * (a | e)) * ((~e & a) * (~a & e) + 1 + (~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) + (a & e) * (a | e) | b) + (~(~e & a) * (~a & e) + 1 + (~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) + (a & e) * (a | e) & b) * ((~e & a) * (~a & e) + 1 + (~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) + (a & e) * (a | e) & ~b) & ((a | e) - (a & e) | ~b) - ((a | e) - (a & e) & ~b))",
                    "attributes": {
                        "numOps": 221,
                        "nestedExprLevel": 67,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 14.007782101167315,
                        "opsPercentages": {
                            "arithmetic": 18.552036199095024,
                            "mul": 16.289592760180994,
                            "bitwise": 65.15837104072398
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "clang_O3": {
                    "expr": "((~(~a & e) * (~e & a) + (e | a) * (e & a) & e & b) * (~b & (~a & e) * (~e & a) + (e | a) * (e & a) & e) + ((~a & e) * (~e & a) + (e | a) * (e & a) & e | b) * ((~a & e) * (~e & a) + (e | a) * (e & a) & e & b) & e) + (e | (~(~a & e) * (~e & a) + (e | a) * (e & a) & e & b) * (~b & (~a & e) * (~e & a) + (e | a) * (e & a) & e) + ((~a & e) * (~e & a) + (e | a) * (e & a) & e | b) * ((~a & e) * (~e & a) + (e | a) * (e & a) & e & b)) + 1",
                    "attributes": {
                        "numOps": 102,
                        "nestedExprLevel": 27,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 60.311284046692606,
                        "opsPercentages": {
                            "arithmetic": 11.76470588235294,
                            "mul": 19.607843137254903,
                            "bitwise": 68.62745098039215
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "clang_default": {
                    "expr": "((((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff | e) - ((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff) & b) * (((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff | e) - ((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff) | b) + (((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff | e) - ((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff) & (b ^ 0xffffffff)) * ((((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff | e) - ((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff) ^ 0xffffffff) & b) & ((0xffffffff - b | (a | e) - (a & e)) - (0xffffffff - b & (a | e) - (a & e)) ^ 0xffffffff)) - (((((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff | e) - ((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff) & b) * (((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff | e) - ((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff) | b) + (((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff | e) - ((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff) & (b ^ 0xffffffff)) * ((((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff | e) - ((a & e) * (a | e) + (a & (e ^ 0xffffffff)) * ((a ^ 0xffffffff) & e) ^ 0xffffffff) ^ 0xffffffff) & b) ^ 0xffffffff) & (0xffffffff - b | (a | e) - (a & e)) - (0xffffffff - b & (a | e) - (a & e)))",
                    "attributes": {
                        "numOps": 221,
                        "nestedExprLevel": 89,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 14.007782101167315,
                        "opsPercentages": {
                            "arithmetic": 16.7420814479638,
                            "mul": 16.289592760180994,
                            "bitwise": 66.9683257918552
                        },
                        "percentageDAGsCancel": 6.451612903225806
                    }
                },
                "msvc_default": {
                    "expr": "(((~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) - ~((a & e) * (a | e) + (~e & a) * (~a & e) ) & b) * ((~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) - ~((a & e) * (a | e) + (~e & a) * (~a & e) ) | b) + ((~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) - ~((a & e) * (a | e) + (~e & a) * (~a & e) ) & ~b) * (~((~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) - ~((a & e) * (a | e) + (~e & a) * (~a & e))) & b) & ~((0xffffffff - b | (e | a) - (e & a)) - (0xffffffff - b & (e | a) - (e & a)))) - (~(((~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) - ~((a & e) * (a | e) + (~e & a) * (~a & e)) & b) * ((~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) - ~((a & e) * (a | e) + (~e & a) * (~a & e)) | b) + ((~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) - ~((a & e) * (a | e) + (~e & a) * (~a & e)) & ~b) * (~((~((a & e) * (a | e) + (~e & a) * (~a & e)) | e) - ~((a & e) * (a | e) + (~e & a) * (~a & e))) & b)) & (0xffffffff - b | (e | a) - (e & a)) - (0xffffffff - b & (e | a) - (e & a)))",
                    "attributes": {
                        "numOps": 221,
                        "nestedExprLevel": 79,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 14.007782101167315,
                        "opsPercentages": {
                            "arithmetic": 16.7420814479638,
                            "mul": 16.289592760180994,
                            "bitwise": 66.9683257918552
                        },
                        "percentageDAGsCancel": 15.151515151515152
                    }
                },
                "gcc_O3": {
                    "expr": "((~b & (~e & a) * (~a & e) + (a & e) * (a | e) & e) * (~(~e & a) * (~a & e) + (a & e) * (a | e) & e & b) + ((~e & a) * (~a & e) + (a & e) * (a | e) & e | b) * ((~e & a) * (~a & e) + (a & e) * (a | e) & e & b) & a) - ~((~b & (~e & a) * (~a & e) + (a & e) * (a | e) & e) * (~(~e & a) * (~a & e) + (a & e) * (a | e) & e & b) + ((~e & a) * (~a & e) + (a & e) * (a | e) & e | b) * ((~e & a) * (~a & e) + (a & e) * (a | e) & e & b) | a)",
                    "attributes": {
                        "numOps": 102,
                        "nestedExprLevel": 27,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 60.311284046692606,
                        "opsPercentages": {
                            "arithmetic": 10.784313725490197,
                            "mul": 19.607843137254903,
                            "bitwise": 69.6078431372549
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                }
            }
        },
        {
            "num": 306,
            "gt": {
                "expr": "(((-(e+(c-c)))^((~b)*(b&(b+e)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 12.5,
                        "bitwise": 37.5
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((~ (((e ^ (((c & ~ c) + (c & ~ c)) - (c ^ c))) + ((e & (((c & ~ c) + (c & ~ c)) - (c ^ c))) + (e & (((c & ~ c) + (c & ~ c)) - (c ^ c))))) - 1) - (((- b - 1) & (((~ b | ((b | e) + (b & e))) + b) + 1)) * ((- b - 1) | (((~ b | ((b | e) + (b & e))) + b) + 1)) + ((- b - 1) & ~ (((~ b | ((b | e) + (b & e))) + b) + 1)) * (~ (- b - 1) & (((~ b | ((b | e) + (b & e))) + b) + 1)))) - ((~ (((e ^ (((c & ~ c) + (c & ~ c)) - (c ^ c))) + ((e & (((c & ~ c) + (c & ~ c)) - (c ^ c))) + (e & (((c & ~ c) + (c & ~ c)) - (c ^ c))))) - 1) | ~ (((- b - 1) & (((~ b | ((b | e) + (b & e))) + b) + 1)) * ((- b - 1) | (((~ b | ((b | e) + (b & e))) + b) + 1)) + ((- b - 1) & ~ (((~ b | ((b | e) + (b & e))) + b) + 1)) * (~ (- b - 1) & (((~ b | ((b | e) + (b & e))) + b) + 1)))) + (~ (((e ^ (((c & ~ c) + (c & ~ c)) - (c ^ c))) + ((e & (((c & ~ c) + (c & ~ c)) - (c ^ c))) + (e & (((c & ~ c) + (c & ~ c)) - (c ^ c))))) - 1) | ~ (((- b - 1) & (((~ b | ((b | e) + (b & e))) + b) + 1)) * ((- b - 1) | (((~ b | ((b | e) + (b & e))) + b) + 1)) + ((- b - 1) & ~ (((~ b | ((b | e) + (b & e))) + b) + 1)) * (~ (- b - 1) & (((~ b | ((b | e) + (b & e))) + b) + 1)))))) - 2",
                "attributes": {
                    "numOps": 227,
                    "nestedExprLevel": 126,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 41.409691629955944,
                        "mul": 2.643171806167401,
                        "bitwise": 55.947136563876654
                    },
                    "percentageDAGsCancel": 34.285714285714285
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-((b + (~b | e + b) + 1 & b) * (~b & -((~b | e + b) + b) - 2) + (~b & b + (~b | e + b) + 1) * (b + (~b | e + b) + 1 | ~b)) - e) + (~((b + (~b | e + b) + 1 & b) * (~b & -((~b | e + b) + b) - 2) + (~b & b + (~b | e + b) + 1) * (b + (~b | e + b) + 1 | ~b)) | -e) * -2 + -2",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 16,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 68.28193832599119,
                        "opsPercentages": {
                            "arithmetic": 48.61111111111111,
                            "mul": 6.944444444444445,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_O1": {
                    "expr": "((~(e - 1) - ((~((((b | e) + (b & e) | ~b) + 1 + b | ~b) * (((b | e) + (b & e) | ~b) + 1 + b & ~b) + (~((b | e) + (b & e) | ~b) + 1 + b & ~b) * (((b | e) + (b & e) | ~b) + 1 + b & b)) | ~(e - 1)) * 2 + 2)) - (((b | e) + (b & e) | ~b) + 1 + b | ~b) * (((b | e) + (b & e) | ~b) + 1 + b & ~b)) - (~((b | e) + (b & e) | ~b) + 1 + b & ~b) * (((b | e) + (b & e) | ~b) + 1 + b & b)",
                    "attributes": {
                        "numOps": 88,
                        "nestedExprLevel": 30,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 61.23348017621145,
                        "opsPercentages": {
                            "arithmetic": 35.22727272727273,
                            "mul": 5.681818181818182,
                            "bitwise": 59.09090909090909
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "clang_O3": {
                    "expr": "-2 - ((e + b | ~b + b + 1 & b) * (-(e + b | ~b + b) - 2 & ~b) + (e + b | ~b + b + 1 | ~b) * (e + b | ~b + b + 1 & ~b) + e + (~(e + b | ~b + b + 1 & b) * (-(e + b | ~b + b) - 2 & ~b) + (e + b | ~b + b + 1 | ~b) * (e + b | ~b + b + 1 & ~b) | -e) * 2)",
                    "attributes": {
                        "numOps": 70,
                        "nestedExprLevel": 8,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 69.16299559471366,
                        "opsPercentages": {
                            "arithmetic": 47.14285714285714,
                            "mul": 7.142857142857142,
                            "bitwise": 45.714285714285715
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_default": {
                    "expr": "(((((e ^ (c & (c ^ 0xffffffff)) + (c & (c ^ 0xffffffff))) + (e & (c & (c ^ 0xffffffff)) + (c & (c ^ 0xffffffff))) + (e & (c & (c ^ 0xffffffff)) + (c & (c ^ 0xffffffff)))) - 1 ^ 0xffffffff) - ((0xffffffff - b & (b ^ 0xffffffff | (b | e) + (b & e)) + b + 1) * (0xffffffff - b | (b ^ 0xffffffff | (b | e) + (b & e)) + b + 1) + (0xffffffff - b & ((b ^ 0xffffffff | (b | e) + (b & e)) + b + 1 ^ 0xffffffff )) * ((0xffffffff - b ^ 0xffffffff) & (b ^ 0xffffffff | (b | e) + (b & e)) + b + 1))) - ((((e ^ (c & (c ^ 0xffffffff)) + (c & (c ^ 0xffffffff))) + (e & (c & (c ^ 0xffffffff)) + (c & (c ^ 0xffffffff))) + (e & (c & (c ^ 0xffffffff)) + (c & (c ^ 0xffffffff)))) - 1 ^ 0xffffffff | (0xffffffff - b & (b ^ 0xffffffff | (b | e) + (b & e)) + b + 1) * (0xffffffff - b | (b ^ 0xffffffff | (b | e) + (b & e)) + b + 1) + (0xffffffff - b & ((b ^ 0xffffffff | (b | e) + (b & e)) + b + 1 ^ 0xffffffff )) * ((0xffffffff - b ^ 0xffffffff) & (b ^ 0xffffffff | (b | e) + (b & e)) + b + 1) ^ 0xffffffff) + (((e ^ (c & (c ^ 0xffffffff)) + (c & (c ^ 0xffffffff))) + (e & (c & (c ^ 0xffffffff)) + (c & (c ^ 0xffffffff))) + (e & (c & (c ^ 0xffffffff)) + (c & (c ^ 0xffffffff)))) - 1 ^ 0xffffffff | (0xffffffff - b & (b ^ 0xffffffff | (b | e) + (b & e)) + b + 1) * (0xffffffff - b | (b ^ 0xffffffff | (b | e) + (b & e)) + b + 1) + (0xffffffff - b & ((b ^ 0xffffffff | (b | e) + (b & e)) + b + 1 ^ 0xffffffff) ) * ((0xffffffff - b ^ 0xffffffff) & (b ^ 0xffffffff | (b | e) + (b & e)) + b + 1) ^ 0xffffffff))) + -2",
                    "attributes": {
                        "numOps": 198,
                        "nestedExprLevel": 77,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 12.77533039647577,
                        "opsPercentages": {
                            "arithmetic": 37.37373737373738,
                            "mul": 3.0303030303030303,
                            "bitwise": 59.59595959595959
                        },
                        "percentageDAGsCancel": 27.27272727272727
                    }
                },
                "msvc_default": {
                    "expr": "((~(e - 1) - ((0xffffffff - b & (~b | (b | e) + (b & e)) + 1 + b) * (0xffffffff - b | (~b | (b | e) + (b & e)) + 1 + b) + (0xffffffff - b & ~((~b | (b | e) + (b & e)) + 1 + b)) * (~(0xffffffff - b) & (~b | (b | e) + (b & e)) + 1 + b))) - ((~(e - 1) | ~((0xffffffff - b & (~b | (b | e) + (b & e)) + 1 + b) * (0xffffffff - b | (~b | (b | e) + (b & e)) + 1 + b) + (0xffffffff - b & ~((~b | (b | e) + (b & e)) + 1 + b)) * (~(0xffffffff - b) & (~b | (b | e) + (b & e)) + 1 + b))) + (~(e - 1) | ~((0xffffffff - b & (~b | (b | e) + (b & e)) + 1 + b) * (0xffffffff - b | (~b | (b | e) + (b & e)) + 1 + b) + (0xffffffff - b & ~((~b | (b | e) + (b & e)) + 1 + b)) * (~(0xffffffff - b) & (~b | (b | e) + (b & e)) + 1 + b))))) + -2",
                    "attributes": {
                        "numOps": 138,
                        "nestedExprLevel": 48,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 39.20704845814978,
                        "opsPercentages": {
                            "arithmetic": 42.7536231884058,
                            "mul": 4.3478260869565215,
                            "bitwise": 52.89855072463768
                        },
                        "percentageDAGsCancel": 11.538461538461538
                    }
                },
                "gcc_O3": {
                    "expr": "(-e - (-(e + b | ~b) + b - 2 & ~b) * (b & (e + b | ~b) + b + 1) + (~b & (e + b | ~b) + b + 1) * (~b | (e + b | ~b) + b + 1)) + (~(-(e + b | ~b) + b - 2 & ~b) * (b & (e + b | ~b) + b + 1) + (~b & (e + b | ~b) + b + 1) * (~b | (e + b | ~b) + b + 1) | -e) * -2 + -2",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 12,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 68.28193832599119,
                        "opsPercentages": {
                            "arithmetic": 48.61111111111111,
                            "mul": 6.944444444444445,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 12.0
                    }
                }
            }
        },
        {
            "num": 307,
            "gt": {
                "expr": "(((((-a)+(a^a))|(-a))^(a*a)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 14.285714285714285,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "(((((((~ (a - 1) | ((a | a) - (a & a))) + (~ (a - 1) | ((a | a) - (a & a)))) - (~ (a - 1) ^ ((a | a) - (a & a)))) + ~ (a - 1)) + 1) + ((- (((~ (a - 1) | ((a | a) - (a & a))) + (~ (a - 1) | ((a | a) - (a & a)))) - (~ (a - 1) ^ ((a | a) - (a & a)))) - 1) | (- (~ (a - 1)) - 1))) | ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) - (((((((~ (a - 1) | ((a | a) - (a & a))) + (~ (a - 1) | ((a | a) - (a & a)))) - (~ (a - 1) ^ ((a | a) - (a & a)))) + ~ (a - 1)) + 1) + ((- (((~ (a - 1) | ((a | a) - (a & a))) + (~ (a - 1) | ((a | a) - (a & a)))) - (~ (a - 1) ^ ((a | a) - (a & a)))) - 1) | (- (~ (a - 1)) - 1))) & ((a & a) * (a | a) + (a & ~ a) * (~ a & a)))",
                "attributes": {
                    "numOps": 125,
                    "nestedExprLevel": 67,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 42.4,
                        "mul": 3.2,
                        "bitwise": 54.400000000000006
                    },
                    "percentageDAGsCancel": 30.76923076923077
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "a * a ^ -a",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 1,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 97.6,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 33.33333333333333,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(a - 1) | a * a) - (~(a - 1) & a * a)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 92.80000000000001,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 22.22222222222222,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-a ^ a * a",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 1,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 97.6,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 33.33333333333333,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((a - 1 ^ 0xffffffff) + (a - 1 ^ 0xffffffff)) - (a - 1 ^ 0xffffffff)) + (a - 1 ^ 0xffffffff) + 1 + (0xffffffff - (((a - 1 ^ 0xffffffff) + (a - 1 ^ 0xffffffff)) - (a - 1 ^ 0xffffffff)) | 0xffffffff - (a - 1 ^ 0xffffffff)) | a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a)) - ((((a - 1 ^ 0xffffffff) + (a - 1 ^ 0xffffffff)) - (a - 1 ^ 0xffffffff)) + (a - 1 ^ 0xffffffff) + 1 + (0xffffffff - (((a - 1 ^ 0xffffffff) + (a - 1 ^ 0xffffffff)) - (a - 1 ^ 0xffffffff)) | 0xffffffff - (a - 1 ^ 0xffffffff)) & a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a))",
                    "attributes": {
                        "numOps": 69,
                        "nestedExprLevel": 26,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 44.800000000000004,
                        "opsPercentages": {
                            "arithmetic": 53.62318840579711,
                            "mul": 5.797101449275362,
                            "bitwise": 40.57971014492754
                        },
                        "percentageDAGsCancel": 15.789473684210526
                    }
                },
                "msvc_default": {
                    "expr": "(((~(a - 1) + ~(a - 1)) - ~(a - 1)) + ~(a - 1) + 1 + (0xffffffff - ((~(a - 1) + ~(a - 1)) - ~(a - 1)) | 0xffffffff - ~(a - 1)) | a * a) - (((~(a - 1) + ~(a - 1)) - ~(a - 1)) + ~(a - 1) + 1 + (0xffffffff - ((~(a - 1) + ~(a - 1)) - ~(a - 1)) | 0xffffffff - ~(a - 1)) & a * a)",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 21,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 54.400000000000006,
                        "opsPercentages": {
                            "arithmetic": 61.40350877192983,
                            "mul": 3.508771929824561,
                            "bitwise": 35.08771929824561
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-a ^ a * a",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 1,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 97.6,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 33.33333333333333,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 308,
            "gt": {
                "expr": "(((e-(a+a))+(~(c&(c^c)))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "((((e + ~ ((a | a) + (a & a))) + 1) ^ ~ (- (((~ c | (((c - c) - ((c | ~ c) + (c | ~ c))) - 2)) + c) + 1) - 1)) + ((((e + ~ ((a | a) + (a & a))) + 1) | (- (((~ c | (((c - c) - ((c | ~ c) + (c | ~ c))) - 2)) + c) + 1) - 1)) << 1)) + 1",
                "attributes": {
                    "numOps": 46,
                    "nestedExprLevel": 29,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 52.17391304347826,
                        "mul": 0.0,
                        "bitwise": 47.82608695652174
                    },
                    "percentageDAGsCancel": 30.434782608695656
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "e + ~(a * 2)",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 93.47826086956522,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 33.33333333333333,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(a * 2) + e",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 93.47826086956522,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 33.33333333333333,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~(a * 2) + e",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 93.47826086956522,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 33.33333333333333,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(e + (a * 2 ^ 0xffffffff) + 1 ^ 0xffffffff - ((c ^ 0xffffffff | 0xfffffffe - ((c | c ^ 0xffffffff) + (c | c ^ 0xffffffff))) + c + 1) ^ 0xffffffff) + (e + (a * 2 ^ 0xffffffff) + 1 | 0xffffffff - ((c ^ 0xffffffff | 0xfffffffe - ((c | c ^ 0xffffffff) + (c | c ^ 0xffffffff))) + c + 1)) * 2 + 1",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 11,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 21.73913043478261,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 8.333333333333332,
                            "bitwise": 47.22222222222222
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "msvc_default": {
                    "expr": "(e + 1 + ~(a * 2) ^ ~(0xffffffff - (~c + 1 + c))) + 1 + (e + 1 + ~(a * 2) | 0xffffffff - (~c + 1 + c)) * 2",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 5,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 52.17391304347826,
                        "opsPercentages": {
                            "arithmetic": 54.54545454545454,
                            "mul": 13.636363636363635,
                            "bitwise": 31.818181818181817
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "gcc_O3": {
                    "expr": "~(a * 2) + e",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 93.47826086956522,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 33.33333333333333,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 309,
            "gt": {
                "expr": "(((-((d-c)+(~d)))|((-e)|(-(e-d)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 0.0,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ ((((d & ~ c) - (~ d & c)) ^ (- d - 1)) + ((((d & ~ c) - (~ d & c)) & (- d - 1)) << 1)) + 1) & ~ ((~ (e - 1) & ~ (~ (((e & ~ d) + (e & ~ d)) - (e ^ d)) + 1)) + (~ (((e & ~ d) + (e & ~ d)) - (e ^ d)) + 1))) + ((~ (e - 1) & ~ (~ (((e & ~ d) + (e & ~ d)) - (e ^ d)) + 1)) + (~ (((e & ~ d) + (e & ~ d)) - (e ^ d)) + 1))",
                "attributes": {
                    "numOps": 69,
                    "nestedExprLevel": 32,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 36.231884057971016,
                        "mul": 0.0,
                        "bitwise": 63.76811594202898
                    },
                    "percentageDAGsCancel": 3.7037037037037033
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(e ^ d) + ~((~d & e) * 2) + 1 + (-e & ((~d & e) * 2 - (e ^ d)) - 1) + (-((~d & (~c & d) - (~d & c)) * 2 + (c + ~d ^ d)) & ~((e ^ d) + ~((~d & e) * 2) + 1 + (-e & ((~d & e) * 2 - (e ^ d)) - 1)))",
                    "attributes": {
                        "numOps": 48,
                        "nestedExprLevel": 14,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 30.434782608695656,
                        "opsPercentages": {
                            "arithmetic": 35.41666666666667,
                            "mul": 10.416666666666668,
                            "bitwise": 54.166666666666664
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "msvc_O1": {
                    "expr": "~((~d & e) * 2 - (d ^ e)) + 1 + (-(((-1 - d) * 2 & (~c & d) - (~d & c) * 2) + ((~c & d) - (~d & c) ^ ~d)) & ~(~((~d & e) * 2 - (d ^ e)) + 1 + ~(~((~d & e) * 2 - (d ^ e)) + 1 | e - 1))) + ~(~((~d & e) * 2 - (d ^ e)) + 1 | e - 1)",
                    "attributes": {
                        "numOps": 58,
                        "nestedExprLevel": 18,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 15.942028985507244,
                        "opsPercentages": {
                            "arithmetic": 32.758620689655174,
                            "mul": 10.344827586206897,
                            "bitwise": 56.896551724137936
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "clang_O3": {
                    "expr": "(~(~(e ^ d) + (~d & e) * -2 & -e) + (e ^ d) + (~d & e) * -2 & -(((~c & d) - (c & ~d) ^ ~d) + ((~c & d) - (c & ~d) & ~d) * 2)) + (~(e ^ d) + (~d & e) * -2 & -e) + (e ^ d) + (~d & e) * -2",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 13,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 24.637681159420293,
                        "opsPercentages": {
                            "arithmetic": 32.69230769230769,
                            "mul": 9.615384615384617,
                            "bitwise": 57.692307692307686
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((d & (c ^ 0xffffffff)) - ((d ^ 0xffffffff) & c) ^ 0xffffffff - d) + ((d & (c ^ 0xffffffff)) - ((d ^ 0xffffffff) & c) & 0xffffffff - d) * 2 ^ 0xffffffff) + 1 & (((e - 1 ^ 0xffffffff) & ((((e & (d ^ 0xffffffff)) + (e & (d ^ 0xffffffff))) - (e ^ d) ^ 0xffffffff) + 1 ^ 0xffffffff)) + (((e & (d ^ 0xffffffff)) + (e & (d ^ 0xffffffff))) - (e ^ d) ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((e - 1 ^ 0xffffffff) & ((((e & (d ^ 0xffffffff)) + (e & (d ^ 0xffffffff))) - (e ^ d) ^ 0xffffffff) + 1 ^ 0xffffffff)) + (((e & (d ^ 0xffffffff)) + (e & (d ^ 0xffffffff))) - (e ^ d) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 67,
                        "nestedExprLevel": 34,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 2.898550724637681,
                        "opsPercentages": {
                            "arithmetic": 34.32835820895522,
                            "mul": 1.4925373134328357,
                            "bitwise": 64.17910447761194
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                },
                "msvc_default": {
                    "expr": "(~(((~c & d) - (~d & c) ^ 0xffffffff - d) + ((~c & d) - (~d & c) & 0xffffffff - d) * 2) + 1 & ~((~(e - 1) & ~(~(((~d & e) + (~d & e)) - (e ^ d)) + 1)) + 1 + ~(((~d & e) + (~d & e)) - (e ^ d)))) + (~(e - 1) & ~(~(((~d & e) + (~d & e)) - (e ^ d)) + 1)) + 1 + ~(((~d & e) + (~d & e)) - (e ^ d))",
                    "attributes": {
                        "numOps": 67,
                        "nestedExprLevel": 25,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 2.898550724637681,
                        "opsPercentages": {
                            "arithmetic": 34.32835820895522,
                            "mul": 1.4925373134328357,
                            "bitwise": 64.17910447761194
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                },
                "gcc_O3": {
                    "expr": "(-((~d + c ^ d) + ((~c & d) - (~d & c) & ~d) * 2) & ~(((~d & e) * 2 - (d ^ e)) - 1 & -e) + (d ^ e) + (~d & e) * -2) + (((~d & e) * 2 - (d ^ e)) - 1 & -e) + (d ^ e) + (~d & e) * -2",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 13,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 33.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 36.95652173913043,
                            "mul": 10.869565217391305,
                            "bitwise": 52.17391304347826
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 310,
            "gt": {
                "expr": "(((e+(~e))^(((e&b)|e)-(-(-b)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((((e ^ ~ (- e - 1)) + ((e | (- e - 1)) << 1)) + 1) | (((((((~ e | b) - ~ e) + e) + 1) + ((- ((~ e | b) - ~ e) - 1) | (- e - 1))) & ~ (~ ((~ b + 1) - 1))) - (~ (((((~ e | b) - ~ e) + e) + 1) + ((- ((~ e | b) - ~ e) - 1) | (- e - 1))) & ~ ((~ b + 1) - 1)))) - ((((e ^ ~ (- e - 1)) + ((e | (- e - 1)) << 1)) + 1) & (((((((~ e | b) - ~ e) + e) + 1) + ((- ((~ e | b) - ~ e) - 1) | (- e - 1))) & ~ (~ ((~ b + 1) - 1))) - (~ (((((~ e | b) - ~ e) + e) + 1) + ((- ((~ e | b) - ~ e) - 1) | (- e - 1))) & ~ ((~ b + 1) - 1))))",
                "attributes": {
                    "numOps": 113,
                    "nestedExprLevel": 58,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 52.21238938053098,
                        "mul": 0.0,
                        "bitwise": 47.78761061946903
                    },
                    "percentageDAGsCancel": 17.24137931034483
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "b + ((b & e) - (e + (b & e) + 1))",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 4,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 94.69026548672566,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((e * -2 - 2 | e * 2) + 1 | (~b & ((~e - (~e | b)) - 1 | ~e) + (~e | b) + 2 + e * 2) - (~((~e - (~e | b)) - 1 | ~e) + (~e | b) + 2 + e * 2 & b)) - ((e * -2 - 2 | e * 2) + 1 & (~b & ((~e - (~e | b)) - 1 | ~e) + (~e | b) + 2 + e * 2) - (~((~e - (~e | b)) - 1 | ~e) + (~e | b) + 2 + e * 2 & b))",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 19,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 31.858407079646017,
                        "opsPercentages": {
                            "arithmetic": 37.66233766233766,
                            "mul": 10.38961038961039,
                            "bitwise": 51.94805194805194
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "clang_O3": {
                    "expr": "~e + b",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 98.23008849557522,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e ^ 0xffffffff - e ^ 0xffffffff) + (e | 0xffffffff - e) * 2 + 1 | (((e ^ 0xffffffff | b) - (e ^ 0xffffffff)) + e + 1 + (0xffffffff - ((e ^ 0xffffffff | b) - (e ^ 0xffffffff)) | 0xffffffff - e) & (b ^ 0xffffffff)) - ((((e ^ 0xffffffff | b) - (e ^ 0xffffffff)) + e + 1 + (0xffffffff - ((e ^ 0xffffffff | b) - (e ^ 0xffffffff)) | 0xffffffff - e) ^ 0xffffffff) & b)) - ((e ^ 0xffffffff - e ^ 0xffffffff) + (e | 0xffffffff - e) * 2 + 1 & (((e ^ 0xffffffff | b) - (e ^ 0xffffffff)) + e + 1 + (0xffffffff - ((e ^ 0xffffffff | b) - (e ^ 0xffffffff)) | 0xffffffff - e) & (b ^ 0xffffffff)) - ((((e ^ 0xffffffff | b) - (e ^ 0xffffffff)) + e + 1 + (0xffffffff - ((e ^ 0xffffffff | b) - (e ^ 0xffffffff)) | 0xffffffff - e) ^ 0xffffffff) & b))",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 31,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 24.778761061946902,
                        "opsPercentages": {
                            "arithmetic": 45.88235294117647,
                            "mul": 2.3529411764705883,
                            "bitwise": 51.76470588235295
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "msvc_default": {
                    "expr": "((~(0xffffffff - e) ^ e) + 1 + (0xffffffff - e | e) * 2 | (((~e | b) - ~e) + e + 1 + (0xffffffff - ((~e | b) - ~e) | 0xffffffff - e) & ~b) - (~(((~e | b) - ~e) + e + 1 + (0xffffffff - ((~e | b) - ~e) | 0xffffffff - e)) & b)) - ((~(0xffffffff - e) ^ e) + 1 + (0xffffffff - e | e) * 2 & (((~e | b) - ~e) + e + 1 + (0xffffffff - ((~e | b) - ~e) | 0xffffffff - e) & ~b) - (~(((~e | b) - ~e) + e + 1 + (0xffffffff - ((~e | b) - ~e) | 0xffffffff - e)) & b))",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 26,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 24.778761061946902,
                        "opsPercentages": {
                            "arithmetic": 45.88235294117647,
                            "mul": 2.3529411764705883,
                            "bitwise": 51.76470588235295
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~e + b",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 98.23008849557522,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 311,
            "gt": {
                "expr": "(((~(-c))^((c^a)-a)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((c - 1) - ((((c | a) - (c & a)) ^ a) - ((~ ((c | a) - (c & a)) & a) << 1))) - (((c - 1) | ~ ((((c | a) - (c & a)) ^ a) - ((~ ((c | a) - (c & a)) & a) << 1))) + ((c - 1) | ~ ((((c | a) - (c & a)) ^ a) - ((~ ((c | a) - (c & a)) & a) << 1))))) - 2",
                "attributes": {
                    "numOps": 44,
                    "nestedExprLevel": 30,
                    "numDAGs": 15,
                    "opsPercentages": {
                        "arithmetic": 36.36363636363637,
                        "mul": 0.0,
                        "bitwise": 63.63636363636363
                    },
                    "percentageDAGsCancel": 6.666666666666667
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(c ^ a) & a) * 2 + ((~(c ^ a) & a) * 2 + ~c | c - 1) * -2 + -3",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 61.36363636363637,
                        "opsPercentages": {
                            "arithmetic": 35.294117647058826,
                            "mul": 17.647058823529413,
                            "bitwise": 47.05882352941176
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "c + -3 + ((~(a | c) - (a & c) & a - (~((a | c) - (a & c) ^ a + ~(a | c) - (a & c) & a * -2) | c - 1)) * 2 - (a | c) - (a & c) ^ a)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 9,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 31.818181818181817,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 6.666666666666667,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(a & c) * 2 + (~(c + (a & c) * -2) | c - 1) * -2 + -3",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 68.18181818181817,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 21.428571428571427,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_default": {
                    "expr": "((c - (((c | a) - (c & a) ^ a) + (((c | a) - (c & a) ^ 0xffffffff) & a) * -2)) - ((c - 1 | ((c | a) - (c & a) ^ a) + (((c | a) - (c & a) ^ 0xffffffff) & a) * -2 ^ 0xffffffff) + (c - 1 | ((c | a) - (c & a) ^ a) + (((c | a) - (c & a) ^ 0xffffffff) & a) * -2 ^ 0xffffffff))) + -3",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 22,
                        "numDAGs": 17,
                        "percentDecreaseByOps": -6.8181818181818175,
                        "opsPercentages": {
                            "arithmetic": 40.42553191489361,
                            "mul": 6.382978723404255,
                            "bitwise": 53.191489361702125
                        },
                        "percentageDAGsCancel": 17.647058823529413
                    }
                },
                "msvc_default": {
                    "expr": "((c - (((c | a) - (c & a) ^ a) + (~((c | a) - (c & a)) & a) * -2)) - ((c - 1 | ~(((c | a) - (c & a) ^ a) + (~((c | a) - (c & a)) & a) * -2)) + (c - 1 | ~(((c | a) - (c & a) ^ a) + (~((c | a) - (c & a)) & a) * -2)))) + -3",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 24,
                        "numDAGs": 17,
                        "percentDecreaseByOps": -6.8181818181818175,
                        "opsPercentages": {
                            "arithmetic": 40.42553191489361,
                            "mul": 6.382978723404255,
                            "bitwise": 53.191489361702125
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "gcc_O3": {
                    "expr": "(a & c) * 2 + (~c + (a & c) * 2 | c - 1) * -2 + -3",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 70.45454545454545,
                        "opsPercentages": {
                            "arithmetic": 46.15384615384615,
                            "mul": 23.076923076923077,
                            "bitwise": 30.76923076923077
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 312,
            "gt": {
                "expr": "(((a*((a|d)&a))&(~((d&a)+(d*d)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 12.5,
                        "mul": 25.0,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((a & ((~ ((a & ~ d) + d) | a) - ~ ((a & ~ d) + d))) * (a | ((~ ((a & ~ d) + d) | a) - ~ ((a & ~ d) + d))) + (a & ~ ((~ ((a & ~ d) + d) | a) - ~ ((a & ~ d) + d))) * (~ a & ((~ ((a & ~ d) + d) | a) - ~ ((a & ~ d) + d)))) - (((a & ((~ ((a & ~ d) + d) | a) - ~ ((a & ~ d) + d))) * (a | ((~ ((a & ~ d) + d) | a) - ~ ((a & ~ d) + d))) + (a & ~ ((~ ((a & ~ d) + d) | a) - ~ ((a & ~ d) + d))) * (~ a & ((~ ((a & ~ d) + d) | a) - ~ ((a & ~ d) + d)))) & ((((~ d | a) - ~ d) | ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) + (((~ d | a) - ~ d) & ((d & d) * (d | d) + (d & ~ d) * (~ d & d)))))",
                "attributes": {
                    "numOps": 129,
                    "nestedExprLevel": 55,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 24.8062015503876,
                        "mul": 6.2015503875969,
                        "bitwise": 68.9922480620155
                    },
                    "percentageDAGsCancel": 37.93103448275862
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(d + (~d & a)) & a) * (d + (~d & a) & a & ~a) + (d + (~d & a) & a) * a & ~(d * d + (a & d))",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 7,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 82.17054263565892,
                        "opsPercentages": {
                            "arithmetic": 21.73913043478261,
                            "mul": 13.043478260869565,
                            "bitwise": 65.21739130434783
                        },
                        "percentageDAGsCancel": 37.5
                    }
                },
                "msvc_O1": {
                    "expr": "((d + 1 + (~(~d & a + d) | a) + ~d & a | a) * (d + 1 + (~(~d & a + d) | a) + ~d & a & a) - ((d + 1 + (~d | a) | d * d) + (d + 1 + (~d | a) & d * d) & (d + 1 + (~(~d & a + d) | a) + ~d & a | a) * (d + 1 + (~(~d & a + d) | a) + ~d & a & a) + (~a & d + 1 + (~(~d & a + d) | a) + ~d & a) * (~d + 1 + (~(~d & a + d) | a) + ~d & a & a))) + (~a & d + 1 + (~(~d & a + d) | a) + ~d & a) * (~d + 1 + (~(~d & a + d) | a) + ~d & a & a)",
                    "attributes": {
                        "numOps": 113,
                        "nestedExprLevel": 22,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 12.4031007751938,
                        "opsPercentages": {
                            "arithmetic": 35.39823008849557,
                            "mul": 5.3097345132743365,
                            "bitwise": 59.29203539823009
                        },
                        "percentageDAGsCancel": 25.806451612903224
                    }
                },
                "clang_O3": {
                    "expr": "~(d * d + (a & d)) & ((~d & a) + d & a) * a",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 92.24806201550388,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_default": {
                    "expr": "((a & ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff | a) - ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff)) * (a | ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff | a) - ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff)) + (a & (((a & (d ^ 0xffffffff)) + d ^ 0xffffffff | a) - ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff) ^ 0xffffffff)) * ((a ^ 0xffffffff) & ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff | a) - ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff))) - ((a & ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff | a) - ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff)) * (a | ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff | a) - ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff)) + (a & (((a & (d ^ 0xffffffff)) + d ^ 0xffffffff | a) - ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff) ^ 0xffffffff)) * ((a ^ 0xffffffff) & ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff | a) - ((a & (d ^ 0xffffffff)) + d ^ 0xffffffff)) & ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) | d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ) + ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) & d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)))",
                    "attributes": {
                        "numOps": 125,
                        "nestedExprLevel": 54,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 3.10077519379845,
                        "opsPercentages": {
                            "arithmetic": 25.6,
                            "mul": 6.4,
                            "bitwise": 68.0
                        },
                        "percentageDAGsCancel": 33.33333333333333
                    }
                },
                "msvc_default": {
                    "expr": "(((~((~d & a) + d) | a) - ~((~d & a) + d) & a) * ((~((~d & a) + d) | a) - ~((~d & a) + d) | a) + (~((~((~d & a) + d) | a) - ~((~d & a) + d)) & a) * (~a & (~((~d & a) + d) | a) - ~((~d & a) + d))) - (((~((~d & a) + d) | a) - ~((~d & a) + d) & a) * ((~((~d & a) + d) | a) - ~((~d & a) + d) | a) + (~((~((~d & a) + d) | a) - ~((~d & a) + d)) & a) * (~a & (~((~d & a) + d) | a) - ~((~d & a) + d)) & ((~d | a) - ~d | d * d) + ((~d | a) - ~d & d * d))",
                    "attributes": {
                        "numOps": 113,
                        "nestedExprLevel": 40,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 12.4031007751938,
                        "opsPercentages": {
                            "arithmetic": 26.548672566371685,
                            "mul": 5.3097345132743365,
                            "bitwise": 68.14159292035397
                        },
                        "percentageDAGsCancel": 30.434782608695656
                    }
                },
                "gcc_O3": {
                    "expr": "((~d & a) + d & a) * a & ~((a & d) + d * d)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 92.24806201550388,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 30.0
                    }
                }
            }
        },
        {
            "num": 313,
            "gt": {
                "expr": "((((b^b)-(e+b))*((e+b)-e)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 16.666666666666664,
                        "bitwise": 16.666666666666664
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "(((((((b - b) - ((b | ~ b) << 1)) - 2) & ~ ((e ^ b) + ((e & b) + (e & b)))) << 1) - ((((b - b) - ((b | ~ b) << 1)) - 2) ^ ((e ^ b) + ((e & b) + (e & b))))) & (((((e | b) << 1) - (e ^ b)) ^ e) - ((~ (((e | b) << 1) - (e ^ b)) & e) + (~ (((e | b) << 1) - (e ^ b)) & e)))) * (((((((b - b) - ((b | ~ b) << 1)) - 2) & ~ ((e ^ b) + ((e & b) + (e & b)))) << 1) - ((((b - b) - ((b | ~ b) << 1)) - 2) ^ ((e ^ b) + ((e & b) + (e & b))))) | (((((e | b) << 1) - (e ^ b)) ^ e) - ((~ (((e | b) << 1) - (e ^ b)) & e) + (~ (((e | b) << 1) - (e ^ b)) & e)))) + (((((((b - b) - ((b | ~ b) << 1)) - 2) & ~ ((e ^ b) + ((e & b) + (e & b)))) << 1) - ((((b - b) - ((b | ~ b) << 1)) - 2) ^ ((e ^ b) + ((e & b) + (e & b))))) & ~ (((((e | b) << 1) - (e ^ b)) ^ e) - ((~ (((e | b) << 1) - (e ^ b)) & e) + (~ (((e | b) << 1) - (e ^ b)) & e)))) * (~ ((((((b - b) - ((b | ~ b) << 1)) - 2) & ~ ((e ^ b) + ((e & b) + (e & b)))) << 1) - ((((b - b) - ((b | ~ b) << 1)) - 2) ^ ((e ^ b) + ((e & b) + (e & b))))) & (((((e | b) << 1) - (e ^ b)) ^ e) - ((~ (((e | b) << 1) - (e ^ b)) & e) + (~ (((e | b) << 1) - (e ^ b)) & e))))",
                "attributes": {
                    "numOps": 193,
                    "nestedExprLevel": 125,
                    "numDAGs": 32,
                    "opsPercentages": {
                        "arithmetic": 33.67875647668394,
                        "mul": 1.0362694300518136,
                        "bitwise": 65.28497409326425
                    },
                    "percentageDAGsCancel": 18.75
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((e | b) * 2 - (e ^ b) ^ e) + ((e ^ b) + ~((e | b) * 2) & e) * -2 & ((e & b) * 2 + (e ^ b)) - 1) * (-((e & b) * 2 + (e ^ b)) & ((e ^ b) + ~((e | b) * 2) & e) * 2 + ((e ^ b) + ~((e | b) * 2) ^ e)) + (-((e & b) * 2 + (e ^ b)) & ((e | b) * 2 - (e ^ b) ^ e) + ((e ^ b) + ~((e | b) * 2) & e) * -2) * (((e | b) * 2 - (e ^ b) ^ e) + ((e ^ b) + ~((e | b) * 2) & e) * -2 | -((e & b) * 2 + (e ^ b)))",
                    "attributes": {
                        "numOps": 83,
                        "nestedExprLevel": 29,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 56.994818652849744,
                        "opsPercentages": {
                            "arithmetic": 28.915662650602407,
                            "mul": 21.686746987951807,
                            "bitwise": 49.39759036144578
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "msvc_O1": {
                    "expr": "(~(b & e) * -2 - (b ^ e) & ((b | e) * 2 - (b ^ e) ^ e) + (~(b | e) * 2 - (b ^ e) & e) * -2) * (~((b | e) * 2 - (b ^ e) ^ e) + (~(b | e) * 2 - (b ^ e) & e) * -2 & (b & e) * -2 - (b ^ e)) + (((b | e) * 2 - (b ^ e) ^ e) + (~(b | e) * 2 - (b ^ e) & e) * -2 | (b & e) * -2 - (b ^ e)) * (((b | e) * 2 - (b ^ e) ^ e) + (~(b | e) * 2 - (b ^ e) & e) * -2 & (b & e) * -2 - (b ^ e))",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 25,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 55.95854922279793,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 21.176470588235293,
                            "bitwise": 49.411764705882355
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_O3": {
                    "expr": "((e ^ b + (e & b) * 2) - 1 & ((b | e) * 2 - e ^ b ^ e) + (~(b | e) * 2 - e ^ b & e) * -2) * (~((b | e) * 2 - e ^ b ^ e) + (~(b | e) * 2 - e ^ b & e) * -2 & -(e ^ b + (e & b) * 2)) + (((b | e) * 2 - e ^ b ^ e) + (~(b | e) * 2 - e ^ b & e) * -2 | -(e ^ b + (e & b) * 2)) * (((b | e) * 2 - e ^ b ^ e) + (~(b | e) * 2 - e ^ b & e) * -2 & -(e ^ b + (e & b) * 2))",
                    "attributes": {
                        "numOps": 84,
                        "nestedExprLevel": 18,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 56.476683937823836,
                        "opsPercentages": {
                            "arithmetic": 29.761904761904763,
                            "mul": 21.428571428571427,
                            "bitwise": 48.80952380952381
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "clang_default": {
                    "expr": "(((b | b ^ 0xffffffff) * -2 - 2 & ((e ^ b) + (e & b) + (e & b) ^ 0xffffffff)) * 2 - ((b | b ^ 0xffffffff) * -2 - 2 ^ (e ^ b) + (e & b) + (e & b)) & ((e | b) * 2 - (e ^ b) ^ e) - ((((e | b) * 2 - (e ^ b) ^ 0xffffffff) & e) + (((e | b) * 2 - (e ^ b) ^ 0xffffffff) & e))) * (((b | b ^ 0xffffffff) * -2 - 2 & ((e ^ b) + (e & b) + (e & b) ^ 0xffffffff)) * 2 - ((b | b ^ 0xffffffff) * -2 - 2 ^ (e ^ b) + (e & b) + (e & b)) | ((e | b) * 2 - (e ^ b) ^ e) - ((((e | b) * 2 - (e ^ b) ^ 0xffffffff) & e) + (((e | b) * 2 - (e ^ b) ^ 0xffffffff) & e))) + (((b | b ^ 0xffffffff) * -2 - 2 & ((e ^ b) + (e & b) + (e & b) ^ 0xffffffff)) * 2 - ((b | b ^ 0xffffffff) * -2 - 2 ^ (e ^ b) + (e & b) + (e & b)) & (((e | b) * 2 - (e ^ b) ^ e) - ((((e | b) * 2 - (e ^ b) ^ 0xffffffff) & e) + (((e | b) * 2 - (e ^ b) ^ 0xffffffff) & e)) ^ 0xffffffff)) * ((((b | b ^ 0xffffffff) * -2 - 2 & ((e ^ b) + (e & b) + (e & b) ^ 0xffffffff)) * 2 - ((b | b ^ 0xffffffff) * -2 - 2 ^ (e ^ b) + (e & b) + (e & b)) ^ 0xffffffff) & ((e | b) * 2 - (e ^ b) ^ e) - ((((e | b) * 2 - (e ^ b) ^ 0xffffffff) & e) + (((e | b) * 2 - (e ^ b) ^ 0xffffffff) & e)))",
                    "attributes": {
                        "numOps": 185,
                        "nestedExprLevel": 67,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 4.145077720207254,
                        "opsPercentages": {
                            "arithmetic": 30.810810810810814,
                            "mul": 14.054054054054054,
                            "bitwise": 55.13513513513514
                        },
                        "percentageDAGsCancel": 9.67741935483871
                    }
                },
                "msvc_default": {
                    "expr": "(-((e ^ b) + (e & b) + (e & b)) & ((e | b) * 2 - (e ^ b) ^ e) - ((~((e | b) * 2 - (e ^ b)) & e) + (~((e | b) * 2 - (e ^ b)) & e))) * (-((e ^ b) + (e & b) + (e & b)) | ((e | b) * 2 - (e ^ b) ^ e) - ((~((e | b) * 2 - (e ^ b)) & e) + (~((e | b) * 2 - (e ^ b)) & e))) + (-((e ^ b) + (e & b) + (e & b)) & ~(((e | b) * 2 - (e ^ b) ^ e) - ((~((e | b) * 2 - (e ^ b)) & e) + (~((e | b) * 2 - (e ^ b)) & e)))) * (~-((e ^ b) + (e & b) + (e & b)) & ((e | b) * 2 - (e ^ b) ^ e) - ((~((e | b) * 2 - (e ^ b)) & e) + (~((e | b) * 2 - (e ^ b)) & e)))",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 50,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 43.523316062176164,
                        "opsPercentages": {
                            "arithmetic": 30.275229357798167,
                            "mul": 12.844036697247708,
                            "bitwise": 56.88073394495413
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "gcc_O3": {
                    "expr": "((~(b | e) * 2 + e ^ b ^ e) + ~(b | e) * 2 + e ^ b & e * 2 & -e ^ b + (e & b) * 2) * (e ^ b + (e & b) * 2 - 1 & ((b | e) * 2 - e ^ b ^ e) + ~(b | e) * 2 + e ^ b & e * -2) + (-e ^ b + (e & b) * 2 & ((b | e) * 2 - e ^ b ^ e) + ~(b | e) * 2 + e ^ b & e * -2) * (-e ^ b + (e & b) * 2 | ((b | e) * 2 - e ^ b ^ e) + ~(b | e) * 2 + e ^ b & e * -2)",
                    "attributes": {
                        "numOps": 83,
                        "nestedExprLevel": 13,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 56.994818652849744,
                        "opsPercentages": {
                            "arithmetic": 28.915662650602407,
                            "mul": 21.686746987951807,
                            "bitwise": 49.39759036144578
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 314,
            "gt": {
                "expr": "(((~((~c)*(b-(c*b))))-(c+(b*(b&c)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 33.33333333333333,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((- (((- c - 1) & ((b & ~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) - (~ b & ((c & b) * (c | b) + (c & ~ b) * (~ c & b))))) * ((- c - 1) | ((b & ~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) - (~ b & ((c & b) * (c | b) + (c & ~ b) * (~ c & b))))) + ((- c - 1) & ~ ((b & ~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) - (~ b & ((c & b) * (c | b) + (c & ~ b) * (~ c & b))))) * (~ (- c - 1) & ((b & ~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b))) - (~ b & ((c & b) * (c | b) + (c & ~ b) * (~ c & b)))))) - 1) + ~ ((c ^ ((b & (((~ b | c) + b) + 1)) * (b | (((~ b | c) + b) + 1)) + (b & ~ (((~ b | c) + b) + 1)) * (~ b & (((~ b | c) + b) + 1)))) + ((c & ((b & (((~ b | c) + b) + 1)) * (b | (((~ b | c) + b) + 1)) + (b & ~ (((~ b | c) + b) + 1)) * (~ b & (((~ b | c) + b) + 1)))) << 1))) + 1",
                "attributes": {
                    "numOps": 168,
                    "nestedExprLevel": 75,
                    "numDAGs": 44,
                    "opsPercentages": {
                        "arithmetic": 26.190476190476193,
                        "mul": 13.095238095238097,
                        "bitwise": 60.71428571428571
                    },
                    "percentageDAGsCancel": 13.636363636363635
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((-((~b | c) + b) - 2 & b) * (b + (~b | c) + 1 & ~b) + (b + (~b | c) + 1 & b) * (b + (~b | c) + 1 | b) & c) * 2 + ((-((~b | c) + b) - 2 & b) * (b + (~b | c) + 1 & ~b) + (b + (~b | c) + 1 & b) * (b + (~b | c) + 1 | b) ^ c)) + ~(((~((~c & b) * (~b & c) + (c & b) * (c | b)) & b) - (~b & (~c & b) * (~b & c) + (c & b) * (c | b)) & c) * (~c & ((~c & b) * (~b & c) + (c & b) * (c | b) & ~b) + ((c & b) * (c | b) + (~c & b) * (~b & c) | ~b)) + (~c & (~((~c & b) * (~b & c) + (c & b) * (c | b)) & b) - (~b & (~c & b) * (~b & c) + (c & b) * (c | b)) ) * ((~((~c & b) * (~b & c) + (c & b) * (c | b)) & b) - (~b & (~c & b) * (~b & c) + (c & b) * (c | b)) | ~c)) + 1",
                    "attributes": {
                        "numOps": 160,
                        "nestedExprLevel": 46,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 4.761904761904762,
                        "opsPercentages": {
                            "arithmetic": 22.5,
                            "mul": 14.374999999999998,
                            "bitwise": 63.125
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "msvc_O1": {
                    "expr": "(~(((~b + 1 + (~b | c) & b) * (b + 1 + (~b | c) & ~b) + (b + 1 + (~b | c) | b) * (b + 1 + (~b | c) & b) * 2 & c * 2) + ((~b + 1 + (~b | c) & b) * (b + 1 + (~b | c) & ~b) + (b + 1 + (~b | c) | b) * (b + 1 + (~b | c) & b) ^ c)) - (~(~(b & c) * (b | c) + (~b & c) * (~c & b) & b) - ((b & c) * (b | c) + (~b & c) * (~c & b) & ~b) & ~c) * ((~(b & c) * (b | c) + (~b & c) * (~c & b) & b) - ((b & c) * (b | c) + (~b & c) * (~c & b) & ~b) & c)) - ((~(b & c) * (b | c) + (~b & c) * (~c & b) & b) - ((b & c) * (b | c) + (~b & c) * (~c & b) & ~b) | ~c) * ((~(b & c) * (b | c) + (~b & c) * (~c & b) & b) - ((b & c) * (b | c) + (~b & c) * (~c & b) & ~b) & ~c)",
                    "attributes": {
                        "numOps": 160,
                        "nestedExprLevel": 41,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 4.761904761904762,
                        "opsPercentages": {
                            "arithmetic": 20.625,
                            "mul": 15.0,
                            "bitwise": 64.375
                        },
                        "percentageDAGsCancel": 11.363636363636363
                    }
                },
                "clang_O3": {
                    "expr": "~(((~b & (~b | c) + b + 1) * (-((~b | c) + b) - 2 & b) + ((~b | c) + b + 1 | b) * ((~b | c) + b + 1 & b) ^ c) + ((~b & (~b | c) + b + 1) * (-((~b | c) + b) - 2 & b) + ((~b | c) + b + 1 | b) * ((~b | c) + b + 1 & b) & c) * 2) - (((~(~c & b) * (~b & c) + (c | b) * (c & b) & b) - ((~c & b) * (~b & c) + (c | b) * (c & b) & ~b) & c) * (~(~(~c & b) * (~b & c) + (c | b) * (c & b) & b) - ((~c & b) * (~b & c) + (c | b) * (c & b) & ~b) & ~c) + ((~(~c & b) * (~b & c) + (c | b) * (c & b) & b) - ((~c & b) * (~b & c) + (c | b) * (c & b) & ~b) | ~c) * ((~(~c & b) * (~b & c) + (c | b) * (c & b) & b) - ((~c & b) * (~b & c) + (c | b) * (c & b) & ~b) & ~c))",
                    "attributes": {
                        "numOps": 159,
                        "nestedExprLevel": 43,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 5.357142857142857,
                        "opsPercentages": {
                            "arithmetic": 22.0125786163522,
                            "mul": 14.465408805031446,
                            "bitwise": 63.52201257861635
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_default": {
                    "expr": "((c ^ (b & (b ^ 0xffffffff | c) + b + 1) * (b | (b ^ 0xffffffff | c) + b + 1) + (b & ((b ^ 0xffffffff | c) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | c) + b + 1)) + (c & (b & (b ^ 0xffffffff | c) + b + 1) * (b | (b ^ 0xffffffff | c) + b + 1) + (b & ((b ^ 0xffffffff | c) + b + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b ^ 0xffffffff | c) + b + 1)) * 2 ^ 0xffffffff) - ((0xffffffff - c & (b & ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff)) - ((b ^ 0xffffffff) & (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b))) * (0xffffffff - c | (b & ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff)) - ((b ^ 0xffffffff) & (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b))) + (0xffffffff - c & ((b & ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff)) - ((b ^ 0xffffffff) & (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b)) ^ 0xffffffff)) * ((0xffffffff - c ^ 0xffffffff) & (b & ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff )) - ((b ^ 0xffffffff) & (c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b))))",
                    "attributes": {
                        "numOps": 161,
                        "nestedExprLevel": 59,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 4.166666666666666,
                        "opsPercentages": {
                            "arithmetic": 22.981366459627328,
                            "mul": 14.285714285714285,
                            "bitwise": 62.732919254658384
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_default": {
                    "expr": "~((((~b | c) + 1 + b & b) * ((~b | c) + 1 + b | b) + (~((~b | c) + 1 + b) & b) * (~b & (~b | c) + 1 + b) ^ c) + (((~b | c) + 1 + b & b) * ((~b | c) + 1 + b | b) + (~((~b | c) + 1 + b) & b) * (~b & (~b | c) + 1 + b) & c) * 2) - ((0xffffffff - c & (~((c & b) * (c | b) + (~b & c) * (~c & b) ) & b) - (~b & (c & b) * (c | b) + (~b & c) * (~c & b))) * (0xffffffff - c | (~((c & b) * (c | b) + (~b & c) * (~c & b)) & b) - (~b & (c & b) * (c | b) + (~b & c) * (~c & b)) ) + (0xffffffff - c & ~((~((c & b) * (c | b) + (~b & c) * (~c & b)) & b) - (~b & (c & b) * (c | b) + (~b & c) * (~c & b)))) * (~(0xffffffff - c) & (~((c & b) * (c | b) + (~b & c) * (~c & b)) & b) - (~b & (c & b) * (c | b) + (~b & c) * (~c & b))))",
                    "attributes": {
                        "numOps": 161,
                        "nestedExprLevel": 48,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 4.166666666666666,
                        "opsPercentages": {
                            "arithmetic": 22.981366459627328,
                            "mul": 14.285714285714285,
                            "bitwise": 62.732919254658384
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "gcc_O3": {
                    "expr": "~((~b + (c & b) * (c | b) + (~b & c) * (~c & b) & ~c) * ((~(c & b) * (c | b) + (~b & c) * (~c & b) & b) - (~b & (c & b) * (c | b) + (~b & c) * (~c & b)) & c) + (~c | (~(c & b) * (c | b) + (~b & c) * (~c & b) & b) - (~b & (c & b) * (c | b) + (~b & c) * (~c & b))) * (~c & (~(c & b) * (c | b) + (~b & c) * (~c & b) & b) - (~b & (c & b) * (c | b) + (~b & c) * (~c & b)))) - (((-(~b | c) + b - 2 & b) * (~b & (~b | c) + b + 1) + ((~b | c) + b + 1 | b) * ((~b | c) + b + 1 & b) ^ c) + ((-(~b | c) + b - 2 & b) * (~b & (~b | c) + b + 1) + ((~b | c) + b + 1 | b) * ((~b | c) + b + 1 & b) & c) * 2)",
                    "attributes": {
                        "numOps": 146,
                        "nestedExprLevel": 38,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 13.095238095238097,
                        "opsPercentages": {
                            "arithmetic": 23.28767123287671,
                            "mul": 14.383561643835616,
                            "bitwise": 62.328767123287676
                        },
                        "percentageDAGsCancel": 9.30232558139535
                    }
                }
            }
        },
        {
            "num": 315,
            "gt": {
                "expr": "((((~c)-(-a))&(((c-c)-c)|(~a))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "((~ (((- c - 1) + ~ (~ (a - 1))) + 1) | ((((((((c & ~ c) << 1) - (c ^ c)) ^ c) - ((~ (((c & ~ c) << 1) - (c ^ c)) & c) + (~ (((c & ~ c) << 1) - (c ^ c)) & c))) + (- a - 1)) + 1) + ((- (((((c & ~ c) << 1) - (c ^ c)) ^ c) - ((~ (((c & ~ c) << 1) - (c ^ c)) & c) + (~ (((c & ~ c) << 1) - (c ^ c)) & c))) - 1) | (- (- a - 1) - 1)))) + (((- c - 1) + ~ (~ (a - 1))) + 1)) + 1",
                "attributes": {
                    "numOps": 74,
                    "nestedExprLevel": 44,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 44.5945945945946,
                        "mul": 0.0,
                        "bitwise": 55.4054054054054
                    },
                    "percentageDAGsCancel": 25.806451612903224
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "a + ~c + ((c - (a - 1)) - 1 | (c - 1 | a) + (~a - c) + 1) + 1",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 5,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 81.08108108108108,
                        "opsPercentages": {
                            "arithmetic": 71.42857142857143,
                            "mul": 0.0,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((((c - 1 | a) - a) - c | c - a) - c) + a",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 5,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 89.1891891891892,
                        "opsPercentages": {
                            "arithmetic": 75.0,
                            "mul": 0.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(((c - 1 | a) - a) - c | c - a) + (a - c)",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 89.1891891891892,
                        "opsPercentages": {
                            "arithmetic": 75.0,
                            "mul": 0.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a + -1) - c ^ 0xffffffff | ((((c & (c ^ 0xffffffff)) * 2 ^ c) - ((((c & (c ^ 0xffffffff)) * 2 ^ 0xffffffff) & c) + (((c & (c ^ 0xffffffff)) * 2 ^ 0xffffffff) & c))) - a) + (0xffffffff - (((c & (c ^ 0xffffffff)) * 2 ^ c) - ((((c & (c ^ 0xffffffff)) * 2 ^ 0xffffffff) & c) + (((c & (c ^ 0xffffffff)) * 2 ^ 0xffffffff) & c))) | 0xffffffff - (-1 - a))) + (a - c)",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 26,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 37.83783783783784,
                        "opsPercentages": {
                            "arithmetic": 32.608695652173914,
                            "mul": 13.043478260869565,
                            "bitwise": 54.347826086956516
                        },
                        "percentageDAGsCancel": 19.047619047619047
                    }
                },
                "msvc_default": {
                    "expr": "(~((a + -1) - c) | (-a - c) + (c - 1 | 0xffffffff - (-1 - a))) + (a - c)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 79.72972972972973,
                        "opsPercentages": {
                            "arithmetic": 80.0,
                            "mul": 0.0,
                            "bitwise": 20.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((-c - a) + (c - 1 | a) | c - a) + (a - c)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 87.83783783783784,
                        "opsPercentages": {
                            "arithmetic": 77.77777777777779,
                            "mul": 0.0,
                            "bitwise": 22.22222222222222
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 316,
            "gt": {
                "expr": "((~((d&(a^a))|((a-(a*a))+(a*((-a)*a))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 30.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "- (((((~ d | (((a - a) - ((a | ~ a) + (a | ~ a))) - 2)) - ~ d) + ((((a ^ ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) - ((~ a & ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) << 1)) - ~ ((a & (((~ a + 1) & a) * ((~ a + 1) | a) + ((~ a + 1) & ~ a) * (~ (~ a + 1) & a))) * (a | (((~ a + 1) & a) * ((~ a + 1) | a) + ((~ a + 1) & ~ a) * (~ (~ a + 1) & a))) + (a & ~ (((~ a + 1) & a) * ((~ a + 1) | a) + ((~ a + 1) & ~ a) * (~ (~ a + 1) & a))) * (~ a & (((~ a + 1) & a) * ((~ a + 1) | a) + ((~ a + 1) & ~ a) * (~ (~ a + 1) & a))))) - 1)) + 1) + ((- ((~ d | (((a - a) - ((a | ~ a) + (a | ~ a))) - 2)) - ~ d) - 1) | (- ((((a ^ ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) - ((~ a & ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) << 1)) - ~ ((a & (((~ a + 1) & a) * ((~ a + 1) | a) + ((~ a + 1) & ~ a) * (~ (~ a + 1) & a))) * (a | (((~ a + 1) & a) * ((~ a + 1) | a) + ((~ a + 1) & ~ a) * (~ (~ a + 1) & a))) + (a & ~ (((~ a + 1) & a) * ((~ a + 1) | a) + ((~ a + 1) & ~ a) * (~ (~ a + 1) & a))) * (~ a & (((~ a + 1) & a) * ((~ a + 1) | a) + ((~ a + 1) & ~ a) * (~ (~ a + 1) & a))))) - 1) - 1))) - 1",
                "attributes": {
                    "numOps": 240,
                    "nestedExprLevel": 94,
                    "numDAGs": 50,
                    "opsPercentages": {
                        "arithmetic": 29.583333333333332,
                        "mul": 11.666666666666666,
                        "bitwise": 58.75
                    },
                    "percentageDAGsCancel": 18.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((~((a - 1 & a) * (-a & ~a) + (-a & a) * (-a | a)) & a) * ((a - 1 & a) * (-a & ~a) + (-a & a) * (-a | a) & ~a) + ((a - 1 & a) * (-a & ~a) + (-a & a) * (-a | a) & a) * ((a - 1 & a) * (-a & ~a) + (-a & a) * (-a | a) | a)) + ((a * a & ~a) * 2 - (a * a ^ a))",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 17,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 72.5,
                        "opsPercentages": {
                            "arithmetic": 34.84848484848485,
                            "mul": 19.696969696969695,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 8.0
                    }
                },
                "msvc_O1": {
                    "expr": "((((~a * 2 & a * a * 2) - (~(~~a + 1 & a) * (~a + 1 & ~a) + (~a + 1 | a) * (~a + 1 & a) & a) * ((~~a + 1 & a) * (~a + 1 & ~a) + (~a + 1 | a) * (~a + 1 & a) & ~a)) - ((~~a + 1 & a) * (~a + 1 & ~a) + (~a + 1 | a) * (~a + 1 & a) | a) * ((~~a + 1 & a) * (~a + 1 & ~a) + (~a + 1 | a) * (~a + 1 & a) & a)) - (a * a ^ a)) + -1",
                    "attributes": {
                        "numOps": 88,
                        "nestedExprLevel": 17,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 63.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 28.40909090909091,
                            "mul": 15.909090909090908,
                            "bitwise": 55.68181818181818
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_O3": {
                    "expr": "~(((a - 1 & a) * (-a & ~a) + (-a | a) * (-a & a) & ~a) * (~(a - 1 & a) * (-a & ~a) + (-a | a) * (-a & a) & a) + (a * a ^ a) + ((a - 1 & a) * (-a & ~a) + (-a | a) * (-a & a) | a) * ((a - 1 & a) * (-a & ~a) + (-a | a) * (-a & a) & a)) + (a * a & ~a) * 2",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 15,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 72.5,
                        "opsPercentages": {
                            "arithmetic": 34.84848484848485,
                            "mul": 19.696969696969695,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((d ^ 0xffffffff | 0xfffffffe - ((a | a ^ 0xffffffff) + (a | a ^ 0xffffffff))) - (d ^ 0xffffffff)) + (((a ^ a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a)) + ((a ^ 0xffffffff) & a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a)) * -2) - ((a & ((a ^ 0xffffffff) + 1 & a) * ((a ^ 0xffffffff) + 1 | a) + ((a ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * (((a ^ 0xffffffff) + 1 ^ 0xffffffff) & a)) * (a | ((a ^ 0xffffffff) + 1 & a) * ((a ^ 0xffffffff) + 1 | a) + ((a ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * (((a ^ 0xffffffff) + 1 ^ 0xffffffff) & a)) + (a & (((a ^ 0xffffffff) + 1 & a) * ((a ^ 0xffffffff) + 1 | a) + ((a ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * (((a ^ 0xffffffff) + 1 ^ 0xffffffff) & a) ^ 0xffffffff)) * ((a ^ 0xffffffff) & ((a ^ 0xffffffff) + 1 & a) * ((a ^ 0xffffffff) + 1 | a) + ((a ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * (((a ^ 0xffffffff) + 1 ^ 0xffffffff) & a)) ^ 0xffffffff)) + (0xffffffff - ((d ^ 0xffffffff | 0xfffffffe - ((a | a ^ 0xffffffff) + (a | a ^ 0xffffffff))) - (d ^ 0xffffffff)) | 0xffffffff - ((((a ^ a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a)) + ((a ^ 0xffffffff) & a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a)) * -2) - ((a & ((a ^ 0xffffffff) + 1 & a) * ((a ^ 0xffffffff) + 1 | a) + ((a ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * (((a ^ 0xffffffff) + 1 ^ 0xffffffff) & a)) * (a | ((a ^ 0xffffffff) + 1 & a) * ((a ^ 0xffffffff) + 1 | a) + ((a ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * (((a ^ 0xffffffff) + 1 ^ 0xffffffff) & a)) + (a & (((a ^ 0xffffffff) + 1 & a) * ((a ^ 0xffffffff) + 1 | a) + ((a ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * (((a ^ 0xffffffff) + 1 ^ 0xffffffff) & a) ^ 0xffffffff)) * ((a ^ 0xffffffff) & ((a ^ 0xffffffff) + 1 & a) * ((a ^ 0xffffffff) + 1 | a) + ((a ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * (((a ^ 0xffffffff) + 1 ^ 0xffffffff) & a)) ^ 0xffffffff)) + -1)))",
                    "attributes": {
                        "numOps": 227,
                        "nestedExprLevel": 89,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 5.416666666666667,
                        "opsPercentages": {
                            "arithmetic": 29.074889867841406,
                            "mul": 13.215859030837004,
                            "bitwise": 57.70925110132159
                        },
                        "percentageDAGsCancel": 6.8181818181818175
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((~d - ~d) + (((a * a ^ a) + (~a & a * a) * -2) - ~(((~a + 1 & a) * (~a + 1 | a) + (~a + 1 & ~a) * (~(~a + 1) & a) & a) * ((~a + 1 & a) * (~a + 1 | a) + (~a + 1 & ~a) * (~(~a + 1) & a) | a) + (~((~a + 1 & a) * (~a + 1 | a) + (~a + 1 & ~a) * (~(~a + 1) & a)) & a) * (~a & (~a + 1 & a) * (~a + 1 | a) + (~a + 1 & ~a) * (~(~a + 1) & a)))) + (0xffffffff - (~d - ~d) | 0xffffffff - ((((a * a ^ a) + (~a & a * a) * -2) - ~(((~a + 1 & a) * (~a + 1 | a) + (~a + 1 & ~a) * (~(~a + 1) & a) & a) * ((~a + 1 & a) * (~a + 1 | a) + (~a + 1 & ~a) * (~(~a + 1) & a) | a) + (~((~a + 1 & a) * (~a + 1 | a) + (~a + 1 & ~a) * (~(~a + 1) & a)) & a) * (~a & (~a + 1 & a) * (~a + 1 | a) + (~a + 1 & ~a) * (~(~a + 1) & a)))) + -1)))",
                    "attributes": {
                        "numOps": 189,
                        "nestedExprLevel": 39,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 21.25,
                        "opsPercentages": {
                            "arithmetic": 30.687830687830687,
                            "mul": 13.756613756613756,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 2.7777777777777777
                    }
                },
                "gcc_O3": {
                    "expr": "(~(((a - 1 & a) * (-a & ~a) + (-a | a) * (-a & a) | a) * ((a - 1 & a) * (-a & ~a) + (-a | a) * (-a & a) & a) + (~(a - 1 & a) * (-a & ~a) + (-a | a) * (-a & a) & a) * (~a & (a - 1 & a) * (-a & ~a) + (-a | a) * (-a & a))) + (~a & a * a) * 2) - (a ^ a * a)",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 16,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 72.5,
                        "opsPercentages": {
                            "arithmetic": 34.84848484848485,
                            "mul": 19.696969696969695,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 317,
            "gt": {
                "expr": "((~(~(((a|a)^((a+a)&a))^(a|((c-a)^a))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "- ((((((((a + a) + 1) + ((- a - 1) | (- a - 1))) - ((~ (((a | a) << 1) - (a ^ a)) | a) - ~ (((a | a) << 1) - (a ^ a)))) - (((((a + a) + 1) + ((- a - 1) | (- a - 1))) | ~ ((~ (((a | a) << 1) - (a ^ a)) | a) - ~ (((a | a) << 1) - (a ^ a)))) << 1)) - 2) & (((a + (((((c + ~ a) + 1) - a) - ((((c + ~ a) + 1) | ~ a) << 1)) - 2)) + 1) + ((- a - 1) | (- (((((c + ~ a) + 1) - a) - ((((c + ~ a) + 1) | ~ a) << 1)) - 2) - 1)))) + ~ (((((((a + a) + 1) + ((- a - 1) | (- a - 1))) - ((~ (((a | a) << 1) - (a ^ a)) | a) - ~ (((a | a) << 1) - (a ^ a)))) - (((((a + a) + 1) + ((- a - 1) | (- a - 1))) | ~ ((~ (((a | a) << 1) - (a ^ a)) | a) - ~ (((a | a) << 1) - (a ^ a)))) << 1)) - 2) | (((a + (((((c + ~ a) + 1) - a) - ((((c + ~ a) + 1) | ~ a) << 1)) - 2)) + 1) + ((- a - 1) | (- (((((c + ~ a) + 1) - a) - ((((c + ~ a) + 1) | ~ a) << 1)) - 2) - 1))))) - 1",
                "attributes": {
                    "numOps": 162,
                    "nestedExprLevel": 101,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 56.17283950617284,
                        "mul": 0.0,
                        "bitwise": 43.82716049382716
                    },
                    "percentageDAGsCancel": 12.82051282051282
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(1 - (((c + ~a + 1) - a) + (~a | c + ~a + 1) * -2) | ~a) + c + ~a + (~a | c + ~a + 1) * -2 ^ (((a * 2 + ~a) - (a * 2 & a)) + (~(a * 2 & a) | a * 2 + 1 + ~a) * -2) - 1",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 10,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 72.22222222222221,
                        "opsPercentages": {
                            "arithmetic": 46.666666666666664,
                            "mul": 15.555555555555555,
                            "bitwise": 37.77777777777778
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "msvc_O1": {
                    "expr": "(a + -2 + ((~(a * 2) - (~(a * 2 + 1 + ~(a * 2) | a) * 2 | a * 2)) - ~(a * 2) | a) | ((a * 2 + 1 + ((~a + c) * 2 + 2 | ~a * 2 - c) | ~a) - (~a + c) * 2 + 2 | ~a * 2) + ~a + c) - (a + -2 + ((~(a * 2) - (~(a * 2 + 1 + ~(a * 2) | a) * 2 | a * 2)) - ~(a * 2) | a) & ((a * 2 + 1 + ((~a + c) * 2 + 2 | ~a * 2 - c) | ~a) - (~a + c) * 2 + 2 | ~a * 2) + ~a + c)",
                    "attributes": {
                        "numOps": 91,
                        "nestedExprLevel": 21,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 43.82716049382716,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 24.175824175824175,
                            "bitwise": 37.362637362637365
                        },
                        "percentageDAGsCancel": 6.451612903225806
                    }
                },
                "clang_O3": {
                    "expr": "(c - a + c - a | ~a * -2 + ((a - c - a) + c - a | ~a * 2 + 1 | ~a)) - 1 ^ ~(a * 2) & a",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 4,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 85.80246913580247,
                        "opsPercentages": {
                            "arithmetic": 47.82608695652174,
                            "mul": 13.043478260869565,
                            "bitwise": 39.130434782608695
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((((a * 2 + (0xffffffff - a | 0xffffffff - a)) - ((a * 2 ^ 0xffffffff | a) - (a * 2 ^ 0xffffffff))) + (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) | (a * 2 ^ 0xffffffff | a) - (a * 2 ^ 0xffffffff) ^ 0xffffffff) * -2) - 1 & c + (a ^ 0xffffffff) + (c + (a ^ 0xffffffff) + 1 | a ^ 0xffffffff) * -2 + (0xffffffff - a | 0xffffffff - (((c + (a ^ 0xffffffff)) - a) + (c + (a ^ 0xffffffff) + 1 | a ^ 0xffffffff) * -2 + -1))) + (((((a * 2 + (0xffffffff - a | 0xffffffff - a)) - ((a * 2 ^ 0xffffffff | a) - (a * 2 ^ 0xffffffff))) + (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) | (a * 2 ^ 0xffffffff | a) - (a * 2 ^ 0xffffffff) ^ 0xffffffff) * -2) - 1 | c + (a ^ 0xffffffff) + (c + (a ^ 0xffffffff) + 1 | a ^ 0xffffffff) * -2 + (0xffffffff - a | 0xffffffff - (((c + (a ^ 0xffffffff)) - a) + (c + (a ^ 0xffffffff) + 1 | a ^ 0xffffffff) * -2 + -1))) ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 120,
                        "nestedExprLevel": 34,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 25.925925925925924,
                        "opsPercentages": {
                            "arithmetic": 50.83333333333333,
                            "mul": 15.0,
                            "bitwise": 34.166666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (((((a * 2 + (0xffffffff - a | 0xffffffff - a)) - ((~(a * 2) | a) - ~(a * 2))) + (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) | ~((~(a * 2) | a) - ~(a * 2))) * -2) - 1 & c + ~a + (c + 1 + ~a | ~a) * -2 + (0xffffffff - a | 0xffffffff - (((c + ~a) - a) + (c + 1 + ~a | ~a) * -2 + -1))) + ~((((a * 2 + (0xffffffff - a | 0xffffffff - a)) - ((~(a * 2) | a) - ~(a * 2))) + (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) | ~((~(a * 2) | a) - ~(a * 2))) * -2) - 1 | c + ~a + (c + 1 + ~a | ~a) * -2 + (0xffffffff - a | 0xffffffff - (((c + ~a) - a) + (c + 1 + ~a | ~a) * -2 + -1)) ))",
                    "attributes": {
                        "numOps": 120,
                        "nestedExprLevel": 32,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 25.925925925925924,
                        "opsPercentages": {
                            "arithmetic": 50.83333333333333,
                            "mul": 15.0,
                            "bitwise": 34.166666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((a - a * 2 & a) + (~a * 2 & a | a) * -2) - 2 ^ (1 - ((c - a) - a) + (c - a | ~a) * -2 | ~a) + ((c - a) - a) + (c - a | ~a) * -2 + -1 + a",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 8,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 78.39506172839506,
                        "opsPercentages": {
                            "arithmetic": 54.285714285714285,
                            "mul": 14.285714285714285,
                            "bitwise": 31.428571428571427
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                }
            }
        },
        {
            "num": 318,
            "gt": {
                "expr": "((((e&a)-e)-((e*a)+((-e)-e))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 71.42857142857143,
                        "mul": 14.285714285714285,
                        "bitwise": 14.285714285714285
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((~ e | a) - ~ e) + ~ e) + 1) + ~ ((((e & a) * (e | a) + (e & ~ a) * (~ e & a)) ^ ((~ (e - 1) & ~ e) - (~ (~ (e - 1)) & e))) + ((((e & a) * (e | a) + (e & ~ a) * (~ e & a)) & ((~ (e - 1) & ~ e) - (~ (~ (e - 1)) & e))) + (((e & a) * (e | a) + (e & ~ a) * (~ e & a)) & ((~ (e - 1) & ~ e) - (~ (~ (e - 1)) & e)))))) + 1",
                "attributes": {
                    "numOps": 69,
                    "nestedExprLevel": 32,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 27.536231884057973,
                        "mul": 8.695652173913043,
                        "bitwise": 63.76811594202898
                    },
                    "percentageDAGsCancel": 3.8461538461538463
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((e & a) * (e | a) + (~e & a) * (~a & e) & (-e & ~e) - (e - 1 & e)) * 2 + ((e & a) * (e | a) + (~e & a) * (~a & e) ^ (-e & ~e) - (e - 1 & e))) + ~e + (a & e) + 2",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 11,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 42.028985507246375,
                        "opsPercentages": {
                            "arithmetic": 30.0,
                            "mul": 12.5,
                            "bitwise": 57.49999999999999
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(((~(e - 1) & ~e) - (e - 1 & e) ^ (~a & e) * (~e & a) + (a | e) * (a & e)) + ((~(e - 1) & ~e) - (e - 1 & e) & (~a & e) * (~e & a) + (a | e) * (a & e)) * 2) + (~e | a) + 2",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 13,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 40.57971014492754,
                        "opsPercentages": {
                            "arithmetic": 26.82926829268293,
                            "mul": 12.195121951219512,
                            "bitwise": 60.97560975609756
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "clang_O3": {
                    "expr": "((~e | a) - ((~a & e) * (~e & a) + (e | a) * (e & a) ^ (-e & ~e) - (e - 1 & e))) + ((-e & ~e) - (e - 1 & e) & (~a & e) * (~e & a) + (e | a) * (e & a)) * -2 + 1",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 10,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 43.47826086956522,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 12.82051282051282,
                            "bitwise": 56.41025641025641
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e ^ 0xffffffff | a) - (e ^ 0xffffffff)) + (e ^ 0xffffffff) + (((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) ^ ((e - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) - (e - 1 & e)) + ((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) & ((e - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) - (e - 1 & e)) + ((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) & ((e - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) - (e - 1 & e)) ^ 0xffffffff) + 2",
                    "attributes": {
                        "numOps": 62,
                        "nestedExprLevel": 23,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 10.144927536231885,
                        "opsPercentages": {
                            "arithmetic": 29.03225806451613,
                            "mul": 9.67741935483871,
                            "bitwise": 61.29032258064516
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_default": {
                    "expr": "((~e | a) - ~e) + ~e + 2 + ~(((e & a) * (e | a) + (~a & e) * (~e & a) ^ (~(e - 1) & ~e) - (e - 1 & e)) + ((e & a) * (e | a) + (~a & e) * (~e & a) & (~(e - 1) & ~e) - (e - 1 & e)) + ((e & a) * (e | a) + (~a & e) * (~e & a) & (~(e - 1) & ~e) - (e - 1 & e)))",
                    "attributes": {
                        "numOps": 62,
                        "nestedExprLevel": 18,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 10.144927536231885,
                        "opsPercentages": {
                            "arithmetic": 29.03225806451613,
                            "mul": 9.67741935483871,
                            "bitwise": 61.29032258064516
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "gcc_O3": {
                    "expr": "(((a & e) + ~e) - (((~a & e) * (~e & a) + (a | e) * (a & e) ^ (-e & ~e) - (e - 1 & e)) + ((~a & e) * (~e & a) + (a | e) * (a & e) & (-e & ~e) - (e - 1 & e)) * 2)) + 1",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 12,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 43.47826086956522,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 12.82051282051282,
                            "bitwise": 56.41025641025641
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 319,
            "gt": {
                "expr": "((~(-(((-a)+(~(~a)))^((a-a)+a)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 0.0,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 55.55555555555556
                }
            },
            "mba": {
                "expr": "((((((~ a + 1) | (- (- a - 1) - 1)) << 1) - ((~ a + 1) ^ (- (- a - 1) - 1))) | ((((a & ~ a) - (~ a & a)) ^ a) + ((((a & ~ a) - (~ a & a)) & a) << 1))) - (((((~ a + 1) | (- (- a - 1) - 1)) << 1) - ((~ a + 1) ^ (- (- a - 1) - 1))) & ((((a & ~ a) - (~ a & a)) ^ a) + ((((a & ~ a) - (~ a & a)) & a) << 1)))) - 1",
                "attributes": {
                    "numOps": 64,
                    "nestedExprLevel": 32,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 46.875,
                        "mul": 0.0,
                        "bitwise": 53.125
                    },
                    "percentageDAGsCancel": 57.14285714285714
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((-a | a) * 2 - (-a ^ a) ^ a) - 1",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 87.5,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 12.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 28.57142857142857
                    }
                },
                "msvc_O1": {
                    "expr": "(((~a * 2 + 2 | a * 2) - (~a + 1 ^ a) | a) - ((~a * 2 + 2 | a * 2) - (~a + 1 ^ a) & a)) + -1",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 6,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 64.0625,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 17.391304347826086,
                            "bitwise": 43.47826086956522
                        },
                        "percentageDAGsCancel": 30.76923076923077
                    }
                },
                "clang_O3": {
                    "expr": "((-a | a) * 2 - (-a ^ a) ^ a) - 1",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 87.5,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 12.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 28.57142857142857
                    }
                },
                "clang_default": {
                    "expr": "((((a ^ 0xffffffff) + 1 | 0xffffffff - (-1 - a)) * 2 - ((a ^ 0xffffffff) + 1 ^ 0xffffffff - (-1 - a)) | ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) ^ a) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) & a) * 2) - (((a ^ 0xffffffff) + 1 | 0xffffffff - (-1 - a)) * 2 - ((a ^ 0xffffffff) + 1 ^ 0xffffffff - (-1 - a)) & ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) ^ a) + ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) & a) * 2)) + -1",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 25,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 4.6875,
                        "opsPercentages": {
                            "arithmetic": 44.26229508196721,
                            "mul": 6.557377049180328,
                            "bitwise": 49.18032786885246
                        },
                        "percentageDAGsCancel": 40.0
                    }
                },
                "msvc_default": {
                    "expr": "(((~a + 1 | 0xffffffff - (-1 - a)) * 2 - (~a + 1 ^ 0xffffffff - (-1 - a)) | a) - ((~a + 1 | 0xffffffff - (-1 - a)) * 2 - (~a + 1 ^ 0xffffffff - (-1 - a)) & a)) + -1",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 9,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 48.4375,
                        "opsPercentages": {
                            "arithmetic": 63.63636363636363,
                            "mul": 6.0606060606060606,
                            "bitwise": 30.303030303030305
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "gcc_O3": {
                    "expr": "((-a | a) * 2 - (-a ^ a) ^ a) - 1",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 87.5,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 12.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 28.57142857142857
                    }
                }
            }
        },
        {
            "num": 320,
            "gt": {
                "expr": "(((d^(~(d+a)))&(((a-d)|(a+(a&d)))^(~d))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 0.0,
                        "bitwise": 70.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ (((d - (- (((d | a) + (d | a)) - (d ^ a)) - 1)) - ((d | ~ (- (((d | a) + (d | a)) - (d ^ a)) - 1)) << 1)) - 2) | (((((((a & ~ d) - (~ a & d)) + (((a ^ ~ ((~ a | d) - ~ a)) + ((a | ((~ a | d) - ~ a)) + (a | ((~ a | d) - ~ a)))) + 1)) + 1) + ((- ((a & ~ d) - (~ a & d)) - 1) | (- (((a ^ ~ ((~ a | d) - ~ a)) + ((a | ((~ a | d) - ~ a)) + (a | ((~ a | d) - ~ a)))) + 1) - 1))) | (- d - 1)) - ((((((a & ~ d) - (~ a & d)) + (((a ^ ~ ((~ a | d) - ~ a)) + ((a | ((~ a | d) - ~ a)) + (a | ((~ a | d) - ~ a)))) + 1)) + 1) + ((- ((a & ~ d) - (~ a & d)) - 1) | (- (((a ^ ~ ((~ a | d) - ~ a)) + ((a | ((~ a | d) - ~ a)) + (a | ((~ a | d) - ~ a)))) + 1) - 1))) & (- d - 1)))) + (((d - (- (((d | a) + (d | a)) - (d ^ a)) - 1)) - ((d | ~ (- (((d | a) + (d | a)) - (d ^ a)) - 1)) << 1)) - 2)) + 1",
                "attributes": {
                    "numOps": 163,
                    "nestedExprLevel": 91,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 43.558282208588956,
                        "mul": 0.0,
                        "bitwise": 56.44171779141104
                    },
                    "percentageDAGsCancel": 2.380952380952381
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(d - ((d ^ a) + (d | a) * -2 + -1)) + ((d | a) * 2 + ~(d ^ a) + 1 | d) * -2 + (((d | a) * 2 + ~(d ^ a) + 1 | d) * 2 + ~d + (d ^ a) + (d | a) * -2 + 1 | ~(((a * -2 - (~a | d)) - 2 | ((~a & d) - (~d & a)) - 1) + a * 2 + (~a | d) + ((~d & a) - (~a & d)) + 2 ^ d)) + -1",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 17,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 59.50920245398773,
                        "opsPercentages": {
                            "arithmetic": 43.93939393939394,
                            "mul": 12.121212121212121,
                            "bitwise": 43.93939393939394
                        },
                        "percentageDAGsCancel": 2.380952380952381
                    }
                },
                "msvc_O1": {
                    "expr": "(((((((-(a + 1 + (~a | d) | a * 2 + 2) - ~a + 1 + (~a | d) ^ a | (~a & d - (~d & a)) - 1) + a + 1 + (~a | d) | a * 2 + 2) - ~a & d) + ~a + 1 + (~a | d) ^ a + (~d & a) | ~d) - ((((-(a + 1 + (~a | d) | a * 2 + 2) - ~a + 1 + (~a | d) ^ a | (~a & d - (~d & a)) - 1) + a + 1 + (~a | d) | a * 2 + 2) - ~a & d) + ~a + 1 + (~a | d) ^ a + (~d & a) & ~d) | ((((a | d) * 2 - a ^ d) * 2 | d * 2 + (a | d) * -2) - d) + a ^ d) - ((a | d) * 2 - a ^ d) * 2 | d * 2) - a ^ d) + (a | d) * 2 + d",
                    "attributes": {
                        "numOps": 120,
                        "nestedExprLevel": 28,
                        "numDAGs": 53,
                        "percentDecreaseByOps": 26.380368098159508,
                        "opsPercentages": {
                            "arithmetic": 39.166666666666664,
                            "mul": 10.0,
                            "bitwise": 50.83333333333333
                        },
                        "percentageDAGsCancel": 1.8867924528301887
                    }
                },
                "clang_O3": {
                    "expr": "(~(((~d & a) - (~a & d) | a * 2 - (~d & a)) ^ d ) | -d + (d | a) * 2 - (d ^ a) + ((d | a) * 2 - (d ^ a) | d) * -2) + d + (d | a) * 2 - (d ^ a) + ((d | a) * 2 - (d ^ a) | d) * -2",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 11,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 74.84662576687117,
                        "opsPercentages": {
                            "arithmetic": 34.146341463414636,
                            "mul": 17.073170731707318,
                            "bitwise": 48.78048780487805
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "clang_default": {
                    "expr": "(((d - (-1 - (((d | a) + (d | a)) - (d ^ a)))) + (d | 0xffffffff - (((d | a) + (d | a)) - (d ^ a)) ^ 0xffffffff ) * -2) - 2 ^ 0xffffffff | (((a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d)) + (a ^ (a ^ 0xffffffff | d) - (a ^ 0xffffffff) ^ 0xffffffff) + (a | (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) + (a | (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) + 2 + (0xffffffff - ((a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d)) | 0xffffffff - ((a ^ (a ^ 0xffffffff | d) - (a ^ 0xffffffff) ^ 0xffffffff) + (a | (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) + (a | (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) + 1)) | 0xffffffff - d) - (((a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d)) + (a ^ (a ^ 0xffffffff | d) - (a ^ 0xffffffff) ^ 0xffffffff) + (a | (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) + (a | (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) + 2 + (0xffffffff - ((a & (d ^ 0xffffffff)) - ((a ^ 0xffffffff) & d)) | 0xffffffff - ((a ^ (a ^ 0xffffffff | d) - (a ^ 0xffffffff) ^ 0xffffffff) + (a | (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) + (a | (a ^ 0xffffffff | d) - (a ^ 0xffffffff)) + 1)) & 0xffffffff - d)) + (d - (-1 - (((d | a) + (d | a)) - (d ^ a)))) + (d | 0xffffffff - (((d | a) + (d | a)) - (d ^ a)) ^ 0xffffffff) * -2 + -1",
                    "attributes": {
                        "numOps": 155,
                        "nestedExprLevel": 64,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 4.9079754601226995,
                        "opsPercentages": {
                            "arithmetic": 40.64516129032258,
                            "mul": 1.2903225806451613,
                            "bitwise": 58.06451612903226
                        },
                        "percentageDAGsCancel": 2.272727272727273
                    }
                },
                "msvc_default": {
                    "expr": "((~(((d - (-1 - (((d | a) + (d | a)) - (d ^ a)))) + (~(0xffffffff - (((d | a) + (d | a)) - (d ^ a))) | d) * -2) - 2) | (((~d & a) - (~a & d)) + (~((~a | d) - ~a) ^ a) + ((~a | d) - ~a | a) + ((~a | d) - ~a | a) + 2 + (0xffffffff - ((~d & a) - (~a & d)) | 0xffffffff - ((~((~a | d) - ~a) ^ a) + 1 + ((~a | d) - ~a | a) + ((~a | d) - ~a | a))) | 0xffffffff - d) - (((~d & a) - (~a & d)) + (~((~a | d) - ~a) ^ a) + ((~a | d) - ~a | a) + ((~a | d) - ~a | a) + 2 + (0xffffffff - ((~d & a) - (~a & d)) | 0xffffffff - ((~((~a | d) - ~a) ^ a) + 1 + ((~a | d) - ~a | a) + ((~a | d) - ~a | a))) & 0xffffffff - d)) - 1) + (d - (-1 - (((d | a) + (d | a)) - (d ^ a)))) + (~(0xffffffff - (((d | a) + (d | a)) - (d ^ a))) | d) * -2",
                    "attributes": {
                        "numOps": 154,
                        "nestedExprLevel": 56,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 5.521472392638037,
                        "opsPercentages": {
                            "arithmetic": 40.25974025974026,
                            "mul": 1.2987012987012987,
                            "bitwise": 58.44155844155844
                        },
                        "percentageDAGsCancel": 2.272727272727273
                    }
                },
                "gcc_O3": {
                    "expr": "((~((~a | d) + a * 2 + 2 + (~d & a - ~a & d) + ((~a & d - ~d & a) - 1 | -(~a | d) + a * 2 - 2) ^ d) | (d | a) * 2 - (d ^ a) | d * 2 + 2 + ~d + (d ^ a) + (d | a) * -2 + -1) - 1) + (d - (d ^ a) + (d | a) * -2 + -1) + (d | a) * 2 - (d ^ a) | d * -2",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 12,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 61.34969325153374,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 12.698412698412698,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 4.444444444444445
                    }
                }
            }
        },
        {
            "num": 321,
            "gt": {
                "expr": "((~((b-(c&b))|(b&b))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "- (((((b & ~ (((~ c | b) + c) + 1)) - (~ b & (((~ c | b) + c) + 1))) + (((~ b | b) + b) + 1)) + 1) + ((- ((b & ~ (((~ c | b) + c) + 1)) - (~ b & (((~ c | b) + c) + 1))) - 1) | (- (((~ b | b) + b) + 1) - 1))) - 1",
                "attributes": {
                    "numOps": 44,
                    "nestedExprLevel": 26,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 52.27272727272727,
                        "mul": 0.0,
                        "bitwise": 47.72727272727273
                    },
                    "percentageDAGsCancel": 18.181818181818183
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((~b | ((~b & c + (~c | b) + 1) - (-((~c | b) + c) - 2 & b)) - 1) + b + ((-((~c | b) + c) - 2 & b) - (~b & c + (~c | b) + 1)) + 1)",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 12,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 25.0,
                        "opsPercentages": {
                            "arithmetic": 48.484848484848484,
                            "mul": 0.0,
                            "bitwise": 51.515151515151516
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "(((~b & c + 1 + (~c | b) - ((~b & c + 1 + (~c | b) - ~c + 1 + (~c | b) & b) - 1 | ~b)) - ~c + 1 + (~c | b) & b) - b) + -2",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 8,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 25.0,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 0.0,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "clang_O3": {
                    "expr": "~((-((~c | b) + c) - 2 & b) - (~b & (~c | b) + c + 1) | b)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 65.9090909090909,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 0.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((b & ((c ^ 0xffffffff | b) + c + 1 ^ 0xffffffff)) - ((b ^ 0xffffffff) & (c ^ 0xffffffff | b) + c + 1)) + (b ^ 0xffffffff | b) + b + 2 + (0xffffffff - ((b & ((c ^ 0xffffffff | b) + c + 1 ^ 0xffffffff)) - ((b ^ 0xffffffff) & (c ^ 0xffffffff | b) + c + 1)) | 0xffffffff - ((b ^ 0xffffffff | b) + b + 1)))",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 15,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 6.8181818181818175,
                        "opsPercentages": {
                            "arithmetic": 48.78048780487805,
                            "mul": 0.0,
                            "bitwise": 51.21951219512195
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (((~((~c | b) + 1 + c) & b) - (~b & (~c | b) + 1 + c)) + b + 1 + (0xffffffff - ((~((~c | b) + 1 + c) & b) - (~b & (~c | b) + 1 + c)) | 0xffffffff - b))",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 12,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 22.727272727272727,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 17.647058823529413
                    }
                },
                "gcc_O3": {
                    "expr": "~(b + 1 + (-c + (~c | b) - 2 & b - c + (~c | b) + 1 & ~b) + ((c + (~c | b) + 1 & ~b - -c + (~c | b) - 2 & b) - 1 | ~b))",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 7,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 25.0,
                        "opsPercentages": {
                            "arithmetic": 48.484848484848484,
                            "mul": 0.0,
                            "bitwise": 51.515151515151516
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                }
            }
        },
        {
            "num": 322,
            "gt": {
                "expr": "((-(-((a^a)+(c*(a+a))))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 16.666666666666664,
                        "bitwise": 16.666666666666664
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "~ (~ ((((a | a) - (a & a)) | ((c & ((a - ~ a) - 1)) * (c | ((a - ~ a) - 1)) + (c & ~ ((a - ~ a) - 1)) * (~ c & ((a - ~ a) - 1)))) + (((a | a) - (a & a)) & ((c & ((a - ~ a) - 1)) * (c | ((a - ~ a) - 1)) + (c & ~ ((a - ~ a) - 1)) * (~ c & ((a - ~ a) - 1))))) + 1) + 1",
                "attributes": {
                    "numOps": 55,
                    "nestedExprLevel": 28,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 41.81818181818181,
                        "mul": 7.2727272727272725,
                        "bitwise": 50.90909090909091
                    },
                    "percentageDAGsCancel": 22.727272727272727
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~a * 2 + 1 & c) * ((a - ~a) - 1 & ~c) + ((a - ~a) - 1 & c) * ((a - ~a) - 1 | c)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 5,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 63.63636363636363,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 15.0,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~c & a * 2) * (~a * 2 & c) + (a * 2 | c) * (a * 2 & c)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 76.36363636363637,
                        "opsPercentages": {
                            "arithmetic": 7.6923076923076925,
                            "mul": 46.15384615384615,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_O3": {
                    "expr": "(a * 2 & ~c) * (~a * 2 & c) + (a * 2 | c) * (a * 2 & c)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 76.36363636363637,
                        "opsPercentages": {
                            "arithmetic": 7.6923076923076925,
                            "mul": 46.15384615384615,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_default": {
                    "expr": "(((c & (a - (a ^ 0xffffffff)) - 1) * (c | (a - (a ^ 0xffffffff)) - 1) + (c & ((a - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((c ^ 0xffffffff) & (a - (a ^ 0xffffffff)) - 1) ^ 0xffffffff) + 1 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 13,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 54.54545454545454,
                        "opsPercentages": {
                            "arithmetic": 44.0,
                            "mul": 8.0,
                            "bitwise": 48.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~(~(((a - ~a) - 1 & c) * ((a - ~a) - 1 | c) + (~((a - ~a) - 1) & c) * (~c & (a - ~a) - 1)) + 1) + 1",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 9,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 54.54545454545454,
                        "opsPercentages": {
                            "arithmetic": 44.0,
                            "mul": 8.0,
                            "bitwise": 48.0
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "gcc_O3": {
                    "expr": "(~a * 2 + 1 & c) * (~c & a * 2) + (a * 2 & c) * (a * 2 | c)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 3,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 74.54545454545455,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 42.857142857142854,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 323,
            "gt": {
                "expr": "((((b|a)+a)+(b&(b&b))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "((((((b & ~ a) + a) | a) + (((b & ~ a) + a) & a)) | ((~ b | (((~ b | b) + b) + 1)) - ~ b)) + (((((b & ~ a) + a) | a) + (((b & ~ a) + a) & a)) | ((~ b | (((~ b | b) + b) + 1)) - ~ b))) - (((((b & ~ a) + a) | a) + (((b & ~ a) + a) & a)) ^ ((~ b | (((~ b | b) + b) + 1)) - ~ b))",
                "attributes": {
                    "numOps": 56,
                    "nestedExprLevel": 33,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 35.714285714285715,
                        "mul": 0.0,
                        "bitwise": 64.28571428571429
                    },
                    "percentageDAGsCancel": 18.75
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~a & b) + a * 2 | b) * 2 - ((~a & b) + a * 2 ^ b)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 78.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((~a & b) + a & a) + ((~a & b) + a | a) | b) * 2 - (((~a & b) + a & a) + ((~a & b) + a | a) ^ b)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 8,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 60.71428571428571,
                        "opsPercentages": {
                            "arithmetic": 31.818181818181817,
                            "mul": 4.545454545454546,
                            "bitwise": 63.63636363636363
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_O3": {
                    "expr": "((~a & b) + a * 2 | b) * 2 - ((~a & b) + a * 2 ^ b)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 78.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((b & (a ^ 0xffffffff)) + a | a) + ((b & (a ^ 0xffffffff)) + a & a) | (b ^ 0xffffffff | (b ^ 0xffffffff | b) + b + 1) - (b ^ 0xffffffff)) + (((b & (a ^ 0xffffffff)) + a | a) + ((b & (a ^ 0xffffffff)) + a & a) | (b ^ 0xffffffff | (b ^ 0xffffffff | b) + b + 1) - (b ^ 0xffffffff) )) - (((b & (a ^ 0xffffffff)) + a | a) + ((b & (a ^ 0xffffffff)) + a & a) ^ (b ^ 0xffffffff | (b ^ 0xffffffff | b) + b + 1) - (b ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 56,
                        "nestedExprLevel": 23,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 0.0,
                            "bitwise": 64.28571428571429
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "msvc_default": {
                    "expr": "((((~a & b) + a | a) + ((~a & b) + a & a) | -~b - 1) + (((~a & b) + a | a) + ((~a & b) + a & a) | -~b - 1)) - (((~a & b) + a | a) + ((~a & b) + a & a) ^ -~b - 1)",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 12,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 26.785714285714285,
                        "opsPercentages": {
                            "arithmetic": 41.46341463414634,
                            "mul": 0.0,
                            "bitwise": 58.536585365853654
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "gcc_O3": {
                    "expr": "((~a & b) + a * 2 | b) * 2 - ((~a & b) + a * 2 ^ b)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 78.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 324,
            "gt": {
                "expr": "(((-(d&(-(~e))))^(d|d)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "((~ (((~ d | (e + 1)) + d) + 1) + 1) | (((d + d) + 1) + ((- d - 1) | (- d - 1)))) - ((~ (((~ d | (e + 1)) + d) + 1) + 1) & (((d + d) + 1) + ((- d - 1) | (- d - 1))))",
                "attributes": {
                    "numOps": 33,
                    "nestedExprLevel": 19,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 69.6969696969697,
                        "mul": 0.0,
                        "bitwise": 30.303030303030305
                    },
                    "percentageDAGsCancel": 6.25
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-d - 1 ^ (~d | e + 1) + d",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 78.78787878787878,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~((e + 1 | ~d) + d) | d) - (~((e + 1 | ~d) + d) & d)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 6,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 60.60606060606061,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 0.0,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((e + 1 | ~d) + d ^ d)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d ^ 0xffffffff | e + 1) + d + 1 ^ 0xffffffff) + 1 | d * 2 + 1 + (0xffffffff - d | 0xffffffff - d)) - (((d ^ 0xffffffff | e + 1) + d + 1 ^ 0xffffffff) + 1 & d * 2 + 1 + (0xffffffff - d | 0xffffffff - d))",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 12.121212121212121,
                        "opsPercentages": {
                            "arithmetic": 58.620689655172406,
                            "mul": 6.896551724137931,
                            "bitwise": 34.48275862068966
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~((~d | e + 1) + 1 + d) + 1 | d * 2 + 1 + (0xffffffff - d | 0xffffffff - d)) - (~((~d | e + 1) + 1 + d) + 1 & d * 2 + 1 + (0xffffffff - d | 0xffffffff - d))",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 12.121212121212121,
                        "opsPercentages": {
                            "arithmetic": 58.620689655172406,
                            "mul": 6.896551724137931,
                            "bitwise": 34.48275862068966
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~d | e + 1) + d ^ -d - 1",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 78.78787878787878,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 325,
            "gt": {
                "expr": "(((b-(-a))&(a|(b&a))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(~ ((b & ~ (~ (a - 1))) - (~ b & ~ (a - 1))) | (((a + (((~ b | a) + b) + 1)) + 1) + ((- a - 1) | (- (((~ b | a) + b) + 1) - 1)))) - ~ ((b & ~ (~ (a - 1))) - (~ b & ~ (a - 1)))",
                "attributes": {
                    "numOps": 38,
                    "nestedExprLevel": 20,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 47.368421052631575,
                        "mul": 0.0,
                        "bitwise": 52.63157894736842
                    },
                    "percentageDAGsCancel": 4.761904761904762
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a - 1 & b) - (-a & ~b) & a + b + (~b | a) + 2 + (-((~b | a) + b) - 2 | ~a)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 5,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 47.368421052631575,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_O1": {
                    "expr": "a - 1 & b + 1 + ((((-2 - (~b | a)) - b | ~a) + (~b | a) + a + b + 2 | ~(a - 1 & b - ~(a - 1 | b))) - ~(a - 1 | b))",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 8,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 23.684210526315788,
                        "opsPercentages": {
                            "arithmetic": 51.724137931034484,
                            "mul": 0.0,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "clang_O3": {
                    "expr": "(-(~b | a) + b - 2 | ~a) + (~b | a) + b + a + 2 & (a - 1 & b) - (-a & ~b)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 4,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 47.368421052631575,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "clang_default": {
                    "expr": "((b & a - 1) - ((b ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) ^ 0xffffffff | a + (b ^ 0xffffffff | a) + b + 2 + (0xffffffff - a | 0xffffffff - ((b ^ 0xffffffff | a) + b + 1))) - ((b & a - 1) - ((b ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 9,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 18.421052631578945,
                        "opsPercentages": {
                            "arithmetic": 48.38709677419355,
                            "mul": 0.0,
                            "bitwise": 51.61290322580645
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~((a - 1 & b) - (~b & ~(a - 1))) | a + (~b | a) + b + 2 + (0xffffffff - a | 0xffffffff - ((~b | a) + 1 + b))) - ~((a - 1 & b) - (~b & ~(a - 1)))",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 10,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 18.421052631578945,
                        "opsPercentages": {
                            "arithmetic": 48.38709677419355,
                            "mul": 0.0,
                            "bitwise": 51.61290322580645
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~b | a) + b + 2 + a + (~a | -(~b | a) + b - 2) & (a - 1 & b) - (-a & ~b)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 4,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 47.368421052631575,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 326,
            "gt": {
                "expr": "((((c^d)&((c-c)+d))^(~(-(a+(~(d*d)))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 10.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((((~ ((c | d) - (c & d)) | ((((c & ~ c) - (~ c & c)) | d) + (((c & ~ c) - (~ c & c)) & d))) + ((c | d) - (c & d))) + 1) - ((((a | (- ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) - 1)) << 1) - (a ^ (- ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) - 1))) - 1)) - (((((~ ((c | d) - (c & d)) | ((((c & ~ c) - (~ c & c)) | d) + (((c & ~ c) - (~ c & c)) & d))) + ((c | d) - (c & d))) + 1) | ~ ((((a | (- ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) - 1)) << 1) - (a ^ (- ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) - 1))) - 1)) + ((((~ ((c | d) - (c & d)) | ((((c & ~ c) - (~ c & c)) | d) + (((c & ~ c) - (~ c & c)) & d))) + ((c | d) - (c & d))) + 1) | ~ ((((a | (- ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) - 1)) << 1) - (a ^ (- ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) - 1))) - 1)))) - 2",
                "attributes": {
                    "numOps": 158,
                    "nestedExprLevel": 87,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 31.0126582278481,
                        "mul": 7.59493670886076,
                        "bitwise": 61.39240506329114
                    },
                    "percentageDAGsCancel": 34.285714285714285
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((c ^ d) + (~c | d)) - (((~(d * d) | a) * 2 - ~(d * d ^ a)) + -1)) + (~(d * d ^ a) + ~((~(d * d) | a) * 2) + 1 | (c ^ d) + (~c | d) + 1) * -2 + -1",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 13,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 77.21518987341773,
                        "opsPercentages": {
                            "arithmetic": 36.11111111111111,
                            "mul": 19.444444444444446,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "msvc_O1": {
                    "expr": "~(d * d) ^ a + (((~(c | d - c & d) | d + (c | d + 1 + (~(c | d - c & d) | d - c & d) | ~(d * d) ^ a - (-1 - d * d) * 2 | a * 2) * -2) - (-1 - d * d) * 2 | a * 2) - c & d) + c | d",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 8,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 72.15189873417721,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 20.454545454545457,
                            "bitwise": 43.18181818181818
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((d ^ c) + (~c | d) + 1 - (d * d ^ a) + (~(d * d) | a) * 2) + (~(d * d ^ a) + (~(d * d) | a) * 2 | (d ^ c) + (~c | d) + 1) * -2 + -2",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 8,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 79.74683544303798,
                        "opsPercentages": {
                            "arithmetic": 34.375,
                            "mul": 21.875,
                            "bitwise": 43.75
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((((c | d) - (c & d) ^ 0xffffffff | ((c & (c ^ 0xffffffff)) - ((c ^ 0xffffffff) & c) | d) + ((c & (c ^ 0xffffffff)) - ((c ^ 0xffffffff) & c) & d)) + ((c | d) - (c & d))) - (((a | 0xffffffff - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d))) * 2 - (a ^ 0xffffffff - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)))) + -1)) - ((((c | d) - (c & d) ^ 0xffffffff | ((c & (c ^ 0xffffffff)) - ((c ^ 0xffffffff) & c) | d) + ((c & (c ^ 0xffffffff)) - ((c ^ 0xffffffff) & c) & d)) + ((c | d) - (c & d)) + 1 | ((a | 0xffffffff - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) )) * 2 - (a ^ 0xffffffff - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)) )) - 1 ^ 0xffffffff) + (((c | d) - (c & d) ^ 0xffffffff | ((c & (c ^ 0xffffffff)) - ((c ^ 0xffffffff) & c) | d) + ((c & (c ^ 0xffffffff)) - ((c ^ 0xffffffff) & c) & d)) + ((c | d) - (c & d)) + 1 | ((a | 0xffffffff - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)) ) * 2 - (a ^ 0xffffffff - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)))) - 1 ^ 0xffffffff))) + -1",
                    "attributes": {
                        "numOps": 141,
                        "nestedExprLevel": 66,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 10.759493670886076,
                        "opsPercentages": {
                            "arithmetic": 31.20567375886525,
                            "mul": 10.638297872340425,
                            "bitwise": 58.156028368794324
                        },
                        "percentageDAGsCancel": 26.47058823529412
                    }
                },
                "msvc_default": {
                    "expr": "((((~((c | d) - (c & d)) | d) + ((c | d) - (c & d))) - (((0xffffffff - d * d | a) * 2 - (0xffffffff - d * d ^ a)) + -1)) - (((~((c | d) - (c & d)) | d) + 1 + ((c | d) - (c & d)) | ~(((0xffffffff - d * d | a) * 2 - (0xffffffff - d * d ^ a)) - 1)) + ((~((c | d) - (c & d)) | d) + 1 + ((c | d) - (c & d)) | ~(((0xffffffff - d * d | a) * 2 - (0xffffffff - d * d ^ a)) - 1)))) + -1",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 31,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 58.22784810126582,
                        "opsPercentages": {
                            "arithmetic": 43.93939393939394,
                            "mul": 13.636363636363635,
                            "bitwise": 42.42424242424242
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~c | d) + 1 + (c ^ d) - (d * d ^ a + a * 2)) + (~d * d ^ a + a * -2 | (~c | d) + 1 + (c ^ d)) * -2 + -2",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 5,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 82.91139240506328,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 18.51851851851852,
                            "bitwise": 37.03703703703704
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 327,
            "gt": {
                "expr": "(((a^(~(d*(c+a))))-(c*(-c))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 28.57142857142857,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((a - (- ((d & ((c - ~ a) - 1)) * (d | ((c - ~ a) - 1)) + (d & ~ ((c - ~ a) - 1)) * (~ d & ((c - ~ a) - 1))) - 1)) - ((a | ~ (- ((d & ((c - ~ a) - 1)) * (d | ((c - ~ a) - 1)) + (d & ~ ((c - ~ a) - 1)) * (~ d & ((c - ~ a) - 1))) - 1)) + (a | ~ (- ((d & ((c - ~ a) - 1)) * (d | ((c - ~ a) - 1)) + (d & ~ ((c - ~ a) - 1)) * (~ d & ((c - ~ a) - 1))) - 1)))) - 2) ^ ((c & ~ (c - 1)) * (c | ~ (c - 1)) + (c & ~ (~ (c - 1))) * (~ c & ~ (c - 1)))) - ((~ (((a - (- ((d & ((c - ~ a) - 1)) * (d | ((c - ~ a) - 1)) + (d & ~ ((c - ~ a) - 1)) * (~ d & ((c - ~ a) - 1))) - 1)) - ((a | ~ (- ((d & ((c - ~ a) - 1)) * (d | ((c - ~ a) - 1)) + (d & ~ ((c - ~ a) - 1)) * (~ d & ((c - ~ a) - 1))) - 1)) + (a | ~ (- ((d & ((c - ~ a) - 1)) * (d | ((c - ~ a) - 1)) + (d & ~ ((c - ~ a) - 1)) * (~ d & ((c - ~ a) - 1))) - 1)))) - 2) & ((c & ~ (c - 1)) * (c | ~ (c - 1)) + (c & ~ (~ (c - 1))) * (~ c & ~ (c - 1)))) + (~ (((a - (- ((d & ((c - ~ a) - 1)) * (d | ((c - ~ a) - 1)) + (d & ~ ((c - ~ a) - 1)) * (~ d & ((c - ~ a) - 1))) - 1)) - ((a | ~ (- ((d & ((c - ~ a) - 1)) * (d | ((c - ~ a) - 1)) + (d & ~ ((c - ~ a) - 1)) * (~ d & ((c - ~ a) - 1))) - 1)) + (a | ~ (- ((d & ((c - ~ a) - 1)) * (d | ((c - ~ a) - 1)) + (d & ~ ((c - ~ a) - 1)) * (~ d & ((c - ~ a) - 1))) - 1)))) - 2) & ((c & ~ (c - 1)) * (c | ~ (c - 1)) + (c & ~ (~ (c - 1))) * (~ c & ~ (c - 1)))))",
                "attributes": {
                    "numOps": 289,
                    "nestedExprLevel": 132,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 44.29065743944637,
                        "mul": 8.304498269896193,
                        "bitwise": 47.40484429065744
                    },
                    "percentageDAGsCancel": 5.555555555555555
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((a - ~((~a + ~c + 1 & d) * ((c - ~a) - 1 & ~d) + ((c - ~a) - 1 & d) * ((c - ~a) - 1 | d))) + ((~a + ~c + 1 & d) * ((c - ~a) - 1 & ~d) + ((c - ~a) - 1 & d) * ((c - ~a) - 1 | d) | a) * -2) - 2 ^ (c - 1 & c) * (-c & ~c) + (-c & c) * (-c | c)) + ((c - 1 & c) * (-c & ~c) + (-c & c) * (-c | c) & ((~a + ~c + 1 & d) * ((c - ~a) - 1 & ~d) + ((c - ~a) - 1 & d) * ((c - ~a) - 1 | d) | a) * 2 + ~a + ~((~a + ~c + 1 & d) * ((c - ~a) - 1 & ~d) + ((c - ~a) - 1 & d) * ((c - ~a) - 1 | d)) + 2) * -2",
                    "attributes": {
                        "numOps": 127,
                        "nestedExprLevel": 26,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 56.05536332179931,
                        "opsPercentages": {
                            "arithmetic": 43.30708661417323,
                            "mul": 11.811023622047244,
                            "bitwise": 44.881889763779526
                        },
                        "percentageDAGsCancel": 2.631578947368421
                    }
                },
                "msvc_O1": {
                    "expr": "((~c - 1 | c) * (~c - 1 & c) + ~(c - 1 | c) * (c - 1 & c) ^ (a + c | d) * (a + c & d) + (~(~(~a + c & d) * (~d & a + c) - (a + c | d) * (a + c & d)) | a) * -2 + (~a + c & d) * (~d & a + c) + a + -1) + (~(a + c | d) * (a + c & d) + (~(~(~a + c & d) * (~d & a + c) - (a + c | d) * (a + c & d)) | a) * -2 + (~a + c & d) * (~d & a + c) + a + -1 & (~c - 1 | c) * (~c - 1 & c) + ~(c - 1 | c) * (c - 1 & c)) * -2",
                    "attributes": {
                        "numOps": 104,
                        "nestedExprLevel": 19,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 64.01384083044984,
                        "opsPercentages": {
                            "arithmetic": 40.38461538461539,
                            "mul": 14.423076923076922,
                            "bitwise": 45.19230769230769
                        },
                        "percentageDAGsCancel": 9.30232558139535
                    }
                },
                "clang_O3": {
                    "expr": "((~d & c + a) * (~c + a & d) + (c + a | d) * (c + a & d) + a + ((~d & c + a) * (~c + a & d) + (c + a | d) * (c + a & d) | a) * -2 - 1 ^ (~c & -c) * (c - 1 & c) + (-c | c) * (-c & c)) + (-(~d & c + a) * (~c + a & d) + (c + a | d) * (c + a & d) + a + ((~d & c + a) * (~c + a & d) + (c + a | d) * (c + a & d) | a) * -2 & (~c & -c) * (c - 1 & c) + (-c | c) * (-c & c)) * -2",
                    "attributes": {
                        "numOps": 93,
                        "nestedExprLevel": 17,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 67.82006920415225,
                        "opsPercentages": {
                            "arithmetic": 43.01075268817204,
                            "mul": 16.129032258064516,
                            "bitwise": 40.86021505376344
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((a - (-1 - ((d & (c - (a ^ 0xffffffff)) - 1) * (d | (c - (a ^ 0xffffffff)) - 1) + (d & ((c - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (c - (a ^ 0xffffffff)) - 1)))) - ((a | 0xffffffff - ((d & (c - (a ^ 0xffffffff)) - 1) * (d | (c - (a ^ 0xffffffff)) - 1) + (d & ((c - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (c - (a ^ 0xffffffff)) - 1)) ^ 0xffffffff) + (a | 0xffffffff - ((d & (c - (a ^ 0xffffffff)) - 1) * (d | (c - (a ^ 0xffffffff)) - 1) + (d & ((c - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (c - (a ^ 0xffffffff)) - 1)) ^ 0xffffffff) )) - 2 ^ (c & (c - 1 ^ 0xffffffff)) * (c | c - 1 ^ 0xffffffff) + (c & c - 1) * ((c ^ 0xffffffff) & (c - 1 ^ 0xffffffff))) - (((((a - (-1 - ((d & (c - (a ^ 0xffffffff)) - 1) * (d | (c - (a ^ 0xffffffff)) - 1) + (d & ((c - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (c - (a ^ 0xffffffff)) - 1)))) - ((a | 0xffffffff - ((d & (c - (a ^ 0xffffffff)) - 1) * (d | (c - (a ^ 0xffffffff)) - 1) + (d & ((c - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (c - (a ^ 0xffffffff)) - 1)) ^ 0xffffffff ) + (a | 0xffffffff - ((d & (c - (a ^ 0xffffffff)) - 1) * (d | (c - (a ^ 0xffffffff)) - 1) + (d & ((c - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (c - (a ^ 0xffffffff)) - 1)) ^ 0xffffffff))) - 2 ^ 0xffffffff) & (c & (c - 1 ^ 0xffffffff)) * (c | c - 1 ^ 0xffffffff) + (c & c - 1) * ((c ^ 0xffffffff) & (c - 1 ^ 0xffffffff))) + ((((a - (-1 - ((d & (c - (a ^ 0xffffffff)) - 1) * (d | (c - (a ^ 0xffffffff)) - 1) + (d & ((c - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (c - (a ^ 0xffffffff)) - 1)))) - ((a | 0xffffffff - ((d & (c - (a ^ 0xffffffff)) - 1) * (d | (c - (a ^ 0xffffffff)) - 1) + (d & ((c - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (c - (a ^ 0xffffffff)) - 1)) ^ 0xffffffff) + (a | 0xffffffff - ((d & (c - (a ^ 0xffffffff)) - 1) * (d | (c - (a ^ 0xffffffff)) - 1) + (d & ((c - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (c - (a ^ 0xffffffff)) - 1)) ^ 0xffffffff ))) - 2 ^ 0xffffffff) & (c & (c - 1 ^ 0xffffffff)) * (c | c - 1 ^ 0xffffffff) + (c & c - 1) * ((c ^ 0xffffffff) & (c - 1 ^ 0xffffffff))))",
                    "attributes": {
                        "numOps": 277,
                        "nestedExprLevel": 127,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 4.1522491349480966,
                        "opsPercentages": {
                            "arithmetic": 44.04332129963899,
                            "mul": 8.664259927797833,
                            "bitwise": 47.292418772563174
                        },
                        "percentageDAGsCancel": 2.7777777777777777
                    }
                },
                "msvc_default": {
                    "expr": "(((a - (-1 - (((c - ~a) - 1 & d) * ((c - ~a) - 1 | d) + (~((c - ~a) - 1) & d) * (~d & (c - ~a) - 1))) ) - ((~(0xffffffff - (((c - ~a) - 1 & d) * ((c - ~a) - 1 | d) + (~((c - ~a) - 1) & d) * (~d & (c - ~a) - 1)) ) | a) + (~(0xffffffff - (((c - ~a) - 1 & d) * ((c - ~a) - 1 | d) + (~((c - ~a) - 1) & d) * (~d & (c - ~a) - 1))) | a))) - 2 ^ (~(c - 1) & c) * (~(c - 1) | c) + (c - 1 & c) * (~c & ~(c - 1))) - ((~(((a - (-1 - (((c - ~a) - 1 & d) * ((c - ~a) - 1 | d) + (~((c - ~a) - 1) & d) * (~d & (c - ~a) - 1)))) - ((~(0xffffffff - (((c - ~a) - 1 & d) * ((c - ~a) - 1 | d) + (~((c - ~a) - 1) & d) * (~d & (c - ~a) - 1))) | a) + (~(0xffffffff - (((c - ~a) - 1 & d) * ((c - ~a) - 1 | d) + (~((c - ~a) - 1) & d) * (~d & (c - ~a) - 1))) | a))) - 2) & (~(c - 1) & c) * (~(c - 1) | c) + (c - 1 & c) * (~c & ~(c - 1))) + (~(((a - (-1 - (((c - ~a) - 1 & d) * ((c - ~a) - 1 | d) + (~((c - ~a) - 1) & d) * (~d & (c - ~a) - 1) ))) - ((~(0xffffffff - (((c - ~a) - 1 & d) * ((c - ~a) - 1 | d) + (~((c - ~a) - 1) & d) * (~d & (c - ~a) - 1))) | a) + (~(0xffffffff - (((c - ~a) - 1 & d) * ((c - ~a) - 1 | d) + (~((c - ~a) - 1) & d) * (~d & (c - ~a) - 1))) | a))) - 2) & (~(c - 1) & c) * (~(c - 1) | c) + (c - 1 & c) * (~c & ~(c - 1))))",
                    "attributes": {
                        "numOps": 277,
                        "nestedExprLevel": 98,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 4.1522491349480966,
                        "opsPercentages": {
                            "arithmetic": 44.04332129963899,
                            "mul": 8.664259927797833,
                            "bitwise": 47.292418772563174
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((a - ~(~a - c & d) * (~d & a + c) + (a + c | d) * (a + c & d)) + (~a - c & d) * (~d & a + c) + (a + c | d) * (a + c & d) | a * -2) - 2 ^ (c - 1 & c) * (~c & -c) + (-c | c) * (-c & c)) + ((~a - c & d) * (~d & a + c) + (a + c | d) * (a + c & d) | a * 2 + 2 + ~a + ~(~a - c & d) * (~d & a + c) + (a + c | d) * (a + c & d) & (c - 1 & c) * (~c & -c) + (-c | c) * (-c & c)) * -2",
                    "attributes": {
                        "numOps": 95,
                        "nestedExprLevel": 17,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 67.1280276816609,
                        "opsPercentages": {
                            "arithmetic": 41.05263157894737,
                            "mul": 15.789473684210526,
                            "bitwise": 43.15789473684211
                        },
                        "percentageDAGsCancel": 2.4390243902439024
                    }
                }
            }
        },
        {
            "num": 328,
            "gt": {
                "expr": "((~(((-(~b))+(a-a))^(e|(b^(a-b))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 0.0,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "(((((b + 1) | ((a ^ a) - ((~ a & a) + (~ a & a)))) + ((b + 1) | ((a ^ a) - ((~ a & a) + (~ a & a))))) - ((b + 1) ^ ((a ^ a) - ((~ a & a) + (~ a & a))))) & ((e & ~ ((b | ((a + ~ b) + 1)) - (b & ((a + ~ b) + 1)))) + ((b | ((a + ~ b) + 1)) - (b & ((a + ~ b) + 1))))) + ~ (((((b + 1) | ((a ^ a) - ((~ a & a) + (~ a & a)))) + ((b + 1) | ((a ^ a) - ((~ a & a) + (~ a & a))))) - ((b + 1) ^ ((a ^ a) - ((~ a & a) + (~ a & a))))) | ((e & ~ ((b | ((a + ~ b) + 1)) - (b & ((a + ~ b) + 1)))) + ((b | ((a + ~ b) + 1)) - (b & ((a + ~ b) + 1)))))",
                "attributes": {
                    "numOps": 104,
                    "nestedExprLevel": 56,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 43.269230769230774,
                        "mul": 0.0,
                        "bitwise": 56.730769230769226
                    },
                    "percentageDAGsCancel": 21.73913043478261
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((a + ~b + 1 ^ b) + (((b - a) - 1 ^ b) & e) | b + 1) + (b + 1 & (a + ~b + 1 ^ b) + (((b - a) - 1 ^ b) & e))",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 8,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 76.92307692307693,
                        "opsPercentages": {
                            "arithmetic": 54.166666666666664,
                            "mul": 0.0,
                            "bitwise": 45.83333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(a - b | b + ((~(a - b | b - a - b & b) & e) - a - b & b) | b + 1) + (a - b | b + ((~(a - b | b - a - b & b) & e) - a - b & b) & b + 1)",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 8,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 69.23076923076923,
                        "opsPercentages": {
                            "arithmetic": 53.125,
                            "mul": 0.0,
                            "bitwise": 46.875
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((~a - b ^ b & e) + a - b ^ b | b + 1) + ((~a - b ^ b & e) + a - b ^ b & b + 1)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 4,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 80.76923076923077,
                        "opsPercentages": {
                            "arithmetic": 45.0,
                            "mul": 0.0,
                            "bitwise": 55.00000000000001
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "clang_default": {
                    "expr": "(((b + 1 | -(((a ^ 0xffffffff) & a) + ((a ^ 0xffffffff) & a))) + (b + 1 | -(((a ^ 0xffffffff) & a) + ((a ^ 0xffffffff) & a)))) - (b + 1 ^ -(((a ^ 0xffffffff) & a) + ((a ^ 0xffffffff) & a))) & (e & ((b | a + (b ^ 0xffffffff) + 1) - (b & a + (b ^ 0xffffffff) + 1) ^ 0xffffffff)) + ((b | a + (b ^ 0xffffffff) + 1) - (b & a + (b ^ 0xffffffff) + 1))) + ((((b + 1 | -(((a ^ 0xffffffff) & a) + ((a ^ 0xffffffff) & a))) + (b + 1 | -(((a ^ 0xffffffff) & a) + ((a ^ 0xffffffff) & a)))) - (b + 1 ^ -(((a ^ 0xffffffff) & a) + ((a ^ 0xffffffff) & a))) | (e & ((b | a + (b ^ 0xffffffff) + 1) - (b & a + (b ^ 0xffffffff) + 1) ^ 0xffffffff)) + ((b | a + (b ^ 0xffffffff) + 1) - (b & a + (b ^ 0xffffffff) + 1))) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 98,
                        "nestedExprLevel": 45,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 5.769230769230769,
                        "opsPercentages": {
                            "arithmetic": 45.91836734693878,
                            "mul": 0.0,
                            "bitwise": 54.08163265306123
                        },
                        "percentageDAGsCancel": 13.636363636363635
                    }
                },
                "msvc_default": {
                    "expr": "(b + 1 & (~((a + 1 + ~b | b) - (a + 1 + ~b & b)) & e) + ((a + 1 + ~b | b) - (a + 1 + ~b & b))) + ~(b + 1 | (~((a + 1 + ~b | b) - (a + 1 + ~b & b)) & e) + ((a + 1 + ~b | b) - (a + 1 + ~b & b)))",
                    "attributes": {
                        "numOps": 48,
                        "nestedExprLevel": 13,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 53.84615384615385,
                        "opsPercentages": {
                            "arithmetic": 52.083333333333336,
                            "mul": 0.0,
                            "bitwise": 47.91666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(b + 1 | (((b - a) - 1 ^ b) & e) + (a - b ^ b)) + (b + 1 & (((b - a) - 1 ^ b) & e) + (a - b ^ b))",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 9,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 80.76923076923077,
                        "opsPercentages": {
                            "arithmetic": 55.00000000000001,
                            "mul": 0.0,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                }
            }
        },
        {
            "num": 329,
            "gt": {
                "expr": "(((((b&c)*a)*b)+a))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 50.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((((~ b | c) + b) + 1) & a) * ((((~ b | c) + b) + 1) | a) + ((((~ b | c) + b) + 1) & ~ a) * (~ (((~ b | c) + b) + 1) & a)) & b) * ((((((~ b | c) + b) + 1) & a) * ((((~ b | c) + b) + 1) | a) + ((((~ b | c) + b) + 1) & ~ a) * (~ (((~ b | c) + b) + 1) & a)) | b) + ((((((~ b | c) + b) + 1) & a) * ((((~ b | c) + b) + 1) | a) + ((((~ b | c) + b) + 1) & ~ a) * (~ (((~ b | c) + b) + 1) & a)) & ~ b) * (~ (((((~ b | c) + b) + 1) & a) * ((((~ b | c) + b) + 1) | a) + ((((~ b | c) + b) + 1) & ~ a) * (~ (((~ b | c) + b) + 1) & a)) & b)) | a) + ((((((((~ b | c) + b) + 1) & a) * ((((~ b | c) + b) + 1) | a) + ((((~ b | c) + b) + 1) & ~ a) * (~ (((~ b | c) + b) + 1) & a)) & b) * ((((((~ b | c) + b) + 1) & a) * ((((~ b | c) + b) + 1) | a) + ((((~ b | c) + b) + 1) & ~ a) * (~ (((~ b | c) + b) + 1) & a)) | b) + ((((((~ b | c) + b) + 1) & a) * ((((~ b | c) + b) + 1) | a) + ((((~ b | c) + b) + 1) & ~ a) * (~ (((~ b | c) + b) + 1) & a)) & ~ b) * (~ (((((~ b | c) + b) + 1) & a) * ((((~ b | c) + b) + 1) | a) + ((((~ b | c) + b) + 1) & ~ a) * (~ (((~ b | c) + b) + 1) & a)) & b)) & a)",
                "attributes": {
                    "numOps": 221,
                    "nestedExprLevel": 118,
                    "numDAGs": 24,
                    "opsPercentages": {
                        "arithmetic": 33.93665158371041,
                        "mul": 9.049773755656108,
                        "bitwise": 57.01357466063348
                    },
                    "percentageDAGsCancel": 4.166666666666666
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "a + ((-((~b | c) + b) - 2 & a) * (b + (~b | c) + 1 & ~a) + (b + (~b | c) + 1 & a) * (b + (~b | c) + 1 | a) & b) * ((-((~b | c) + b) - 2 & a) * (b + (~b | c) + 1 & ~a) + (b + (~b | c) + 1 & a) * (b + (~b | c) + 1 | a) | b) + (~((-((~b | c) + b) - 2 & a) * (b + (~b | c) + 1 & ~a) + (b + (~b | c) + 1 & a) * (b + (~b | c) + 1 | a)) & b) * ((b + (~b | c) + 1 & a) * (b + (~b | c) + 1 | a) + (-((~b | c) + b) - 2 & a) * (b + (~b | c) + 1 & ~a) & ~b)",
                    "attributes": {
                        "numOps": 110,
                        "nestedExprLevel": 27,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 50.2262443438914,
                        "opsPercentages": {
                            "arithmetic": 38.18181818181819,
                            "mul": 9.090909090909092,
                            "bitwise": 52.72727272727272
                        },
                        "percentageDAGsCancel": 24.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~(b + 1 + (~b | c) & a) * (b + 1 + (~b | c) | a) + (~a & b + 1 + (~b | c)) * (~b + 1 + (~b | c) & a) & b) * ((b + 1 + (~b | c) & a) * (b + 1 + (~b | c) | a) + (~a & b + 1 + (~b | c)) * (~b + 1 + (~b | c) & a) & ~b) + ((b + 1 + (~b | c) & a) * (b + 1 + (~b | c) | a) + (~a & b + 1 + (~b | c)) * (~b + 1 + (~b | c) & a) | b) * ((b + 1 + (~b | c) & a) * (b + 1 + (~b | c) | a) + (~a & b + 1 + (~b | c)) * (~b + 1 + (~b | c) & a) & b) | a) + ((~(b + 1 + (~b | c) & a) * (b + 1 + (~b | c) | a) + (~a & b + 1 + (~b | c)) * (~b + 1 + (~b | c) & a) & b) * ((b + 1 + (~b | c) & a) * (b + 1 + (~b | c) | a) + (~a & b + 1 + (~b | c)) * (~b + 1 + (~b | c) & a) & ~b) + ((b + 1 + (~b | c) & a) * (b + 1 + (~b | c) | a) + (~a & b + 1 + (~b | c)) * (~b + 1 + (~b | c) & a) | b) * ((b + 1 + (~b | c) & a) * (b + 1 + (~b | c) | a) + (~a & b + 1 + (~b | c)) * (~b + 1 + (~b | c) & a) & b) & a)",
                    "attributes": {
                        "numOps": 221,
                        "nestedExprLevel": 44,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 33.93665158371041,
                            "mul": 9.049773755656108,
                            "bitwise": 57.01357466063348
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "clang_O3": {
                    "expr": "(~(-(c + b) - 2 & a) * (~a & c + b + 1) + (c + b + 1 | a) * (c + b + 1 & a) & b) * (~b & (-(c + b) - 2 & a) * (~a & c + b + 1) + (c + b + 1 | a) * (c + b + 1 & a)) + a + ((-(c + b) - 2 & a) * (~a & c + b + 1) + (c + b + 1 | a) * (c + b + 1 & a) | b) * ((-(c + b) - 2 & a) * (~a & c + b + 1) + (c + b + 1 | a) * (c + b + 1 & a) & b)",
                    "attributes": {
                        "numOps": 78,
                        "nestedExprLevel": 17,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 64.70588235294117,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 12.82051282051282,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_default": {
                    "expr": "((((b ^ 0xffffffff | c) + b + 1 & a) * ((b ^ 0xffffffff | c) + b + 1 | a) + ((b ^ 0xffffffff | c) + b + 1 & (a ^ 0xffffffff)) * (((b ^ 0xffffffff | c) + b + 1 ^ 0xffffffff) & a) & b) * (((b ^ 0xffffffff | c) + b + 1 & a) * ((b ^ 0xffffffff | c) + b + 1 | a) + ((b ^ 0xffffffff | c) + b + 1 & (a ^ 0xffffffff)) * (((b ^ 0xffffffff | c) + b + 1 ^ 0xffffffff) & a) | b) + (((b ^ 0xffffffff | c) + b + 1 & a) * ((b ^ 0xffffffff | c) + b + 1 | a) + ((b ^ 0xffffffff | c) + b + 1 & (a ^ 0xffffffff)) * (((b ^ 0xffffffff | c) + b + 1 ^ 0xffffffff) & a) & (b ^ 0xffffffff)) * ((((b ^ 0xffffffff | c) + b + 1 & a) * ((b ^ 0xffffffff | c) + b + 1 | a) + ((b ^ 0xffffffff | c) + b + 1 & (a ^ 0xffffffff)) * (((b ^ 0xffffffff | c) + b + 1 ^ 0xffffffff) & a) ^ 0xffffffff) & b) | a) + ((((b ^ 0xffffffff | c) + b + 1 & a) * ((b ^ 0xffffffff | c) + b + 1 | a) + ((b ^ 0xffffffff | c) + b + 1 & (a ^ 0xffffffff)) * (((b ^ 0xffffffff | c) + b + 1 ^ 0xffffffff) & a) & b) * (((b ^ 0xffffffff | c) + b + 1 & a) * ((b ^ 0xffffffff | c) + b + 1 | a) + ((b ^ 0xffffffff | c) + b + 1 & (a ^ 0xffffffff)) * (((b ^ 0xffffffff | c) + b + 1 ^ 0xffffffff) & a) | b) + (((b ^ 0xffffffff | c) + b + 1 & a) * ((b ^ 0xffffffff | c) + b + 1 | a) + ((b ^ 0xffffffff | c) + b + 1 & (a ^ 0xffffffff)) * (((b ^ 0xffffffff | c) + b + 1 ^ 0xffffffff) & a) & (b ^ 0xffffffff)) * ((((b ^ 0xffffffff | c) + b + 1 & a) * ((b ^ 0xffffffff | c) + b + 1 | a) + ((b ^ 0xffffffff | c) + b + 1 & (a ^ 0xffffffff)) * (((b ^ 0xffffffff | c) + b + 1 ^ 0xffffffff) & a) ^ 0xffffffff) & b) & a)",
                    "attributes": {
                        "numOps": 221,
                        "nestedExprLevel": 64,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 33.93665158371041,
                            "mul": 9.049773755656108,
                            "bitwise": 57.01357466063348
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_default": {
                    "expr": "((((~b | c) + 1 + b & a) * ((~b | c) + 1 + b | a) + ((~b | c) + 1 + b & ~a) * (~((~b | c) + 1 + b) & a) & b) * (((~b | c) + 1 + b & a) * ((~b | c) + 1 + b | a) + ((~b | c) + 1 + b & ~a) * (~((~b | c) + 1 + b) & a) | b) + (((~b | c) + 1 + b & a) * ((~b | c) + 1 + b | a) + ((~b | c) + 1 + b & ~a) * (~((~b | c) + 1 + b) & a) & ~b) * (~(((~b | c) + 1 + b & a) * ((~b | c) + 1 + b | a) + ((~b | c) + 1 + b & ~a) * (~((~b | c) + 1 + b) & a)) & b) | a) + ((((~b | c) + 1 + b & a) * ((~b | c) + 1 + b | a) + ((~b | c) + 1 + b & ~a) * (~((~b | c) + 1 + b) & a) & b) * (((~b | c) + 1 + b & a) * ((~b | c) + 1 + b | a) + ((~b | c) + 1 + b & ~a) * (~((~b | c) + 1 + b) & a) | b) + (((~b | c) + 1 + b & a) * ((~b | c) + 1 + b | a) + ((~b | c) + 1 + b & ~a) * (~((~b | c) + 1 + b) & a) & ~b) * (~(((~b | c) + 1 + b & a) * ((~b | c) + 1 + b | a) + ((~b | c) + 1 + b & ~a) * (~((~b | c) + 1 + b) & a)) & b) & a)",
                    "attributes": {
                        "numOps": 221,
                        "nestedExprLevel": 54,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 33.93665158371041,
                            "mul": 9.049773755656108,
                            "bitwise": 57.01357466063348
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "gcc_O3": {
                    "expr": "(~(~a & (c | ~b) + b + 1) * (-(c | ~b) + b - 2 & a) + ((c | ~b) + b + 1 | a) * ((c | ~b) + b + 1 & a) & b) * (~b & (~a & (c | ~b) + b + 1) * (-(c | ~b) + b - 2 & a) + ((c | ~b) + b + 1 | a) * ((c | ~b) + b + 1 & a)) + ((~a & (c | ~b) + b + 1) * (-(c | ~b) + b - 2 & a) + ((c | ~b) + b + 1 | a) * ((c | ~b) + b + 1 & a) | b) * ((~a & (c | ~b) + b + 1) * (-(c | ~b) + b - 2 & a) + ((c | ~b) + b + 1 | a) * ((c | ~b) + b + 1 & a) & b) + a",
                    "attributes": {
                        "numOps": 110,
                        "nestedExprLevel": 22,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 50.2262443438914,
                        "opsPercentages": {
                            "arithmetic": 38.18181818181819,
                            "mul": 9.090909090909092,
                            "bitwise": 52.72727272727272
                        },
                        "percentageDAGsCancel": 11.538461538461538
                    }
                }
            }
        },
        {
            "num": 330,
            "gt": {
                "expr": "(((d|(((d|e)-a)*e))+((~a)&(e|e))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 12.5,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "(((((d + (((((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) & e) * ((((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) | e) + ((((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) & ~ e) * (~ (((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) & e))) + 1) + ((- d - 1) | (- (((((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) & e) * ((((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) | e) + ((((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) & ~ e) * (~ (((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) & e)) - 1))) | ((~ (- a - 1) | (((e + e) + 1) + ((- e - 1) | (- e - 1)))) - ~ (- a - 1))) << 1) - ((((d + (((((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) & e) * ((((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) | e) + ((((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) & ~ e) * (~ (((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) & e))) + 1) + ((- d - 1) | (- (((((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) & e) * ((((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) | e) + ((((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) & ~ e) * (~ (((((d & ~ e) + e) & ~ a) << 1) - (((d & ~ e) + e) ^ a)) & e)) - 1))) ^ ((~ (- a - 1) | (((e + e) + 1) + ((- e - 1) | (- e - 1)))) - ~ (- a - 1)))",
                "attributes": {
                    "numOps": 264,
                    "nestedExprLevel": 143,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 34.46969696969697,
                        "mul": 3.0303030303030303,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 7.6923076923076925
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~a & e * 2 + 1 + ~e | d + ((~a & (~e & d) + e) * 2 - (e + (~e & d) ^ a) & e) * ((~a & (~e & d) + e) * 2 - (e + (~e & d) ^ a) | e) + ((e + (~e & d) ^ a) + ~((~a & (~e & d) + e) * 2) & e) * ((~a & (~e & d) + e) * 2 - (e + (~e & d) ^ a) & ~e) + 1 + ~(((e + (~e & d) ^ a) + ~((~a & (~e & d) + e) * 2) & e) * ((~a & (~e & d) + e) * 2 - (e + (~e & d) ^ a) & ~e) + ((~a & (~e & d) + e) * 2 - (e + (~e & d) ^ a) & e) * ((~a & (~e & d) + e) * 2 - (e + (~e & d) ^ a) | e) & d)) * 2 - (d + ((~a & (~e & d) + e) * 2 - (e + (~e & d) ^ a) & e) * ((~a & (~e & d) + e) * 2 - (e + (~e & d) ^ a) | e) + ((e + (~e & d) ^ a) + ~((~a & (~e & d) + e) * 2) & e) * ((~a & (~e & d) + e) * 2 - (e + (~e & d) ^ a) & ~e) + 1 + ~(((e + (~e & d) ^ a) + ~((~a & (~e & d) + e) * 2) & e) * ((~a & (~e & d) + e) * 2 - (e + (~e & d) ^ a) & ~e) + ((~a & (~e & d) + e) * 2 - (e + (~e & d) ^ a) & e) * ((~a & (~e & d) + e) * 2 - (e + (~e & d) ^ a) | e) & d) ^ ~a & e * 2 + 1 + ~e)",
                    "attributes": {
                        "numOps": 238,
                        "nestedExprLevel": 58,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 9.848484848484848,
                        "opsPercentages": {
                            "arithmetic": 26.47058823529412,
                            "mul": 11.344537815126051,
                            "bitwise": 62.18487394957983
                        },
                        "percentageDAGsCancel": 3.125
                    }
                },
                "msvc_O1": {
                    "expr": "(((-1 - (((~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) | e) * ((~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) & e) + (~(~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) & e) * ((~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) & ~e))) * 2 | (-1 - d) * 2) + (d + 1 + ((~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) | e) * ((~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) & e) + (~(~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) & e) * ((~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) & ~e)) * 2 | (a * 2 | e * 2) + a * -2) - ((~(~(~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) & e) * ((~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) & ~e) - ((~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) | e) * ((~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) & e) | ~d) + ((~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) | e) * ((~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) & e) + (~(~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) & e) * ((~a * 2 & e + (~e & d) * 2) - (e + (~e & d) ^ a) & ~e) + d + 1 ^ (a | e) - a)",
                    "attributes": {
                        "numOps": 256,
                        "nestedExprLevel": 59,
                        "numDAGs": 50,
                        "percentDecreaseByOps": 3.0303030303030303,
                        "opsPercentages": {
                            "arithmetic": 25.78125,
                            "mul": 17.96875,
                            "bitwise": 56.25
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "clang_O3": {
                    "expr": "(d | e) * 2 - (e ^ d)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 98.48484848484848,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(d + (((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) & e) * (((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) | e) + (((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) & (e ^ 0xffffffff)) * ((((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) ^ 0xffffffff) & e) + 1 + (0xffffffff - d | 0xffffffff - ((((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) & e) * (((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) | e) + (((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) & (e ^ 0xffffffff)) * ((((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) ^ 0xffffffff) & e))) | (0xffffffff - a ^ 0xffffffff | e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) - (0xffffffff - a ^ 0xffffffff)) * 2 - (d + (((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) & e) * (((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) | e) + (((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) & (e ^ 0xffffffff)) * ((((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) ^ 0xffffffff) & e) + 1 + (0xffffffff - d | 0xffffffff - ((((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) & e) * (((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) | e) + (((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) & (e ^ 0xffffffff)) * ((((d & (e ^ 0xffffffff)) + e & (a ^ 0xffffffff)) * 2 - ((d & (e ^ 0xffffffff)) + e ^ a) ^ 0xffffffff) & e))) ^ (0xffffffff - a ^ 0xffffffff | e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) - (0xffffffff - a ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 252,
                        "nestedExprLevel": 115,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 4.545454545454546,
                        "opsPercentages": {
                            "arithmetic": 30.555555555555557,
                            "mul": 10.714285714285714,
                            "bitwise": 58.730158730158735
                        },
                        "percentageDAGsCancel": 2.7777777777777777
                    }
                },
                "msvc_default": {
                    "expr": "((((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a) & ~e) * (~(((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a)) & e) + d + (((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a) & e) * (((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a) | e) + 1 + (0xffffffff - d | 0xffffffff - ((((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a) & e) * (((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a) | e) + (((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a) & ~e) * (~(((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a)) & e))) | (~(0xffffffff - a) | e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) - ~(0xffffffff - a)) * 2 - ((((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a) & ~e) * (~(((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a)) & e) + d + (((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a) & e) * (((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a) | e) + 1 + (0xffffffff - d | 0xffffffff - ((((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a) & e) * (((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a) | e) + (((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a) & ~e) * (~(((~e & d) + e & ~a) * 2 - ((~e & d) + e ^ a)) & e))) ^ (~(0xffffffff - a) | e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) - ~(0xffffffff - a))",
                    "attributes": {
                        "numOps": 252,
                        "nestedExprLevel": 64,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 4.545454545454546,
                        "opsPercentages": {
                            "arithmetic": 30.555555555555557,
                            "mul": 10.714285714285714,
                            "bitwise": 58.730158730158735
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "gcc_O3": {
                    "expr": "(((~((~e & d) + e & ~a) * 2 + (~e & d) + e ^ a & e) * (~e & ((~e & d) + e & ~a) * 2 - (~e & d) + e ^ a) + (((~e & d) + e & ~a) * 2 - (~e & d) + e ^ a & e) * (((~e & d) + e & ~a) * 2 - (~e & d) + e ^ a | e) + d) - ((~((~e & d) + e & ~a) * 2 + (~e & d) + e ^ a & e) * (~e & ((~e & d) + e & ~a) * 2 - (~e & d) + e ^ a) + (((~e & d) + e & ~a) * 2 - (~e & d) + e ^ a & e) * (((~e & d) + e & ~a) * 2 - (~e & d) + e ^ a | e) & d) | ~e + 1 + e * 2 & ~a) * 2 - (((~((~e & d) + e & ~a) * 2 + (~e & d) + e ^ a & e) * (~e & ((~e & d) + e & ~a) * 2 - (~e & d) + e ^ a) + (((~e & d) + e & ~a) * 2 - (~e & d) + e ^ a & e) * (((~e & d) + e & ~a) * 2 - (~e & d) + e ^ a | e) + d) - ((~((~e & d) + e & ~a) * 2 + (~e & d) + e ^ a & e) * (~e & ((~e & d) + e & ~a) * 2 - (~e & d) + e ^ a) + (((~e & d) + e & ~a) * 2 - (~e & d) + e ^ a & e) * (((~e & d) + e & ~a) * 2 - (~e & d) + e ^ a | e) & d) ^ ~e + 1 + e * 2 & ~a)",
                    "attributes": {
                        "numOps": 234,
                        "nestedExprLevel": 55,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 11.363636363636363,
                        "opsPercentages": {
                            "arithmetic": 26.06837606837607,
                            "mul": 11.538461538461538,
                            "bitwise": 62.39316239316239
                        },
                        "percentageDAGsCancel": 6.0606060606060606
                    }
                }
            }
        },
        {
            "num": 331,
            "gt": {
                "expr": "((-((d&(c*d))*d)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 50.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "~ ((((~ d | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - ~ d) & d) * (((~ d | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - ~ d) | d) + (((~ d | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - ~ d) & ~ d) * (~ ((~ d | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) - ~ d) & d)) + 1",
                "attributes": {
                    "numOps": 63,
                    "nestedExprLevel": 26,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 15.873015873015872,
                        "mul": 15.873015873015872,
                        "bitwise": 68.25396825396825
                    },
                    "percentageDAGsCancel": 19.047619047619047
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-((~((~c & d) * (~d & c) + (c & d) * (c | d)) & d) * ((~c & d) * (~d & c) + (c & d) * (c | d) & d & ~d) + ((~c & d) * (~d & c) + (c & d) * (c | d) & d) * d)",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 12,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 41.269841269841265,
                        "opsPercentages": {
                            "arithmetic": 13.513513513513514,
                            "mul": 21.62162162162162,
                            "bitwise": 64.86486486486487
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "msvc_O1": {
                    "expr": "-((~((~c & d) * (~d & c) + (c | d) * (c & d) | ~d) + 1 + d & d) * (((~c & d) * (~d & c) + (c | d) * (c & d) | ~d) + 1 + d & ~d) + (((~c & d) * (~d & c) + (c | d) * (c & d) | ~d) + 1 + d | d) * (((~c & d) * (~d & c) + (c | d) * (c & d) | ~d) + 1 + d & d))",
                    "attributes": {
                        "numOps": 62,
                        "nestedExprLevel": 18,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 1.5873015873015872,
                        "opsPercentages": {
                            "arithmetic": 22.58064516129032,
                            "mul": 16.129032258064516,
                            "bitwise": 61.29032258064516
                        },
                        "percentageDAGsCancel": 21.73913043478261
                    }
                },
                "clang_O3": {
                    "expr": "-(((~d & c) * (~c & d) + (d | c) * (d & c) & d) * d)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 5,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 80.95238095238095,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 25.0,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_default": {
                    "expr": "(((d ^ 0xffffffff | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (d ^ 0xffffffff) & d) * ((d ^ 0xffffffff | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (d ^ 0xffffffff) | d) + ((d ^ 0xffffffff | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (d ^ 0xffffffff) & (d ^ 0xffffffff)) * (((d ^ 0xffffffff | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) - (d ^ 0xffffffff) ^ 0xffffffff) & d) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 27,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 15.873015873015872,
                            "mul": 15.873015873015872,
                            "bitwise": 68.25396825396825
                        },
                        "percentageDAGsCancel": 23.809523809523807
                    }
                },
                "msvc_default": {
                    "expr": "~(((~d | (c & d) * (c | d) + (~d & c) * (~c & d)) - ~d & d) * ((~d | (c & d) * (c | d) + (~d & c) * (~c & d)) - ~d | d) + ((~d | (c & d) * (c | d) + (~d & c) * (~c & d)) - ~d & ~d) * (~((~d | (c & d) * (c | d) + (~d & c) * (~c & d) ) - ~d) & d)) + 1",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 19,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 15.873015873015872,
                            "mul": 15.873015873015872,
                            "bitwise": 68.25396825396825
                        },
                        "percentageDAGsCancel": 19.047619047619047
                    }
                },
                "gcc_O3": {
                    "expr": "-((~(~c & d) * (~d & c) + (c & d) * (c | d) & d) * (~d & (~c & d) * (~d & c) + (c & d) * (c | d) & d) + (~c & d) * (~d & c) + (c & d) * (c | d) & d * d)",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 10,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 41.269841269841265,
                        "opsPercentages": {
                            "arithmetic": 13.513513513513514,
                            "mul": 21.62162162162162,
                            "bitwise": 64.86486486486487
                        },
                        "percentageDAGsCancel": 28.57142857142857
                    }
                }
            }
        },
        {
            "num": 332,
            "gt": {
                "expr": "((((~((e*d)^e))+d)+(((-e)^d)+(d&(d^d)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 10.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "((((((((e & d) * (e | d) + (e & ~ d) * (~ e & d)) & e) + ~ (((e & d) * (e | d) + (e & ~ d) * (~ e & d)) | e)) - ~ d) - 1) | ((((((~ e + 1) | d) - ((~ e + 1) & d)) ^ ~ ((~ d | ((d | d) - (d & d))) - ~ d)) + (((((~ e + 1) | d) - ((~ e + 1) & d)) | ((~ d | ((d | d) - (d & d))) - ~ d)) << 1)) + 1)) + (((((((e & d) * (e | d) + (e & ~ d) * (~ e & d)) & e) + ~ (((e & d) * (e | d) + (e & ~ d) * (~ e & d)) | e)) - ~ d) - 1) | ((((((~ e + 1) | d) - ((~ e + 1) & d)) ^ ~ ((~ d | ((d | d) - (d & d))) - ~ d)) + (((((~ e + 1) | d) - ((~ e + 1) & d)) | ((~ d | ((d | d) - (d & d))) - ~ d)) << 1)) + 1))) - (((((((e & d) * (e | d) + (e & ~ d) * (~ e & d)) & e) + ~ (((e & d) * (e | d) + (e & ~ d) * (~ e & d)) | e)) - ~ d) - 1) ^ ((((((~ e + 1) | d) - ((~ e + 1) & d)) ^ ~ ((~ d | ((d | d) - (d & d))) - ~ d)) + (((((~ e + 1) | d) - ((~ e + 1) & d)) | ((~ d | ((d | d) - (d & d))) - ~ d)) << 1)) + 1))",
                "attributes": {
                    "numOps": 182,
                    "nestedExprLevel": 95,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 29.120879120879124,
                        "mul": 6.593406593406594,
                        "bitwise": 64.28571428571429
                    },
                    "percentageDAGsCancel": 11.76470588235294
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((-e ^ d) * 2 + (e - 1 ^ d) + 1 | ((((~e & d) * (~d & e) + (e & d) * (e | d) & e) + ~((~e & d) * (~d & e) + (e & d) * (e | d) | e)) - ~d) - 1) * 2 - (((((~e & d) * (~d & e) + (e & d) * (e | d) & e) + ~((~e & d) * (~d & e) + (e & d) * (e | d) | e)) - ~d) - 1 ^ (-e ^ d) * 2 + (e - 1 ^ d) + 1)",
                    "attributes": {
                        "numOps": 68,
                        "nestedExprLevel": 21,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 62.637362637362635,
                        "opsPercentages": {
                            "arithmetic": 27.941176470588236,
                            "mul": 16.176470588235293,
                            "bitwise": 55.88235294117647
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~e * 2 + 2 | d * 2) + ~((~e + 1 | d) - ~e + 1 & d) + ~e + 1 & d * -2 + 1 | ~((d | e) * (d & e) + (~d & e) * (~e & d) | e) + d + ((d | e) * (d & e) + (~d & e) * (~e & d) & e)) * 2 - ((~e * 2 + 2 | d * 2) + ~((~e + 1 | d) - ~e + 1 & d) + ~e + 1 & d * -2 + 1 ^ ~((d | e) * (d & e) + (~d & e) * (~e & d) | e) + d + ((d | e) * (d & e) + (~d & e) * (~e & d) & e))",
                    "attributes": {
                        "numOps": 92,
                        "nestedExprLevel": 17,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 49.45054945054945,
                        "opsPercentages": {
                            "arithmetic": 29.347826086956523,
                            "mul": 16.304347826086957,
                            "bitwise": 54.347826086956516
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "clang_O3": {
                    "expr": "(~((~e & d) * (~d & e) + (e | d) * (e & d) | e) + d + ((~e & d) * (~d & e) + (e | d) * (e & d) & e) | -e ^ d) * 2 - (-e ^ d ^ ~((~e & d) * (~d & e) + (e | d) * (e & d) | e) + d + ((~e & d) * (~d & e) + (e | d) * (e & d) & e))",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 15,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 70.32967032967034,
                        "opsPercentages": {
                            "arithmetic": 20.37037037037037,
                            "mul": 16.666666666666664,
                            "bitwise": 62.96296296296296
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "clang_default": {
                    "expr": "((((((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) & e) + (((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) | e) ^ 0xffffffff)) - (d ^ 0xffffffff)) - 1 | (((e ^ 0xffffffff) + 1 | d) - ((e ^ 0xffffffff) + 1 & d) ^ (d ^ 0xffffffff) - (d ^ 0xffffffff) ^ 0xffffffff) + (((e ^ 0xffffffff) + 1 | d) - ((e ^ 0xffffffff) + 1 & d) | (d ^ 0xffffffff) - (d ^ 0xffffffff)) * 2 + 1) + (((((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) & e) + (((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) | e) ^ 0xffffffff)) - (d ^ 0xffffffff)) - 1 | (((e ^ 0xffffffff) + 1 | d) - ((e ^ 0xffffffff) + 1 & d) ^ (d ^ 0xffffffff) - (d ^ 0xffffffff) ^ 0xffffffff) + (((e ^ 0xffffffff) + 1 | d) - ((e ^ 0xffffffff) + 1 & d) | (d ^ 0xffffffff) - (d ^ 0xffffffff)) * 2 + 1)) - (((((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) & e) + (((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) | e) ^ 0xffffffff)) - (d ^ 0xffffffff)) - 1 ^ (((e ^ 0xffffffff) + 1 | d) - ((e ^ 0xffffffff) + 1 & d) ^ (d ^ 0xffffffff) - (d ^ 0xffffffff) ^ 0xffffffff) + (((e ^ 0xffffffff) + 1 | d) - ((e ^ 0xffffffff) + 1 & d) | (d ^ 0xffffffff) - (d ^ 0xffffffff)) * 2 + 1)",
                    "attributes": {
                        "numOps": 158,
                        "nestedExprLevel": 66,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 13.186813186813188,
                        "opsPercentages": {
                            "arithmetic": 29.746835443037973,
                            "mul": 9.49367088607595,
                            "bitwise": 60.75949367088608
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "msvc_default": {
                    "expr": "((((((e & d) * (e | d) + (~d & e) * (~e & d) & e) + ~((e & d) * (e | d) + (~d & e) * (~e & d) | e)) - ~d) - 1 | ((~e + 1 | d) - (~e + 1 & d) ^ ~(~d - ~d)) + 1 + ((~e + 1 | d) - (~e + 1 & d) | ~d - ~d) * 2) + (((((e & d) * (e | d) + (~d & e) * (~e & d) & e) + ~((e & d) * (e | d) + (~d & e) * (~e & d) | e)) - ~d) - 1 | ((~e + 1 | d) - (~e + 1 & d) ^ ~(~d - ~d)) + 1 + ((~e + 1 | d) - (~e + 1 & d) | ~d - ~d) * 2)) - (((((e & d) * (e | d) + (~d & e) * (~e & d) & e) + ~((e & d) * (e | d) + (~d & e) * (~e & d) | e)) - ~d) - 1 ^ ((~e + 1 | d) - (~e + 1 & d) ^ ~(~d - ~d)) + 1 + ((~e + 1 | d) - (~e + 1 & d) | ~d - ~d) * 2)",
                    "attributes": {
                        "numOps": 158,
                        "nestedExprLevel": 41,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 13.186813186813188,
                        "opsPercentages": {
                            "arithmetic": 29.746835443037973,
                            "mul": 9.49367088607595,
                            "bitwise": 60.75949367088608
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "gcc_O3": {
                    "expr": "(((~((~e & d) * (~d & e) + (e & d) * (e | d) | e) + ((~e & d) * (~d & e) + (e & d) * (e | d) & e)) - ~d) - 1 | (e - 1 ^ d) + 1 + (-e ^ d) * 2) * 2 - (((~((~e & d) * (~d & e) + (e & d) * (e | d) | e) + ((~e & d) * (~d & e) + (e & d) * (e | d) & e)) - ~d) - 1 ^ (e - 1 ^ d) + 1 + (-e ^ d) * 2)",
                    "attributes": {
                        "numOps": 68,
                        "nestedExprLevel": 21,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 62.637362637362635,
                        "opsPercentages": {
                            "arithmetic": 27.941176470588236,
                            "mul": 16.176470588235293,
                            "bitwise": 55.88235294117647
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 333,
            "gt": {
                "expr": "(((d|(c|(c&d)))-((c|d)-(((d^c)|c)^d))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 22.22222222222222,
                        "mul": 0.0,
                        "bitwise": 77.77777777777779
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "(((d & ~ (((c + ((~ c | d) - ~ c)) + 1) + ((- c - 1) | (- ((~ c | d) - ~ c) - 1)))) + (((c + ((~ c | d) - ~ c)) + 1) + ((- c - 1) | (- ((~ c | d) - ~ c) - 1)))) + ~ (((((c + d) + 1) + ((- c - 1) | (- d - 1))) & ~ (((((((((d - c) - ((d | ~ c) << 1)) - 2) + c) + 1) + ((- (((d - c) - ((d | ~ c) << 1)) - 2) - 1) | (- c - 1))) - d) - ((((((((d - c) - ((d | ~ c) << 1)) - 2) + c) + 1) + ((- (((d - c) - ((d | ~ c) << 1)) - 2) - 1) | (- c - 1))) | ~ d) + (((((((d - c) - ((d | ~ c) << 1)) - 2) + c) + 1) + ((- (((d - c) - ((d | ~ c) << 1)) - 2) - 1) | (- c - 1))) | ~ d))) - 2)) - (~ (((c + d) + 1) + ((- c - 1) | (- d - 1))) & (((((((((d - c) - ((d | ~ c) << 1)) - 2) + c) + 1) + ((- (((d - c) - ((d | ~ c) << 1)) - 2) - 1) | (- c - 1))) - d) - ((((((((d - c) - ((d | ~ c) << 1)) - 2) + c) + 1) + ((- (((d - c) - ((d | ~ c) << 1)) - 2) - 1) | (- c - 1))) | ~ d) + (((((((d - c) - ((d | ~ c) << 1)) - 2) + c) + 1) + ((- (((d - c) - ((d | ~ c) << 1)) - 2) - 1) | (- c - 1))) | ~ d))) - 2)))) + 1",
                "attributes": {
                    "numOps": 195,
                    "nestedExprLevel": 113,
                    "numDAGs": 45,
                    "opsPercentages": {
                        "arithmetic": 62.56410256410256,
                        "mul": 0.0,
                        "bitwise": 37.43589743589744
                    },
                    "percentageDAGsCancel": 8.88888888888889
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~c | ((~c | d) * 2 - (d - c)) + 1) + (~c | d) * -2 + (~d | d + (~c | d) * -2 + -1 + (~c | ((~c | d) * 2 - (d - c)) + 1)) * -2) - 3 & (c & d) - (d + c + 1)) + ~((~d | d + (~c | d) * -2 + -1 + (~c | ((~c | d) * 2 - (d - c)) + 1)) * 2 + ~((~c | ((~c | d) * 2 - (d - c)) + 1) + d + (~c | d) * -2 + -1) + d + 2 & d + c + 1 + ~(c & d)) + ((d & c) - (c + (d & c) + 1) & d) + ~(d & c) + c + (d & c) + 2",
                    "attributes": {
                        "numOps": 101,
                        "nestedExprLevel": 25,
                        "numDAGs": 48,
                        "percentDecreaseByOps": 48.205128205128204,
                        "opsPercentages": {
                            "arithmetic": 49.504950495049506,
                            "mul": 9.900990099009901,
                            "bitwise": 40.5940594059406
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "msvc_O1": {
                    "expr": "(~((~c - ~c | d) - 1 | ~c + ~c | d + c * 2 + 2) & d) + ~((~(c + 1 + (~c | d * 2 - d) | ~c + (c + 1 + (~c | d * 2 - d) | ~c + ~c | d * -2 + -1 + d | ~d) * -2 + ~c | d * -2) - 3 & d + 1 + (~d | ~c) + c) - (~d + 1 + (~d | ~c) + c & (c + 1 + (~c | d * 2 - d) | ~c + (c + 1 + (~c | d * 2 - d) | ~c + ~c | d * -2 + -1 + d | ~d) * -2 + ~c | d * -2) - 3)) + (~c - ~c | d) - 1 | ~c + ~c | d + c * 2 + 3",
                    "attributes": {
                        "numOps": 118,
                        "nestedExprLevel": 12,
                        "numDAGs": 51,
                        "percentDecreaseByOps": 39.48717948717949,
                        "opsPercentages": {
                            "arithmetic": 43.22033898305085,
                            "mul": 10.16949152542373,
                            "bitwise": 46.61016949152542
                        },
                        "percentageDAGsCancel": 7.8431372549019605
                    }
                },
                "clang_O3": {
                    "expr": "(~c + (~c | d - ~c) + 1 + (~(~c | d - ~c) | ~c) & d) + c + (~c | d - ~c) + 1 + (~(~c | d - ~c) | ~c) + ~(1 - ((d + ~c | d * -2 + ((c - d) + ~c | d * 2 + 1 | ~c)) - 1 - d) + (~d | (d + ~c | d * -2 + ((c - d) + ~c | d * 2 + 1 | ~c)) - 1) * -2 & c + d + 1 + (~d | ~c)) + (~c + d + 1 + (~d | ~c) & ((d + ~c | d * -2 + ((c - d) + ~c | d * 2 + 1 | ~c)) - 1 - d) + (~d | (d + ~c | d * -2 + ((c - d) + ~c | d * 2 + 1 | ~c)) - 1) * -2 - 2) + 1",
                    "attributes": {
                        "numOps": 124,
                        "nestedExprLevel": 21,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 36.41025641025641,
                        "opsPercentages": {
                            "arithmetic": 45.16129032258064,
                            "mul": 8.064516129032258,
                            "bitwise": 46.774193548387096
                        },
                        "percentageDAGsCancel": 2.1739130434782608
                    }
                },
                "clang_default": {
                    "expr": "(d & (c + ((c ^ 0xffffffff | d) - (c ^ 0xffffffff)) + 1 + (0xffffffff - c | 0xffffffff - ((c ^ 0xffffffff | d) - (c ^ 0xffffffff))) ^ 0xffffffff)) + c + ((c ^ 0xffffffff | d) - (c ^ 0xffffffff)) + (0xffffffff - c | 0xffffffff - ((c ^ 0xffffffff | d) - (c ^ 0xffffffff))) + ((c + d + 1 + (0xffffffff - c | 0xffffffff - d) & ((((d | c ^ 0xffffffff) * -2 + (0xffffffff - ((d - c) + (d | c ^ 0xffffffff) * -2 + -2) | 0xffffffff - c)) - ((d + (d | c ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((d - c) + (d | c ^ 0xffffffff) * -2 + -2) | 0xffffffff - c) | d ^ 0xffffffff) + (d + (d | c ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((d - c) + (d | c ^ 0xffffffff) * -2 + -2) | 0xffffffff - c) | d ^ 0xffffffff))) - 3 ^ 0xffffffff)) - ((c + d + 1 + (0xffffffff - c | 0xffffffff - d) ^ 0xffffffff) & (((d | c ^ 0xffffffff) * -2 + (0xffffffff - ((d - c) + (d | c ^ 0xffffffff) * -2 + -2) | 0xffffffff - c)) - ((d + (d | c ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((d - c) + (d | c ^ 0xffffffff) * -2 + -2) | 0xffffffff - c) | d ^ 0xffffffff) + ((d - c) + (d | c ^ 0xffffffff) * -2 + c + -1 + (0xffffffff - ((d - c) + (d | c ^ 0xffffffff) * -2 + -2) | 0xffffffff - c) | d ^ 0xffffffff))) - 3) ^ 0xffffffff) + 2",
                    "attributes": {
                        "numOps": 174,
                        "nestedExprLevel": 47,
                        "numDAGs": 52,
                        "percentDecreaseByOps": 10.76923076923077,
                        "opsPercentages": {
                            "arithmetic": 58.04597701149425,
                            "mul": 6.896551724137931,
                            "bitwise": 35.05747126436782
                        },
                        "percentageDAGsCancel": 1.9230769230769231
                    }
                },
                "msvc_default": {
                    "expr": "(~(((~c | d) - ~c) + c + 1 + (0xffffffff - c | 0xffffffff - ((~c | d) - ~c))) & d) + ((~c | d) - ~c) + c + (0xffffffff - c | 0xffffffff - ((~c | d) - ~c)) + 2 + ~((c + d + 1 + (0xffffffff - c | 0xffffffff - d) & ~((((~c | d) * -2 + (0xffffffff - ((d - c) + (~c | d) * -2 + -2) | 0xffffffff - c)) - ((d + (~c | d) * -2 + -1 + (0xffffffff - ((d - c) + (~c | d) * -2 + -2) | 0xffffffff - c) | ~d) + (d + (~c | d) * -2 + -1 + (0xffffffff - ((d - c) + (~c | d) * -2 + -2) | 0xffffffff - c) | ~d))) - 3)) - (~(c + d + 1 + (0xffffffff - c | 0xffffffff - d)) & (((~c | d) * -2 + (0xffffffff - ((d - c) + (~c | d) * -2 + -2) | 0xffffffff - c)) - ((d + (~c | d) * -2 + -1 + (0xffffffff - ((d - c) + (~c | d) * -2 + -2) | 0xffffffff - c) | ~d) + (d + (~c | d) * -2 + -1 + (0xffffffff - ((d - c) + (~c | d) * -2 + -2) | 0xffffffff - c) | ~d))) - 3))",
                    "attributes": {
                        "numOps": 172,
                        "nestedExprLevel": 42,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 11.794871794871794,
                        "opsPercentages": {
                            "arithmetic": 57.55813953488372,
                            "mul": 6.976744186046512,
                            "bitwise": 35.46511627906977
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "gcc_O3": {
                    "expr": "(((((d - c) + (~c | d) * -2 + -1 + c + (1 - (d - c) + (~c | d) * -2 | ~c) - d) + (~d | (d - c) + (~c | d) * -2 + -1 + c + (1 - (d - c) + (~c | d) * -2 | ~c)) * -2) - 2 & d & c - c + 1 + d) - (((~d | (d - c) + (~c | d) * -2 + -1 + c + (1 - (d - c) + (~c | d) * -2 | ~c)) * 2 - (d - c) + (~c | d) * -2 + -1 + c + (1 - (d - c) + (~c | d) * -2 | ~c)) + 1 + d & ~d & c + c + 1 + d)) + (~c & d) + d & c + 1 + c + ~d & c",
                    "attributes": {
                        "numOps": 111,
                        "nestedExprLevel": 22,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 43.07692307692308,
                        "opsPercentages": {
                            "arithmetic": 56.75675675675676,
                            "mul": 9.00900900900901,
                            "bitwise": 34.234234234234236
                        },
                        "percentageDAGsCancel": 6.521739130434782
                    }
                }
            }
        },
        {
            "num": 334,
            "gt": {
                "expr": "((((d*d)*d)+(e^e)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 50.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & d) * (((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | d) + (((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & ~ d) * (~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & d)) ^ ((e | e) - (e & e))) + ((((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & d) * (((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | d) + (((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & ~ d) * (~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & d)) & ((e | e) - (e & e))) + (((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & d) * (((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | d) + (((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & ~ d) * (~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & d)) & ((e | e) - (e & e))))",
                "attributes": {
                    "numOps": 149,
                    "nestedExprLevel": 62,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 13.422818791946309,
                        "mul": 20.13422818791946,
                        "bitwise": 66.44295302013423
                    },
                    "percentageDAGsCancel": 52.17391304347826
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(d * d) & d) * (d * d & ~d) + (d * d & d) * (d * d | d)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 91.2751677852349,
                        "opsPercentages": {
                            "arithmetic": 7.6923076923076925,
                            "mul": 46.15384615384615,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~d & d * d) * (~d * d & d) + (d * d | d) * (d * d & d)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 91.2751677852349,
                        "opsPercentages": {
                            "arithmetic": 7.6923076923076925,
                            "mul": 46.15384615384615,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~d * d & d) * (~d & d * d) + (d * d | d) * (d * d & d)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 91.2751677852349,
                        "opsPercentages": {
                            "arithmetic": 7.6923076923076925,
                            "mul": 46.15384615384615,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_default": {
                    "expr": "(d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) & d) * (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) | d) + (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) & (d ^ 0xffffffff)) * ((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff) & d)",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 16,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 75.16778523489933,
                        "opsPercentages": {
                            "arithmetic": 13.513513513513514,
                            "mul": 27.027027027027028,
                            "bitwise": 59.45945945945946
                        },
                        "percentageDAGsCancel": 21.428571428571427
                    }
                },
                "msvc_default": {
                    "expr": "(d * d & d) * (d * d | d) + (d * d & ~d) * (~(d * d) & d)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 91.2751677852349,
                        "opsPercentages": {
                            "arithmetic": 7.6923076923076925,
                            "mul": 46.15384615384615,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~d & d * d) * (~d * d & d) + (d * d | d) * (d * d & d)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 91.2751677852349,
                        "opsPercentages": {
                            "arithmetic": 7.6923076923076925,
                            "mul": 46.15384615384615,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 335,
            "gt": {
                "expr": "(((e-e)+((b^b)|e)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 100.0
                }
            },
            "mba": {
                "expr": "(((e + ~ e) + 1) - ~ (((((b - b) - ((b | ~ b) + (b | ~ b))) - 2) & ~ e) + e)) - 1",
                "attributes": {
                    "numOps": 17,
                    "nestedExprLevel": 9,
                    "numDAGs": 14,
                    "opsPercentages": {
                        "arithmetic": 52.94117647058824,
                        "mul": 0.0,
                        "bitwise": 47.05882352941176
                    },
                    "percentageDAGsCancel": 42.857142857142854
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "e",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "e",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "e",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(e + (e ^ 0xffffffff)) - ((0xfffffffe - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff)) & (e ^ 0xffffffff)) + e ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 7,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 23.52941176470588,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 0.0,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 30.0
                    }
                },
                "msvc_default": {
                    "expr": "(e + ~e) - ~e",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 76.47058823529412,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 33.33333333333333
                    }
                },
                "gcc_O3": {
                    "expr": "e",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 336,
            "gt": {
                "expr": "(((a-a)|((-e)^((a|a)+e))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "(((a & ~ a) - (~ a & a)) & ~ (((~ e + 1) | (((((a + a) + 1) + ((- a - 1) | (- a - 1))) - ~ e) - 1)) - ((~ e + 1) & (((((a + a) + 1) + ((- a - 1) | (- a - 1))) - ~ e) - 1)))) + (((~ e + 1) | (((((a + a) + 1) + ((- a - 1) | (- a - 1))) - ~ e) - 1)) - ((~ e + 1) & (((((a + a) + 1) + ((- a - 1) | (- a - 1))) - ~ e) - 1)))",
                "attributes": {
                    "numOps": 66,
                    "nestedExprLevel": 34,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 0.0,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a * 2 + ~a) - ~e ^ -e",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 89.39393939393939,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 14.285714285714285,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(-e | a + e) - (-e & a + e)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 89.39393939393939,
                        "opsPercentages": {
                            "arithmetic": 71.42857142857143,
                            "mul": 0.0,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "e + a ^ -e",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 1,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 95.45454545454545,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) & (((e ^ 0xffffffff) + 1 | (a * 2 + (0xffffffff - a | 0xffffffff - a)) - (e ^ 0xffffffff)) - ((e ^ 0xffffffff) + 1 & (a * 2 + (0xffffffff - a | 0xffffffff - a)) - (e ^ 0xffffffff)) ^ 0xffffffff)) + (((e ^ 0xffffffff) + 1 | (a * 2 + (0xffffffff - a | 0xffffffff - a)) - (e ^ 0xffffffff)) - ((e ^ 0xffffffff) + 1 & (a * 2 + (0xffffffff - a | 0xffffffff - a)) - (e ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 50,
                        "nestedExprLevel": 18,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 24.242424242424242,
                        "opsPercentages": {
                            "arithmetic": 48.0,
                            "mul": 8.0,
                            "bitwise": 44.0
                        },
                        "percentageDAGsCancel": 23.52941176470588
                    }
                },
                "msvc_default": {
                    "expr": "(~e + 1 | (a * 2 + (0xffffffff - a | 0xffffffff - a)) - ~e ) - (~e + 1 & (a * 2 + (0xffffffff - a | 0xffffffff - a)) - ~e)",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 6,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 68.18181818181817,
                        "opsPercentages": {
                            "arithmetic": 52.38095238095239,
                            "mul": 9.523809523809524,
                            "bitwise": 38.095238095238095
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "e + a ^ -e",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 1,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 95.45454545454545,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 337,
            "gt": {
                "expr": "(((~b)*((-(b&b))|(-(b+((c&b)-b))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 11.11111111111111,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "((- b - 1) & ((~ (((~ b | b) - ~ b) - 1) & ~ (~ (((b | ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1))) + (b & ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1)))) - 1))) + ~ (((b | ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1))) + (b & ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1)))) - 1))) * ((- b - 1) | ((~ (((~ b | b) - ~ b) - 1) & ~ (~ (((b | ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1))) + (b & ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1)))) - 1))) + ~ (((b | ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1))) + (b & ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1)))) - 1))) + ((- b - 1) & ~ ((~ (((~ b | b) - ~ b) - 1) & ~ (~ (((b | ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1))) + (b & ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1)))) - 1))) + ~ (((b | ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1))) + (b & ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1)))) - 1))) * (~ (- b - 1) & ((~ (((~ b | b) - ~ b) - 1) & ~ (~ (((b | ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1))) + (b & ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1)))) - 1))) + ~ (((b | ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1))) + (b & ((((~ c | b) - ~ c) ^ b) - ((~ ((~ c | b) - ~ c) & b) << 1)))) - 1)))",
                "attributes": {
                    "numOps": 301,
                    "nestedExprLevel": 154,
                    "numDAGs": 32,
                    "opsPercentages": {
                        "arithmetic": 28.23920265780731,
                        "mul": 0.6644518272425249,
                        "bitwise": 71.09634551495017
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((-b & (b + (~c & b) + (~c & b) * -2) - 1) - ((~c & b) + (~c & b) * -2 + b) & b) * (~b & b + (~c & b) + (~c & b) * -2 + ~((b + (~c & b) + (~c & b) * -2) - 1 & -b)) + (~b & (-b & (b + (~c & b) + (~c & b) * -2) - 1) - ((~c & b) + (~c & b) * -2 + b)) * ((-b & (b + (~c & b) + (~c & b) * -2) - 1) - ((~c & b) + (~c & b) * -2 + b) | ~b)",
                    "attributes": {
                        "numOps": 91,
                        "nestedExprLevel": 24,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 69.76744186046511,
                        "opsPercentages": {
                            "arithmetic": 40.65934065934066,
                            "mul": 10.989010989010989,
                            "bitwise": 48.35164835164835
                        },
                        "percentageDAGsCancel": 17.391304347826086
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~(b - 1) & ((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 & b) + (((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 | b) - 1)) + ~((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 & b) + (((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 | b) - 1) & ~b) * ((~(b - 1) & ((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 & b) + (((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 | b) - 1)) + ~((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 & b) + (((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 | b) - 1) & b) + (~b | (~(b - 1) & ((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 & b) + (((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 | b) - 1)) + ~((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 & b) + (((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 | b) - 1)) * (~b & (~(b - 1) & ((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 & b) + (((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 | b) - 1)) + ~((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 & b) + (((c + 1 + (~c | b) ^ b) + (~c + 1 + (~c | b) & b) * -2 | b) - 1))",
                    "attributes": {
                        "numOps": 287,
                        "nestedExprLevel": 66,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 4.651162790697675,
                        "opsPercentages": {
                            "arithmetic": 42.1602787456446,
                            "mul": 6.2717770034843205,
                            "bitwise": 51.56794425087108
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "clang_O3": {
                    "expr": "(((c & b) - 1 & -b) - (c & b) & b) * (~((c & b) - 1 & -b) - (c & b) & ~b) + (((c & b) - 1 & -b) - (c & b) | ~b) * (((c & b) - 1 & -b) - (c & b) & ~b)",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 13,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 88.37209302325581,
                        "opsPercentages": {
                            "arithmetic": 37.142857142857146,
                            "mul": 5.714285714285714,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - b & ((((b ^ 0xffffffff | b) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff) & ((b | ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b) * -2) + (b & ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b) * -2)) - 1) + (((b | ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b ) * -2) + (b & ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b) * -2)) - 1 ^ 0xffffffff)) * (0xffffffff - b | ((((b ^ 0xffffffff | b) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff) & ((b | ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b) * -2) + (b & ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b) * -2)) - 1) + (((b | ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b ) * -2) + (b & ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b) * -2)) - 1 ^ 0xffffffff)) + (0xffffffff - b & (((((b ^ 0xffffffff | b) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff) & ((b | ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b ) * -2) + (b & ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b) * -2)) - 1) + (((b | ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b) * -2) + (b & ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b ) * -2)) - 1 ^ 0xffffffff) ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & ((((b ^ 0xffffffff | b) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff) & ((b | ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b) * -2) + (b & ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b) * -2)) - 1) + (((b | ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b ) * -2) + (b & ((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ b) + (((c ^ 0xffffffff | b) - (c ^ 0xffffffff) ^ 0xffffffff) & b) * -2)) - 1 ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 305,
                        "nestedExprLevel": 130,
                        "numDAGs": 31,
                        "percentDecreaseByOps": -1.3289036544850499,
                        "opsPercentages": {
                            "arithmetic": 31.80327868852459,
                            "mul": 5.901639344262295,
                            "bitwise": 62.295081967213115
                        },
                        "percentageDAGsCancel": 12.903225806451612
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - b & ~((~(0xfffffffe - ~b) & ((((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 | b) - 1) + (((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 & b)) + ~(((((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 | b) - 1) + (((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 & b)))) * (~(0xffffffff - b) & (~(0xfffffffe - ~b) & ((((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 | b) - 1) + (((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 & b)) + ~(((((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 | b) - 1) + (((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 & b))) + (0xffffffff - b & (~(0xfffffffe - ~b) & ((((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 | b) - 1) + (((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 & b)) + ~(((((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 | b) - 1) + (((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 & b))) * (0xffffffff - b | (~(0xfffffffe - ~b) & ((((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 | b) - 1) + (((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 & b)) + ~(((((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 | b) - 1) + (((~c | b) - ~c ^ b) + (~((~c | b) - ~c) & b) * -2 & b)))",
                    "attributes": {
                        "numOps": 293,
                        "nestedExprLevel": 87,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 2.6578073089700998,
                        "opsPercentages": {
                            "arithmetic": 31.74061433447099,
                            "mul": 6.143344709897611,
                            "bitwise": 62.116040955631405
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                },
                "gcc_O3": {
                    "expr": "(~-b & c - 1 + c & ~b) * (b & -b & c - 1 - c) + (~b & -b & c - 1 - c) * (~b | -b & c - 1 - c)",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 3,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 91.0299003322259,
                        "opsPercentages": {
                            "arithmetic": 48.148148148148145,
                            "mul": 7.4074074074074066,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                }
            }
        },
        {
            "num": 338,
            "gt": {
                "expr": "((((d+a)-(a|(d|a)))^((d&a)&(d-d))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 7,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 0.0,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "((((((d ^ ~ a) + ((d | a) << 1)) + 1) ^ (((a + ((d & ~ a) + a)) + 1) + ((- a - 1) | (- ((d & ~ a) + a) - 1)))) - ((~ (((d ^ ~ a) + ((d | a) << 1)) + 1) & (((a + ((d & ~ a) + a)) + 1) + ((- a - 1) | (- ((d & ~ a) + a) - 1)))) << 1)) | ((~ ((~ d | a) - ~ d) | ((d ^ d) - ((~ d & d) << 1))) - ~ ((~ d | a) - ~ d))) - ((((((d ^ ~ a) + ((d | a) << 1)) + 1) ^ (((a + ((d & ~ a) + a)) + 1) + ((- a - 1) | (- ((d & ~ a) + a) - 1)))) - ((~ (((d ^ ~ a) + ((d | a) << 1)) + 1) & (((a + ((d & ~ a) + a)) + 1) + ((- a - 1) | (- ((d & ~ a) + a) - 1)))) << 1)) & ((~ ((~ d | a) - ~ d) | ((d ^ d) - ((~ d & d) << 1))) - ~ ((~ d | a) - ~ d)))",
                "attributes": {
                    "numOps": 127,
                    "nestedExprLevel": 64,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 43.30708661417323,
                        "mul": 0.0,
                        "bitwise": 56.69291338582677
                    },
                    "percentageDAGsCancel": 20.588235294117645
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((d | a) * 2 + ~(a ^ d) + 1 ^ ~(a + (~a & d) & a) + (~a & d) + a * 2 + 1) + (~(a + (~a & d) & a) + (~a & d) + a * 2 + 1 & ((a ^ d) + (d | a) * -2) - 1) * -2",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 10,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 69.29133858267717,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 12.82051282051282,
                            "bitwise": 48.717948717948715
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "msvc_O1": {
                    "expr": "(d + 2 + ~(d + 1 + (~d | a)) + (~d | a) | (a * 2 + 1 + (~~a & d - a | ~a) + ~a & d ^ (a | d) * 2 + 1 + (~a ^ d)) - (((~a & d + a) * -2 - 2 | a * -2 - 2) + (a * 2 + 1 + ~a & d) * 2 & ~(a | d) * 2 + 1 + (~a ^ d) * 2)) - (d + 2 + ~(d + 1 + (~d | a)) + (~d | a) & (a * 2 + 1 + (~~a & d - a | ~a) + ~a & d ^ (a | d) * 2 + 1 + (~a ^ d)) - (((~a & d + a) * -2 - 2 | a * -2 - 2) + (a * 2 + 1 + ~a & d) * 2 & ~(a | d) * 2 + 1 + (~a ^ d) * 2))",
                    "attributes": {
                        "numOps": 115,
                        "nestedExprLevel": 19,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 9.448818897637794,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 13.91304347826087,
                            "bitwise": 46.95652173913044
                        },
                        "percentageDAGsCancel": 13.043478260869565
                    }
                },
                "clang_O3": {
                    "expr": "(~a ^ d + (d | a) * 2 + 1 ^ (~a & d) + a | a) + (0x7ffffffe - (~a ^ d + (d | a) * 2) & (~a & d) + a | a) * -2",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 6,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 80.31496062992126,
                        "opsPercentages": {
                            "arithmetic": 32.0,
                            "mul": 12.0,
                            "bitwise": 56.00000000000001
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ (d & (a ^ 0xffffffff)) + a * 2 + 1 + (0xffffffff - a | 0xffffffff - ((d & (a ^ 0xffffffff)) + a))) + (((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ 0xffffffff) & (d & (a ^ 0xffffffff)) + a * 2 + 1 + (0xffffffff - a | 0xffffffff - ((d & (a ^ 0xffffffff)) + a))) * -2 | ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) ^ 0xffffffff | ((d ^ 0xffffffff) & d) * -2) - ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) ^ 0xffffffff)) - (((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ (d & (a ^ 0xffffffff)) + a * 2 + 1 + (0xffffffff - a | 0xffffffff - ((d & (a ^ 0xffffffff)) + a))) + (((d ^ a ^ 0xffffffff) + (d | a) * 2 + 1 ^ 0xffffffff) & (d & (a ^ 0xffffffff)) + a * 2 + 1 + (0xffffffff - a | 0xffffffff - ((d & (a ^ 0xffffffff)) + a))) * -2 & ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) ^ 0xffffffff | ((d ^ 0xffffffff) & d) * -2) - ((d ^ 0xffffffff | a) - (d ^ 0xffffffff) ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 119,
                        "nestedExprLevel": 39,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 6.299212598425196,
                        "opsPercentages": {
                            "arithmetic": 37.81512605042017,
                            "mul": 10.084033613445378,
                            "bitwise": 52.10084033613446
                        },
                        "percentageDAGsCancel": 12.121212121212121
                    }
                },
                "msvc_default": {
                    "expr": "(((~a ^ d) + 1 + (d | a) * 2 ^ (~a & d) + a * 2 + 1 + (0xffffffff - a | 0xffffffff - ((~a & d) + a))) + (~((~a ^ d) + 1 + (d | a) * 2) & (~a & d) + a * 2 + 1 + (0xffffffff - a | 0xffffffff - ((~a & d) + a))) * -2 | ~((~d | a) - ~d) - ~((~d | a) - ~d)) - (((~a ^ d) + 1 + (d | a) * 2 ^ (~a & d) + a * 2 + 1 + (0xffffffff - a | 0xffffffff - ((~a & d) + a))) + (~((~a ^ d) + 1 + (d | a) * 2) & (~a & d) + a * 2 + 1 + (0xffffffff - a | 0xffffffff - ((~a & d) + a))) * -2 & ~((~d | a) - ~d) - ~((~d | a) - ~d))",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 26,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 14.173228346456693,
                        "opsPercentages": {
                            "arithmetic": 39.44954128440367,
                            "mul": 9.174311926605505,
                            "bitwise": 51.37614678899083
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                },
                "gcc_O3": {
                    "expr": "((d | a) * 2 - (d ^ a) ^ (a + (~a & d) + a) - ((~a & d) + a & a)) + (((d ^ a) + (d | a) * -2) - 1 & (a + (~a & d) + a) - ((~a & d) + a & a)) * -2",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 11,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 74.01574803149606,
                        "opsPercentages": {
                            "arithmetic": 42.42424242424242,
                            "mul": 9.090909090909092,
                            "bitwise": 48.484848484848484
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                }
            }
        },
        {
            "num": 339,
            "gt": {
                "expr": "(((a|(d|a))*((a|a)&b)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 20.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((a & ~ (((d + a) + 1) + ((- d - 1) | (- a - 1)))) + (((d + a) + 1) + ((- d - 1) | (- a - 1)))) & ((~ ((a & ~ a) + a) | b) - ~ ((a & ~ a) + a))) * (((a & ~ (((d + a) + 1) + ((- d - 1) | (- a - 1)))) + (((d + a) + 1) + ((- d - 1) | (- a - 1)))) | ((~ ((a & ~ a) + a) | b) - ~ ((a & ~ a) + a))) + (((a & ~ (((d + a) + 1) + ((- d - 1) | (- a - 1)))) + (((d + a) + 1) + ((- d - 1) | (- a - 1)))) & ~ ((~ ((a & ~ a) + a) | b) - ~ ((a & ~ a) + a))) * (~ ((a & ~ (((d + a) + 1) + ((- d - 1) | (- a - 1)))) + (((d + a) + 1) + ((- d - 1) | (- a - 1)))) & ((~ ((a & ~ a) + a) | b) - ~ ((a & ~ a) + a)))",
                "attributes": {
                    "numOps": 125,
                    "nestedExprLevel": 62,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 58.4,
                        "mul": 1.6,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 19.230769230769234
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(b & a & ~(~(d & a) + a + d + 1 + ((d & a) - (a + d + 1) & a))) * (((d & a) - (a + d + 1) & a) + ~(d & a) + a + d + 1 & ~(b & a)) + (((d & a) - (a + d + 1) & a) + ~(d & a) + a + d + 1 & b & a) * (b & a | ((d & a) - (a + d + 1) & a) + ~(d & a) + a + d + 1)",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 16,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 54.400000000000006,
                        "opsPercentages": {
                            "arithmetic": 50.877192982456144,
                            "mul": 3.508771929824561,
                            "bitwise": 45.614035087719294
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~d + 1 + (~(a + 1 + ~(a & d) + d) & a) + ~(a & d) + a & a + 1 + (~a | b)) * (~a + 1 + (~a | b) & d + 1 + (~(a + 1 + ~(a & d) + d) & a) + ~(a & d) + a) + (a + 1 + (~a | b) | d + 1 + (~(a + 1 + ~(a & d) + d) & a) + ~(a & d) + a) * (a + 1 + (~a | b) & d + 1 + (~(a + 1 + ~(a & d) + d) & a) + ~(a & d) + a)",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 17,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 38.4,
                        "opsPercentages": {
                            "arithmetic": 48.05194805194805,
                            "mul": 2.5974025974025974,
                            "bitwise": 49.35064935064935
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_O3": {
                    "expr": "(a | d) * (b & a)",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 97.6,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 33.33333333333333,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 33.33333333333333
                    }
                },
                "clang_default": {
                    "expr": "((a & (d + a + 1 + (0xffffffff - d | 0xffffffff - a) ^ 0xffffffff)) + d + a + 1 + (0xffffffff - d | 0xffffffff - a) & ((a & (a ^ 0xffffffff)) + a ^ 0xffffffff | b) - ((a & (a ^ 0xffffffff)) + a ^ 0xffffffff)) * ((a & (d + a + 1 + (0xffffffff - d | 0xffffffff - a) ^ 0xffffffff)) + d + a + 1 + (0xffffffff - d | 0xffffffff - a) | ((a & (a ^ 0xffffffff)) + a ^ 0xffffffff | b) - ((a & (a ^ 0xffffffff)) + a ^ 0xffffffff)) + ((a & (d + a + 1 + (0xffffffff - d | 0xffffffff - a) ^ 0xffffffff)) + d + a + 1 + (0xffffffff - d | 0xffffffff - a) & (((a & (a ^ 0xffffffff)) + a ^ 0xffffffff | b) - ((a & (a ^ 0xffffffff)) + a ^ 0xffffffff) ^ 0xffffffff)) * (((a & (d + a + 1 + (0xffffffff - d | 0xffffffff - a) ^ 0xffffffff)) + d + a + 1 + (0xffffffff - d | 0xffffffff - a) ^ 0xffffffff) & ((a & (a ^ 0xffffffff)) + a ^ 0xffffffff | b) - ((a & (a ^ 0xffffffff)) + a ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 36,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 12.8,
                        "opsPercentages": {
                            "arithmetic": 52.293577981651374,
                            "mul": 1.834862385321101,
                            "bitwise": 45.87155963302752
                        },
                        "percentageDAGsCancel": 25.925925925925924
                    }
                },
                "msvc_default": {
                    "expr": "((~(d + a + 1 + (0xffffffff - d | 0xffffffff - a)) & a) + d + a + 1 + (0xffffffff - d | 0xffffffff - a) & (~a | b) - ~a) * ((~(d + a + 1 + (0xffffffff - d | 0xffffffff - a)) & a) + d + a + 1 + (0xffffffff - d | 0xffffffff - a) | (~a | b) - ~a) + ((~(d + a + 1 + (0xffffffff - d | 0xffffffff - a)) & a) + d + a + 1 + (0xffffffff - d | 0xffffffff - a) & ~((~a | b) - ~a)) * (~((~(d + a + 1 + (0xffffffff - d | 0xffffffff - a)) & a) + d + a + 1 + (0xffffffff - d | 0xffffffff - a)) & (~a | b) - ~a)",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 20,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 32.0,
                        "opsPercentages": {
                            "arithmetic": 57.647058823529406,
                            "mul": 2.3529411764705883,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "gcc_O3": {
                    "expr": "(~b & ((d & a) - a + 1 + d & a) + ~(d & a) + a + 1 + d) * (~((d & a) - a + 1 + d & a) + ~(d & a) + a + 1 + d & b) + (((d & a) - a + 1 + d & a) + ~(d & a) + a + 1 + d | b) * (((d & a) - a + 1 + d & a) + ~(d & a) + a + 1 + d & b)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 13,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 57.599999999999994,
                        "opsPercentages": {
                            "arithmetic": 54.71698113207547,
                            "mul": 3.7735849056603774,
                            "bitwise": 41.509433962264154
                        },
                        "percentageDAGsCancel": 17.391304347826086
                    }
                }
            }
        },
        {
            "num": 340,
            "gt": {
                "expr": "(((-(b&c))|(e|c)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ ((((~ b | c) + b) + 1) - 1) & ~ ((e & ~ c) + c)) + ((e & ~ c) + c)",
                "attributes": {
                    "numOps": 15,
                    "nestedExprLevel": 8,
                    "numDAGs": 12,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "c + (~c & e) + ~(c + (~c & e) | (~b | c) + b)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 20.0,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~((~b | c) + b | (~c & e) + c) + (~c & e) + c",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 20.0,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((~b | c) + b | (~c & e) + c) + (~c & e) + c",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 20.0,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_default": {
                    "expr": "(((b ^ 0xffffffff | c) + b ^ 0xffffffff) & ((e & (c ^ 0xffffffff)) + c ^ 0xffffffff)) + (e & (c ^ 0xffffffff)) + c",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 7,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 13.333333333333334,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 0.0,
                            "bitwise": 69.23076923076923
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~((~b | c) + b) & ~((~c & e) + c)) + c + (~c & e)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 13.333333333333334,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 0.0,
                            "bitwise": 69.23076923076923
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~((~b | c) + b | (~c & e) + c) + (~c & e) + c",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 20.0,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 341,
            "gt": {
                "expr": "((~(((b^d)&(c-(~d)))^(c&(b+(-(d&b)))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 0.0,
                        "bitwise": 70.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((~ ((b | d) - (b & d)) | ((c & ~ (- d - 1)) - (~ c & (- d - 1)))) - ~ ((b | d) - (b & d))) & ((~ c | ((b ^ (~ ((~ d | b) - ~ d) + 1)) + ((b & (~ ((~ d | b) - ~ d) + 1)) + (b & (~ ((~ d | b) - ~ d) + 1))))) - ~ c)) - (((~ ((b | d) - (b & d)) | ((c & ~ (- d - 1)) - (~ c & (- d - 1)))) - ~ ((b | d) - (b & d))) | ((~ c | ((b ^ (~ ((~ d | b) - ~ d) + 1)) + ((b & (~ ((~ d | b) - ~ d) + 1)) + (b & (~ ((~ d | b) - ~ d) + 1))))) - ~ c))) - 1",
                "attributes": {
                    "numOps": 96,
                    "nestedExprLevel": 49,
                    "numDAGs": 28,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 0.0,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 7.142857142857142
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((-(b & d) & b) * 2 + (-(b & d) ^ b) & c ^ (c & d) - ~(c | d) & (b ^ d))",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 6,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 82.29166666666666,
                        "opsPercentages": {
                            "arithmetic": 23.52941176470588,
                            "mul": 5.88235294117647,
                            "bitwise": 70.58823529411765
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((((~((~d | b) + d) ^ b) + (~((~d | b) + d) & b) * 2 | ~c) + c + 1 & (b | d) + 1 + (((c & d) - (~d & ~c) | ~((b | d) - (b & d))) - (b & d))) - (((~((~d | b) + d) ^ b) + (~((~d | b) + d) & b) * 2 | ~c) + c + 1 | (b | d) + 1 + (((c & d) - (~d & ~c) | ~((b | d) - (b & d))) - (b & d)))) + -1",
                    "attributes": {
                        "numOps": 67,
                        "nestedExprLevel": 27,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 30.208333333333332,
                        "opsPercentages": {
                            "arithmetic": 34.32835820895522,
                            "mul": 2.9850746268656714,
                            "bitwise": 62.68656716417911
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "clang_O3": {
                    "expr": "~((-(d & b) ^ b) + (-(d & b) & b) * 2 & c ^ (d & c) + (d | c) + 1 & (d ^ b))",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 6,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 82.29166666666666,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 5.88235294117647,
                            "bitwise": 64.70588235294117
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_default": {
                    "expr": "((((b | d) - (b & d) ^ 0xffffffff | (c & (0xffffffff - d ^ 0xffffffff)) - ((c ^ 0xffffffff) & 0xffffffff - d)) - ((b | d) - (b & d) ^ 0xffffffff) & (c ^ 0xffffffff | (b ^ ((d ^ 0xffffffff | b) - (d ^ 0xffffffff) ^ 0xffffffff) + 1) + (b & ((d ^ 0xffffffff | b) - (d ^ 0xffffffff) ^ 0xffffffff) + 1) + (b & ((d ^ 0xffffffff | b) - (d ^ 0xffffffff) ^ 0xffffffff) + 1)) - (c ^ 0xffffffff)) - (((b | d) - (b & d) ^ 0xffffffff | (c & (0xffffffff - d ^ 0xffffffff)) - ((c ^ 0xffffffff) & 0xffffffff - d)) - ((b | d) - (b & d) ^ 0xffffffff) | (c ^ 0xffffffff | (b ^ ((d ^ 0xffffffff | b) - (d ^ 0xffffffff) ^ 0xffffffff) + 1) + (b & ((d ^ 0xffffffff | b) - (d ^ 0xffffffff) ^ 0xffffffff) + 1) + (b & ((d ^ 0xffffffff | b) - (d ^ 0xffffffff) ^ 0xffffffff) + 1)) - (c ^ 0xffffffff))) + -1",
                    "attributes": {
                        "numOps": 93,
                        "nestedExprLevel": 37,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 3.125,
                        "opsPercentages": {
                            "arithmetic": 35.483870967741936,
                            "mul": 0.0,
                            "bitwise": 64.51612903225806
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "msvc_default": {
                    "expr": "(((~((b | d) - (b & d)) | (~(0xffffffff - d) & c) - (~c & 0xffffffff - d)) - ~((b | d) - (b & d)) & (~c | (~((~d | b) - ~d) + 1 ^ b) + (~((~d | b) - ~d) + 1 & b) + (~((~d | b) - ~d) + 1 & b)) - ~c) - ((~((b | d) - (b & d)) | (~(0xffffffff - d) & c) - (~c & 0xffffffff - d)) - ~((b | d) - (b & d)) | (~c | (~((~d | b) - ~d) + 1 ^ b) + (~((~d | b) - ~d) + 1 & b) + (~((~d | b) - ~d) + 1 & b)) - ~c)) + -1",
                    "attributes": {
                        "numOps": 93,
                        "nestedExprLevel": 33,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 3.125,
                        "opsPercentages": {
                            "arithmetic": 35.483870967741936,
                            "mul": 0.0,
                            "bitwise": 64.51612903225806
                        },
                        "percentageDAGsCancel": 10.714285714285714
                    }
                },
                "gcc_O3": {
                    "expr": "~((c & d) - ~(c | d) & (d ^ b) ^ (-(d & b) ^ b) + (-(d & b) & b) * 2 & c)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 6,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 82.29166666666666,
                        "opsPercentages": {
                            "arithmetic": 23.52941176470588,
                            "mul": 5.88235294117647,
                            "bitwise": 70.58823529411765
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 342,
            "gt": {
                "expr": "((-(a-((e|(a|e))^a))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 7,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (((a + ~ ((((((e + ((a & ~ e) + e)) + 1) + ((- e - 1) | (- ((a & ~ e) + e) - 1))) - a) - (((((e + ((a & ~ e) + e)) + 1) + ((- e - 1) | (- ((a & ~ e) + e) - 1))) | ~ a) + ((((e + ((a & ~ e) + e)) + 1) + ((- e - 1) | (- ((a & ~ e) + e) - 1))) | ~ a))) - 2)) + 1) - 1)",
                "attributes": {
                    "numOps": 55,
                    "nestedExprLevel": 32,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 61.81818181818181,
                        "mul": 0.0,
                        "bitwise": 38.18181818181819
                    },
                    "percentageDAGsCancel": 4.545454545454546
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((~a | (~e & a) + e * 2 + 1 + ~(e + (~e & a) & e)) * 2 + ((e + (~e & a) & e) - ((~e & a) + e * 2 + 1)) + a * 2 + 2)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 8,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 47.27272727272727,
                        "opsPercentages": {
                            "arithmetic": 37.93103448275862,
                            "mul": 13.793103448275861,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "~(((((e * 2 + 1 + ~~e & a - e | ~e + ~e & a | ~a) - e) + a) * 2 - ~~e & a - e | ~e) - ~e & a)",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 6,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 49.09090909090909,
                        "opsPercentages": {
                            "arithmetic": 32.142857142857146,
                            "mul": 7.142857142857142,
                            "bitwise": 60.71428571428571
                        },
                        "percentageDAGsCancel": 9.523809523809524
                    }
                },
                "clang_O3": {
                    "expr": "~((((~a | e) + a) * 2 - e) + 1)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 5,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 87.27272727272727,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 14.285714285714285,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "a + (((((a & (e ^ 0xffffffff)) + e * 2 + (0xffffffff - e | 0xffffffff - ((a & (e ^ 0xffffffff)) + e))) - a) - (((a & (e ^ 0xffffffff)) + e * 2 + 1 + (0xffffffff - e | 0xffffffff - ((a & (e ^ 0xffffffff)) + e)) | a ^ 0xffffffff) + ((a & (e ^ 0xffffffff)) + e * 2 + 1 + (0xffffffff - e | 0xffffffff - ((a & (e ^ 0xffffffff)) + e)) | a ^ 0xffffffff))) - 1 ^ 0xffffffff) ^ 0xffffffff",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 21,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 16.363636363636363,
                        "opsPercentages": {
                            "arithmetic": 47.82608695652174,
                            "mul": 6.521739130434782,
                            "bitwise": 45.65217391304348
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~(~(((((~e & a) + e * 2 + (0xffffffff - e | 0xffffffff - ((~e & a) + e))) - a) - (((~e & a) + e * 2 + 1 + (0xffffffff - e | 0xffffffff - ((~e & a) + e)) | ~a ) + ((~e & a) + e * 2 + 1 + (0xffffffff - e | 0xffffffff - ((~e & a) + e)) | ~a))) - 1) + a)",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 16,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 16.363636363636363,
                        "opsPercentages": {
                            "arithmetic": 47.82608695652174,
                            "mul": 6.521739130434782,
                            "bitwise": 45.65217391304348
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(((~e & a) + e & e - (~e & a) + e + 1 + e) + a * 2 + 2 + (~(~e & a) + e & e + (~e & a) + e + 1 + e | ~a) * 2)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 6,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 47.27272727272727,
                        "opsPercentages": {
                            "arithmetic": 44.827586206896555,
                            "mul": 6.896551724137931,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 343,
            "gt": {
                "expr": "((((b|(-b))|d)&(-(((d&a)|b)&(d-b)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ ((((((b + (~ b + 1)) + 1) + ((- b - 1) | (- (~ b + 1) - 1))) + d) + 1) + ((- (((b + (~ b + 1)) + 1) + ((- b - 1) | (- (~ b + 1) - 1))) - 1) | (- d - 1))) | ~ (((~ (((((~ d | a) - ~ d) + b) + 1) + ((- ((~ d | a) - ~ d) - 1) | (- b - 1))) | ((d ^ b) - ((~ d & b) << 1))) - ~ (((((~ d | a) - ~ d) + b) + 1) + ((- ((~ d | a) - ~ d) - 1) | (- b - 1)))) - 1)) - ~ ((((((b + (~ b + 1)) + 1) + ((- b - 1) | (- (~ b + 1) - 1))) + d) + 1) + ((- (((b + (~ b + 1)) + 1) + ((- b - 1) | (- (~ b + 1) - 1))) - 1) | (- d - 1)))",
                "attributes": {
                    "numOps": 111,
                    "nestedExprLevel": 55,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 64.86486486486487,
                        "mul": 0.0,
                        "bitwise": 35.13513513513514
                    },
                    "percentageDAGsCancel": 10.256410256410255
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~d | (-b & b) - 1) + d + (b - 1 | ~b) + 2 & -(b + (a & d) + 1 + ~(a & d & b) & (d ^ b) + (~d & b) * -2)",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 6,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 75.67567567567568,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 3.7037037037037033,
                            "bitwise": 51.85185185185185
                        },
                        "percentageDAGsCancel": 16.0
                    }
                },
                "msvc_O1": {
                    "expr": "d + 4 + ~(((b ^ d) + (~d & b) * -2 | ~((~d - ~d | a) - 1 | ~b + ~d | a + b + d + 2)) + (~d - ~d | a) - 1 | ~b + ~d | a + 2 + b + d & b - 1 | ~b + 3 + -b - 1 | ~b - 2 | ~d + ~b + b + d) + -b - 1 | ~b - 2 | ~d + b - 1 | ~b + ~b + b",
                    "attributes": {
                        "numOps": 70,
                        "nestedExprLevel": 6,
                        "numDAGs": 50,
                        "percentDecreaseByOps": 36.93693693693694,
                        "opsPercentages": {
                            "arithmetic": 48.57142857142857,
                            "mul": 1.4285714285714286,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 6.0
                    }
                },
                "clang_O3": {
                    "expr": "-((d ^ b) + (~d & b) * -2 & (~(a & d) | ~b) + b + (a & d) + 1) & (b - 1 | ~b) + d + ((-b & b) - 1 | ~d) + 2",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 7,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 74.77477477477478,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 3.571428571428571,
                            "bitwise": 53.57142857142857
                        },
                        "percentageDAGsCancel": 12.0
                    }
                },
                "clang_default": {
                    "expr": "(b + (b ^ 0xffffffff) + (0xffffffff - b | 0xffffffff - ((b ^ 0xffffffff) + 1)) + d + 3 + (0xffffffff - (b + (b ^ 0xffffffff) + 2 + (0xffffffff - b | 0xffffffff - ((b ^ 0xffffffff) + 1))) | 0xffffffff - d) ^ 0xffffffff | ((((d ^ 0xffffffff | a) - (d ^ 0xffffffff)) + b + 1 + (0xffffffff - ((d ^ 0xffffffff | a) - (d ^ 0xffffffff)) | 0xffffffff - b) ^ 0xffffffff | (d ^ b) + ((d ^ 0xffffffff) & b) * -2) - (((d ^ 0xffffffff | a) - (d ^ 0xffffffff)) + b + 1 + (0xffffffff - ((d ^ 0xffffffff | a) - (d ^ 0xffffffff)) | 0xffffffff - b) ^ 0xffffffff)) - 1 ^ 0xffffffff) - (b + (b ^ 0xffffffff) + (0xffffffff - b | 0xffffffff - ((b ^ 0xffffffff) + 1)) + d + 3 + (0xffffffff - (b + (b ^ 0xffffffff) + 2 + (0xffffffff - b | 0xffffffff - ((b ^ 0xffffffff) + 1))) | 0xffffffff - d) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 90,
                        "nestedExprLevel": 30,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 18.91891891891892,
                        "opsPercentages": {
                            "arithmetic": 56.666666666666664,
                            "mul": 1.1111111111111112,
                            "bitwise": 42.22222222222222
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~((0xffffffff - b | 0xffffffff - (~b + 1)) + b + ~b + d + 3 + (0xffffffff - (b + ~b + 2 + (0xffffffff - b | 0xffffffff - (~b + 1))) | 0xffffffff - d)) | ~(((~(((~d | a) - ~d) + b + 1 + (0xffffffff - ((~d | a) - ~d) | 0xffffffff - b)) | (d ^ b) + (~d & b) * -2) - ~(((~d | a) - ~d) + b + 1 + (0xffffffff - ((~d | a) - ~d) | 0xffffffff - b))) - 1)) - ~((0xffffffff - b | 0xffffffff - (~b + 1)) + b + ~b + d + 3 + (0xffffffff - (b + ~b + 2 + (0xffffffff - b | 0xffffffff - (~b + 1))) | 0xffffffff - d))",
                    "attributes": {
                        "numOps": 90,
                        "nestedExprLevel": 25,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 18.91891891891892,
                        "opsPercentages": {
                            "arithmetic": 56.666666666666664,
                            "mul": 1.1111111111111112,
                            "bitwise": 42.22222222222222
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-(((a & d) + b) - (a & d & b) & (d ^ b) + (~d & b) * -2) & ((-b & b) - 1 | ~d) + d + 2 + (~b | b - 1)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 7,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 77.47747747747748,
                        "opsPercentages": {
                            "arithmetic": 44.0,
                            "mul": 4.0,
                            "bitwise": 52.0
                        },
                        "percentageDAGsCancel": 13.043478260869565
                    }
                }
            }
        },
        {
            "num": 344,
            "gt": {
                "expr": "((-(b|(b&(-e)))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "~ (((b + ((~ b | ~ (e - 1)) - ~ b)) + 1) + ((- b - 1) | (- ((~ b | ~ (e - 1)) - ~ b) - 1))) + 1",
                "attributes": {
                    "numOps": 22,
                    "nestedExprLevel": 11,
                    "numDAGs": 15,
                    "opsPercentages": {
                        "arithmetic": 54.54545454545454,
                        "mul": 0.0,
                        "bitwise": 45.45454545454545
                    },
                    "percentageDAGsCancel": 13.333333333333334
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((-e & b) - (b + (-e & b) + 1)) + 1",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 4,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 63.63636363636363,
                        "opsPercentages": {
                            "arithmetic": 75.0,
                            "mul": 0.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((-1 - b) * 2 - ((~b - (-e | ~b)) - 1 | ~b)) - (-e | ~b)",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 27.27272727272727,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 6.25,
                            "bitwise": 43.75
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-b",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 95.45454545454545,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(b + ((b ^ 0xffffffff | e - 1 ^ 0xffffffff) - (b ^ 0xffffffff)) + 1 + (0xffffffff - b | 0xffffffff - ((b ^ 0xffffffff | e - 1 ^ 0xffffffff) - (b ^ 0xffffffff))) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 7,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 9.090909090909092,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~(((~b | ~(e - 1)) - ~b) + b + 1 + (0xffffffff - b | 0xffffffff - ((~b | ~(e - 1)) - ~b))) + 1",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 8,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 9.090909090909092,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-b",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 95.45454545454545,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 345,
            "gt": {
                "expr": "(((~(d|(-e)))&(-b)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ (- ((d & ~ (~ e + 1)) + (~ e + 1)) - 1) | ~ (b - 1)) - ~ (- ((d & ~ (~ e + 1)) + (~ e + 1)) - 1)",
                "attributes": {
                    "numOps": 24,
                    "nestedExprLevel": 10,
                    "numDAGs": 12,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(e - (e - 1 & d)) - 1 & -b",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 75.0,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((e - 1 & d - e | -b) - e - 1 & d) + e",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 62.5,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~(e - 1 & d) + e & -b",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 75.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - ((d & ((e ^ 0xffffffff) + 1 ^ 0xffffffff)) + (e ^ 0xffffffff) + 1) ^ 0xffffffff | b - 1 ^ 0xffffffff) - (0xffffffff - ((d & ((e ^ 0xffffffff) + 1 ^ 0xffffffff)) + (e ^ 0xffffffff) + 1) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 11,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 8.333333333333332,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 0.0,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(0xffffffff - ((~(~e + 1) & d) + 1 + ~e)) | ~(b - 1)) - ~(0xffffffff - ((~(~e + 1) & d) + 1 + ~e))",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 10,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 8.333333333333332,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 0.0,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(e - (e - 1 & d)) - 1 & -b",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 75.0,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 346,
            "gt": {
                "expr": "((-((((~a)+d)&(-b))^(((b-d)^b)*(~b)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 10.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (((((((~ (((- a - 1) - ~ d) - 1) | (~ b + 1)) + (((- a - 1) - ~ d) - 1)) + 1) - (((((((b ^ d) - ((~ b & d) + (~ b & d))) - b) - ((((b ^ d) - ((~ b & d) + (~ b & d))) | ~ b) << 1)) - 2) & (- b - 1)) * ((((((b ^ d) - ((~ b & d) + (~ b & d))) - b) - ((((b ^ d) - ((~ b & d) + (~ b & d))) | ~ b) << 1)) - 2) | (- b - 1)) + ((((((b ^ d) - ((~ b & d) + (~ b & d))) - b) - ((((b ^ d) - ((~ b & d) + (~ b & d))) | ~ b) << 1)) - 2) & ~ (- b - 1)) * (~ (((((b ^ d) - ((~ b & d) + (~ b & d))) - b) - ((((b ^ d) - ((~ b & d) + (~ b & d))) | ~ b) << 1)) - 2) & (- b - 1)))) - (((((~ (((- a - 1) - ~ d) - 1) | (~ b + 1)) + (((- a - 1) - ~ d) - 1)) + 1) | ~ (((((((b ^ d) - ((~ b & d) + (~ b & d))) - b) - ((((b ^ d) - ((~ b & d) + (~ b & d))) | ~ b) << 1)) - 2) & (- b - 1)) * ((((((b ^ d) - ((~ b & d) + (~ b & d))) - b) - ((((b ^ d) - ((~ b & d) + (~ b & d))) | ~ b) << 1)) - 2) | (- b - 1)) + ((((((b ^ d) - ((~ b & d) + (~ b & d))) - b) - ((((b ^ d) - ((~ b & d) + (~ b & d))) | ~ b) << 1)) - 2) & ~ (- b - 1)) * (~ (((((b ^ d) - ((~ b & d) + (~ b & d))) - b) - ((((b ^ d) - ((~ b & d) + (~ b & d))) | ~ b) << 1)) - 2) & (- b - 1)))) << 1)) - 2) - 1)",
                "attributes": {
                    "numOps": 234,
                    "nestedExprLevel": 122,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 42.73504273504273,
                        "mul": 1.7094017094017095,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 2.564102564102564
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~((~b & (~b | (b ^ d) + (~b & d) * -2) * 2 + ~(b ^ d) + (~b & d) * 2 + b + 2) * (((((b ^ d) + (~b & d) * -2) - b) + (~b | (b ^ d) + (~b & d) * -2) * -2) - 2 & b) + (((((b ^ d) + (~b & d) * -2) - b) + (~b | (b ^ d) + (~b & d) * -2) * -2) - 2 & ~b) * (~b | ((((b ^ d) + (~b & d) * -2) - b) + (~b | (b ^ d) + (~b & d) * -2) * -2) - 2)) | (~a - ~d) + (a + ~d + 1 | -b)) * 2 + (((~b & (~b | (b ^ d) + (~b & d) * -2) * 2 + ~(b ^ d) + (~b & d) * 2 + b + 2) * (((((b ^ d) + (~b & d) * -2) - b) + (~b | (b ^ d) + (~b & d) * -2) * -2) - 2 & b) + (((((b ^ d) + (~b & d) * -2) - b) + (~b | (b ^ d) + (~b & d) * -2) * -2) - 2 & ~b) * (~b | ((((b ^ d) + (~b & d) * -2) - b) + (~b | (b ^ d) + (~b & d) * -2) * -2) - 2)) - ((~a - ~d) + -1 + (a + ~d + 1 | -b))) + 1",
                    "attributes": {
                        "numOps": 196,
                        "nestedExprLevel": 58,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 16.23931623931624,
                        "opsPercentages": {
                            "arithmetic": 39.285714285714285,
                            "mul": 14.795918367346939,
                            "bitwise": 45.91836734693878
                        },
                        "percentageDAGsCancel": 2.380952380952381
                    }
                },
                "msvc_O1": {
                    "expr": "a + 2 + ((((~b * 2 + 2 | ~((d - a) - 1) * 2) + (d - a) * 2 | ~(((((-1 - (~b & d)) * 2 - (((b ^ d) + (~b & d) * -2) * 2 | ~b * 2)) - b) + (b ^ d) | ~b) * ((((-1 - (~b & d)) * 2 - (((b ^ d) + (~b & d) * -2) * 2 | ~b * 2)) - b) + (b ^ d) & ~b) + (~(((-1 - (~b & d)) * 2 - (((b ^ d) + (~b & d) * -2) * 2 | ~b * 2)) - b) + (b ^ d) & ~b) * ((((-1 - (~b & d)) * 2 - (((b ^ d) + (~b & d) * -2) * 2 | ~b * 2)) - b) + (b ^ d) & b)) * 2) - (~b + 1 | ~((d - a) - 1))) - d) + ((((-1 - (~b & d)) * 2 - (((b ^ d) + (~b & d) * -2) * 2 | ~b * 2)) - b) + (b ^ d) | ~b) * ((((-1 - (~b & d)) * 2 - (((b ^ d) + (~b & d) * -2) * 2 | ~b * 2)) - b) + (b ^ d) & ~b) + (~(((-1 - (~b & d)) * 2 - (((b ^ d) + (~b & d) * -2) * 2 | ~b * 2)) - b) + (b ^ d) & ~b) * ((((-1 - (~b & d)) * 2 - (((b ^ d) + (~b & d) * -2) * 2 | ~b * 2)) - b) + (b ^ d) & b)",
                    "attributes": {
                        "numOps": 199,
                        "nestedExprLevel": 67,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 14.957264957264957,
                        "opsPercentages": {
                            "arithmetic": 35.678391959798994,
                            "mul": 20.100502512562816,
                            "bitwise": 44.221105527638194
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((1 - ((d ^ b) + (~b & d) * -2 - b) + ((d ^ b) + (~b & d) * -2 | ~b) * -2 & ~b) * (((d ^ b) + (~b & d) * -2 - b) + ((d ^ b) + (~b & d) * -2 | ~b) * -2 - 2 & b) + (((d ^ b) + (~b & d) * -2 - b) + ((d ^ b) + (~b & d) * -2 | ~b) * -2 - 2 | ~b) * (((d ^ b) + (~b & d) * -2 - b) + ((d ^ b) + (~b & d) * -2 | ~b) * -2 - 2 & ~b) - (d - a) + (-b | a - d)) + (~(1 - ((d ^ b) + (~b & d) * -2 - b) + ((d ^ b) + (~b & d) * -2 | ~b) * -2 & ~b) * (((d ^ b) + (~b & d) * -2 - b) + ((d ^ b) + (~b & d) * -2 | ~b) * -2 - 2 & b) + (((d ^ b) + (~b & d) * -2 - b) + ((d ^ b) + (~b & d) * -2 | ~b) * -2 - 2 | ~b) * (((d ^ b) + (~b & d) * -2 - b) + ((d ^ b) + (~b & d) * -2 | ~b) * -2 - 2 & ~b) | (d - a) + (-b | a - d)) * 2 + 2",
                    "attributes": {
                        "numOps": 188,
                        "nestedExprLevel": 45,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 19.65811965811966,
                        "opsPercentages": {
                            "arithmetic": 40.95744680851064,
                            "mul": 15.425531914893616,
                            "bitwise": 43.61702127659575
                        },
                        "percentageDAGsCancel": 2.941176470588235
                    }
                },
                "clang_default": {
                    "expr": "(((((-(d ^ 0xffffffff) - a) - 2 ^ 0xffffffff | (b ^ 0xffffffff) + 1) + (-(d ^ 0xffffffff) - a)) - ((((((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d))) - b) + ((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d)) | b ^ 0xffffffff) * -2) - 2 & 0xffffffff - b) * (((((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d))) - b) + ((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d)) | b ^ 0xffffffff) * -2) - 2 | 0xffffffff - b) + (((((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d))) - b) + ((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d)) | b ^ 0xffffffff) * -2) - 2 & (0xffffffff - b ^ 0xffffffff)) * ((((((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d))) - b) + ((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d)) | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & 0xffffffff - b))) + ((((-(d ^ 0xffffffff) - a) - 2 ^ 0xffffffff | (b ^ 0xffffffff) + 1) + (-(d ^ 0xffffffff) - a)) - 1 | (((((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d))) - b) + ((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d)) | b ^ 0xffffffff) * -2) - 2 & 0xffffffff - b) * (((((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d))) - b) + ((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d)) | b ^ 0xffffffff) * -2) - 2 | 0xffffffff - b) + (((((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d))) - b) + ((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d)) | b ^ 0xffffffff) * -2) - 2 & (0xffffffff - b ^ 0xffffffff)) * ((((((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d))) - b) + ((b ^ d) - (((b ^ 0xffffffff) & d) + ((b ^ 0xffffffff) & d)) | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & 0xffffffff - b) ^ 0xffffffff) * -2) - 4 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 227,
                        "nestedExprLevel": 108,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 2.9914529914529915,
                        "opsPercentages": {
                            "arithmetic": 40.969162995594715,
                            "mul": 5.726872246696035,
                            "bitwise": 53.30396475770925
                        },
                        "percentageDAGsCancel": 2.7027027027027026
                    }
                },
                "msvc_default": {
                    "expr": "~(((((~((-~d - a) - 2) | ~b + 1) + (-~d - a)) - ((((((b ^ d) - ((~b & d) + (~b & d))) - b) + ((b ^ d) - ((~b & d) + (~b & d)) | ~b) * -2) - 2 & 0xffffffff - b) * (((((b ^ d) - ((~b & d) + (~b & d))) - b) + ((b ^ d) - ((~b & d) + (~b & d)) | ~b) * -2) - 2 | 0xffffffff - b) + (((((b ^ d) - ((~b & d) + (~b & d))) - b) + ((b ^ d) - ((~b & d) + (~b & d)) | ~b) * -2) - 2 & ~(0xffffffff - b)) * (~(((((b ^ d) - ((~b & d) + (~b & d))) - b) + ((b ^ d) - ((~b & d) + (~b & d)) | ~b) * -2 ) - 2) & 0xffffffff - b))) + ((~((-~d - a) - 2) | ~b + 1) + ((-1 - a) - ~d) | ~((((((b ^ d) - ((~b & d) + (~b & d))) - b) + ((b ^ d) - ((~b & d) + (~b & d)) | ~b) * -2) - 2 & 0xffffffff - b) * (((((b ^ d) - ((~b & d) + (~b & d))) - b) + ((b ^ d) - ((~b & d) + (~b & d)) | ~b) * -2) - 2 | 0xffffffff - b) + (((((b ^ d) - ((~b & d) + (~b & d))) - b) + ((b ^ d) - ((~b & d) + (~b & d)) | ~b) * -2) - 2 & ~(0xffffffff - b)) * (~(((((b ^ d) - ((~b & d) + (~b & d))) - b) + ((b ^ d) - ((~b & d) + (~b & d)) | ~b) * -2 ) - 2) & 0xffffffff - b))) * -2) - 4)",
                    "attributes": {
                        "numOps": 227,
                        "nestedExprLevel": 88,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 2.9914529914529915,
                        "opsPercentages": {
                            "arithmetic": 40.969162995594715,
                            "mul": 5.726872246696035,
                            "bitwise": 53.30396475770925
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "gcc_O3": {
                    "expr": "((~b | (d ^ b) + (d & ~b) * -2 * 2 + 2 + ~(d ^ b) + (d & ~b) * 2 + b & ~b) * (b & (((d ^ b) + (d & ~b) * -2 - b) + ~b | (d ^ b) + (d & ~b) * -2 * -2) - 2) + (~b & (((d ^ b) + (d & ~b) * -2 - b) + ~b | (d ^ b) + (d & ~b) * -2 * -2) - 2) * (~b | (((d ^ b) + (d & ~b) * -2 - b) + ~b | (d ^ b) + (d & ~b) * -2 * -2) - 2) - (a - d | -b) + ~a + d) + 1 + ((a - d | -b) + ~a + d + 1 | ~(~b | (d ^ b) + (d & ~b) * -2 * 2 + 2 + ~(d ^ b) + (d & ~b) * 2 + b & ~b) * (b & (((d ^ b) + (d & ~b) * -2 - b) + ~b | (d ^ b) + (d & ~b) * -2 * -2) - 2) + (~b & (((d ^ b) + (d & ~b) * -2 - b) + ~b | (d ^ b) + (d & ~b) * -2 * -2) - 2) * (~b | (((d ^ b) + (d & ~b) * -2 - b) + ~b | (d ^ b) + (d & ~b) * -2 * -2) - 2)) * 2",
                    "attributes": {
                        "numOps": 189,
                        "nestedExprLevel": 39,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 19.230769230769234,
                        "opsPercentages": {
                            "arithmetic": 39.15343915343915,
                            "mul": 15.343915343915343,
                            "bitwise": 45.5026455026455
                        },
                        "percentageDAGsCancel": 2.2222222222222223
                    }
                }
            }
        },
        {
            "num": 347,
            "gt": {
                "expr": "(((b+b)+(e+(b-b))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 100.0,
                        "mul": 0.0,
                        "bitwise": 0.0
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "(((b - ~ b) - 1) - ~ ((e | ((b + ~ b) + 1)) + (e & ((b + ~ b) + 1)))) - 1",
                "attributes": {
                    "numOps": 15,
                    "nestedExprLevel": 9,
                    "numDAGs": 11,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 0.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 36.36363636363637
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b - ~b) - ~e) + -2",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 60.0,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "e + b * 2",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 86.66666666666667,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 50.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "b * 2 + e",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 86.66666666666667,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 50.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((b - (b ^ 0xffffffff)) - ((e | b + (b ^ 0xffffffff) + 1) + (e & b + (b ^ 0xffffffff) + 1) ^ 0xffffffff)) + -2",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 7,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_default": {
                    "expr": "((b - ~b) - ~((b + 1 + ~b | e) + (b + 1 + ~b & e))) + -2",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 36.36363636363637
                    }
                },
                "gcc_O3": {
                    "expr": "e + b * 2",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 86.66666666666667,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 50.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 348,
            "gt": {
                "expr": "(((d*e)|((e-d)+d)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 25.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((((d & e) * (d | e) + (d & ~ e) * (~ d & e)) + ((((e + ~ d) + 1) - ~ d) - 1)) + 1) + ((- ((d & e) * (d | e) + (d & ~ e) * (~ d & e)) - 1) | (- ((((e + ~ d) + 1) - ~ d) - 1) - 1))",
                "attributes": {
                    "numOps": 38,
                    "nestedExprLevel": 19,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 44.73684210526316,
                        "mul": 10.526315789473683,
                        "bitwise": 44.73684210526316
                    },
                    "percentageDAGsCancel": 9.523809523809524
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~d - (e + ~d + 1) | ~((~d & e) * (~e & d) + (d & e) * (d | e))) + ((e + ~d + 1) - ~d) + (d & e) * (d | e) + (~d & e) * (~e & d)",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 15.789473684210526,
                        "opsPercentages": {
                            "arithmetic": 31.25,
                            "mul": 12.5,
                            "bitwise": 56.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~d & e) * (~e & d) - (d | e) * (d & e) | ~e) + (d | e) * (d & e) + (~d & e) * (~e & d) + e + 1",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 6,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 36.84210526315789,
                        "opsPercentages": {
                            "arithmetic": 20.833333333333336,
                            "mul": 16.666666666666664,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_O3": {
                    "expr": "(~d & e) * (~e & d) + (e | d) * (e & d) | e",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 73.68421052631578,
                        "opsPercentages": {
                            "arithmetic": 10.0,
                            "mul": 20.0,
                            "bitwise": 70.0
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_default": {
                    "expr": "(d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e) + ((e + (d ^ 0xffffffff)) - (d ^ 0xffffffff)) + 1 + (0xffffffff - ((d & e) * (d | e) + (d & (e ^ 0xffffffff)) * ((d ^ 0xffffffff) & e)) | 0xffffffff - ((e + (d ^ 0xffffffff)) - (d ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 15,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 15.789473684210526,
                        "opsPercentages": {
                            "arithmetic": 34.375,
                            "mul": 12.5,
                            "bitwise": 53.125
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_default": {
                    "expr": "(d & e) * (d | e) + (~e & d) * (~d & e) + ((e + ~d) - ~d) + 1 + (0xffffffff - ((d & e) * (d | e) + (~e & d) * (~d & e)) | 0xffffffff - ((e + ~d) - ~d))",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 10,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 15.789473684210526,
                        "opsPercentages": {
                            "arithmetic": 34.375,
                            "mul": 12.5,
                            "bitwise": 53.125
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "gcc_O3": {
                    "expr": "((~e & d) * (~d & e) + (d | e) * (d & e) + e) - (e & (~e & d) * (~d & e) + (d | e) * (d & e))",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 7,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 44.73684210526316,
                        "opsPercentages": {
                            "arithmetic": 19.047619047619047,
                            "mul": 19.047619047619047,
                            "bitwise": 61.904761904761905
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                }
            }
        },
        {
            "num": 349,
            "gt": {
                "expr": "(((-(-b))-((-e)&((e^b)*a))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 14.285714285714285,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "(~ ((~ b + 1) - 1) + ~ ((~ (~ (e - 1)) | (((((e - b) - ((e | ~ b) << 1)) - 2) & a) * ((((e - b) - ((e | ~ b) << 1)) - 2) | a) + ((((e - b) - ((e | ~ b) << 1)) - 2) & ~ a) * (~ (((e - b) - ((e | ~ b) << 1)) - 2) & a))) - ~ (~ (e - 1)))) + 1",
                "attributes": {
                    "numOps": 48,
                    "nestedExprLevel": 25,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 41.66666666666667,
                        "mul": 4.166666666666666,
                        "bitwise": 54.166666666666664
                    },
                    "percentageDAGsCancel": 7.6923076923076925
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "b + ~(-e & (((e - b) + (~b | e) * -2) - 2 & a) * (((e - b) + (~b | e) * -2) - 2 | a) + ((~b | e) * 2 + ~e + b + 2 & a) * (((e - b) + (~b | e) * -2) - 2 & ~a)) + 1",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 12,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 14.583333333333334,
                        "opsPercentages": {
                            "arithmetic": 46.34146341463415,
                            "mul": 14.634146341463413,
                            "bitwise": 39.02439024390244
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "e + -1 + (b - ((~a & ((e + (~b | e) * -2) - b) - 2) * (~((e + (~b | e) * -2) - b) - 2 & a) + (((e + (~b | e) * -2) - b) - 2 | a) * (((e + (~b | e) * -2) - b) - 2 & a) | e - 1))",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 16,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 10.416666666666668,
                        "opsPercentages": {
                            "arithmetic": 51.162790697674424,
                            "mul": 13.953488372093023,
                            "bitwise": 34.883720930232556
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "b - (-e & (1 - (e - b) + (~b | e) * -2 & a) * (~a & (e - b) + (~b | e) * -2 - 2) + ((e - b) + (~b | e) * -2 - 2 | a) * ((e - b) + (~b | e) * -2 - 2 & a))",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 10,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 18.75,
                        "opsPercentages": {
                            "arithmetic": 48.717948717948715,
                            "mul": 15.384615384615385,
                            "bitwise": 35.8974358974359
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "b + ((e - 1 | (((e - b) + (e | b ^ 0xffffffff) * -2) - 2 & a) * (((e - b) + (e | b ^ 0xffffffff) * -2) - 2 | a) + (((e - b) + (e | b ^ 0xffffffff) * -2) - 2 & (a ^ 0xffffffff)) * ((((e - b) + (e | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & a)) - (e - 1) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 17,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 8.333333333333332,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 13.636363636363635,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "b + 1 + ~((e - 1 | (((e - b) + (~b | e) * -2) - 2 & a) * (((e - b) + (~b | e) * -2) - 2 | a) + (((e - b) + (~b | e) * -2) - 2 & ~a) * (~(((e - b) + (~b | e) * -2) - 2) & a)) - (e + -1))",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 17,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 6.25,
                        "opsPercentages": {
                            "arithmetic": 51.11111111111111,
                            "mul": 13.333333333333334,
                            "bitwise": 35.55555555555556
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "gcc_O3": {
                    "expr": "b - (((~b | e) * 2 + 2 + ~e + b & a) * (~a & ((e - b) + (~b | e) * -2) - 2) + (((e - b) + (~b | e) * -2) - 2 | a) * (((e - b) + (~b | e) * -2) - 2 & a) & -e)",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 12,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 18.75,
                        "opsPercentages": {
                            "arithmetic": 46.15384615384615,
                            "mul": 15.384615384615385,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 350,
            "gt": {
                "expr": "((((-d)|d)-((~((d^(a+a))^(-a)))+(d-a))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 0.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((~ (d - 1) & ~ d) + d) & ~ (((((((d | ((a - ~ a) - 1)) - (d & ((a - ~ a) - 1))) & (~ a + 1)) - (((d | ((a - ~ a) - 1)) - (d & ((a - ~ a) - 1))) | (~ a + 1))) - 1) - ~ (((d & ~ a) << 1) - (d ^ a))) - 1)) << 1) - (((~ (d - 1) & ~ d) + d) ^ (((((((d | ((a - ~ a) - 1)) - (d & ((a - ~ a) - 1))) & (~ a + 1)) - (((d | ((a - ~ a) - 1)) - (d & ((a - ~ a) - 1))) | (~ a + 1))) - 1) - ~ (((d & ~ a) << 1) - (d ^ a))) - 1))",
                "attributes": {
                    "numOps": 83,
                    "nestedExprLevel": 50,
                    "numDAGs": 28,
                    "opsPercentages": {
                        "arithmetic": 46.98795180722892,
                        "mul": 0.0,
                        "bitwise": 53.01204819277109
                    },
                    "percentageDAGsCancel": 3.571428571428571
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((d ^ a) + ~((~a & d) * 2) + (a * 2 ^ d ^ -a) + 1 & (-d & ~d) + d) * 2 - ((-d & ~d) + d ^ ((~a * 2 + 1 ^ d ^ -a) - (~((~a & d) * 2) + (d ^ a))) - 1)",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 9,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 54.21686746987952,
                        "opsPercentages": {
                            "arithmetic": 36.84210526315789,
                            "mul": 13.157894736842104,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(((a * 2 | d) - (a * 2 & d) & ~a + 1) - 1) + (((~a & d) * 2 - (~a + 1 | (a * 2 | d) - (a * 2 & d))) - (a ^ d)) * 2 & (-d & ~d) + d * 2) - ((-d & ~d) + d ^ (((a * 2 | d) - (a * 2 & d) & ~a + 1) - 1) + (((~a & d) * 2 - (~a + 1 | (a * 2 | d) - (a * 2 & d))) - (a ^ d)))",
                    "attributes": {
                        "numOps": 62,
                        "nestedExprLevel": 19,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 25.301204819277107,
                        "opsPercentages": {
                            "arithmetic": 33.87096774193548,
                            "mul": 19.35483870967742,
                            "bitwise": 46.774193548387096
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "clang_O3": {
                    "expr": "(~((~a & d) * 2 - (d ^ a)) + (a - 1 ^ a * 2 ^ d) & (~d & -d) + d) * 2 - (((~a & d) * 2 - (d ^ a)) + (a - 1 ^ a * 2 ^ d) ^ (~d & -d) + d)",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 9,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 60.24096385542169,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 15.151515151515152,
                            "bitwise": 51.515151515151516
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d - 1 ^ 0xffffffff) & (d ^ 0xffffffff)) + d & (((((d | (a - (a ^ 0xffffffff)) - 1) - (d & (a - (a ^ 0xffffffff)) - 1) & (a ^ 0xffffffff) + 1) - ((d | (a - (a ^ 0xffffffff)) - 1) - (d & (a - (a ^ 0xffffffff)) - 1) | (a ^ 0xffffffff) + 1)) - ((d & (a ^ 0xffffffff)) * 2 - (d ^ a) ^ 0xffffffff)) - 2 ^ 0xffffffff)) * 2 - (((d - 1 ^ 0xffffffff) & (d ^ 0xffffffff)) + d ^ ((((d | (a - (a ^ 0xffffffff)) - 1) - (d & (a - (a ^ 0xffffffff)) - 1) & (a ^ 0xffffffff) + 1) - ((d | (a - (a ^ 0xffffffff)) - 1) - (d & (a - (a ^ 0xffffffff)) - 1) | (a ^ 0xffffffff) + 1)) - ((d & (a ^ 0xffffffff)) * 2 - (d ^ a) ^ 0xffffffff)) - 2)",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 42,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 2.4096385542168677,
                        "opsPercentages": {
                            "arithmetic": 45.67901234567901,
                            "mul": 3.7037037037037033,
                            "bitwise": 50.617283950617285
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~(d - 1) & ~d) + d & ~((((((a - ~a) - 1 | d) - ((a - ~a) - 1 & d) & ~a + 1) - (((a - ~a) - 1 | d) - ((a - ~a) - 1 & d) | ~a + 1)) - ~((~a & d) * 2 - (d ^ a))) - 2)) * 2 - ((~(d - 1) & ~d) + d ^ (((((a - ~a) - 1 | d) - ((a - ~a) - 1 & d) & ~a + 1) - (((a - ~a) - 1 | d) - ((a - ~a) - 1 & d) | ~a + 1)) - ~((~a & d) * 2 - (d ^ a))) - 2)",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 26,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 2.4096385542168677,
                        "opsPercentages": {
                            "arithmetic": 45.67901234567901,
                            "mul": 3.7037037037037033,
                            "bitwise": 50.617283950617285
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~((~a & d) * 2) + (d ^ a) + 1 + (a * 2 ^ d ^ -a) & (-d & ~d) + d) * 2 - (((~a * 2 + 1 ^ -a ^ d) - ~((~a & d) * 2) + (d ^ a)) - 1 ^ (-d & ~d) + d)",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 10,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 54.21686746987952,
                        "opsPercentages": {
                            "arithmetic": 36.84210526315789,
                            "mul": 13.157894736842104,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 351,
            "gt": {
                "expr": "(((((-c)&b)|(-b))&((c-b)*(b-(c|(b+b))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 10.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ ((((~ (~ (c - 1)) | b) - ~ (~ (c - 1))) & ~ (~ (b - 1))) + ~ (b - 1)) | ((((c & ~ b) - (~ c & b)) & (((b & ~ ((c & ~ ((b | b) + (b & b))) + ((b | b) + (b & b)))) + (b & ~ ((c & ~ ((b | b) + (b & b))) + ((b | b) + (b & b))))) - (b ^ ((c & ~ ((b | b) + (b & b))) + ((b | b) + (b & b)))))) * (((c & ~ b) - (~ c & b)) | (((b & ~ ((c & ~ ((b | b) + (b & b))) + ((b | b) + (b & b)))) + (b & ~ ((c & ~ ((b | b) + (b & b))) + ((b | b) + (b & b))))) - (b ^ ((c & ~ ((b | b) + (b & b))) + ((b | b) + (b & b)))))) + (((c & ~ b) - (~ c & b)) & ~ (((b & ~ ((c & ~ ((b | b) + (b & b))) + ((b | b) + (b & b)))) + (b & ~ ((c & ~ ((b | b) + (b & b))) + ((b | b) + (b & b))))) - (b ^ ((c & ~ ((b | b) + (b & b))) + ((b | b) + (b & b)))))) * (~ ((c & ~ b) - (~ c & b)) & (((b & ~ ((c & ~ ((b | b) + (b & b))) + ((b | b) + (b & b)))) + (b & ~ ((c & ~ ((b | b) + (b & b))) + ((b | b) + (b & b))))) - (b ^ ((c & ~ ((b | b) + (b & b))) + ((b | b) + (b & b)))))))) + ((((~ (~ (c - 1)) | b) - ~ (~ (c - 1))) & ~ (~ (b - 1))) + ~ (b - 1))) + 1",
                "attributes": {
                    "numOps": 199,
                    "nestedExprLevel": 124,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 31.65829145728643,
                        "mul": 1.0050251256281406,
                        "bitwise": 67.33668341708542
                    },
                    "percentageDAGsCancel": 5.128205128205128
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b - 1 & -c & b) - b) + (~(b - 1 & -c & b) + b | (~c + b & (~(b * 2 + (~(b * 2) & c)) & b) * 2 - (b * 2 + (~(b * 2) & c) ^ b)) * ((~b & c) - (~c & b) & (b * 2 + (~(b * 2) & c) ^ b) + ~((~(b * 2 + (~(b * 2) & c)) & b) * 2)) + ((~b & c) - (~c & b) & (~(b * 2 + (~(b * 2) & c)) & b) * 2 - (b * 2 + (~(b * 2) & c) ^ b)) * ((~b & c) - (~c & b) | (~(b * 2 + (~(b * 2) & c)) & b) * 2 - (b * 2 + (~(b * 2) & c) ^ b))) + 1",
                    "attributes": {
                        "numOps": 99,
                        "nestedExprLevel": 32,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 50.25125628140703,
                        "opsPercentages": {
                            "arithmetic": 25.252525252525253,
                            "mul": 22.22222222222222,
                            "bitwise": 52.52525252525253
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_O1": {
                    "expr": "((c - 1 | b) - c) + 1 & b - 1 + 1 + ((~(~b & c) - (~c & b) & (~(~(b * 2) & c) + b * 2 & b) * 2 - ((~(b * 2) & c) + b * 2 ^ b)) * (~(~(~(b * 2) & c) + b * 2 & b) * 2 - ((~(b * 2) & c) + b * 2 ^ b) & (~b & c) - (~c & b)) + ((~(~(b * 2) & c) + b * 2 & b) * 2 - ((~(b * 2) & c) + b * 2 ^ b) | (~b & c) - (~c & b)) * ((~(~(b * 2) & c) + b * 2 & b) * 2 - ((~(b * 2) & c) + b * 2 ^ b) & (~b & c) - (~c & b)) | ~(~(b - 1) + ((c - 1 | b) - c) + 1 & b - 1) ) + ~(b - 1)",
                    "attributes": {
                        "numOps": 111,
                        "nestedExprLevel": 30,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 44.221105527638194,
                        "opsPercentages": {
                            "arithmetic": 27.927927927927925,
                            "mul": 19.81981981981982,
                            "bitwise": 52.25225225225225
                        },
                        "percentageDAGsCancel": 2.380952380952381
                    }
                },
                "clang_O3": {
                    "expr": "((~(~b & c) - (~c & b) & (~(~(b * 2) & c) + b * 2 & b) * 2 - ((~(b * 2) & c) + b * 2 ^ b)) * (~(~(~(b * 2) & c) + b * 2 & b) * 2 - ((~(b * 2) & c) + b * 2 ^ b) & (~b & c) - (~c & b)) + ((~(~(b * 2) & c) + b * 2 & b) * 2 - ((~(b * 2) & c) + b * 2 ^ b) | (~b & c) - (~c & b)) * ((~(~(b * 2) & c) + b * 2 & b) * 2 - ((~(b * 2) & c) + b * 2 ^ b) & (~b & c) - (~c & b)) | ~(b - 1 & -c & b) - b) + (b - 1 & -c & b) - b + 1",
                    "attributes": {
                        "numOps": 103,
                        "nestedExprLevel": 28,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 48.24120603015075,
                        "opsPercentages": {
                            "arithmetic": 24.271844660194176,
                            "mul": 21.35922330097087,
                            "bitwise": 54.36893203883495
                        },
                        "percentageDAGsCancel": 2.7027027027027026
                    }
                },
                "clang_default": {
                    "expr": "(((c - 1 | b) - (c - 1) & b - 1) + (b - 1 ^ 0xffffffff) ^ 0xffffffff | ((c & (b ^ 0xffffffff)) - ((c ^ 0xffffffff) & b) & ((b & ((c & (b * 2 ^ 0xffffffff)) + b * 2 ^ 0xffffffff)) + (b & ((c & (b * 2 ^ 0xffffffff)) + b * 2 ^ 0xffffffff))) - (b ^ (c & (b * 2 ^ 0xffffffff)) + b * 2)) * ((c & (b ^ 0xffffffff)) - ((c ^ 0xffffffff) & b) | ((b & ((c & (b * 2 ^ 0xffffffff)) + b * 2 ^ 0xffffffff)) + (b & ((c & (b * 2 ^ 0xffffffff)) + b * 2 ^ 0xffffffff))) - (b ^ (c & (b * 2 ^ 0xffffffff)) + b * 2)) + ((c & (b ^ 0xffffffff)) - ((c ^ 0xffffffff) & b) & (((b & ((c & (b * 2 ^ 0xffffffff)) + b * 2 ^ 0xffffffff)) + (b & ((c & (b * 2 ^ 0xffffffff)) + b * 2 ^ 0xffffffff))) - (b ^ (c & (b * 2 ^ 0xffffffff)) + b * 2) ^ 0xffffffff)) * (((c & (b ^ 0xffffffff)) - ((c ^ 0xffffffff) & b) ^ 0xffffffff) & ((b & ((c & (b * 2 ^ 0xffffffff)) + b * 2 ^ 0xffffffff)) + (b & ((c & (b * 2 ^ 0xffffffff)) + b * 2 ^ 0xffffffff))) - (b ^ (c & (b * 2 ^ 0xffffffff)) + b * 2))) + ((c - 1 | b) - (c - 1) & b - 1) + (b - 1 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 139,
                        "nestedExprLevel": 57,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 30.15075376884422,
                        "opsPercentages": {
                            "arithmetic": 28.05755395683453,
                            "mul": 18.705035971223023,
                            "bitwise": 53.23741007194245
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "msvc_default": {
                    "expr": "(~(((c - 1 | b) - (c + -1) & b - 1) + ~(b - 1)) | ((~b & c) - (~c & b) & ((~((~(b * 2) & c) + b * 2) & b) + (~((~(b * 2) & c) + b * 2) & b)) - ((~(b * 2) & c) + b * 2 ^ b)) * ((~b & c) - (~c & b) | ((~((~(b * 2) & c) + b * 2) & b) + (~((~(b * 2) & c) + b * 2) & b)) - ((~(b * 2) & c) + b * 2 ^ b)) + ((~b & c) - (~c & b) & ~(((~((~(b * 2) & c) + b * 2) & b) + (~((~(b * 2) & c) + b * 2) & b)) - ((~(b * 2) & c) + b * 2 ^ b))) * (~((~b & c) - (~c & b)) & ((~((~(b * 2) & c) + b * 2) & b) + (~((~(b * 2) & c) + b * 2) & b)) - ((~(b * 2) & c) + b * 2 ^ b))) + 1 + ((c - 1 | b) - (c + -1) & b - 1) + ~(b - 1)",
                    "attributes": {
                        "numOps": 141,
                        "nestedExprLevel": 54,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 29.145728643216078,
                        "opsPercentages": {
                            "arithmetic": 29.078014184397162,
                            "mul": 18.439716312056735,
                            "bitwise": 52.4822695035461
                        },
                        "percentageDAGsCancel": 5.405405405405405
                    }
                },
                "gcc_O3": {
                    "expr": "((~(~(~(b * 2) & c) + b * 2 & b) * 2 + (~(b * 2) & c) + b * 2 ^ b & (~b & c) - (~c & b)) * (~c + b & (~(~(b * 2) & c) + b * 2 & b) * 2 - (~(b * 2) & c) + b * 2 ^ b) + ((~b & c) - (~c & b) | (~(~(b * 2) & c) + b * 2 & b) * 2 - (~(b * 2) & c) + b * 2 ^ b) * ((~b & c) - (~c & b) & (~(~(b * 2) & c) + b * 2 & b) * 2 - (~(b * 2) & c) + b * 2 ^ b) | ~b - 1 & b & -c + b) + 1 + (b - 1 & b & -c - b)",
                    "attributes": {
                        "numOps": 99,
                        "nestedExprLevel": 22,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 50.25125628140703,
                        "opsPercentages": {
                            "arithmetic": 25.252525252525253,
                            "mul": 22.22222222222222,
                            "bitwise": 52.52525252525253
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                }
            }
        },
        {
            "num": 352,
            "gt": {
                "expr": "(((~(d-(b+(b&b))))*(-(c^(c^d)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 12.5,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((((((b ^ ~ ((~ b | b) - ~ b)) + ((b | ((~ b | b) - ~ b)) + (b | ((~ b | b) - ~ b)))) + 1) - d) - 1) & (~ ((c | (((c - d) - ((c | ~ d) + (c | ~ d))) - 2)) - (c & (((c - d) - ((c | ~ d) + (c | ~ d))) - 2))) + 1)) * ((((((b ^ ~ ((~ b | b) - ~ b)) + ((b | ((~ b | b) - ~ b)) + (b | ((~ b | b) - ~ b)))) + 1) - d) - 1) | (~ ((c | (((c - d) - ((c | ~ d) + (c | ~ d))) - 2)) - (c & (((c - d) - ((c | ~ d) + (c | ~ d))) - 2))) + 1)) + ((((((b ^ ~ ((~ b | b) - ~ b)) + ((b | ((~ b | b) - ~ b)) + (b | ((~ b | b) - ~ b)))) + 1) - d) - 1) & ~ (~ ((c | (((c - d) - ((c | ~ d) + (c | ~ d))) - 2)) - (c & (((c - d) - ((c | ~ d) + (c | ~ d))) - 2))) + 1)) * (~ (((((b ^ ~ ((~ b | b) - ~ b)) + ((b | ((~ b | b) - ~ b)) + (b | ((~ b | b) - ~ b)))) + 1) - d) - 1) & (~ ((c | (((c - d) - ((c | ~ d) + (c | ~ d))) - 2)) - (c & (((c - d) - ((c | ~ d) + (c | ~ d))) - 2))) + 1))",
                "attributes": {
                    "numOps": 177,
                    "nestedExprLevel": 97,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 41.24293785310734,
                        "mul": 1.1299435028248588,
                        "bitwise": 57.6271186440678
                    },
                    "percentageDAGsCancel": 9.67741935483871
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~d | c) * 2 + ~c + d + 2 ^ c) + 1 & d + ~(b * 2) + 1) * ((b * 2 - d) - 1 & (((~d | c) * -2 - (~c + d)) - 3 ^ c) - 1) + ((b * 2 - d) - 1 & ((~d | c) * 2 + ~c + d + 2 ^ c) + 1) * (((~d | c) * 2 + ~c + d + 2 ^ c) + 1 | (b * 2 - d) - 1)",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 13,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 67.79661016949152,
                        "opsPercentages": {
                            "arithmetic": 45.614035087719294,
                            "mul": 17.543859649122805,
                            "bitwise": 36.84210526315789
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                },
                "msvc_O1": {
                    "expr": "((b * 2 - d) - 1 & ((c - ((~d | c) * 2 + 2)) - d & c) - ((c - ((~d | c) * 2 + 2)) - d | c)) * ((b * 2 - d) - 1 | ((c - ((~d | c) * 2 + 2)) - d & c) - ((c - ((~d | c) * 2 + 2)) - d | c)) + (~(b * 2 - d) - 1 & ((c - ((~d | c) * 2 + 2)) - d & c) - ((c - ((~d | c) * 2 + 2)) - d | c)) * (~((c - ((~d | c) * 2 + 2)) - d & c) - ((c - ((~d | c) * 2 + 2)) - d | c) & (b * 2 - d) - 1)",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 30,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 54.23728813559322,
                        "opsPercentages": {
                            "arithmetic": 45.67901234567901,
                            "mul": 17.28395061728395,
                            "bitwise": 37.03703703703704
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "clang_O3": {
                    "expr": "(d + b * -2 & c + 1) * (-c - 2 & ~d + b * 2) + (c + 1 | ~d + b * 2) * (c + 1 & ~d + b * 2)",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 3,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 86.4406779661017,
                        "opsPercentages": {
                            "arithmetic": 45.83333333333333,
                            "mul": 25.0,
                            "bitwise": 29.166666666666668
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "clang_default": {
                    "expr": "(((b ^ (b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + (b | (b ^ 0xffffffff | b) - (b ^ 0xffffffff)) + (b | (b ^ 0xffffffff | b) - (b ^ 0xffffffff))) - d & ((c | ((c - d) - ((c | d ^ 0xffffffff) + (c | d ^ 0xffffffff))) - 2) - (c & ((c - d) - ((c | d ^ 0xffffffff) + (c | d ^ 0xffffffff))) - 2) ^ 0xffffffff) + 1) * (((b ^ (b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + (b | (b ^ 0xffffffff | b) - (b ^ 0xffffffff)) + (b | (b ^ 0xffffffff | b) - (b ^ 0xffffffff))) - d | ((c | ((c - d) - ((c | d ^ 0xffffffff) + (c | d ^ 0xffffffff))) - 2) - (c & ((c - d) - ((c | d ^ 0xffffffff) + (c | d ^ 0xffffffff))) - 2) ^ 0xffffffff) + 1) + (((b ^ (b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + (b | (b ^ 0xffffffff | b) - (b ^ 0xffffffff)) + (b | (b ^ 0xffffffff | b) - (b ^ 0xffffffff))) - d & (((c | ((c - d) - ((c | d ^ 0xffffffff) + (c | d ^ 0xffffffff))) - 2) - (c & ((c - d) - ((c | d ^ 0xffffffff) + (c | d ^ 0xffffffff))) - 2) ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((((b ^ (b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) + (b | (b ^ 0xffffffff | b) - (b ^ 0xffffffff)) + (b | (b ^ 0xffffffff | b) - (b ^ 0xffffffff))) - d ^ 0xffffffff ) & ((c | ((c - d) - ((c | d ^ 0xffffffff) + (c | d ^ 0xffffffff))) - 2) - (c & ((c - d) - ((c | d ^ 0xffffffff) + (c | d ^ 0xffffffff))) - 2) ^ 0xffffffff) + 1)",
                    "attributes": {
                        "numOps": 169,
                        "nestedExprLevel": 71,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 4.519774011299435,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 1.183431952662722,
                            "bitwise": 60.35502958579882
                        },
                        "percentageDAGsCancel": 10.344827586206897
                    }
                },
                "msvc_default": {
                    "expr": "(((~(-~b - 1) ^ b) + (-~b - 1 | b) + (-~b - 1 | b)) - d & ~((((c - d) - ((~d | c) + (~d | c))) - 2 | c) - (((c - d) - ((~d | c) + (~d | c))) - 2 & c)) + 1) * (((~(-~b - 1) ^ b) + (-~b - 1 | b) + (-~b - 1 | b)) - d | ~((((c - d) - ((~d | c) + (~d | c))) - 2 | c) - (((c - d) - ((~d | c) + (~d | c))) - 2 & c )) + 1) + (((~(-~b - 1) ^ b) + (-~b - 1 | b) + (-~b - 1 | b)) - d & ~(~((((c - d) - ((~d | c) + (~d | c))) - 2 | c) - (((c - d) - ((~d | c) + (~d | c))) - 2 & c) ) + 1)) * (~(((~(-~b - 1) ^ b) + (-~b - 1 | b) + (-~b - 1 | b) ) - d) & ~((((c - d) - ((~d | c) + (~d | c))) - 2 | c) - (((c - d) - ((~d | c) + (~d | c))) - 2 & c)) + 1)",
                    "attributes": {
                        "numOps": 157,
                        "nestedExprLevel": 55,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 11.299435028248588,
                        "opsPercentages": {
                            "arithmetic": 49.044585987261144,
                            "mul": 1.2738853503184715,
                            "bitwise": 49.681528662420384
                        },
                        "percentageDAGsCancel": 13.793103448275861
                    }
                },
                "gcc_O3": {
                    "expr": "((-~c + d + (~d | c) * 2 - 3 ^ c) - 1 & (b * 2 - d) - 1) * (d + b * -2 & (~c + d + (~d | c) * 2 + 2 ^ c) + 1) + ((b * 2 - d) - 1 & (~c + d + (~d | c) * 2 + 2 ^ c) + 1) * ((b * 2 - d) - 1 | (~c + d + (~d | c) * 2 + 2 ^ c) + 1)",
                    "attributes": {
                        "numOps": 56,
                        "nestedExprLevel": 11,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 68.36158192090396,
                        "opsPercentages": {
                            "arithmetic": 46.42857142857143,
                            "mul": 17.857142857142858,
                            "bitwise": 35.714285714285715
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                }
            }
        },
        {
            "num": 353,
            "gt": {
                "expr": "((~(d&((a-d)*a))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 25.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "- ((~ d | ((((a + ~ d) + 1) & a) * (((a + ~ d) + 1) | a) + (((a + ~ d) + 1) & ~ a) * (~ ((a + ~ d) + 1) & a))) - ~ d) - 1",
                "attributes": {
                    "numOps": 27,
                    "nestedExprLevel": 13,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 7.4074074074074066,
                        "bitwise": 48.148148148148145
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((d - a) - 1 & a) * (a + ~d + 1 & ~a) + (a + ~d + 1 & a) * (a + ~d + 1 | a) & d)",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 5,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 22.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 9.523809523809524,
                            "bitwise": 47.61904761904761
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "msvc_O1": {
                    "expr": "(~d - ((~a & a + 1 + ~d) * (~a + 1 + ~d & a) + (a + 1 + ~d | a) * (a + 1 + ~d & a) | ~d)) + -1",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 5,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 7.4074074074074066,
                            "bitwise": 48.148148148148145
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "clang_O3": {
                    "expr": "~((~a - d & a) * (~a & a - d) + (a - d | a) * (a - d & a) & d)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 44.44444444444444,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 13.333333333333334,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((d ^ 0xffffffff | (a + (d ^ 0xffffffff) + 1 & a) * (a + (d ^ 0xffffffff) + 1 | a) + (a + (d ^ 0xffffffff) + 1 & (a ^ 0xffffffff)) * ((a + (d ^ 0xffffffff) + 1 ^ 0xffffffff) & a)) - (d ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 10,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 7.4074074074074066,
                            "bitwise": 48.148148148148145
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((~d | (a + 1 + ~d & a) * (a + 1 + ~d | a) + (a + 1 + ~d & ~a) * (~(a + 1 + ~d) & a)) - ~d)",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 6,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 7.4074074074074066,
                            "bitwise": 48.148148148148145
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(((d - a) - 1 & a) * (~a & a - d) + (a - d | a) * (a - d & a) & d)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 5,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 44.44444444444444,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 13.333333333333334,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 354,
            "gt": {
                "expr": "((-((b|((c+d)*c))*((d&d)-b))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 28.57142857142857,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "~ (((((b & ~ (((((c | d) << 1) - (c ^ d)) & c) * ((((c | d) << 1) - (c ^ d)) | c) + ((((c | d) << 1) - (c ^ d)) & ~ c) * (~ (((c | d) << 1) - (c ^ d)) & c))) + (((((c | d) << 1) - (c ^ d)) & c) * ((((c | d) << 1) - (c ^ d)) | c) + ((((c | d) << 1) - (c ^ d)) & ~ c) * (~ (((c | d) << 1) - (c ^ d)) & c))) & (((((~ d | d) + d) + 1) ^ b) - ((~ (((~ d | d) + d) + 1) & b) << 1))) * (((b & ~ (((((c | d) << 1) - (c ^ d)) & c) * ((((c | d) << 1) - (c ^ d)) | c) + ((((c | d) << 1) - (c ^ d)) & ~ c) * (~ (((c | d) << 1) - (c ^ d)) & c))) + (((((c | d) << 1) - (c ^ d)) & c) * ((((c | d) << 1) - (c ^ d)) | c) + ((((c | d) << 1) - (c ^ d)) & ~ c) * (~ (((c | d) << 1) - (c ^ d)) & c))) | (((((~ d | d) + d) + 1) ^ b) - ((~ (((~ d | d) + d) + 1) & b) << 1))) + (((b & ~ (((((c | d) << 1) - (c ^ d)) & c) * ((((c | d) << 1) - (c ^ d)) | c) + ((((c | d) << 1) - (c ^ d)) & ~ c) * (~ (((c | d) << 1) - (c ^ d)) & c))) + (((((c | d) << 1) - (c ^ d)) & c) * ((((c | d) << 1) - (c ^ d)) | c) + ((((c | d) << 1) - (c ^ d)) & ~ c) * (~ (((c | d) << 1) - (c ^ d)) & c))) & ~ (((((~ d | d) + d) + 1) ^ b) - ((~ (((~ d | d) + d) + 1) & b) << 1))) * (~ ((b & ~ (((((c | d) << 1) - (c ^ d)) & c) * ((((c | d) << 1) - (c ^ d)) | c) + ((((c | d) << 1) - (c ^ d)) & ~ c) * (~ (((c | d) << 1) - (c ^ d)) & c))) + (((((c | d) << 1) - (c ^ d)) & c) * ((((c | d) << 1) - (c ^ d)) | c) + ((((c | d) << 1) - (c ^ d)) & ~ c) * (~ (((c | d) << 1) - (c ^ d)) & c))) & (((((~ d | d) + d) + 1) ^ b) - ((~ (((~ d | d) + d) + 1) & b) << 1)))) - 1)",
                "attributes": {
                    "numOps": 275,
                    "nestedExprLevel": 184,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 24.0,
                        "mul": 6.545454545454546,
                        "bitwise": 69.45454545454545
                    },
                    "percentageDAGsCancel": 2.7777777777777777
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(((d ^ b) + (~d & b) * -2 & ~(((c ^ d) + ~((c | d) * 2) & c) * ((c | d) * 2 - (c ^ d) & ~c) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + (~(((c ^ d) + ~((c | d) * 2) & c) * ((c | d) * 2 - (c ^ d) & ~c) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c)) & b))) * ((~(((c ^ d) + ~((c | d) * 2) & c) * ((c | d) * 2 - (c ^ d) & ~c) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c)) & b) + ((c ^ d) + ~((c | d) * 2) & c) * ((c | d) * 2 - (c ^ d) & ~c) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) & (~d & b) * 2 + ~(d ^ b)) + ((~(((c ^ d) + ~((c | d) * 2) & c) * ((c | d) * 2 - (c ^ d) & ~c) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c)) & b) + ((c ^ d) + ~((c | d) * 2) & c) * ((c | d) * 2 - (c ^ d) & ~c) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) & (d ^ b) + (~d & b) * -2) * ((d ^ b) + (~d & b) * -2 | (~(((c ^ d) + ~((c | d) * 2) & c) * ((c | d) * 2 - (c ^ d) & ~c) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c)) & b) + ((c ^ d) + ~((c | d) * 2) & c) * ((c | d) * 2 - (c ^ d) & ~c) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c)))",
                    "attributes": {
                        "numOps": 245,
                        "nestedExprLevel": 83,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 10.909090909090908,
                        "opsPercentages": {
                            "arithmetic": 21.63265306122449,
                            "mul": 22.040816326530614,
                            "bitwise": 56.326530612244895
                        },
                        "percentageDAGsCancel": 2.7027027027027026
                    }
                },
                "msvc_O1": {
                    "expr": "-((~(~(c | d) * 2 - (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d)) + (~(((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c) + (~(c | d) * 2 - (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d))) & b) + ((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c) & (b ^ d) + (~d & b) * -2) * (~(b ^ d) + (~d & b) * -2 & (~(c | d) * 2 - (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d)) + (~(((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c) + (~(c | d) * 2 - (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d))) & b) + ((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c)) + ((b ^ d) + (~d & b) * -2 | (~(c | d) * 2 - (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d)) + (~(((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c) + (~(c | d) * 2 - (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d))) & b) + ((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c)) * ((b ^ d) + (~d & b) * -2 & (~(c | d) * 2 - (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d)) + (~(((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c) + (~(c | d) * 2 - (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d))) & b) + ((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c)))",
                    "attributes": {
                        "numOps": 246,
                        "nestedExprLevel": 82,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 10.545454545454545,
                        "opsPercentages": {
                            "arithmetic": 21.951219512195124,
                            "mul": 21.951219512195124,
                            "bitwise": 56.09756097560976
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-((~(~(~(d | c) * 2 - (d ^ c) & c) * (~c & (d | c) * 2 - (d ^ c)) + ((d | c) * 2 - (d ^ c) | c) * ((d | c) * 2 - (d ^ c) & c) & b) + (~(d | c) * 2 - (d ^ c) & c) * (~c & (d | c) * 2 - (d ^ c)) + ((d | c) * 2 - (d ^ c) | c) * ((d | c) * 2 - (d ^ c) & c) & (d ^ b) + (~d & b) * -2) * (~(d ^ b) + (~d & b) * -2 & (~(~(d | c) * 2 - (d ^ c) & c) * (~c & (d | c) * 2 - (d ^ c)) + ((d | c) * 2 - (d ^ c) | c) * ((d | c) * 2 - (d ^ c) & c) & b) + (~(d | c) * 2 - (d ^ c) & c) * (~c & (d | c) * 2 - (d ^ c)) + ((d | c) * 2 - (d ^ c) | c) * ((d | c) * 2 - (d ^ c) & c)) + ((~(~(d | c) * 2 - (d ^ c) & c) * (~c & (d | c) * 2 - (d ^ c)) + ((d | c) * 2 - (d ^ c) | c) * ((d | c) * 2 - (d ^ c) & c) & b) + (~(d | c) * 2 - (d ^ c) & c) * (~c & (d | c) * 2 - (d ^ c)) + ((d | c) * 2 - (d ^ c) | c) * ((d | c) * 2 - (d ^ c) & c) | (d ^ b) + (~d & b) * -2) * ((~(~(d | c) * 2 - (d ^ c) & c) * (~c & (d | c) * 2 - (d ^ c)) + ((d | c) * 2 - (d ^ c) | c) * ((d | c) * 2 - (d ^ c) & c) & b) + (~(d | c) * 2 - (d ^ c) & c) * (~c & (d | c) * 2 - (d ^ c)) + ((d | c) * 2 - (d ^ c) | c) * ((d | c) * 2 - (d ^ c) & c) & (d ^ b) + (~d & b) * -2))",
                    "attributes": {
                        "numOps": 246,
                        "nestedExprLevel": 78,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 10.545454545454545,
                        "opsPercentages": {
                            "arithmetic": 21.951219512195124,
                            "mul": 21.951219512195124,
                            "bitwise": 56.09756097560976
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b & (((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & (c ^ 0xffffffff)) * (((c | d) * 2 - (c ^ d) ^ 0xffffffff) & c) ^ 0xffffffff)) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & (c ^ 0xffffffff)) * (((c | d) * 2 - (c ^ d) ^ 0xffffffff) & c) & ((d ^ 0xffffffff | d) + d + 1 ^ b) + (((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff) & b) * -2) * ((b & (((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & (c ^ 0xffffffff)) * (((c | d) * 2 - (c ^ d) ^ 0xffffffff) & c) ^ 0xffffffff)) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & (c ^ 0xffffffff)) * (((c | d) * 2 - (c ^ d) ^ 0xffffffff) & c) | ((d ^ 0xffffffff | d) + d + 1 ^ b) + (((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff) & b) * -2) + ((b & (((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & (c ^ 0xffffffff)) * (((c | d) * 2 - (c ^ d) ^ 0xffffffff) & c) ^ 0xffffffff)) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & (c ^ 0xffffffff)) * (((c | d) * 2 - (c ^ d) ^ 0xffffffff) & c) & (((d ^ 0xffffffff | d) + d + 1 ^ b) + (((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff) & b) * -2 ^ 0xffffffff )) * (((b & (((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & (c ^ 0xffffffff)) * (((c | d) * 2 - (c ^ d) ^ 0xffffffff) & c) ^ 0xffffffff)) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & (c ^ 0xffffffff)) * (((c | d) * 2 - (c ^ d) ^ 0xffffffff) & c) ^ 0xffffffff) & ((d ^ 0xffffffff | d) + d + 1 ^ b) + (((d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff) & b) * -2)) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 279,
                        "nestedExprLevel": 101,
                        "numDAGs": 38,
                        "percentDecreaseByOps": -1.4545454545454546,
                        "opsPercentages": {
                            "arithmetic": 25.089605734767023,
                            "mul": 19.35483870967742,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 2.631578947368421
                    }
                },
                "msvc_default": {
                    "expr": "~(((~(((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & ~c) * (~((c | d) * 2 - (c ^ d)) & c)) & b) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & ~c) * (~((c | d) * 2 - (c ^ d)) & c) & (d ^ b) + (~d & b) * -2) * ((~(((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & ~c) * (~((c | d) * 2 - (c ^ d)) & c)) & b) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & ~c) * (~((c | d) * 2 - (c ^ d)) & c) | (d ^ b) + (~d & b) * -2) + -1 + ((~(((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & ~c) * (~((c | d) * 2 - (c ^ d)) & c)) & b) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & ~c) * (~((c | d) * 2 - (c ^ d)) & c) & ~((d ^ b) + (~d & b) * -2)) * (~((~(((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & ~c) * (~((c | d) * 2 - (c ^ d)) & c)) & b) + ((c | d) * 2 - (c ^ d) & c) * ((c | d) * 2 - (c ^ d) | c) + ((c | d) * 2 - (c ^ d) & ~c) * (~((c | d) * 2 - (c ^ d)) & c)) & (d ^ b) + (~d & b) * -2))",
                    "attributes": {
                        "numOps": 248,
                        "nestedExprLevel": 92,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 9.818181818181818,
                        "opsPercentages": {
                            "arithmetic": 22.177419354838708,
                            "mul": 21.774193548387096,
                            "bitwise": 56.048387096774185
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-((~(d ^ b) + (~d & b) * 2 & (~(~(c | d) * 2 + (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d)) + ((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c) & b) + (~(c | d) * 2 + (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d)) + ((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c)) * (~(~(~(c | d) * 2 + (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d)) + ((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c) & b) + (~(c | d) * 2 + (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d)) + ((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c) & (d ^ b) + (~d & b) * -2) + ((~(~(c | d) * 2 + (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d)) + ((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c) & b) + (~(c | d) * 2 + (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d)) + ((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c) & (d ^ b) + (~d & b) * -2) * ((~(~(c | d) * 2 + (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d)) + ((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c) & b) + (~(c | d) * 2 + (c ^ d) & c) * (~c & (c | d) * 2 - (c ^ d)) + ((c | d) * 2 - (c ^ d) | c) * ((c | d) * 2 - (c ^ d) & c) | (d ^ b) + (~d & b) * -2))",
                    "attributes": {
                        "numOps": 245,
                        "nestedExprLevel": 78,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 10.909090909090908,
                        "opsPercentages": {
                            "arithmetic": 21.63265306122449,
                            "mul": 22.040816326530614,
                            "bitwise": 56.326530612244895
                        },
                        "percentageDAGsCancel": 5.0
                    }
                }
            }
        },
        {
            "num": 355,
            "gt": {
                "expr": "((-(~((-(d&e))^((d^d)&((-d)|d))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "(((~ (((~ d | e) + d) + 1) + 1) | ((~ ((d | d) - (d & d)) | ((((~ d + 1) + d) + 1) + ((- (~ d + 1) - 1) | (- d - 1)))) - ~ ((d | d) - (d & d)))) - ((~ (((~ d | e) + d) + 1) + 1) & ((~ ((d | d) - (d & d)) | ((((~ d + 1) + d) + 1) + ((- (~ d + 1) - 1) | (- d - 1)))) - ~ ((d | d) - (d & d))))) + 1",
                "attributes": {
                    "numOps": 60,
                    "nestedExprLevel": 34,
                    "numDAGs": 25,
                    "opsPercentages": {
                        "arithmetic": 53.333333333333336,
                        "mul": 0.0,
                        "bitwise": 46.666666666666664
                    },
                    "percentageDAGsCancel": 32.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(d + (~d | e))",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 3,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 93.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~((~d | e) + 1 + d) + 2",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 90.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-((~d | e) + d)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 3,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 93.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((d ^ 0xffffffff | e) + d + 1 ^ 0xffffffff) + 2",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 90.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~((~d | e) + 1 + d) + 2",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 90.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "gcc_O3": {
                    "expr": "-((~d | e) + d)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 3,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 93.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 356,
            "gt": {
                "expr": "((((c+(d*d))-(-d))*(((c-b)^d)*(d^c))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 33.33333333333333,
                        "bitwise": 22.22222222222222
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((c - ~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - 1) ^ ~ (d - 1)) - ((~ ((c - ~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - 1) & ~ (d - 1)) << 1)) & (((((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) & (((d - c) - ((d | ~ c) << 1)) - 2)) * ((((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) | (((d - c) - ((d | ~ c) << 1)) - 2)) + ((((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) & ~ (((d - c) - ((d | ~ c) << 1)) - 2)) * (~ (((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) & (((d - c) - ((d | ~ c) << 1)) - 2)))) * (((((c - ~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - 1) ^ ~ (d - 1)) - ((~ ((c - ~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - 1) & ~ (d - 1)) << 1)) | (((((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) & (((d - c) - ((d | ~ c) << 1)) - 2)) * ((((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) | (((d - c) - ((d | ~ c) << 1)) - 2)) + ((((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) & ~ (((d - c) - ((d | ~ c) << 1)) - 2)) * (~ (((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) & (((d - c) - ((d | ~ c) << 1)) - 2)))) + (((((c - ~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - 1) ^ ~ (d - 1)) - ((~ ((c - ~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - 1) & ~ (d - 1)) << 1)) & ~ (((((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) & (((d - c) - ((d | ~ c) << 1)) - 2)) * ((((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) | (((d - c) - ((d | ~ c) << 1)) - 2)) + ((((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) & ~ (((d - c) - ((d | ~ c) << 1)) - 2)) * (~ (((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) & (((d - c) - ((d | ~ c) << 1)) - 2)))) * (~ ((((c - ~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - 1) ^ ~ (d - 1)) - ((~ ((c - ~ ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - 1) & ~ (d - 1)) << 1)) & (((((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) & (((d - c) - ((d | ~ c) << 1)) - 2)) * ((((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) | (((d - c) - ((d | ~ c) << 1)) - 2)) + ((((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) & ~ (((d - c) - ((d | ~ c) << 1)) - 2)) * (~ (((((c + ~ b) + 1) - d) - ((((c + ~ b) + 1) | ~ d) + (((c + ~ b) + 1) | ~ d))) - 2) & (((d - c) - ((d | ~ c) << 1)) - 2))))",
                "attributes": {
                    "numOps": 545,
                    "nestedExprLevel": 274,
                    "numDAGs": 50,
                    "opsPercentages": {
                        "arithmetic": 45.68807339449542,
                        "mul": 4.770642201834862,
                        "bitwise": 49.54128440366973
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((((d - c) + (~c | d) * -2) - 2 & (~d | c + ~b + 1) * 2 + (b - c) + d + 1) * ((((c + ~b) - d) + (~d | c + ~b + 1) * -2) - 1 & (~c | d) * 2 + ~d + c + 2) + ((((c + ~b) - d) + (~d | c + ~b + 1) * -2) - 1 & ((d - c) + (~c | d) * -2) - 2) * (((d - c) + (~c | d) * -2) - 2 | (((c + ~b) - d) + (~d | c + ~b + 1) * -2) - 1) & (~(d * d) + ~c + 1 ^ -d) + (-d & ~(d * d) + ~c + 1) * 2) * (((c - ~(d * d)) - 1 ^ -d) + (-d & ~(d * d) + ~c + 1) * -2 & ~((((d - c) + (~c | d) * -2) - 2 & (~d | c + ~b + 1) * 2 + (b - c) + d + 1) * ((((c + ~b) - d) + (~d | c + ~b + 1) * -2) - 1 & (~c | d) * 2 + ~d + c + 2) + ((((c + ~b) - d) + (~d | c + ~b + 1) * -2) - 1 & ((d - c) + (~c | d) * -2) - 2) * (((d - c) + (~c | d) * -2) - 2 | (((c + ~b) - d) + (~d | c + ~b + 1) * -2) - 1))) + (((c - ~(d * d)) - 1 ^ -d) + (-d & ~(d * d) + ~c + 1) * -2 & (((d - c) + (~c | d) * -2) - 2 & (~d | c + ~b + 1) * 2 + (b - c) + d + 1) * ((((c + ~b) - d) + (~d | c + ~b + 1) * -2) - 1 & (~c | d) * 2 + ~d + c + 2) + ((((c + ~b) - d) + (~d | c + ~b + 1) * -2) - 1 & ((d - c) + (~c | d) * -2) - 2) * (((d - c) + (~c | d) * -2) - 2 | (((c + ~b) - d) + (~d | c + ~b + 1) * -2) - 1)) * ((((d - c) + (~c | d) * -2) - 2 & (~d | c + ~b + 1) * 2 + (b - c) + d + 1) * ((((c + ~b) - d) + (~d | c + ~b + 1) * -2) - 1 & (~c | d) * 2 + ~d + c + 2) + ((((c + ~b) - d) + (~d | c + ~b + 1) * -2) - 1 & ((d - c) + (~c | d) * -2) - 2) * (((d - c) + (~c | d) * -2) - 2 | (((c + ~b) - d) + (~d | c + ~b + 1) * -2) - 1) | ((c - ~(d * d)) - 1 ^ -d) + (-d & ~(d * d) + ~c + 1) * -2)",
                    "attributes": {
                        "numOps": 396,
                        "nestedExprLevel": 98,
                        "numDAGs": 54,
                        "percentDecreaseByOps": 27.339449541284406,
                        "opsPercentages": {
                            "arithmetic": 51.515151515151516,
                            "mul": 13.636363636363635,
                            "bitwise": 34.84848484848485
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~(d - 1) ^ d * d + c) + (~d * d + c & ~(d - 1)) * -2 & (c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d) & ((d + (~c | d) * -2) - c) - 2) * (c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d) | ((d + (~c | d) * -2) - c) - 2) + (~((d + (~c | d) * -2) - c) - 2 & c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d)) * (~c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d) & ((d + (~c | d) * -2) - c) - 2)) * (~(c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d) & ((d + (~c | d) * -2) - c) - 2) * (c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d) | ((d + (~c | d) * -2) - c) - 2) + (~((d + (~c | d) * -2) - c) - 2 & c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d)) * (~c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d) & ((d + (~c | d) * -2) - c) - 2) & (~(d - 1) ^ d * d + c) + (~d * d + c & ~(d - 1)) * -2) + ((c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d) & ((d + (~c | d) * -2) - c) - 2) * (c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d) | ((d + (~c | d) * -2) - c) - 2) + (~((d + (~c | d) * -2) - c) - 2 & c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d)) * (~c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d) & ((d + (~c | d) * -2) - c) - 2) | (~(d - 1) ^ d * d + c) + (~d * d + c & ~(d - 1)) * -2) * ((c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d) & ((d + (~c | d) * -2) - c) - 2) * (c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d) | ((d + (~c | d) * -2) - c) - 2) + (~((d + (~c | d) * -2) - c) - 2 & c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d)) * (~c + -1 + ((~b + (c + 1 + ~b | ~d) * -2) - d) & ((d + (~c | d) * -2) - c) - 2) & (~(d - 1) ^ d * d + c) + (~d * d + c & ~(d - 1)) * -2)",
                    "attributes": {
                        "numOps": 421,
                        "nestedExprLevel": 94,
                        "numDAGs": 51,
                        "percentDecreaseByOps": 22.752293577981654,
                        "opsPercentages": {
                            "arithmetic": 52.49406175771971,
                            "mul": 12.826603325415679,
                            "bitwise": 34.679334916864605
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(d * d + c ^ -d) + (~d * d + c & -d) * -2 & (1 - ((c - b) - d) + (c - b | ~d) * -2 & (d - c) + (~c | d) * -2 - 2) * (1 - (d - c) + (~c | d) * -2 & ((c - b) - d) + (c - b | ~d) * -2 - 2) + (((c - b) - d) + (c - b | ~d) * -2 - 2 | (d - c) + (~c | d) * -2 - 2) * (((c - b) - d) + (c - b | ~d) * -2 - 2 & (d - c) + (~c | d) * -2 - 2)) * (~(1 - ((c - b) - d) + (c - b | ~d) * -2 & (d - c) + (~c | d) * -2 - 2) * (1 - (d - c) + (~c | d) * -2 & ((c - b) - d) + (c - b | ~d) * -2 - 2) + (((c - b) - d) + (c - b | ~d) * -2 - 2 | (d - c) + (~c | d) * -2 - 2) * (((c - b) - d) + (c - b | ~d) * -2 - 2 & (d - c) + (~c | d) * -2 - 2) & (d * d + c ^ -d) + (~d * d + c & -d) * -2) + ((1 - ((c - b) - d) + (c - b | ~d) * -2 & (d - c) + (~c | d) * -2 - 2) * (1 - (d - c) + (~c | d) * -2 & ((c - b) - d) + (c - b | ~d) * -2 - 2) + (((c - b) - d) + (c - b | ~d) * -2 - 2 | (d - c) + (~c | d) * -2 - 2) * (((c - b) - d) + (c - b | ~d) * -2 - 2 & (d - c) + (~c | d) * -2 - 2) | (d * d + c ^ -d) + (~d * d + c & -d) * -2) * ((1 - ((c - b) - d) + (c - b | ~d) * -2 & (d - c) + (~c | d) * -2 - 2) * (1 - (d - c) + (~c | d) * -2 & ((c - b) - d) + (c - b | ~d) * -2 - 2) + (((c - b) - d) + (c - b | ~d) * -2 - 2 | (d - c) + (~c | d) * -2 - 2) * (((c - b) - d) + (c - b | ~d) * -2 - 2 & (d - c) + (~c | d) * -2 - 2) & (d * d + c ^ -d) + (~d * d + c & -d) * -2)",
                    "attributes": {
                        "numOps": 341,
                        "nestedExprLevel": 73,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 37.43119266055046,
                        "opsPercentages": {
                            "arithmetic": 55.42521994134897,
                            "mul": 15.835777126099707,
                            "bitwise": 28.739002932551323
                        },
                        "percentageDAGsCancel": 2.1739130434782608
                    }
                },
                "clang_default": {
                    "expr": "(((c - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff)) - 1 ^ d - 1 ^ 0xffffffff) + (((c - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff)) - 1 ^ 0xffffffff) & (d - 1 ^ 0xffffffff)) * -2 & ((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 & ((d - c) + (d | c ^ 0xffffffff) * -2) - 2) * ((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 | ((d - c) + (d | c ^ 0xffffffff) * -2) - 2) + ((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 & (((d - c) + (d | c ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * (((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 ^ 0xffffffff) & ((d - c) + (d | c ^ 0xffffffff) * -2) - 2)) * (((c - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff)) - 1 ^ d - 1 ^ 0xffffffff) + (((c - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff)) - 1 ^ 0xffffffff) & (d - 1 ^ 0xffffffff)) * -2 | ((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 & ((d - c) + (d | c ^ 0xffffffff) * -2) - 2) * ((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 | ((d - c) + (d | c ^ 0xffffffff) * -2) - 2) + ((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 & (((d - c) + (d | c ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * (((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 ^ 0xffffffff) & ((d - c) + (d | c ^ 0xffffffff) * -2) - 2)) + (((c - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff)) - 1 ^ d - 1 ^ 0xffffffff) + (((c - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff)) - 1 ^ 0xffffffff) & (d - 1 ^ 0xffffffff)) * -2 & (((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 & ((d - c) + (d | c ^ 0xffffffff) * -2) - 2) * ((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 | ((d - c) + (d | c ^ 0xffffffff) * -2) - 2) + ((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 & (((d - c) + (d | c ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * (((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 ^ 0xffffffff) & ((d - c) + (d | c ^ 0xffffffff) * -2) - 2) ^ 0xffffffff)) * ((((c - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff)) - 1 ^ d - 1 ^ 0xffffffff) + (((c - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) ^ 0xffffffff)) - 1 ^ 0xffffffff) & (d - 1 ^ 0xffffffff)) * -2 ^ 0xffffffff) & ((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 & ((d - c) + (d | c ^ 0xffffffff) * -2) - 2) * ((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 | ((d - c) + (d | c ^ 0xffffffff) * -2) - 2) + ((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 & (((d - c) + (d | c ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) * (((((c + (b ^ 0xffffffff)) - d) - ((c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff) + (c + (b ^ 0xffffffff) + 1 | d ^ 0xffffffff))) - 1 ^ 0xffffffff) & ((d - c) + (d | c ^ 0xffffffff) * -2) - 2))",
                    "attributes": {
                        "numOps": 533,
                        "nestedExprLevel": 207,
                        "numDAGs": 50,
                        "percentDecreaseByOps": 2.2018348623853212,
                        "opsPercentages": {
                            "arithmetic": 47.467166979362105,
                            "mul": 8.630393996247655,
                            "bitwise": 43.90243902439025
                        },
                        "percentageDAGsCancel": 6.0
                    }
                },
                "msvc_default": {
                    "expr": "(((c - ~(d * d)) - 1 ^ ~(d - 1)) + (~((c - ~(d * d)) - 1) & ~(d - 1)) * -2 & ((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1 & ((d - c) + (~c | d) * -2) - 2) * ((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1 | ((d - c) + (~c | d) * -2) - 2) + ((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1 & ~(((d - c) + (~c | d) * -2) - 2)) * (~((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1) & ((d - c) + (~c | d) * -2) - 2)) * (((c - ~(d * d)) - 1 ^ ~(d - 1)) + (~((c - ~(d * d)) - 1) & ~(d - 1)) * -2 | ((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1 & ((d - c) + (~c | d) * -2) - 2) * ((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1 | ((d - c) + (~c | d) * -2) - 2) + ((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1 & ~(((d - c) + (~c | d) * -2) - 2)) * (~((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1) & ((d - c) + (~c | d) * -2) - 2)) + (((c - ~(d * d)) - 1 ^ ~(d - 1)) + (~((c - ~(d * d)) - 1) & ~(d - 1)) * -2 & ~(((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1 & ((d - c) + (~c | d) * -2) - 2) * ((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1 | ((d - c) + (~c | d) * -2) - 2) + ((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1 & ~(((d - c) + (~c | d) * -2) - 2)) * (~((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1) & ((d - c) + (~c | d) * -2) - 2))) * (~(((c - ~(d * d)) - 1 ^ ~(d - 1)) + (~((c - ~(d * d)) - 1) & ~(d - 1)) * -2) & ((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1 & ((d - c) + (~c | d) * -2) - 2) * ((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1 | ((d - c) + (~c | d) * -2) - 2) + ((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1 & ~(((d - c) + (~c | d) * -2) - 2)) * (~((((c + ~b) - d) - ((c + 1 + ~b | ~d) + (c + 1 + ~b | ~d))) - 1) & ((d - c) + (~c | d) * -2) - 2))",
                    "attributes": {
                        "numOps": 485,
                        "nestedExprLevel": 155,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 11.009174311926607,
                        "opsPercentages": {
                            "arithmetic": 50.51546391752577,
                            "mul": 7.835051546391752,
                            "bitwise": 41.649484536082475
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((-d ^ ~(d * d) - c) + -d & ~(d * d) - c * 2 & ((((c - b) - d) + c - b | ~d * -2) - 2 | ((d - c) + (~c | d) * -2) - 2) * ((((c - b) - d) + c - b | ~d * -2) - 2 & ((d - c) + (~c | d) * -2) - 2) + (c - b | ~d * 2 + d + 1 + (b - c) & ((d - c) + (~c | d) * -2) - 2) * ((~c | d) * 2 + 2 + ~d + c & (((c - b) - d) + c - b | ~d * -2) - 2)) * (~((((c - b) - d) + c - b | ~d * -2) - 2 | ((d - c) + (~c | d) * -2) - 2) * ((((c - b) - d) + c - b | ~d * -2) - 2 & ((d - c) + (~c | d) * -2) - 2) + (c - b | ~d * 2 + d + 1 + (b - c) & ((d - c) + (~c | d) * -2) - 2) * ((~c | d) * 2 + 2 + ~d + c & (((c - b) - d) + c - b | ~d * -2) - 2) & ((c - ~(d * d)) - 1 ^ -d) + -d & ~(d * d) - c * -2) + (((c - ~(d * d)) - 1 ^ -d) + -d & ~(d * d) - c * -2 & ((((c - b) - d) + c - b | ~d * -2) - 2 | ((d - c) + (~c | d) * -2) - 2) * ((((c - b) - d) + c - b | ~d * -2) - 2 & ((d - c) + (~c | d) * -2) - 2) + (c - b | ~d * 2 + d + 1 + (b - c) & ((d - c) + (~c | d) * -2) - 2) * ((~c | d) * 2 + 2 + ~d + c & (((c - b) - d) + c - b | ~d * -2) - 2)) * (((c - ~(d * d)) - 1 ^ -d) + -d & ~(d * d) - c * -2 | ((((c - b) - d) + c - b | ~d * -2) - 2 | ((d - c) + (~c | d) * -2) - 2) * ((((c - b) - d) + c - b | ~d * -2) - 2 & ((d - c) + (~c | d) * -2) - 2) + (c - b | ~d * 2 + d + 1 + (b - c) & ((d - c) + (~c | d) * -2) - 2) * ((~c | d) * 2 + 2 + ~d + c & (((c - b) - d) + c - b | ~d * -2) - 2))",
                    "attributes": {
                        "numOps": 342,
                        "nestedExprLevel": 81,
                        "numDAGs": 59,
                        "percentDecreaseByOps": 37.247706422018354,
                        "opsPercentages": {
                            "arithmetic": 53.50877192982456,
                            "mul": 15.789473684210526,
                            "bitwise": 30.701754385964914
                        },
                        "percentageDAGsCancel": 3.389830508474576
                    }
                }
            }
        },
        {
            "num": 357,
            "gt": {
                "expr": "(((b|a)-((-b)^d)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((b & ~ a) + a) & ~ (((~ b + 1) | d) - ((~ b + 1) & d))) - (~ ((b & ~ a) + a) & (((~ b + 1) | d) - ((~ b + 1) & d)))",
                "attributes": {
                    "numOps": 25,
                    "nestedExprLevel": 12,
                    "numDAGs": 13,
                    "opsPercentages": {
                        "arithmetic": 36.0,
                        "mul": 0.0,
                        "bitwise": 64.0
                    },
                    "percentageDAGsCancel": 7.6923076923076925
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~a & b) + a & (b - 1 ^ d)) - (~(a + (~a & b)) & (-b ^ d))",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 44.0,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 0.0,
                            "bitwise": 64.28571428571429
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_O1": {
                    "expr": "(~(-b | d) - (-b & d) & (~a & b) + a) - (~(~a & b) + a & (-b | d) - (-b & d))",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 16.0,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 0.0,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_O3": {
                    "expr": "(~(-b ^ d) & a) - (~a & (-b ^ d))",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 64.0,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((b & (a ^ 0xffffffff)) + a & (((b ^ 0xffffffff) + 1 | d) - ((b ^ 0xffffffff) + 1 & d) ^ 0xffffffff )) - (((b & (a ^ 0xffffffff)) + a ^ 0xffffffff) & ((b ^ 0xffffffff) + 1 | d) - ((b ^ 0xffffffff) + 1 & d))",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 12,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 0.0,
                            "bitwise": 64.0
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_default": {
                    "expr": "((~a & b) + a & ~((~b + 1 | d) - (~b + 1 & d))) - (~((~a & b) + a) & (~b + 1 | d) - (~b + 1 & d))",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 8,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 0.0,
                            "bitwise": 64.0
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "gcc_O3": {
                    "expr": "((b - 1 ^ d) & a) - ((-b ^ d) & ~a)",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 68.0,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 0.0,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 358,
            "gt": {
                "expr": "((((b^c)-b)*(-b)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 25.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((b - c) - ((b | ~ c) + (b | ~ c))) - 2) ^ b) - ((~ (((b - c) - ((b | ~ c) + (b | ~ c))) - 2) & b) + (~ (((b - c) - ((b | ~ c) + (b | ~ c))) - 2) & b))) & ~ (b - 1)) * ((((((b - c) - ((b | ~ c) + (b | ~ c))) - 2) ^ b) - ((~ (((b - c) - ((b | ~ c) + (b | ~ c))) - 2) & b) + (~ (((b - c) - ((b | ~ c) + (b | ~ c))) - 2) & b))) | ~ (b - 1)) + ((((((b - c) - ((b | ~ c) + (b | ~ c))) - 2) ^ b) - ((~ (((b - c) - ((b | ~ c) + (b | ~ c))) - 2) & b) + (~ (((b - c) - ((b | ~ c) + (b | ~ c))) - 2) & b))) & ~ (~ (b - 1))) * (~ (((((b - c) - ((b | ~ c) + (b | ~ c))) - 2) ^ b) - ((~ (((b - c) - ((b | ~ c) + (b | ~ c))) - 2) & b) + (~ (((b - c) - ((b | ~ c) + (b | ~ c))) - 2) & b))) & ~ (b - 1))",
                "attributes": {
                    "numOps": 141,
                    "nestedExprLevel": 75,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 43.262411347517734,
                        "mul": 1.4184397163120568,
                        "bitwise": 55.319148936170215
                    },
                    "percentageDAGsCancel": 4.545454545454546
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-b & ((~c | b) * 2 + ~b + c + 2 ^ b) + ((~c | b) * 2 + ~b + c + 2 & b) * 2) * ((((b - c) + (~c | b) * -2) - 2 ^ b) + ((~c | b) * 2 + ~b + c + 2 & b) * -2 & b - 1) + ((((b - c) + (~c | b) * -2) - 2 ^ b) + ((~c | b) * 2 + ~b + c + 2 & b) * -2 & -b) * (-b | (((b - c) + (~c | b) * -2) - 2 ^ b) + ((~c | b) * 2 + ~b + c + 2 & b) * -2)",
                    "attributes": {
                        "numOps": 86,
                        "nestedExprLevel": 20,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 39.00709219858156,
                        "opsPercentages": {
                            "arithmetic": 45.348837209302324,
                            "mul": 16.27906976744186,
                            "bitwise": 38.372093023255815
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "msvc_O1": {
                    "expr": "(~((b - ((~c | b) * 2 + 2)) - c ^ b) + (~(b - ((~c | b) * 2 + 2)) - c & b) * -2 & ~(b - 1)) * (((b - ((~c | b) * 2 + 2)) - c ^ b) + (~(b - ((~c | b) * 2 + 2)) - c & b) * -2 & b - 1) + (~(b - 1) | ((b - ((~c | b) * 2 + 2)) - c ^ b) + (~(b - ((~c | b) * 2 + 2)) - c & b) * -2) * (~(b - 1) & ((b - ((~c | b) * 2 + 2)) - c ^ b) + (~(b - ((~c | b) * 2 + 2)) - c & b) * -2)",
                    "attributes": {
                        "numOps": 87,
                        "nestedExprLevel": 31,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 38.297872340425535,
                        "opsPercentages": {
                            "arithmetic": 42.5287356321839,
                            "mul": 16.091954022988507,
                            "bitwise": 41.37931034482759
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "clang_O3": {
                    "expr": "(~((b - c) + (~c | b) * -2 - 2 ^ b) + (1 - (b - c) + (~c | b) * -2 & b) * -2 & -b) * (b - 1 & ((b - c) + (~c | b) * -2 - 2 ^ b) + (1 - (b - c) + (~c | b) * -2 & b) * -2) + (((b - c) + (~c | b) * -2 - 2 ^ b) + (1 - (b - c) + (~c | b) * -2 & b) * -2 | -b) * (((b - c) + (~c | b) * -2 - 2 ^ b) + (1 - (b - c) + (~c | b) * -2 & b) * -2 & -b)",
                    "attributes": {
                        "numOps": 88,
                        "nestedExprLevel": 21,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 37.5886524822695,
                        "opsPercentages": {
                            "arithmetic": 51.13636363636363,
                            "mul": 15.909090909090908,
                            "bitwise": 32.95454545454545
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_default": {
                    "expr": "((((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff))) - 2 ^ b) - (((((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff))) - 2 ^ 0xffffffff) & b) + ((((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff))) - 2 ^ 0xffffffff) & b)) & (b - 1 ^ 0xffffffff)) * ((((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff))) - 2 ^ b) - (((((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff))) - 2 ^ 0xffffffff) & b) + ((((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff))) - 2 ^ 0xffffffff) & b)) | b - 1 ^ 0xffffffff) + ((((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff))) - 2 ^ b) - (((((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff))) - 2 ^ 0xffffffff) & b) + ((((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff))) - 2 ^ 0xffffffff) & b)) & b - 1) * (((((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff))) - 2 ^ b) - (((((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff)) ) - 2 ^ 0xffffffff) & b) + ((((b - c) - ((b | c ^ 0xffffffff) + (b | c ^ 0xffffffff))) - 2 ^ 0xffffffff) & b)) ^ 0xffffffff) & (b - 1 ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 139,
                        "nestedExprLevel": 67,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 1.4184397163120568,
                        "opsPercentages": {
                            "arithmetic": 43.884892086330936,
                            "mul": 1.4388489208633095,
                            "bitwise": 54.67625899280576
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((((b - c) - ((~c | b) + (~c | b))) - 2 ^ b) - ((~(((b - c) - ((~c | b) + (~c | b))) - 2) & b) + (~(((b - c) - ((~c | b) + (~c | b))) - 2) & b )) & ~(b - 1)) * ((((b - c) - ((~c | b) + (~c | b))) - 2 ^ b) - ((~(((b - c) - ((~c | b) + (~c | b))) - 2) & b) + (~(((b - c) - ((~c | b) + (~c | b))) - 2) & b )) | ~(b - 1)) + ((((b - c) - ((~c | b) + (~c | b))) - 2 ^ b) - ((~(((b - c) - ((~c | b) + (~c | b))) - 2) & b) + (~(((b - c) - ((~c | b) + (~c | b))) - 2) & b )) & b - 1) * (~((((b - c) - ((~c | b) + (~c | b))) - 2 ^ b) - ((~(((b - c) - ((~c | b) + (~c | b))) - 2) & b ) + (~(((b - c) - ((~c | b) + (~c | b))) - 2) & b))) & ~(b - 1))",
                    "attributes": {
                        "numOps": 139,
                        "nestedExprLevel": 67,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 1.4184397163120568,
                        "opsPercentages": {
                            "arithmetic": 43.884892086330936,
                            "mul": 1.4388489208633095,
                            "bitwise": 54.67625899280576
                        },
                        "percentageDAGsCancel": 19.047619047619047
                    }
                },
                "gcc_O3": {
                    "expr": "((((~c | b) * 2 - b) + 1 + c ^ b) + ((~c | b) * 2 - b) + 1 + c & b * 2 & -b) * (b - 1 & (((b - c) + (~c | b) * -2) - 2 ^ b) + ((~c | b) * 2 - b) + 1 + c & b * -2) + ((((b - c) + (~c | b) * -2) - 2 ^ b) + ((~c | b) * 2 - b) + 1 + c & b * -2 | -b) * ((((b - c) + (~c | b) * -2) - 2 ^ b) + ((~c | b) * 2 - b) + 1 + c & b * -2 & -b)",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 21,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 42.5531914893617,
                        "opsPercentages": {
                            "arithmetic": 48.148148148148145,
                            "mul": 17.28395061728395,
                            "bitwise": 34.5679012345679
                        },
                        "percentageDAGsCancel": 6.0606060606060606
                    }
                }
            }
        },
        {
            "num": 359,
            "gt": {
                "expr": "((((c+d)&(-d))*(-((-c)+(c+c)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 12.5,
                        "bitwise": 12.5
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "(((~ (((c | d) << 1) - (c ^ d)) | (~ d + 1)) - ~ (((c | d) << 1) - (c ^ d))) & ~ ((((~ c + 1) | ((c | c) + (c & c))) + ((~ c + 1) & ((c | c) + (c & c)))) - 1)) * (((~ (((c | d) << 1) - (c ^ d)) | (~ d + 1)) - ~ (((c | d) << 1) - (c ^ d))) | ~ ((((~ c + 1) | ((c | c) + (c & c))) + ((~ c + 1) & ((c | c) + (c & c)))) - 1)) + (((~ (((c | d) << 1) - (c ^ d)) | (~ d + 1)) - ~ (((c | d) << 1) - (c ^ d))) & ~ (~ ((((~ c + 1) | ((c | c) + (c & c))) + ((~ c + 1) & ((c | c) + (c & c)))) - 1))) * (~ ((~ (((c | d) << 1) - (c ^ d)) | (~ d + 1)) - ~ (((c | d) << 1) - (c ^ d))) & ~ ((((~ c + 1) | ((c | c) + (c & c))) + ((~ c + 1) & ((c | c) + (c & c)))) - 1))",
                "attributes": {
                    "numOps": 125,
                    "nestedExprLevel": 70,
                    "numDAGs": 28,
                    "opsPercentages": {
                        "arithmetic": 32.800000000000004,
                        "mul": 1.6,
                        "bitwise": 65.60000000000001
                    },
                    "percentageDAGsCancel": 10.714285714285714
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-c & ~(-d & (c | d) * 2 - (c ^ d))) * ((c | d) * 2 - (c ^ d) & -d & c - 1) + ((c | d) * 2 - (c ^ d) & -d & -c) * (-c | (c | d) * 2 - (c ^ d) & -d)",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 10,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 71.2,
                        "opsPercentages": {
                            "arithmetic": 36.11111111111111,
                            "mul": 16.666666666666664,
                            "bitwise": 47.22222222222222
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_O1": {
                    "expr": "(~(c | d) * 2 + 1 + ((~((c | d) * 2 - (c ^ d)) | -d) - (c ^ d)) & ~((-c & c * 2) - 1) + (-c | c * 2)) * ((c | d) * 2 + 1 + ((~((c | d) * 2 - (c ^ d)) | -d) - (c ^ d)) & ((-c & c * 2) - 1) + (-c | c * 2)) + ((c | d) * 2 + 1 + ((~((c | d) * 2 - (c ^ d)) | -d) - (c ^ d)) | ~((-c & c * 2) - 1) + (-c | c * 2)) * ((c | d) * 2 + 1 + ((~((c | d) * 2 - (c ^ d)) | -d) - (c ^ d)) & ~((-c & c * 2) - 1) + (-c | c * 2))",
                    "attributes": {
                        "numOps": 95,
                        "nestedExprLevel": 29,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 24.0,
                        "opsPercentages": {
                            "arithmetic": 38.94736842105263,
                            "mul": 18.947368421052634,
                            "bitwise": 42.10526315789473
                        },
                        "percentageDAGsCancel": 10.344827586206897
                    }
                },
                "clang_O3": {
                    "expr": "(~-d & (d | c) * 2 - (d ^ c) & -c) * (c - 1 & -d & (d | c) * 2 - (d ^ c)) + (-d & (d | c) * 2 - (d ^ c) | -c) * (-d & (d | c) * 2 - (d ^ c) & -c)",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 71.2,
                        "opsPercentages": {
                            "arithmetic": 36.11111111111111,
                            "mul": 16.666666666666664,
                            "bitwise": 47.22222222222222
                        },
                        "percentageDAGsCancel": 16.666666666666664
                    }
                },
                "clang_default": {
                    "expr": "(((c | d) * 2 - (c ^ d) ^ 0xffffffff | (d ^ 0xffffffff) + 1) - ((c | d) * 2 - (c ^ d) ^ 0xffffffff) & ((((c ^ 0xffffffff) + 1 | c * 2) + ((c ^ 0xffffffff) + 1 & c * 2)) - 1 ^ 0xffffffff)) * (((c | d) * 2 - (c ^ d) ^ 0xffffffff | (d ^ 0xffffffff) + 1) - ((c | d) * 2 - (c ^ d) ^ 0xffffffff) | (((c ^ 0xffffffff) + 1 | c * 2) + ((c ^ 0xffffffff) + 1 & c * 2)) - 1 ^ 0xffffffff) + (((c | d) * 2 - (c ^ d) ^ 0xffffffff | (d ^ 0xffffffff) + 1) - ((c | d) * 2 - (c ^ d) ^ 0xffffffff) & (((c ^ 0xffffffff) + 1 | c * 2) + ((c ^ 0xffffffff) + 1 & c * 2)) - 1) * ((((c | d) * 2 - (c ^ d) ^ 0xffffffff | (d ^ 0xffffffff) + 1) - ((c | d) * 2 - (c ^ d) ^ 0xffffffff) ^ 0xffffffff) & ((((c ^ 0xffffffff) + 1 | c * 2) + ((c ^ 0xffffffff) + 1 & c * 2)) - 1 ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 107,
                        "nestedExprLevel": 37,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 14.399999999999999,
                        "opsPercentages": {
                            "arithmetic": 30.8411214953271,
                            "mul": 16.822429906542055,
                            "bitwise": 52.336448598130836
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~((c | d) * 2 - (c ^ d)) | ~d + 1) - ~((c | d) * 2 - (c ^ d)) & ~(((~c + 1 | c * 2) - 1) + (~c + 1 & c * 2))) * ((~((c | d) * 2 - (c ^ d)) | ~d + 1) - ~((c | d) * 2 - (c ^ d)) | ~(((~c + 1 | c * 2) - 1) + (~c + 1 & c * 2))) + ((~((c | d) * 2 - (c ^ d)) | ~d + 1) - ~((c | d) * 2 - (c ^ d)) & ((~c + 1 | c * 2) - 1) + (~c + 1 & c * 2)) * (~((~((c | d) * 2 - (c ^ d)) | ~d + 1) - ~((c | d) * 2 - (c ^ d))) & ~(((~c + 1 | c * 2) - 1) + (~c + 1 & c * 2)))",
                    "attributes": {
                        "numOps": 107,
                        "nestedExprLevel": 37,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 14.399999999999999,
                        "opsPercentages": {
                            "arithmetic": 30.8411214953271,
                            "mul": 16.822429906542055,
                            "bitwise": 52.336448598130836
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "gcc_O3": {
                    "expr": "(c - 1 & (d | c) * 2 - (d ^ c) & -d) * (~(d | c) * 2 - (d ^ c) & -d & -c) + ((d | c) * 2 - (d ^ c) & -d | -c) * ((d | c) * 2 - (d ^ c) & -d & -c)",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 9,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 71.2,
                        "opsPercentages": {
                            "arithmetic": 36.11111111111111,
                            "mul": 16.666666666666664,
                            "bitwise": 47.22222222222222
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 360,
            "gt": {
                "expr": "((~((e+b)|(~(e-(~b))))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "- ((((e - ~ b) - 1) & ~ (~ e + (- b - 1))) + (~ e + (- b - 1))) - 1",
                "attributes": {
                    "numOps": 16,
                    "nestedExprLevel": 7,
                    "numDAGs": 12,
                    "opsPercentages": {
                        "arithmetic": 68.75,
                        "mul": 0.0,
                        "bitwise": 31.25
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(~b + ~e + ((e - ~b) - 1 & e - ~b))",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 31.25,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 0.0,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "e + 1 + (b - (e + 1 + b & b + e))",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 56.25,
                        "opsPercentages": {
                            "arithmetic": 85.71428571428571,
                            "mul": 0.0,
                            "bitwise": 14.285714285714285
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~(e + b + 1 & e + b) + e + b + 2",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 75.0,
                            "mul": 0.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((e - (b ^ 0xffffffff)) - 1 & ((e ^ 0xffffffff) + (-1 - b) ^ 0xffffffff)) + (e ^ 0xffffffff) + (-1 - b))",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 7,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 68.75,
                            "mul": 0.0,
                            "bitwise": 31.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (((e - ~b) - 1 & ~((~e - 1) - b)) + ((~e - 1) - b))",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 6,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 12.5,
                        "opsPercentages": {
                            "arithmetic": 64.28571428571429,
                            "mul": 0.0,
                            "bitwise": 35.714285714285715
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~((e - ~b - 1 & e - ~b) + ~b + ~e)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 31.25,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 0.0,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 361,
            "gt": {
                "expr": "((-(~(~((-(~(d&d)))+e)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 9,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 0.0,
                        "bitwise": 57.14285714285714
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "(- ((((((~ d | d) + d) + 1) + 1) - ~ e) - 1) - 1) + 1",
                "attributes": {
                    "numOps": 11,
                    "nestedExprLevel": 8,
                    "numDAGs": 11,
                    "opsPercentages": {
                        "arithmetic": 72.72727272727273,
                        "mul": 0.0,
                        "bitwise": 27.27272727272727
                    },
                    "percentageDAGsCancel": 9.090909090909092
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~e - (d + 1)) + 1",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 3,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 63.63636363636363,
                        "opsPercentages": {
                            "arithmetic": 75.0,
                            "mul": 0.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(-1 - d) - e",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 72.72727272727273,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~(e + d)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-((((d ^ 0xffffffff | d) + d) - (e ^ 0xffffffff)) + 1)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 5,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 36.36363636363637,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 0.0,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "-(d - ~e)",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 72.72727272727273,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~e - d",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 362,
            "gt": {
                "expr": "((((c&c)&(((a^c)|a)|c))-((c-(c^a))^(a&a))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 30.0
                }
            },
            "mba": {
                "expr": "(((((~ (((~ c | c) + c) + 1) | ((((((((a | c) - (a & c)) + a) + 1) + ((- ((a | c) - (a & c)) - 1) | (- a - 1))) + c) + 1) + ((- (((((a | c) - (a & c)) + a) + 1) + ((- ((a | c) - (a & c)) - 1) | (- a - 1))) - 1) | (- c - 1)))) + (((~ c | c) + c) + 1)) + 1) & ~ ((((((c & ~ ((c | a) - (c & a))) << 1) - (c ^ ((c | a) - (c & a)))) - ((~ a | a) - ~ a)) - (((((c & ~ ((c | a) - (c & a))) << 1) - (c ^ ((c | a) - (c & a)))) | ~ ((~ a | a) - ~ a)) + ((((c & ~ ((c | a) - (c & a))) << 1) - (c ^ ((c | a) - (c & a)))) | ~ ((~ a | a) - ~ a)))) - 2)) << 1) - ((((~ (((~ c | c) + c) + 1) | ((((((((a | c) - (a & c)) + a) + 1) + ((- ((a | c) - (a & c)) - 1) | (- a - 1))) + c) + 1) + ((- (((((a | c) - (a & c)) + a) + 1) + ((- ((a | c) - (a & c)) - 1) | (- a - 1))) - 1) | (- c - 1)))) + (((~ c | c) + c) + 1)) + 1) ^ ((((((c & ~ ((c | a) - (c & a))) << 1) - (c ^ ((c | a) - (c & a)))) - ((~ a | a) - ~ a)) - (((((c & ~ ((c | a) - (c & a))) << 1) - (c ^ ((c | a) - (c & a)))) | ~ ((~ a | a) - ~ a)) + ((((c & ~ ((c | a) - (c & a))) << 1) - (c ^ ((c | a) - (c & a)))) | ~ ((~ a | a) - ~ a)))) - 2))",
                "attributes": {
                    "numOps": 207,
                    "nestedExprLevel": 133,
                    "numDAGs": 49,
                    "opsPercentages": {
                        "arithmetic": 45.893719806763286,
                        "mul": 0.0,
                        "bitwise": 54.106280193236714
                    },
                    "percentageDAGsCancel": 12.244897959183673
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~a | (~(c ^ a) & c) * 2 - a) * 2 + ~((~(c ^ a) & c) * 2) + a * 2 + 2 & c + (~c | ~((~a | c) + a + (a ^ c) + 1 & c) + c + a + (a ^ c) + (~a | c) + 2) + 1) * 2 - (c + (~c | ~((~a | c) + a + (a ^ c) + 1 & c) + c + a + (a ^ c) + (~a | c) + 2) + 1 ^ ((~(c ^ a) & c) * 2 + a * -2 + (~a | (~(c ^ a) & c) * 2 - a) * -2) - 2)",
                    "attributes": {
                        "numOps": 79,
                        "nestedExprLevel": 20,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 61.83574879227053,
                        "opsPercentages": {
                            "arithmetic": 39.24050632911392,
                            "mul": 11.39240506329114,
                            "bitwise": 49.36708860759494
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                },
                "msvc_O1": {
                    "expr": "(c * 2 + 2 + (((a & c - a | c) * 2 - 2 | (-1 - a) * 2) + (c * -2 - 2 | (((a & c - (a & c - a | c) - 1 | ~a) - a | c) - a) - 2 * 2) + (a + 2 + a | c - a & c + c) * 2 | ~c * 2) & ~(~a - 1) + (((~a | c - a & c & c) - ((~a | c - a & c & c) * 2 - (a | c - a & c ^ c) | ~a)) * 2 - (a | c - a & c ^ c)) * 2) - ((((~c | (((a & c - (a & c - a | c) - 1 | ~a) - a | c) - a) - 2) - a & c) + 2 + (a & c - a | c) - 1 | ~a + a | c + a + c | ~c) + c + 1 ^ (~a - 1) + (((~a | c - a & c & c) - ((~a | c - a & c & c) * 2 - (a | c - a & c ^ c) | ~a)) * 2 - (a | c - a & c ^ c)))",
                    "attributes": {
                        "numOps": 134,
                        "nestedExprLevel": 27,
                        "numDAGs": 71,
                        "percentDecreaseByOps": 35.26570048309179,
                        "opsPercentages": {
                            "arithmetic": 41.04477611940299,
                            "mul": 8.955223880597014,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 4.225352112676056
                    }
                },
                "clang_O3": {
                    "expr": "(1 - ((c & a) * 2 - a - a) + (~a | (c & a) * 2 - a) * -2 & c) * 2 - (((c & a) * 2 - a - a) + (~a | (c & a) * 2 - a) * -2 - 2 ^ c)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 8,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 85.5072463768116,
                        "opsPercentages": {
                            "arithmetic": 43.333333333333336,
                            "mul": 23.333333333333332,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_default": {
                    "expr": "(((c ^ 0xffffffff | c) + c + 1 ^ 0xffffffff | ((a | c) - (a & c)) + a + (0xffffffff - ((a | c) - (a & c)) | 0xffffffff - a) + c + 2 + (0xffffffff - (((a | c) - (a & c)) + a + 1 + (0xffffffff - ((a | c) - (a & c)) | 0xffffffff - a)) | 0xffffffff - c)) + (c ^ 0xffffffff | c) + c + 2 & (((((c & ((c | a) - (c & a) ^ 0xffffffff)) * 2 - (c ^ (c | a) - (c & a))) - ((a ^ 0xffffffff | a) - (a ^ 0xffffffff))) - (((c & ((c | a) - (c & a) ^ 0xffffffff)) * 2 - (c ^ (c | a) - (c & a)) | (a ^ 0xffffffff | a) - (a ^ 0xffffffff) ^ 0xffffffff) + ((c & ((c | a) - (c & a) ^ 0xffffffff)) * 2 - (c ^ (c | a) - (c & a)) | (a ^ 0xffffffff | a) - (a ^ 0xffffffff) ^ 0xffffffff))) - 2 ^ 0xffffffff)) * 2 - (((c ^ 0xffffffff | c) + c + 1 ^ 0xffffffff | ((a | c) - (a & c)) + a + (0xffffffff - ((a | c) - (a & c)) | 0xffffffff - a) + c + 2 + (0xffffffff - (((a | c) - (a & c)) + a + 1 + (0xffffffff - ((a | c) - (a & c)) | 0xffffffff - a)) | 0xffffffff - c)) + (c ^ 0xffffffff | c) + c + 2 ^ ((((c & ((c | a) - (c & a) ^ 0xffffffff)) * 2 - (c ^ (c | a) - (c & a))) - ((a ^ 0xffffffff | a) - (a ^ 0xffffffff))) - (((c & ((c | a) - (c & a) ^ 0xffffffff)) * 2 - (c ^ (c | a) - (c & a)) | (a ^ 0xffffffff | a) - (a ^ 0xffffffff) ^ 0xffffffff) + ((c & ((c | a) - (c & a) ^ 0xffffffff)) * 2 - (c ^ (c | a) - (c & a)) | (a ^ 0xffffffff | a) - (a ^ 0xffffffff) ^ 0xffffffff))) - 2)",
                    "attributes": {
                        "numOps": 191,
                        "nestedExprLevel": 80,
                        "numDAGs": 47,
                        "percentDecreaseByOps": 7.729468599033816,
                        "opsPercentages": {
                            "arithmetic": 41.361256544502616,
                            "mul": 3.664921465968586,
                            "bitwise": 54.973821989528794
                        },
                        "percentageDAGsCancel": 4.25531914893617
                    }
                },
                "msvc_default": {
                    "expr": "((~c | (0xffffffff - ((a | c) - (a & c)) | 0xffffffff - a) + ((a | c) - (a & c)) + a + c + 2 + (0xffffffff - (((a | c) - (a & c)) + a + 1 + (0xffffffff - ((a | c) - (a & c)) | 0xffffffff - a)) | 0xffffffff - c)) + c + 1 & ~(((((~((c | a) - (c & a)) & c) * 2 - ((c | a) - (c & a) ^ c)) - (-1 - ~a)) - (((~((c | a) - (c & a)) & c) * 2 - ((c | a) - (c & a) ^ c) | ~(-~a - 1)) + ((~((c | a) - (c & a)) & c) * 2 - ((c | a) - (c & a) ^ c) | ~(-~a - 1)))) - 2)) * 2 - ((~c | (0xffffffff - ((a | c) - (a & c)) | 0xffffffff - a) + ((a | c) - (a & c)) + a + c + 2 + (0xffffffff - (((a | c) - (a & c)) + a + 1 + (0xffffffff - ((a | c) - (a & c)) | 0xffffffff - a)) | 0xffffffff - c)) + c + 1 ^ ((((~((c | a) - (c & a)) & c) * 2 - ((c | a) - (c & a) ^ c)) - (-1 - ~a)) - (((~((c | a) - (c & a)) & c) * 2 - ((c | a) - (c & a) ^ c) | ~(-~a - 1)) + ((~((c | a) - (c & a)) & c) * 2 - ((c | a) - (c & a) ^ c) | ~(-~a - 1)))) - 2)",
                    "attributes": {
                        "numOps": 171,
                        "nestedExprLevel": 73,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 17.391304347826086,
                        "opsPercentages": {
                            "arithmetic": 46.198830409356724,
                            "mul": 4.093567251461988,
                            "bitwise": 49.707602339181285
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "gcc_O3": {
                    "expr": "(~a | (~(c ^ a) & c) * 2 - a * 2 + 2 + ~(~(c ^ a) & c) * 2 + a * 2 & c + 1 + (((c ^ a) + 1 + a + (~a | c) + c) - ((c ^ a) + 1 + a + (~a | c) & c) | ~c)) * 2 - ((((~(c ^ a) & c) * 2 - a - a) + ~a | (~(c ^ a) & c) * 2 - a * -2) - 2 ^ c + 1 + (((c ^ a) + 1 + a + (~a | c) + c) - ((c ^ a) + 1 + a + (~a | c) & c) | ~c))",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 19,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 63.28502415458937,
                        "opsPercentages": {
                            "arithmetic": 40.78947368421053,
                            "mul": 10.526315789473683,
                            "bitwise": 48.68421052631579
                        },
                        "percentageDAGsCancel": 13.88888888888889
                    }
                }
            }
        },
        {
            "num": 363,
            "gt": {
                "expr": "((((d-d)-(d+b))+(~(d|((d^b)&b)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "((((((d & ~ d) << 1) - (d ^ d)) ^ ((d ^ b) + ((d & b) << 1))) - ((~ (((d & ~ d) << 1) - (d ^ d)) & ((d ^ b) + ((d & b) << 1))) + (~ (((d & ~ d) << 1) - (d ^ d)) & ((d ^ b) + ((d & b) << 1))))) ^ (- (((d + ((~ (((d - b) - ((d | ~ b) << 1)) - 2) | b) - ~ (((d - b) - ((d | ~ b) << 1)) - 2))) + 1) + ((- d - 1) | (- ((~ (((d - b) - ((d | ~ b) << 1)) - 2) | b) - ~ (((d - b) - ((d | ~ b) << 1)) - 2)) - 1))) - 1)) + (((((((d & ~ d) << 1) - (d ^ d)) ^ ((d ^ b) + ((d & b) << 1))) - ((~ (((d & ~ d) << 1) - (d ^ d)) & ((d ^ b) + ((d & b) << 1))) + (~ (((d & ~ d) << 1) - (d ^ d)) & ((d ^ b) + ((d & b) << 1))))) & (- (((d + ((~ (((d - b) - ((d | ~ b) << 1)) - 2) | b) - ~ (((d - b) - ((d | ~ b) << 1)) - 2))) + 1) + ((- d - 1) | (- ((~ (((d - b) - ((d | ~ b) << 1)) - 2) | b) - ~ (((d - b) - ((d | ~ b) << 1)) - 2)) - 1))) - 1)) << 1)",
                "attributes": {
                    "numOps": 156,
                    "nestedExprLevel": 89,
                    "numDAGs": 37,
                    "opsPercentages": {
                        "arithmetic": 40.38461538461539,
                        "mul": 0.0,
                        "bitwise": 59.61538461538461
                    },
                    "percentageDAGsCancel": 16.216216216216218
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((((~b | d) * -2 - (~d + b)) - 3 & b & d) - (d + (((~b | d) * -2 - (~d + b)) - 3 & b) + 1) & -((d & b) * 2 + (d ^ b))) * 2 + (-((d & b) * 2 + (d ^ b)) ^ (((~b | d) * -2 - (~d + b)) - 3 & b & d) - (d + (((~b | d) * -2 - (~d + b)) - 3 & b) + 1))",
                    "attributes": {
                        "numOps": 58,
                        "nestedExprLevel": 21,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 62.82051282051282,
                        "opsPercentages": {
                            "arithmetic": 46.55172413793103,
                            "mul": 12.068965517241379,
                            "bitwise": 41.37931034482759
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "msvc_O1": {
                    "expr": "((((~(((d + (~b | d) * -2) - b) - 2) - ((~(((d + (~b | d) * -2) - b) - 2) - (~(((d + (~b | d) * -2) - b) - 2) | b)) - 1 | ~d)) - (~(((d + (~b | d) * -2) - b) - 2) | b)) - d) - 2 * 2 & (b ^ d) + (b & d) * 2 * -2) + (-(b ^ d) + (b & d) * 2 ^ (((~(((d + (~b | d) * -2) - b) - 2) - ((~(((d + (~b | d) * -2) - b) - 2) - (~(((d + (~b | d) * -2) - b) - 2) | b)) - 1 | ~d)) - (~(((d + (~b | d) * -2) - b) - 2) | b)) - d) - 2)",
                    "attributes": {
                        "numOps": 99,
                        "nestedExprLevel": 44,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 36.53846153846153,
                        "opsPercentages": {
                            "arithmetic": 49.494949494949495,
                            "mul": 12.121212121212121,
                            "bitwise": 38.38383838383838
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(-((d ^ b) + (d & b) * 2) ^ ~(((d - b) + (~b | d) * -2) - 2 & b | d)) + (~(((d - b) + (~b | d) * -2) - 2 & b | d) & -((d ^ b) + (d & b) * 2)) * 2",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 13,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 78.2051282051282,
                        "opsPercentages": {
                            "arithmetic": 38.23529411764706,
                            "mul": 14.705882352941178,
                            "bitwise": 47.05882352941176
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "clang_default": {
                    "expr": "(((d & (d ^ 0xffffffff)) * 2 ^ (d ^ b) + (d & b) * 2) - ((((d & (d ^ 0xffffffff)) * 2 ^ 0xffffffff) & (d ^ b) + (d & b) * 2) + (((d & (d ^ 0xffffffff)) * 2 ^ 0xffffffff) & (d ^ b) + (d & b) * 2)) ^ 0xffffffff - (d + ((((d - b) + (d | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff | b) - (((d - b) + (d | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) + 1 + (0xffffffff - d | 0xffffffff - ((((d - b) + (d | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff | b) - (((d - b) + (d | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff))))) + (((d & (d ^ 0xffffffff)) * 2 ^ (d ^ b) + (d & b) * 2) - ((((d & (d ^ 0xffffffff)) * 2 ^ 0xffffffff) & (d ^ b) + (d & b) * 2) + (((d & (d ^ 0xffffffff)) * 2 ^ 0xffffffff) & (d ^ b) + (d & b) * 2)) & 0xffffffff - (d + ((((d - b) + (d | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff | b) - (((d - b) + (d | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) + 1 + (0xffffffff - d | 0xffffffff - ((((d - b) + (d | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff | b) - (((d - b) + (d | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff))))) * 2",
                    "attributes": {
                        "numOps": 146,
                        "nestedExprLevel": 59,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 6.41025641025641,
                        "opsPercentages": {
                            "arithmetic": 40.41095890410959,
                            "mul": 14.383561643835616,
                            "bitwise": 45.20547945205479
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_default": {
                    "expr": "(((d ^ b) + (d & b) * 2) - ((d ^ b) + (d & b) * 2 + (d ^ b) + (d & b) * 2) ^ 0xffffffff - (((~(((d - b) + (~b | d) * -2) - 2) | b) - ~(((d - b) + (~b | d) * -2) - 2)) + d + 1 + (0xffffffff - d | 0xffffffff - ((~(((d - b) + (~b | d) * -2) - 2) | b) - ~(((d - b) + (~b | d) * -2) - 2))))) + (((d ^ b) + (d & b) * 2) - ((d ^ b) + (d & b) * 2 + (d ^ b) + (d & b) * 2) & 0xffffffff - (((~(((d - b) + (~b | d) * -2) - 2) | b) - ~(((d - b) + (~b | d) * -2) - 2)) + d + 1 + (0xffffffff - d | 0xffffffff - ((~(((d - b) + (~b | d) * -2) - 2) | b) - ~(((d - b) + (~b | d) * -2) - 2))))) * 2",
                    "attributes": {
                        "numOps": 118,
                        "nestedExprLevel": 49,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 24.358974358974358,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 12.711864406779661,
                            "bitwise": 37.28813559322034
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(-((d ^ b) + (d & b) * 2) ^ (b & d) - (b + 1 + d)) + (-((d ^ b) + (d & b) * 2) & (b & d) - (b + 1 + d)) * 2",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 9,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 85.8974358974359,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 13.636363636363635,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                }
            }
        },
        {
            "num": 364,
            "gt": {
                "expr": "((-(-(((-d)&d)+((~d)-d)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 71.42857142857143,
                        "mul": 0.0,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (~ ((((((~ (~ (d - 1)) | d) + ~ (d - 1)) + 1) | (((- d - 1) ^ d) - ((~ (- d - 1) & d) + (~ (- d - 1) & d)))) + ((((~ (~ (d - 1)) | d) + ~ (d - 1)) + 1) & (((- d - 1) ^ d) - ((~ (- d - 1) & d) + (~ (- d - 1) & d))))) - 1)) + 1",
                "attributes": {
                    "numOps": 49,
                    "nestedExprLevel": 27,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 55.10204081632652,
                        "mul": 0.0,
                        "bitwise": 44.89795918367347
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~d & d - 1) + 1 + ~(d * 2)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 85.71428571428571,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 14.285714285714285,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_O1": {
                    "expr": "(~(d * 2) | (d - 1 | d) - (d - 1)) + (~(d * 2) & (d - 1 | d) - (d - 1))",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 69.38775510204081,
                        "opsPercentages": {
                            "arithmetic": 46.666666666666664,
                            "mul": 13.333333333333334,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_O3": {
                    "expr": "(~d & d - 1) + d * -2",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 87.75510204081633,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((d - 1 | d) + (d - 1 ^ 0xffffffff) + 1 | (0xffffffff - d ^ d) - (((0xffffffff - d ^ 0xffffffff) & d) + ((0xffffffff - d ^ 0xffffffff) & d))) + ((d - 1 | d) + (d - 1 ^ 0xffffffff) + 1 & (0xffffffff - d ^ d) - (((0xffffffff - d ^ 0xffffffff) & d) + ((0xffffffff - d ^ 0xffffffff) & d)))",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 12,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 28.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 54.285714285714285,
                            "mul": 0.0,
                            "bitwise": 45.714285714285715
                        },
                        "percentageDAGsCancel": 21.428571428571427
                    }
                },
                "msvc_default": {
                    "expr": "((d - 1 | d) + 1 + ~(d - 1) | (0xffffffff - d ^ d) - ((~(0xffffffff - d) & d) + (~(0xffffffff - d) & d))) + ((d - 1 | d) + 1 + ~(d - 1) & (0xffffffff - d ^ d) - ((~(0xffffffff - d) & d) + (~(0xffffffff - d) & d)))",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 12,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 28.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 54.285714285714285,
                            "mul": 0.0,
                            "bitwise": 45.714285714285715
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "gcc_O3": {
                    "expr": "(d - 1 & ~d) + d * -2",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 87.75510204081633,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 365,
            "gt": {
                "expr": "((-((-(c&(a&e)))*(((c&a)+e)*(c-(-a))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 20.0,
                        "bitwise": 30.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "~ ((((~ (((~ c | ((~ a | e) - ~ a)) + c) + 1) + 1) & ((((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) & ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))) * (((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) | ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))) + (((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) & ~ ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))) * (~ ((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) & ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))))) * ((~ (((~ c | ((~ a | e) - ~ a)) + c) + 1) + 1) | ((((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) & ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))) * (((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) | ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))) + (((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) & ~ ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))) * (~ ((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) & ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))))) + ((~ (((~ c | ((~ a | e) - ~ a)) + c) + 1) + 1) & ~ ((((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) & ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))) * (((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) | ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))) + (((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) & ~ ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))) * (~ ((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) & ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))))) * (~ (~ (((~ c | ((~ a | e) - ~ a)) + c) + 1) + 1) & ((((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) & ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))) * (((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) | ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))) + (((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) & ~ ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1))))) * (~ ((((~ c | a) - ~ c) ^ e) + ((((~ c | a) - ~ c) & e) << 1)) & ((c ^ ~ (a - 1)) - ((~ c & ~ (a - 1)) + (~ c & ~ (a - 1)))))))) - 1)",
                "attributes": {
                    "numOps": 487,
                    "nestedExprLevel": 224,
                    "numDAGs": 41,
                    "opsPercentages": {
                        "arithmetic": 30.800821355236142,
                        "mul": 2.0533880903490758,
                        "bitwise": 67.14579055441479
                    },
                    "percentageDAGsCancel": 2.4390243902439024
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-((((-a ^ c) + (-a & ~c) * -2 & ~((a & c & e) * 2 + (a & c ^ e))) * ((a & c ^ e) + (a & c & e) * 2 & (-a & ~c) * 2 + (a - 1 ^ c)) + ((a & c ^ e) + (a & c & e) * 2 & (-a ^ c) + (-a & ~c) * -2) * ((-a ^ c) + (-a & ~c) * -2 | (a & c ^ e) + (a & c & e) * 2) & (~c | e & a) + c) * ~(((-a ^ c) + (-a & ~c) * -2 & ~((a & c & e) * 2 + (a & c ^ e))) * ((a & c ^ e) + (a & c & e) * 2 & (-a & ~c) * 2 + (a - 1 ^ c)) + ((a & c ^ e) + (a & c & e) * 2 & (-a ^ c) + (-a & ~c) * -2) * ((-a ^ c) + (-a & ~c) * -2 | (a & c ^ e) + (a & c & e) * 2) | (~c | e & a) + c) + (~(c + (~c | e & a)) & ((-a ^ c) + (-a & ~c) * -2 & ~((a & c & e) * 2 + (a & c ^ e))) * ((a & c ^ e) + (a & c & e) * 2 & (-a & ~c) * 2 + (a - 1 ^ c)) + ((a & c ^ e) + (a & c & e) * 2 & (-a ^ c) + (-a & ~c) * -2) * ((-a ^ c) + (-a & ~c) * -2 | (a & c ^ e) + (a & c & e) * 2)) * (((-a ^ c) + (-a & ~c) * -2 & ~((a & c & e) * 2 + (a & c ^ e))) * ((a & c ^ e) + (a & c & e) * 2 & (-a & ~c) * 2 + (a - 1 ^ c)) + ((a & c ^ e) + (a & c & e) * 2 & (-a ^ c) + (-a & ~c) * -2) * ((-a ^ c) + (-a & ~c) * -2 | (a & c ^ e) + (a & c & e) * 2) | ~(c + (~c | e & a))))",
                    "attributes": {
                        "numOps": 279,
                        "nestedExprLevel": 61,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 42.71047227926078,
                        "opsPercentages": {
                            "arithmetic": 30.824372759856633,
                            "mul": 15.053763440860216,
                            "bitwise": 54.121863799283155
                        },
                        "percentageDAGsCancel": 2.564102564102564
                    }
                },
                "msvc_O1": {
                    "expr": "-((~((~(a - 1) ^ c) + (~(a - 1) & ~c) * -2 & (c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e)) * ((~(a - 1) ^ c) + (~(a - 1) & ~c) * -2 | (c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e)) + (~(c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e) & (~(a - 1) ^ c) + (~(a - 1) & ~c) * -2) * (~(~(a - 1) ^ c) + (~(a - 1) & ~c) * -2 & (c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e)) & ~(a + 1 + (~a | e) | ~c) + c) * ((a + 1 + (~a | e) | ~c) + c & ((~(a - 1) ^ c) + (~(a - 1) & ~c) * -2 & (c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e)) * ((~(a - 1) ^ c) + (~(a - 1) & ~c) * -2 | (c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e)) + (~(c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e) & (~(a - 1) ^ c) + (~(a - 1) & ~c) * -2) * (~(~(a - 1) ^ c) + (~(a - 1) & ~c) * -2 & (c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e))) + (((~(a - 1) ^ c) + (~(a - 1) & ~c) * -2 & (c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e)) * ((~(a - 1) ^ c) + (~(a - 1) & ~c) * -2 | (c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e)) + (~(c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e) & (~(a - 1) ^ c) + (~(a - 1) & ~c) * -2) * (~(~(a - 1) ^ c) + (~(a - 1) & ~c) * -2 & (c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e)) | ~(a + 1 + (~a | e) | ~c) + c) * (((~(a - 1) ^ c) + (~(a - 1) & ~c) * -2 & (c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e)) * ((~(a - 1) ^ c) + (~(a - 1) & ~c) * -2 | (c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e)) + (~(c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e) & (~(a - 1) ^ c) + (~(a - 1) & ~c) * -2) * (~(~(a - 1) ^ c) + (~(a - 1) & ~c) * -2 & (c + (~c | a) * 2 + 2 & e * 2) + (c + (~c | a) + 1 ^ e)) & ~(a + 1 + (~a | e) | ~c) + c))",
                    "attributes": {
                        "numOps": 444,
                        "nestedExprLevel": 91,
                        "numDAGs": 48,
                        "percentDecreaseByOps": 8.829568788501026,
                        "opsPercentages": {
                            "arithmetic": 36.486486486486484,
                            "mul": 13.063063063063062,
                            "bitwise": 50.45045045045045
                        },
                        "percentageDAGsCancel": 4.166666666666666
                    }
                },
                "clang_O3": {
                    "expr": "-(((~(c & a ^ e) + (c & a & e) * 2 & (c ^ -a) + (-a & ~c) * -2) * (~(c ^ -a) + (-a & ~c) * -2 & (c & a ^ e) + (c & a & e) * 2) + ((c & a ^ e) + (c & a & e) * 2 | (c ^ -a) + (-a & ~c) * -2) * ((c & a ^ e) + (c & a & e) * 2 & (c ^ -a) + (-a & ~c) * -2) & (e & a | ~c) + c) * (~(~(c & a ^ e) + (c & a & e) * 2 & (c ^ -a) + (-a & ~c) * -2) * (~(c ^ -a) + (-a & ~c) * -2 & (c & a ^ e) + (c & a & e) * 2) + ((c & a ^ e) + (c & a & e) * 2 | (c ^ -a) + (-a & ~c) * -2) * ((c & a ^ e) + (c & a & e) * 2 & (c ^ -a) + (-a & ~c) * -2) & ~(e & a | ~c) + c) + ((~(c & a ^ e) + (c & a & e) * 2 & (c ^ -a) + (-a & ~c) * -2) * (~(c ^ -a) + (-a & ~c) * -2 & (c & a ^ e) + (c & a & e) * 2) + ((c & a ^ e) + (c & a & e) * 2 | (c ^ -a) + (-a & ~c) * -2) * ((c & a ^ e) + (c & a & e) * 2 & (c ^ -a) + (-a & ~c) * -2) | ~(e & a | ~c) + c) * ((~(c & a ^ e) + (c & a & e) * 2 & (c ^ -a) + (-a & ~c) * -2) * (~(c ^ -a) + (-a & ~c) * -2 & (c & a ^ e) + (c & a & e) * 2) + ((c & a ^ e) + (c & a & e) * 2 | (c ^ -a) + (-a & ~c) * -2) * ((c & a ^ e) + (c & a & e) * 2 & (c ^ -a) + (-a & ~c) * -2) & ~(e & a | ~c) + c))",
                    "attributes": {
                        "numOps": 288,
                        "nestedExprLevel": 55,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 40.86242299794661,
                        "opsPercentages": {
                            "arithmetic": 31.25,
                            "mul": 14.583333333333334,
                            "bitwise": 54.166666666666664
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                },
                "clang_default": {
                    "expr": "((((c ^ 0xffffffff | (a ^ 0xffffffff | e) - (a ^ 0xffffffff)) + c + 1 ^ 0xffffffff) + 1 & (((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 & (c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)))) * (((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 | (c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)))) + (((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 & ((c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff))) ^ 0xffffffff)) * ((((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 ^ 0xffffffff) & (c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff))))) * (((c ^ 0xffffffff | (a ^ 0xffffffff | e) - (a ^ 0xffffffff)) + c + 1 ^ 0xffffffff) + 1 | (((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 & (c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)))) * (((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 | (c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)))) + (((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 & ((c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff))) ^ 0xffffffff)) * ((((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 ^ 0xffffffff) & (c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff))))) + (((c ^ 0xffffffff | (a ^ 0xffffffff | e) - (a ^ 0xffffffff)) + c + 1 ^ 0xffffffff) + 1 & ((((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 & (c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)))) * (((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 | (c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)))) + (((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 & ((c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff))) ^ 0xffffffff)) * ((((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 ^ 0xffffffff) & (c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)))) ^ 0xffffffff)) * ((((c ^ 0xffffffff | (a ^ 0xffffffff | e) - (a ^ 0xffffffff)) + c + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) & (((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 & (c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)))) * (((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 | (c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)))) + (((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 & ((c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff))) ^ 0xffffffff)) * ((((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ e) + ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) & e) * 2 ^ 0xffffffff) & (c ^ a - 1 ^ 0xffffffff) - (((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)) + ((c ^ 0xffffffff) & (a - 1 ^ 0xffffffff)))))) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 487,
                        "nestedExprLevel": 188,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 30.800821355236142,
                            "mul": 5.338809034907597,
                            "bitwise": 63.860369609856264
                        },
                        "percentageDAGsCancel": 2.380952380952381
                    }
                },
                "msvc_default": {
                    "expr": "~((~((~c | (~a | e) - ~a) + 1 + c) + 1 & (((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2 & (~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1)))) * (((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2 | (~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1)))) + (((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2 & ~((~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1))))) * (~(((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2) & (~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1))))) * (~((~c | (~a | e) - ~a) + 1 + c) + 1 | (((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2 & (~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1)))) * (((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2 | (~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1)))) + (((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2 & ~((~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1))))) * (~(((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2) & (~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1))))) + -1 + (~((~c | (~a | e) - ~a) + 1 + c) + 1 & ~((((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2 & (~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1)))) * (((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2 | (~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1)))) + (((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2 & ~((~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1))))) * (~(((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2) & (~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1)))))) * (~(~((~c | (~a | e) - ~a) + 1 + c) + 1) & (((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2 & (~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1)))) * (((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2 | (~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1)))) + (((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2 & ~((~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1))))) * (~(((~c | a) - ~c ^ e) + ((~c | a) - ~c & e) * 2) & (~(a - 1) ^ c) - ((~c & ~(a - 1)) + (~c & ~(a - 1))))))",
                    "attributes": {
                        "numOps": 488,
                        "nestedExprLevel": 137,
                        "numDAGs": 42,
                        "percentDecreaseByOps": -0.20533880903490762,
                        "opsPercentages": {
                            "arithmetic": 30.942622950819672,
                            "mul": 5.327868852459016,
                            "bitwise": 63.729508196721305
                        },
                        "percentageDAGsCancel": 9.523809523809524
                    }
                },
                "gcc_O3": {
                    "expr": "-(~((e & a | ~c) + c | ((a - 1 ^ c) + ~c & -a * 2 & (c & a ^ e) + (e & c & a) * 2) * (~(c & a ^ e) + (e & c & a) * 2 & (-a ^ c) + ~c & -a * -2) + ((c & a ^ e) + (e & c & a) * 2 & (-a ^ c) + ~c & -a * -2) * ((c & a ^ e) + (e & c & a) * 2 | (-a ^ c) + ~c & -a * -2)) * ((e & a | ~c) + c & ((a - 1 ^ c) + ~c & -a * 2 & (c & a ^ e) + (e & c & a) * 2) * (~(c & a ^ e) + (e & c & a) * 2 & (-a ^ c) + ~c & -a * -2) + ((c & a ^ e) + (e & c & a) * 2 & (-a ^ c) + ~c & -a * -2) * ((c & a ^ e) + (e & c & a) * 2 | (-a ^ c) + ~c & -a * -2)) + (~(e & a | ~c) + c & ((a - 1 ^ c) + ~c & -a * 2 & (c & a ^ e) + (e & c & a) * 2) * (~(c & a ^ e) + (e & c & a) * 2 & (-a ^ c) + ~c & -a * -2) + ((c & a ^ e) + (e & c & a) * 2 & (-a ^ c) + ~c & -a * -2) * ((c & a ^ e) + (e & c & a) * 2 | (-a ^ c) + ~c & -a * -2)) * (~(e & a | ~c) + c | ((a - 1 ^ c) + ~c & -a * 2 & (c & a ^ e) + (e & c & a) * 2) * (~(c & a ^ e) + (e & c & a) * 2 & (-a ^ c) + ~c & -a * -2) + ((c & a ^ e) + (e & c & a) * 2 & (-a ^ c) + ~c & -a * -2) * ((c & a ^ e) + (e & c & a) * 2 | (-a ^ c) + ~c & -a * -2)))",
                    "attributes": {
                        "numOps": 279,
                        "nestedExprLevel": 39,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 42.71047227926078,
                        "opsPercentages": {
                            "arithmetic": 30.824372759856633,
                            "mul": 15.053763440860216,
                            "bitwise": 54.121863799283155
                        },
                        "percentageDAGsCancel": 11.627906976744185
                    }
                }
            }
        },
        {
            "num": 366,
            "gt": {
                "expr": "(((((b-e)|b)|(b&e))|(b^b)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 16.666666666666664,
                        "mul": 0.0,
                        "bitwise": 83.33333333333334
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "((((((((((b & ~ e) + (b & ~ e)) - (b ^ e)) + b) + 1) + ((- (((b & ~ e) + (b & ~ e)) - (b ^ e)) - 1) | (- b - 1))) + (((~ b | e) + b) + 1)) + 1) + ((- ((((((b & ~ e) + (b & ~ e)) - (b ^ e)) + b) + 1) + ((- (((b & ~ e) + (b & ~ e)) - (b ^ e)) - 1) | (- b - 1))) - 1) | (- (((~ b | e) + b) + 1) - 1))) & ~ (((b - b) - ((b | ~ b) << 1)) - 2)) + (((b - b) - ((b | ~ b) << 1)) - 2)",
                "attributes": {
                    "numOps": 75,
                    "nestedExprLevel": 43,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 53.333333333333336,
                        "mul": 0.0,
                        "bitwise": 46.666666666666664
                    },
                    "percentageDAGsCancel": 9.090909090909092
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-((~b | e) + b) - 2 | ~((~b | ((b ^ e) + (~e & b) * -2) - 1) + b + ((~e & b) * 2 - (b ^ e)) + 1)) + b * 2 + (~b | e) + ((~e & b) * 2 - (b ^ e)) + (~b | ((b ^ e) + (~e & b) * -2) - 1) + 3",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 14,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 38.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 41.30434782608695,
                            "mul": 10.869565217391305,
                            "bitwise": 47.82608695652174
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((((b ^ e - (~e & b * 2 + 2)) - (b ^ e + ~e & b * -2) - 1 | ~b) - b | (-2 - ~b | e) - b) + (b + ~e & b) * 2) - b ^ e) + (b ^ e + ~e & b * -2) - 1 | ~b + ~b | e + 3",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 9,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 41.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 43.18181818181818,
                            "mul": 9.090909090909092,
                            "bitwise": 47.72727272727273
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(-(~b | e) + b - 2 | ~(~e & b) * 2 - (e ^ b) | b) + (~b | e) + b + (~e & b) * 2 - (e ^ b) | b + 2",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 5,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 8.0,
                            "bitwise": 56.00000000000001
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_default": {
                    "expr": "((((b & (e ^ 0xffffffff)) + (b & (e ^ 0xffffffff))) - (b ^ e)) + b * 2 + (0xffffffff - (((b & (e ^ 0xffffffff)) + (b & (e ^ 0xffffffff))) - (b ^ e)) | 0xffffffff - b) + (b ^ 0xffffffff | e) + 3 + (0xffffffff - ((((b & (e ^ 0xffffffff)) + (b & (e ^ 0xffffffff))) - (b ^ e)) + b + 1 + (0xffffffff - (((b & (e ^ 0xffffffff)) + (b & (e ^ 0xffffffff))) - (b ^ e)) | 0xffffffff - b)) | 0xffffffff - ((b ^ 0xffffffff | e) + b + 1)) & ((b | b ^ 0xffffffff) * -2 - 2 ^ 0xffffffff)) + (b | b ^ 0xffffffff) * -2 + -2",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 29,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 12.0,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 4.545454545454546,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 3.125
                    }
                },
                "msvc_default": {
                    "expr": "(~b | e) + (((~e & b) + (~e & b)) - (b ^ e)) + b * 2 + (0xffffffff - (((~e & b) + (~e & b)) - (b ^ e)) | 0xffffffff - b) + 3 + (0xffffffff - ((((~e & b) + (~e & b)) - (b ^ e)) + b + 1 + (0xffffffff - (((~e & b) + (~e & b)) - (b ^ e)) | 0xffffffff - b)) | 0xffffffff - ((~b | e) + 1 + b))",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 19,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 30.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 46.15384615384615,
                            "mul": 1.9230769230769231,
                            "bitwise": 51.92307692307693
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "b + 1 + ((~e & b) * 2 - (e ^ b)) + (((e ^ b) + (~e & b) * -2) - 1 | ~b) + 2 + b + (~b | e) + (~b + 1 + ((~e & b) * 2 - (e ^ b)) + (((e ^ b) + (~e & b) * -2) - 1 | ~b) | -b + (~b | e) - 2)",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 13,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 37.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 44.680851063829785,
                            "mul": 8.51063829787234,
                            "bitwise": 46.808510638297875
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 367,
            "gt": {
                "expr": "(((b-(-(b+b)))^(~(d+d))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 0.0,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((b + ~ (~ (((b | b) << 1) - (b ^ b)) + 1)) + 1) - (- (((d ^ ~ d) + ((d | d) << 1)) + 1) - 1)) - ((((b + ~ (~ (((b | b) << 1) - (b ^ b)) + 1)) + 1) | ~ (- (((d ^ ~ d) + ((d | d) << 1)) + 1) - 1)) + (((b + ~ (~ (((b | b) << 1) - (b ^ b)) + 1)) + 1) | ~ (- (((d ^ ~ d) + ((d | d) << 1)) + 1) - 1)))) - 2",
                "attributes": {
                    "numOps": 59,
                    "nestedExprLevel": 37,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 47.45762711864407,
                        "mul": 0.0,
                        "bitwise": 52.54237288135594
                    },
                    "percentageDAGsCancel": 13.043478260869565
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(b * 3 - ~(d * 2)) + (d * 2 | b * 3) * -2 + -2",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 79.66101694915254,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 41.66666666666667,
                            "bitwise": 16.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "b * 2 + -1 + (d - (b + 1 + b * 2 + -1 | d * 2)) * 2 + b",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 3,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 76.27118644067797,
                        "opsPercentages": {
                            "arithmetic": 64.28571428571429,
                            "mul": 28.57142857142857,
                            "bitwise": 7.142857142857142
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((d * 2 | b * 3) * 2) + b * 3 + d * 2",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 84.7457627118644,
                        "opsPercentages": {
                            "arithmetic": 22.22222222222222,
                            "mul": 55.55555555555556,
                            "bitwise": 22.22222222222222
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b + ((b * 2 ^ 0xffffffff) + 1 ^ 0xffffffff)) - (-1 - ((d ^ d ^ 0xffffffff) + d * 2 + 1))) - ((b + ((b * 2 ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 | 0xffffffff - ((d ^ d ^ 0xffffffff) + d * 2 + 1) ^ 0xffffffff) + (b + ((b * 2 ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 | 0xffffffff - ((d ^ d ^ 0xffffffff) + d * 2 + 1) ^ 0xffffffff))) + -1",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 15,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 23.728813559322035,
                        "opsPercentages": {
                            "arithmetic": 51.11111111111111,
                            "mul": 13.333333333333334,
                            "bitwise": 35.55555555555556
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "msvc_default": {
                    "expr": "(((b + ~(~(b * 2) + 1)) - (d * -2 + -1)) - ((b + 1 + ~(~(b * 2) + 1) | ~(d * -2 - 1)) + (b + 1 + ~(~(b * 2) + 1) | ~(d * -2 - 1)))) + -1",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 13,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 38.983050847457626,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 16.666666666666664,
                            "bitwise": 27.77777777777778
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(b * 3 - ~(d * 2)) + (b * 3 | d * 2) * -2 + -2",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 79.66101694915254,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 41.66666666666667,
                            "bitwise": 16.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 368,
            "gt": {
                "expr": "(((~(c*c))|((c|(b-c))^(c^c))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 14.285714285714285,
                        "mul": 14.285714285714285,
                        "bitwise": 71.42857142857143
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "(((- ((c & c) * (c | c) + (c & ~ c) * (~ c & c)) - 1) + (((((c + ((b & ~ c) - (~ b & c))) + 1) + ((- c - 1) | (- ((b & ~ c) - (~ b & c)) - 1))) | (((c - c) - ((c | ~ c) + (c | ~ c))) - 2)) - ((((c + ((b & ~ c) - (~ b & c))) + 1) + ((- c - 1) | (- ((b & ~ c) - (~ b & c)) - 1))) & (((c - c) - ((c | ~ c) + (c | ~ c))) - 2)))) + 1) + ((- (- ((c & c) * (c | c) + (c & ~ c) * (~ c & c)) - 1) - 1) | (- (((((c + ((b & ~ c) - (~ b & c))) + 1) + ((- c - 1) | (- ((b & ~ c) - (~ b & c)) - 1))) | (((c - c) - ((c | ~ c) + (c | ~ c))) - 2)) - ((((c + ((b & ~ c) - (~ b & c))) + 1) + ((- c - 1) | (- ((b & ~ c) - (~ b & c)) - 1))) & (((c - c) - ((c | ~ c) + (c | ~ c))) - 2))) - 1))",
                "attributes": {
                    "numOps": 140,
                    "nestedExprLevel": 72,
                    "numDAGs": 38,
                    "opsPercentages": {
                        "arithmetic": 47.85714285714286,
                        "mul": 2.857142857142857,
                        "bitwise": 49.28571428571429
                    },
                    "percentageDAGsCancel": 26.31578947368421
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~((((~b & c) - (~c & b)) - 1 | ~c) + c + ((~c & b) - (~b & c)) + 1) | c * c) + (((~b & c) - (~c & b)) - 1 | ~c) + c + ((~c & b) - (~b & c)) + ~(c * c) + 2",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 14,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 72.14285714285714,
                        "opsPercentages": {
                            "arithmetic": 35.8974358974359,
                            "mul": 5.128205128205128,
                            "bitwise": 58.97435897435898
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~~c & b + ((((~b & c) - ~c & b) - 1 | ~c) - (~b & c)) + c - 1 | c * c) - c * c) + 1 + ~c & b + ((((~b & c) - ~c & b) - 1 | ~c) - (~b & c)) + c",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 11,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 72.85714285714285,
                        "opsPercentages": {
                            "arithmetic": 36.84210526315789,
                            "mul": 5.263157894736842,
                            "bitwise": 57.89473684210527
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "clang_O3": {
                    "expr": "(~(~c & b) - (~b & c) | c | c * c) + ((~c & b) - (~b & c) | c - c * c)",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 5,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 87.14285714285714,
                        "opsPercentages": {
                            "arithmetic": 22.22222222222222,
                            "mul": 11.11111111111111,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c + ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + 1 + (0xffffffff - c | 0xffffffff - ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c))) | 0xfffffffe - ((c | c ^ 0xffffffff) + (c | c ^ 0xffffffff))) - (c + ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + 1 + (0xffffffff - c | 0xffffffff - ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c))) & 0xfffffffe - ((c | c ^ 0xffffffff) + (c | c ^ 0xffffffff)))) - (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))) + (0xffffffff - (-1 - (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))) | 0xffffffff - ((c + ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + 1 + (0xffffffff - c | 0xffffffff - ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c))) | 0xfffffffe - ((c | c ^ 0xffffffff) + (c | c ^ 0xffffffff))) - (c + ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + 1 + (0xffffffff - c | 0xffffffff - ((b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c))) & 0xfffffffe - ((c | c ^ 0xffffffff) + (c | c ^ 0xffffffff)))))",
                    "attributes": {
                        "numOps": 115,
                        "nestedExprLevel": 52,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 17.857142857142858,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 3.4782608695652173,
                            "bitwise": 56.52173913043478
                        },
                        "percentageDAGsCancel": 13.793103448275861
                    }
                },
                "msvc_default": {
                    "expr": "((((~c & b) - (~b & c)) + c + 1 + (0xffffffff - c | 0xffffffff - ((~c & b) - (~b & c)))) - c * c) + (0xffffffff - (-1 - c * c) | 0xffffffff - (((~c & b) - (~b & c)) + c + 1 + (0xffffffff - c | 0xffffffff - ((~c & b) - (~b & c)))))",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 15,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 70.71428571428572,
                        "opsPercentages": {
                            "arithmetic": 48.78048780487805,
                            "mul": 4.878048780487805,
                            "bitwise": 46.34146341463415
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "gcc_O3": {
                    "expr": "(c + 1 + (~c & b - (~b & c)) + (((~b & c) - ~c & b) - 1 | ~c) - c * c) + (~c + 1 + (~c & b - (~b & c)) + (((~b & c) - ~c & b) - 1 | ~c) | c * c)",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 10,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 72.85714285714285,
                        "opsPercentages": {
                            "arithmetic": 36.84210526315789,
                            "mul": 5.263157894736842,
                            "bitwise": 57.89473684210527
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 369,
            "gt": {
                "expr": "(((d+(c&c))+((~((c|(c+d))*d))|(~(d&d)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 10.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((((d | ((~ c | c) - ~ c)) << 1) - (d ^ ((~ c | c) - ~ c))) ^ ~ (((- (((((c + ((c | d) + (c & d))) + 1) + ((- c - 1) | (- ((c | d) + (c & d)) - 1))) & d) * ((((c + ((c | d) + (c & d))) + 1) + ((- c - 1) | (- ((c | d) + (c & d)) - 1))) | d) + ((((c + ((c | d) + (c & d))) + 1) + ((- c - 1) | (- ((c | d) + (c & d)) - 1))) & ~ d) * (~ (((c + ((c | d) + (c & d))) + 1) + ((- c - 1) | (- ((c | d) + (c & d)) - 1))) & d)) - 1) & ~ (- ((~ d | d) - ~ d) - 1)) + (- ((~ d | d) - ~ d) - 1))) + (((((d | ((~ c | c) - ~ c)) << 1) - (d ^ ((~ c | c) - ~ c))) | (((- (((((c + ((c | d) + (c & d))) + 1) + ((- c - 1) | (- ((c | d) + (c & d)) - 1))) & d) * ((((c + ((c | d) + (c & d))) + 1) + ((- c - 1) | (- ((c | d) + (c & d)) - 1))) | d) + ((((c + ((c | d) + (c & d))) + 1) + ((- c - 1) | (- ((c | d) + (c & d)) - 1))) & ~ d) * (~ (((c + ((c | d) + (c & d))) + 1) + ((- c - 1) | (- ((c | d) + (c & d)) - 1))) & d)) - 1) & ~ (- ((~ d | d) - ~ d) - 1)) + (- ((~ d | d) - ~ d) - 1))) + ((((d | ((~ c | c) - ~ c)) << 1) - (d ^ ((~ c | c) - ~ c))) | (((- (((((c + ((c | d) + (c & d))) + 1) + ((- c - 1) | (- ((c | d) + (c & d)) - 1))) & d) * ((((c + ((c | d) + (c & d))) + 1) + ((- c - 1) | (- ((c | d) + (c & d)) - 1))) | d) + ((((c + ((c | d) + (c & d))) + 1) + ((- c - 1) | (- ((c | d) + (c & d)) - 1))) & ~ d) * (~ (((c + ((c | d) + (c & d))) + 1) + ((- c - 1) | (- ((c | d) + (c & d)) - 1))) & d)) - 1) & ~ (- ((~ d | d) - ~ d) - 1)) + (- ((~ d | d) - ~ d) - 1))))) + 1",
                "attributes": {
                    "numOps": 289,
                    "nestedExprLevel": 169,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 51.903114186851205,
                        "mul": 2.0761245674740483,
                        "bitwise": 46.02076124567474
                    },
                    "percentageDAGsCancel": 9.523809523809524
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~d + (~(((d + c & c) - (c * 2 + d + 1) & d) * (c * 2 + d + 1 + ~(d + c & c) & ~d) + (~(d + c & c) + c * 2 + d + 1 & d) * (~(d + c & c) + c * 2 + d + 1 | d)) & d) | (d | c) * 2 - (d ^ c)) * 2 + ((d | c) * 2 - (d ^ c) ^ ((d + c & c) - (c * 2 + d + 1) & d) * (c * 2 + d + 1 + ~(d + c & c) & ~d) + (~(d + c & c) + c * 2 + d + 1 & d) * (~(d + c & c) + c * 2 + d + 1 | d) & d) + 1",
                    "attributes": {
                        "numOps": 88,
                        "nestedExprLevel": 18,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 69.55017301038062,
                        "opsPercentages": {
                            "arithmetic": 44.31818181818182,
                            "mul": 17.045454545454543,
                            "bitwise": 38.63636363636363
                        },
                        "percentageDAGsCancel": 9.375
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~((~(~(c | d) - (c & d) | ~c) + (c & d) + (c | d) + 1 + c & d) * ((~(c | d) - (c & d) | ~c) + (c & d) + (c | d) + 1 + c & ~d)) - ((~(c | d) - (c & d) | ~c) + (c & d) + (c | d) + 1 + c | d) * ((~(c | d) - (c & d) | ~c) + (c & d) + (c | d) + 1 + c & d) & d) + ~d ^ (c * 2 | d * 2) - (c ^ d)) + ((c * 2 | d * 2) - (c ^ d) | (~((~(~(c | d) - (c & d) | ~c) + (c & d) + (c | d) + 1 + c & d) * ((~(c | d) - (c & d) | ~c) + (c & d) + (c | d) + 1 + c & ~d)) - ((~(c | d) - (c & d) | ~c) + (c & d) + (c | d) + 1 + c | d) * ((~(c | d) - (c & d) | ~c) + (c & d) + (c | d) + 1 + c & d) & d) + ~d) * 2 + 1",
                    "attributes": {
                        "numOps": 138,
                        "nestedExprLevel": 41,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 52.24913494809689,
                        "opsPercentages": {
                            "arithmetic": 34.78260869565217,
                            "mul": 6.521739130434782,
                            "bitwise": 58.69565217391305
                        },
                        "percentageDAGsCancel": 7.894736842105263
                    }
                },
                "clang_O3": {
                    "expr": "(d - ~((~c & d) * (c & ~d) + (c | d) * (c & d)) & d ^ (d | c) * 2 - (d ^ c)) + (~d + ~((~c & d) * (c & ~d) + (c | d) * (c & d)) & d | (d | c) * 2 - (d ^ c)) * 2 + 1",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 11,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 86.85121107266436,
                        "opsPercentages": {
                            "arithmetic": 21.052631578947366,
                            "mul": 18.421052631578945,
                            "bitwise": 60.526315789473685
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "clang_default": {
                    "expr": "((d | (c ^ 0xffffffff | c) - (c ^ 0xffffffff)) * 2 - (d ^ (c ^ 0xffffffff | c) - (c ^ 0xffffffff)) ^ (0xffffffff - ((c + (c | d) + (c & d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) & d ) * (c + (c | d) + (c & d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) | d) + (c + (c | d) + (c & d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) & (d ^ 0xffffffff)) * ((c + (c | d) + (c & d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) ^ 0xffffffff) & d)) & (0xffffffff - ((d ^ 0xffffffff | d) - (d ^ 0xffffffff)) ^ 0xffffffff)) + (-1 - ((d ^ 0xffffffff | d) - (d ^ 0xffffffff))) ^ 0xffffffff) + ((d | (c ^ 0xffffffff | c) - (c ^ 0xffffffff)) * 2 - (d ^ (c ^ 0xffffffff | c) - (c ^ 0xffffffff)) | (0xffffffff - ((c + (c | d) + (c & d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) & d ) * (c + (c | d) + (c & d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) | d) + (c + (c | d) + (c & d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) & (d ^ 0xffffffff)) * ((c + (c | d) + (c & d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) ^ 0xffffffff) & d)) & (0xffffffff - ((d ^ 0xffffffff | d) - (d ^ 0xffffffff)) ^ 0xffffffff)) + (-1 - ((d ^ 0xffffffff | d) - (d ^ 0xffffffff)))) + ((d | (c ^ 0xffffffff | c) - (c ^ 0xffffffff)) * 2 - (d ^ (c ^ 0xffffffff | c) - (c ^ 0xffffffff)) | (0xffffffff - ((c + (c | d) + (c & d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) & d ) * (c + (c | d) + (c & d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) | d) + (c + (c | d) + (c & d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) & (d ^ 0xffffffff)) * ((c + (c | d) + (c & d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) ^ 0xffffffff) & d)) & (0xffffffff - ((d ^ 0xffffffff | d) - (d ^ 0xffffffff)) ^ 0xffffffff)) + (-1 - ((d ^ 0xffffffff | d) - (d ^ 0xffffffff)))) + 1",
                    "attributes": {
                        "numOps": 259,
                        "nestedExprLevel": 103,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 10.380622837370241,
                        "opsPercentages": {
                            "arithmetic": 46.33204633204633,
                            "mul": 3.474903474903475,
                            "bitwise": 50.19305019305019
                        },
                        "percentageDAGsCancel": 14.634146341463413
                    }
                },
                "msvc_default": {
                    "expr": "((-~c - 1 | d) * 2 - (-~c - 1 ^ d) ^ ~(((0xffffffff - (((c & d) + c + (c | d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) & d) * ((c & d) + c + (c | d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) | d) + ((c & d) + c + (c | d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) & ~d) * (~((c & d) + c + (c | d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d)))) & d)) & ~(0xffffffff - (-1 - ~d))) - 1) - (-1 - ~d))) + 1 + ((-~c - 1 | d) * 2 - (-~c - 1 ^ d) | ((0xffffffff - (((c & d) + c + (c | d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) & d) * ((c & d) + c + (c | d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) | d) + ((c & d) + c + (c | d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) & ~d) * (~((c & d) + c + (c | d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d)))) & d)) & ~(0xffffffff - (-1 - ~d))) - 1) - (-1 - ~d)) + ((-~c - 1 | d) * 2 - (-~c - 1 ^ d) | ((0xffffffff - (((c & d) + c + (c | d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) & d) * ((c & d) + c + (c | d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) | d) + ((c & d) + c + (c | d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d))) & ~d) * (~((c & d) + c + (c | d) + 1 + (0xffffffff - c | 0xffffffff - ((c | d) + (c & d)))) & d)) & ~(0xffffffff - (-1 - ~d))) - 1) - (-1 - ~d))",
                    "attributes": {
                        "numOps": 244,
                        "nestedExprLevel": 86,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 15.570934256055363,
                        "opsPercentages": {
                            "arithmetic": 52.86885245901639,
                            "mul": 3.6885245901639343,
                            "bitwise": 43.44262295081967
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "gcc_O3": {
                    "expr": "((d + c & c - d + c + 1 + c & d) * (~d + c & c + d + c + 1 + c & ~d) + (~d + c & c + d + c + 1 + c | d) * (~d + c & c + d + c + 1 + c & d) & d ^ (d | c) * 2 - (d ^ c)) + 1 + ((~(d + c & c - d + c + 1 + c & d) * (~d + c & c + d + c + 1 + c & ~d) + (~d + c & c + d + c + 1 + c | d) * (~d + c & c + d + c + 1 + c & d) & d) + ~d | (d | c) * 2 - (d ^ c)) * 2",
                    "attributes": {
                        "numOps": 88,
                        "nestedExprLevel": 10,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 69.55017301038062,
                        "opsPercentages": {
                            "arithmetic": 53.40909090909091,
                            "mul": 7.954545454545454,
                            "bitwise": 38.63636363636363
                        },
                        "percentageDAGsCancel": 17.142857142857142
                    }
                }
            }
        },
        {
            "num": 370,
            "gt": {
                "expr": "((~(((-c)-(a*c))&(-(a|c)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 14.285714285714285,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "- ((~ ((~ (c - 1) & ~ ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) - (~ (~ (c - 1)) & ((a & c) * (a | c) + (a & ~ c) * (~ a & c)))) | ~ (((a & ~ c) + c) - 1)) - ~ ((~ (c - 1) & ~ ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) - (~ (~ (c - 1)) & ((a & c) * (a | c) + (a & ~ c) * (~ a & c))))) - 1",
                "attributes": {
                    "numOps": 65,
                    "nestedExprLevel": 25,
                    "numDAGs": 24,
                    "opsPercentages": {
                        "arithmetic": 23.076923076923077,
                        "mul": 12.307692307692308,
                        "bitwise": 64.61538461538461
                    },
                    "percentageDAGsCancel": 8.333333333333332
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c + (~c & a)) - 1 | ((a & c) * (a | c) + (~a & c) * (~c & a) | c - 1) + ((~a & c) * (~c & a) + (a & c) * (a | c) & c - 1)",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 8,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 56.92307692307692,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 14.285714285714285,
                            "bitwise": 60.71428571428571
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~((a | c) * (a & c) + (~a & c) * (~c & a) | c - 1) - ((a | c) * (a & c) + (~a & c) * (~c & a) & c - 1)) - (-((~c & a) + c) | ~(~((a | c) * (a & c) + (~a & c) * (~c & a) | c - 1) - ((a | c) * (a & c) + (~a & c) * (~c & a) & c - 1)))) + -1",
                    "attributes": {
                        "numOps": 58,
                        "nestedExprLevel": 18,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 10.76923076923077,
                        "opsPercentages": {
                            "arithmetic": 25.862068965517242,
                            "mul": 13.793103448275861,
                            "bitwise": 60.3448275862069
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_O3": {
                    "expr": "((~c & a) + c) - 1 | (~a & c) * (~c & a) + c + -1 + (c | a) * (c & a)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 73.84615384615385,
                        "opsPercentages": {
                            "arithmetic": 35.294117647058826,
                            "mul": 11.76470588235294,
                            "bitwise": 52.94117647058824
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((((c - 1 ^ 0xffffffff) & ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) ^ 0xffffffff)) - (c - 1 & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) ^ 0xffffffff | ((a & (c ^ 0xffffffff)) + c) - 1 ^ 0xffffffff) - (((c - 1 ^ 0xffffffff) & ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) ^ 0xffffffff)) - (c - 1 & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 25,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 6.153846153846154,
                        "opsPercentages": {
                            "arithmetic": 24.59016393442623,
                            "mul": 13.114754098360656,
                            "bitwise": 62.295081967213115
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((~((~(c - 1) & ~((a & c) * (a | c) + (~c & a) * (~a & c))) - (c - 1 & (a & c) * (a | c) + (~c & a) * (~a & c))) | ~(((~c & a) - 1) + c)) - ~((~(c - 1) & ~((a & c) * (a | c) + (~c & a) * (~a & c))) - (c - 1 & (a & c) * (a | c) + (~c & a) * (~a & c))))",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 21,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 6.153846153846154,
                        "opsPercentages": {
                            "arithmetic": 24.59016393442623,
                            "mul": 13.114754098360656,
                            "bitwise": 62.295081967213115
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "gcc_O3": {
                    "expr": "(c - 1) + (a & c) * (a | c) + (~a & c) * (~c & a) | ((~c & a) - 1) + c",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 5,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 75.38461538461539,
                        "opsPercentages": {
                            "arithmetic": 31.25,
                            "mul": 12.5,
                            "bitwise": 56.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 371,
            "gt": {
                "expr": "(((~(((b-b)^c)^(-c)))-((c*c)^(b*(-c)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "((((((((b ^ b) - ((~ b & b) << 1)) | c) - (((b ^ b) - ((~ b & b) << 1)) & c)) & ~ (c - 1)) - (((((b ^ b) - ((~ b & b) << 1)) | c) - (((b ^ b) - ((~ b & b) << 1)) & c)) | ~ (c - 1))) - 1) ^ ((((c & c) * (c | c) + (c & ~ c) * (~ c & c)) | ((b & ~ (c - 1)) * (b | ~ (c - 1)) + (b & ~ (~ (c - 1))) * (~ b & ~ (c - 1)))) - (((c & c) * (c | c) + (c & ~ c) * (~ c & c)) & ((b & ~ (c - 1)) * (b | ~ (c - 1)) + (b & ~ (~ (c - 1))) * (~ b & ~ (c - 1)))))) - ((~ (((((((b ^ b) - ((~ b & b) << 1)) | c) - (((b ^ b) - ((~ b & b) << 1)) & c)) & ~ (c - 1)) - (((((b ^ b) - ((~ b & b) << 1)) | c) - (((b ^ b) - ((~ b & b) << 1)) & c)) | ~ (c - 1))) - 1) & ((((c & c) * (c | c) + (c & ~ c) * (~ c & c)) | ((b & ~ (c - 1)) * (b | ~ (c - 1)) + (b & ~ (~ (c - 1))) * (~ b & ~ (c - 1)))) - (((c & c) * (c | c) + (c & ~ c) * (~ c & c)) & ((b & ~ (c - 1)) * (b | ~ (c - 1)) + (b & ~ (~ (c - 1))) * (~ b & ~ (c - 1)))))) + (~ (((((((b ^ b) - ((~ b & b) << 1)) | c) - (((b ^ b) - ((~ b & b) << 1)) & c)) & ~ (c - 1)) - (((((b ^ b) - ((~ b & b) << 1)) | c) - (((b ^ b) - ((~ b & b) << 1)) & c)) | ~ (c - 1))) - 1) & ((((c & c) * (c | c) + (c & ~ c) * (~ c & c)) | ((b & ~ (c - 1)) * (b | ~ (c - 1)) + (b & ~ (~ (c - 1))) * (~ b & ~ (c - 1)))) - (((c & c) * (c | c) + (c & ~ c) * (~ c & c)) & ((b & ~ (c - 1)) * (b | ~ (c - 1)) + (b & ~ (~ (c - 1))) * (~ b & ~ (c - 1)))))))",
                "attributes": {
                    "numOps": 274,
                    "nestedExprLevel": 129,
                    "numDAGs": 38,
                    "opsPercentages": {
                        "arithmetic": 25.91240875912409,
                        "mul": 8.75912408759124,
                        "bitwise": 65.32846715328468
                    },
                    "percentageDAGsCancel": 34.21052631578947
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c - 1 ^ c ^ (c - 1 & b) * (-c & ~b) + (-c & b) * (-c | b) ^ c * c) + (((c - 1 & b) * (-c & ~b) + (-c & b) * (-c | b) ^ c * c) & (-c ^ c)) * -2",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 9,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 86.4963503649635,
                        "opsPercentages": {
                            "arithmetic": 37.83783783783784,
                            "mul": 18.91891891891892,
                            "bitwise": 43.24324324324324
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((~(c - 1) & c) - (~(c - 1) | c)) - 1 ^ ((~(c - 1) | b) * (~(c - 1) & b) + (~b & ~(c - 1)) * (c - 1 & b) | c * c) - ((~(c - 1) | b) * (~(c - 1) & b) + (~b & ~(c - 1)) * (c - 1 & b) & c * c)) + (~((~(c - 1) & c) - (~(c - 1) | c)) - 1 & ((~(c - 1) | b) * (~(c - 1) & b) + (~b & ~(c - 1)) * (c - 1 & b) | c * c) - ((~(c - 1) | b) * (~(c - 1) & b) + (~b & ~(c - 1)) * (c - 1 & b) & c * c)) * -2",
                    "attributes": {
                        "numOps": 92,
                        "nestedExprLevel": 29,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 66.42335766423358,
                        "opsPercentages": {
                            "arithmetic": 34.78260869565217,
                            "mul": 14.130434782608695,
                            "bitwise": 51.08695652173913
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~(-c ^ c ^ (-c & ~b) * (c - 1 & b) + (-c | b) * (-c & b) ^ c * c) + ((-c & ~b) * (c - 1 & b) + (-c | b) * (-c & b) ^ c * c & (-c ^ c)) * -2",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 8,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 86.13138686131386,
                        "opsPercentages": {
                            "arithmetic": 36.84210526315789,
                            "mul": 18.421052631578945,
                            "bitwise": 44.73684210526316
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((((b ^ 0xffffffff) & b) * -2 | c) - (((b ^ 0xffffffff) & b) * -2 & c) & (c - 1 ^ 0xffffffff)) - ((((b ^ 0xffffffff) & b) * -2 | c) - (((b ^ 0xffffffff) & b) * -2 & c) | c - 1 ^ 0xffffffff)) - 1 ^ (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) | (b & (c - 1 ^ 0xffffffff)) * (b | c - 1 ^ 0xffffffff) + (b & c - 1) * ((b ^ 0xffffffff) & (c - 1 ^ 0xffffffff))) - (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) & (b & (c - 1 ^ 0xffffffff)) * (b | c - 1 ^ 0xffffffff) + (b & c - 1) * ((b ^ 0xffffffff) & (c - 1 ^ 0xffffffff)))) - ((((((((b ^ 0xffffffff) & b) * -2 | c) - (((b ^ 0xffffffff) & b) * -2 & c) & (c - 1 ^ 0xffffffff)) - ((((b ^ 0xffffffff) & b) * -2 | c) - (((b ^ 0xffffffff) & b) * -2 & c) | c - 1 ^ 0xffffffff)) - 1 ^ 0xffffffff) & (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) | (b & (c - 1 ^ 0xffffffff)) * (b | c - 1 ^ 0xffffffff) + (b & c - 1) * ((b ^ 0xffffffff) & (c - 1 ^ 0xffffffff))) - (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) & (b & (c - 1 ^ 0xffffffff)) * (b | c - 1 ^ 0xffffffff) + (b & c - 1) * ((b ^ 0xffffffff) & (c - 1 ^ 0xffffffff)))) + (((((((b ^ 0xffffffff) & b) * -2 | c) - (((b ^ 0xffffffff) & b) * -2 & c) & (c - 1 ^ 0xffffffff)) - ((((b ^ 0xffffffff) & b) * -2 | c) - (((b ^ 0xffffffff) & b) * -2 & c) | c - 1 ^ 0xffffffff)) - 1 ^ 0xffffffff) & (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) | (b & (c - 1 ^ 0xffffffff)) * (b | c - 1 ^ 0xffffffff) + (b & c - 1) * ((b ^ 0xffffffff) & (c - 1 ^ 0xffffffff))) - (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) & (b & (c - 1 ^ 0xffffffff)) * (b | c - 1 ^ 0xffffffff) + (b & c - 1) * ((b ^ 0xffffffff) & (c - 1 ^ 0xffffffff)))))",
                    "attributes": {
                        "numOps": 238,
                        "nestedExprLevel": 85,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 13.138686131386862,
                        "opsPercentages": {
                            "arithmetic": 29.831932773109244,
                            "mul": 15.126050420168067,
                            "bitwise": 55.04201680672269
                        },
                        "percentageDAGsCancel": 23.52941176470588
                    }
                },
                "msvc_default": {
                    "expr": "(((c & ~(c - 1)) - (c | ~(c - 1))) - 1 ^ (c * c | (~(c - 1) & b) * (~(c - 1) | b) + (c - 1 & b) * (~b & ~(c - 1))) - (c * c & (~(c - 1) & b) * (~(c - 1) | b) + (c - 1 & b) * (~b & ~(c - 1)))) - ((~(((c & ~(c - 1)) - (c | ~(c - 1))) - 1) & (c * c | (~(c - 1) & b) * (~(c - 1) | b) + (c - 1 & b) * (~b & ~(c - 1))) - (c * c & (~(c - 1) & b) * (~(c - 1) | b) + (c - 1 & b) * (~b & ~(c - 1)))) + (~(((c & ~(c - 1)) - (c | ~(c - 1))) - 1) & (c * c | (~(c - 1) & b) * (~(c - 1) | b) + (c - 1 & b) * (~b & ~(c - 1))) - (c * c & (~(c - 1) & b) * (~(c - 1) | b) + (c - 1 & b) * (~b & ~(c - 1)))))",
                    "attributes": {
                        "numOps": 136,
                        "nestedExprLevel": 47,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 50.36496350364964,
                        "opsPercentages": {
                            "arithmetic": 34.55882352941176,
                            "mul": 13.23529411764706,
                            "bitwise": 52.20588235294118
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "gcc_O3": {
                    "expr": "(c - 1 ^ c ^ (~b & -c) * (c - 1 & b) + (-c & b) * (b | -c) ^ c * c) + ((-c ^ c) & (~b & -c) * (c - 1 & b) + (-c & b) * (b | -c) ^ c * c) * -2",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 8,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 86.4963503649635,
                        "opsPercentages": {
                            "arithmetic": 37.83783783783784,
                            "mul": 18.91891891891892,
                            "bitwise": 43.24324324324324
                        },
                        "percentageDAGsCancel": 10.0
                    }
                }
            }
        },
        {
            "num": 372,
            "gt": {
                "expr": "(((e+e)&(e|(e|b))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ ((e | e) + (e & e)) | ((e & ~ ((e & ~ b) + b)) + ((e & ~ b) + b))) - ~ ((e | e) + (e & e))",
                "attributes": {
                    "numOps": 19,
                    "nestedExprLevel": 10,
                    "numDAGs": 12,
                    "opsPercentages": {
                        "arithmetic": 31.57894736842105,
                        "mul": 0.0,
                        "bitwise": 68.42105263157895
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "e * 2 & (~(b + (~b & e)) & e) + b + (~b & e)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 42.10526315789473,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 9.090909090909092,
                            "bitwise": 63.63636363636363
                        },
                        "percentageDAGsCancel": 22.22222222222222
                    }
                },
                "msvc_O1": {
                    "expr": "e * 2 + 1 + ((~((~b & e) + b) & e) + (~b & e) + b | ~(e * 2))",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 21.052631578947366,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 13.333333333333334,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_O3": {
                    "expr": "(~b & e) + b & e * 2",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 73.68421052631578,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(e * 2 ^ 0xffffffff | (e & ((e & (b ^ 0xffffffff)) + b ^ 0xffffffff)) + (e & (b ^ 0xffffffff)) + b) - (e * 2 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 7,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 21.052631578947366,
                        "opsPercentages": {
                            "arithmetic": 26.666666666666668,
                            "mul": 13.333333333333334,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 18.181818181818183
                    }
                },
                "msvc_default": {
                    "expr": "(~(e * 2) | (~b & e) + (~((~b & e) + b) & e) + b) - ~(e * 2)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 21.052631578947366,
                        "opsPercentages": {
                            "arithmetic": 26.666666666666668,
                            "mul": 13.333333333333334,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "gcc_O3": {
                    "expr": "(~b & e) + b & e * 2",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 73.68421052631578,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                }
            }
        },
        {
            "num": 373,
            "gt": {
                "expr": "(((-((e|e)+((~e)&c)))+(-((-c)*(-b)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 10.0,
                        "bitwise": 30.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "(((~ (((((e + e) + 1) + ((- e - 1) | (- e - 1))) | ((~ (- e - 1) | c) - ~ (- e - 1))) + ((((e + e) + 1) + ((- e - 1) | (- e - 1))) & ((~ (- e - 1) | c) - ~ (- e - 1)))) + 1) | (~ (((~ c + 1) & (~ b + 1)) * ((~ c + 1) | (~ b + 1)) + ((~ c + 1) & ~ (~ b + 1)) * (~ (~ c + 1) & (~ b + 1))) + 1)) + ((~ (((((e + e) + 1) + ((- e - 1) | (- e - 1))) | ((~ (- e - 1) | c) - ~ (- e - 1))) + ((((e + e) + 1) + ((- e - 1) | (- e - 1))) & ((~ (- e - 1) | c) - ~ (- e - 1)))) + 1) | (~ (((~ c + 1) & (~ b + 1)) * ((~ c + 1) | (~ b + 1)) + ((~ c + 1) & ~ (~ b + 1)) * (~ (~ c + 1) & (~ b + 1))) + 1))) - ((~ (((((e + e) + 1) + ((- e - 1) | (- e - 1))) | ((~ (- e - 1) | c) - ~ (- e - 1))) + ((((e + e) + 1) + ((- e - 1) | (- e - 1))) & ((~ (- e - 1) | c) - ~ (- e - 1)))) + 1) ^ (~ (((~ c + 1) & (~ b + 1)) * ((~ c + 1) | (~ b + 1)) + ((~ c + 1) & ~ (~ b + 1)) * (~ (~ c + 1) & (~ b + 1))) + 1))",
                "attributes": {
                    "numOps": 197,
                    "nestedExprLevel": 89,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 55.83756345177665,
                        "mul": 3.0456852791878175,
                        "bitwise": 41.11675126903553
                    },
                    "percentageDAGsCancel": 9.090909090909092
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-((-b & c - 1) * (-c & b - 1) + (-c & -b) * (-b | -c)) | -((~e & c) + e * 2 + 1 + ~e)) * 2 - (-((~e & c) + e * 2 + 1 + ~e) ^ -((-b & c - 1) * (-c & b - 1) + (-c & -b) * (-b | -c)))",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 11,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 73.60406091370558,
                        "opsPercentages": {
                            "arithmetic": 55.769230769230774,
                            "mul": 13.461538461538462,
                            "bitwise": 30.76923076923077
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(-(((c | e) - e | e) + ((c | e) - e & e)) | -((~-c & -b) * (~-b & -c) + (-b | -c) * (-b & -c))) * 2 - (-(((c | e) - e | e) + ((c | e) - e & e)) ^ -((~-c & -b) * (~-b & -c) + (-b | -c) * (-b & -c)))",
                    "attributes": {
                        "numOps": 56,
                        "nestedExprLevel": 15,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 71.57360406091371,
                        "opsPercentages": {
                            "arithmetic": 51.78571428571429,
                            "mul": 8.928571428571429,
                            "bitwise": 39.285714285714285
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "clang_O3": {
                    "expr": "(-((c - 1 & -b) * (b - 1 & -c) + (-c | -b) * (-c & -b)) | -(e | c)) * 2 - (-((c - 1 & -b) * (b - 1 & -c) + (-c | -b) * (-c & -b)) ^ -(e | c))",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 10,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 79.69543147208121,
                        "opsPercentages": {
                            "arithmetic": 57.49999999999999,
                            "mul": 12.5,
                            "bitwise": 30.0
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "clang_default": {
                    "expr": "((((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) | (0xffffffff - e ^ 0xffffffff | c) - (0xffffffff - e ^ 0xffffffff)) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & (0xffffffff - e ^ 0xffffffff | c) - (0xffffffff - e ^ 0xffffffff)) ^ 0xffffffff) + 1 | (((c ^ 0xffffffff) + 1 & (b ^ 0xffffffff) + 1) * ((c ^ 0xffffffff) + 1 | (b ^ 0xffffffff) + 1) + ((c ^ 0xffffffff) + 1 & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((c ^ 0xffffffff) + 1 ^ 0xffffffff) & (b ^ 0xffffffff) + 1) ^ 0xffffffff) + 1) + (((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) | (0xffffffff - e ^ 0xffffffff | c) - (0xffffffff - e ^ 0xffffffff)) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & (0xffffffff - e ^ 0xffffffff | c) - (0xffffffff - e ^ 0xffffffff)) ^ 0xffffffff) + 1 | (((c ^ 0xffffffff) + 1 & (b ^ 0xffffffff) + 1) * ((c ^ 0xffffffff) + 1 | (b ^ 0xffffffff) + 1) + ((c ^ 0xffffffff) + 1 & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((c ^ 0xffffffff) + 1 ^ 0xffffffff) & (b ^ 0xffffffff) + 1) ^ 0xffffffff) + 1 )) - (((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) | (0xffffffff - e ^ 0xffffffff | c) - (0xffffffff - e ^ 0xffffffff)) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & (0xffffffff - e ^ 0xffffffff | c) - (0xffffffff - e ^ 0xffffffff)) ^ 0xffffffff) + 1 ^ (((c ^ 0xffffffff) + 1 & (b ^ 0xffffffff) + 1) * ((c ^ 0xffffffff) + 1 | (b ^ 0xffffffff) + 1) + ((c ^ 0xffffffff) + 1 & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((c ^ 0xffffffff) + 1 ^ 0xffffffff) & (b ^ 0xffffffff) + 1) ^ 0xffffffff ) + 1)",
                    "attributes": {
                        "numOps": 173,
                        "nestedExprLevel": 50,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 12.18274111675127,
                        "opsPercentages": {
                            "arithmetic": 46.24277456647399,
                            "mul": 6.9364161849710975,
                            "bitwise": 46.82080924855491
                        },
                        "percentageDAGsCancel": 9.375
                    }
                },
                "msvc_default": {
                    "expr": "((~((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) | (~(0xffffffff - e) | c) - ~(0xffffffff - e)) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & (~(0xffffffff - e) | c) - ~(0xffffffff - e))) + 1 | ~((~c + 1 & ~b + 1) * (~c + 1 | ~b + 1) + (~c + 1 & ~(~b + 1)) * (~(~c + 1) & ~b + 1)) + 1) + (~((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) | (~(0xffffffff - e) | c) - ~(0xffffffff - e)) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & (~(0xffffffff - e) | c) - ~(0xffffffff - e))) + 1 | ~((~c + 1 & ~b + 1) * (~c + 1 | ~b + 1) + (~c + 1 & ~(~b + 1)) * (~(~c + 1) & ~b + 1)) + 1)) - (~((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) | (~(0xffffffff - e) | c) - ~(0xffffffff - e)) + (e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) & (~(0xffffffff - e) | c) - ~(0xffffffff - e))) + 1 ^ ~((~c + 1 & ~b + 1) * (~c + 1 | ~b + 1) + (~c + 1 & ~(~b + 1)) * (~(~c + 1) & ~b + 1)) + 1)",
                    "attributes": {
                        "numOps": 173,
                        "nestedExprLevel": 39,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 12.18274111675127,
                        "opsPercentages": {
                            "arithmetic": 46.24277456647399,
                            "mul": 6.9364161849710975,
                            "bitwise": 46.82080924855491
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "gcc_O3": {
                    "expr": "(-(e + (~e & c)) | -((b - 1 & -c) * (c - 1 & -b) + (-c | -b) * (-c & -b))) * 2 - (-(e + (~e & c)) ^ -((b - 1 & -c) * (c - 1 & -b) + (-c | -b) * (-c & -b)))",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 11,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 77.66497461928934,
                        "opsPercentages": {
                            "arithmetic": 56.81818181818182,
                            "mul": 11.363636363636363,
                            "bitwise": 31.818181818181817
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 374,
            "gt": {
                "expr": "(((c+(c*(a*c)))|(-(a*a))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 50.0,
                        "bitwise": 16.666666666666664
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((c ^ ((c & ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) * (c | ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + (c & ~ ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) * (~ c & ((a & c) * (a | c) + (a & ~ c) * (~ a & c))))) + ((c & ((c & ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) * (c | ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + (c & ~ ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) * (~ c & ((a & c) * (a | c) + (a & ~ c) * (~ a & c))))) << 1)) + ~ (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) - 1)) + 1) + ((- ((c ^ ((c & ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) * (c | ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + (c & ~ ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) * (~ c & ((a & c) * (a | c) + (a & ~ c) * (~ a & c))))) + ((c & ((c & ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) * (c | ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + (c & ~ ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) * (~ c & ((a & c) * (a | c) + (a & ~ c) * (~ a & c))))) << 1)) - 1) | (- (~ (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) - 1)) - 1))",
                "attributes": {
                    "numOps": 218,
                    "nestedExprLevel": 91,
                    "numDAGs": 38,
                    "opsPercentages": {
                        "arithmetic": 15.137614678899084,
                        "mul": 20.18348623853211,
                        "bitwise": 64.6788990825688
                    },
                    "percentageDAGsCancel": 13.157894736842104
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a * a - 1 | ~((((~a & c) * (~c & a) + (a & c) * (a | c) & ~c) * (~((~a & c) * (~c & a) + (a & c) * (a | c)) & c) + ((~a & c) * (~c & a) + (a & c) * (a | c) & c) * ((~a & c) * (~c & a) + (a & c) * (a | c) | c) & c) * 2 + (((~a & c) * (~c & a) + (a & c) * (a | c) & ~c) * (~((~a & c) * (~c & a) + (a & c) * (a | c)) & c) + ((~a & c) * (~c & a) + (a & c) * (a | c) & c) * ((~a & c) * (~c & a) + (a & c) * (a | c) | c) ^ c))) + (((((~a & c) * (~c & a) + (a & c) * (a | c) & ~c) * (~((~a & c) * (~c & a) + (a & c) * (a | c)) & c) + ((~a & c) * (~c & a) + (a & c) * (a | c) & c) * ((~a & c) * (~c & a) + (a & c) * (a | c) | c) ^ c) + (((~a & c) * (~c & a) + (a & c) * (a | c) & ~c) * (~((~a & c) * (~c & a) + (a & c) * (a | c)) & c) + ((~a & c) * (~c & a) + (a & c) * (a | c) & c) * ((~a & c) * (~c & a) + (a & c) * (a | c) | c) & c) * 2) - a * a) + 1",
                    "attributes": {
                        "numOps": 196,
                        "nestedExprLevel": 61,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 10.091743119266056,
                        "opsPercentages": {
                            "arithmetic": 13.26530612244898,
                            "mul": 22.448979591836736,
                            "bitwise": 64.28571428571429
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~(~c & (~a & c) * (~c & a) + (a | c) * (a & c)) * (~(~a & c) * (~c & a) + (a | c) * (a & c) & c) + ((~a & c) * (~c & a) + (a | c) * (a & c) | c) * ((~a & c) * (~c & a) + (a | c) * (a & c) & c) * 2 & c * 2 - (~c & (~a & c) * (~c & a) + (a | c) * (a & c)) * (~(~a & c) * (~c & a) + (a | c) * (a & c) & c) + ((~a & c) * (~c & a) + (a | c) * (a & c) | c) * ((~a & c) * (~c & a) + (a | c) * (a & c) & c) ^ c | a * a - 1) - a * a - 1) + (~c & (~a & c) * (~c & a) + (a | c) * (a & c)) * (~(~a & c) * (~c & a) + (a | c) * (a & c) & c) + ((~a & c) * (~c & a) + (a | c) * (a & c) | c) * ((~a & c) * (~c & a) + (a | c) * (a & c) & c) ^ c + (~c & (~a & c) * (~c & a) + (a | c) * (a & c)) * (~(~a & c) * (~c & a) + (a | c) * (a & c) & c) + ((~a & c) * (~c & a) + (a | c) * (a & c) | c) * ((~a & c) * (~c & a) + (a | c) * (a & c) & c) * 2 & c * 2",
                    "attributes": {
                        "numOps": 198,
                        "nestedExprLevel": 51,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 9.174311926605505,
                        "opsPercentages": {
                            "arithmetic": 13.131313131313133,
                            "mul": 23.232323232323232,
                            "bitwise": 63.63636363636363
                        },
                        "percentageDAGsCancel": 2.631578947368421
                    }
                },
                "clang_O3": {
                    "expr": "((((~a & c) * (~c & a) + (c | a) * (c & a) & ~c) * (~(~a & c) * (~c & a) + (c | a) * (c & a) & c) + ((~a & c) * (~c & a) + (c | a) * (c & a) | c) * ((~a & c) * (~c & a) + (c | a) * (c & a) & c) ^ c) + (((~a & c) * (~c & a) + (c | a) * (c & a) & ~c) * (~(~a & c) * (~c & a) + (c | a) * (c & a) & c) + ((~a & c) * (~c & a) + (c | a) * (c & a) | c) * ((~a & c) * (~c & a) + (c | a) * (c & a) & c) & c) * 2 - a * a) + (a * a - 1 | ~(((~a & c) * (~c & a) + (c | a) * (c & a) & ~c) * (~(~a & c) * (~c & a) + (c | a) * (c & a) & c) + ((~a & c) * (~c & a) + (c | a) * (c & a) | c) * ((~a & c) * (~c & a) + (c | a) * (c & a) & c) ^ c) + (((~a & c) * (~c & a) + (c | a) * (c & a) & ~c) * (~(~a & c) * (~c & a) + (c | a) * (c & a) & c) + ((~a & c) * (~c & a) + (c | a) * (c & a) | c) * ((~a & c) * (~c & a) + (c | a) * (c & a) & c) & c) * 2) + 1",
                    "attributes": {
                        "numOps": 196,
                        "nestedExprLevel": 55,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 10.091743119266056,
                        "opsPercentages": {
                            "arithmetic": 13.26530612244898,
                            "mul": 22.448979591836736,
                            "bitwise": 64.28571428571429
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "clang_default": {
                    "expr": "(c ^ (c & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) * (c | (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) + (c & ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) ^ 0xffffffff)) * ((c ^ 0xffffffff) & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c))) + (c & (c & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) * (c | (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) + (c & ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) ^ 0xffffffff)) * ((c ^ 0xffffffff) & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c))) * 2 + ((a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a)) - 1 ^ 0xffffffff) + 1 + (0xffffffff - ((c ^ (c & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) * (c | (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) ) + (c & ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) ^ 0xffffffff)) * ((c ^ 0xffffffff) & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c))) + (c & (c & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) * (c | (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) + (c & ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) ^ 0xffffffff)) * ((c ^ 0xffffffff) & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c))) * 2) | 0xffffffff - ((a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a)) - 1 ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 212,
                        "nestedExprLevel": 84,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 2.7522935779816518,
                        "opsPercentages": {
                            "arithmetic": 14.622641509433961,
                            "mul": 21.69811320754717,
                            "bitwise": 63.67924528301887
                        },
                        "percentageDAGsCancel": 8.823529411764707
                    }
                },
                "msvc_default": {
                    "expr": "(((a & c) * (a | c) + (~c & a) * (~a & c) & c) * ((a & c) * (a | c) + (~c & a) * (~a & c) | c) + (~((a & c) * (a | c) + (~c & a) * (~a & c) ) & c) * (~c & (a & c) * (a | c) + (~c & a) * (~a & c)) ^ c) + (((a & c) * (a | c) + (~c & a) * (~a & c) & c) * ((a & c) * (a | c) + (~c & a) * (~a & c) | c) + (~((a & c) * (a | c) + (~c & a) * (~a & c) ) & c) * (~c & (a & c) * (a | c) + (~c & a) * (~a & c)) & c) * 2 + ~(a * a - 1) + 1 + (0xffffffff - ((((a & c) * (a | c) + (~c & a) * (~a & c) & c) * ((a & c) * (a | c) + (~c & a) * (~a & c) | c) + (~((a & c) * (a | c) + (~c & a) * (~a & c)) & c) * (~c & (a & c) * (a | c) + (~c & a) * (~a & c)) ^ c) + (((a & c) * (a | c) + (~c & a) * (~a & c) & c) * ((a & c) * (a | c) + (~c & a) * (~a & c) | c) + (~((a & c) * (a | c) + (~c & a) * (~a & c)) & c) * (~c & (a & c) * (a | c) + (~c & a) * (~a & c)) & c) * 2) | 0xffffffff - ~(a * a - 1))",
                    "attributes": {
                        "numOps": 200,
                        "nestedExprLevel": 60,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 8.256880733944955,
                        "opsPercentages": {
                            "arithmetic": 14.499999999999998,
                            "mul": 22.0,
                            "bitwise": 63.5
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "gcc_O3": {
                    "expr": "(~(((~a & c) * (~c & a) + (a & c) * (a | c) | c) * ((~a & c) * (~c & a) + (a & c) * (a | c) & c) + (~(~a & c) * (~c & a) + (a & c) * (a | c) & c) * (~c & (~a & c) * (~c & a) + (a & c) * (a | c)) ^ c) + (((~a & c) * (~c & a) + (a & c) * (a | c) | c) * ((~a & c) * (~c & a) + (a & c) * (a | c) & c) + (~(~a & c) * (~c & a) + (a & c) * (a | c) & c) * (~c & (~a & c) * (~c & a) + (a & c) * (a | c)) & c) * 2 | a * a - 1) + 1 + ((((~a & c) * (~c & a) + (a & c) * (a | c) | c) * ((~a & c) * (~c & a) + (a & c) * (a | c) & c) + (~(~a & c) * (~c & a) + (a & c) * (a | c) & c) * (~c & (~a & c) * (~c & a) + (a & c) * (a | c)) ^ c) + (((~a & c) * (~c & a) + (a & c) * (a | c) | c) * ((~a & c) * (~c & a) + (a & c) * (a | c) & c) + (~(~a & c) * (~c & a) + (a & c) * (a | c) & c) * (~c & (~a & c) * (~c & a) + (a & c) * (a | c)) & c) * 2 - a * a)",
                    "attributes": {
                        "numOps": 196,
                        "nestedExprLevel": 55,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 10.091743119266056,
                        "opsPercentages": {
                            "arithmetic": 13.26530612244898,
                            "mul": 22.448979591836736,
                            "bitwise": 64.28571428571429
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 375,
            "gt": {
                "expr": "(((b|(b-(b&a)))^((b*a)+(b*b))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 28.57142857142857,
                        "mul": 28.57142857142857,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "(((b & ~ ((b ^ ((~ b | a) - ~ b)) - ((~ b & ((~ b | a) - ~ b)) << 1))) + ((b ^ ((~ b | a) - ~ b)) - ((~ b & ((~ b | a) - ~ b)) << 1))) | ((((b & a) * (b | a) + (b & ~ a) * (~ b & a)) ^ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((((b & a) * (b | a) + (b & ~ a) * (~ b & a)) & ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) << 1))) - (((b & ~ ((b ^ ((~ b | a) - ~ b)) - ((~ b & ((~ b | a) - ~ b)) << 1))) + ((b ^ ((~ b | a) - ~ b)) - ((~ b & ((~ b | a) - ~ b)) << 1))) & ((((b & a) * (b | a) + (b & ~ a) * (~ b & a)) ^ ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) + ((((b & a) * (b | a) + (b & ~ a) * (~ b & a)) & ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) << 1)))",
                "attributes": {
                    "numOps": 141,
                    "nestedExprLevel": 63,
                    "numDAGs": 32,
                    "opsPercentages": {
                        "arithmetic": 17.73049645390071,
                        "mul": 11.347517730496454,
                        "bitwise": 70.92198581560284
                    },
                    "percentageDAGsCancel": 34.375
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(b * b & (b & a) * (b | a) + (~b & a) * (~a & b)) * 2 + ((b & a) * (b | a) + (~b & a) * (~a & b) ^ b * b) ^ ((a & b & ~b) * 2 + (~b | a) & b) + (~a & b) + (a & b & ~b) * -2",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 10,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 70.2127659574468,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 21.428571428571427,
                            "bitwise": 61.904761904761905
                        },
                        "percentageDAGsCancel": 24.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~b | a) + b + 1 ^ b + ((~((~b | a) + b + 1 ^ b - (~b | a) + b * 2 + 2 & ~b * 2) & b) - (~b | a) + b * 2 + 2 & ~b * 2) | ((~a & b) * (~b & a) + (a | b) * (a & b) ^ b * b) + ((~a & b) * (~b & a) + (a | b) * (a & b) * 2 & b * b * 2)) - ((~b | a) + b + 1 ^ b + ((~((~b | a) + b + 1 ^ b - (~b | a) + b * 2 + 2 & ~b * 2) & b) - (~b | a) + b * 2 + 2 & ~b * 2) & ((~a & b) * (~b & a) + (a | b) * (a & b) ^ b * b) + ((~a & b) * (~b & a) + (a | b) * (a & b) * 2 & b * b * 2))",
                    "attributes": {
                        "numOps": 115,
                        "nestedExprLevel": 23,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 18.439716312056735,
                        "opsPercentages": {
                            "arithmetic": 25.217391304347824,
                            "mul": 20.869565217391305,
                            "bitwise": 53.91304347826087
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((~a & b) * (~b & a) + (b | a) * (b & a) ^ b * b) + (b * b & (~a & b) * (~b & a) + (b | a) * (b & a)) * 2 ^ b",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 7,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 82.26950354609929,
                        "opsPercentages": {
                            "arithmetic": 12.0,
                            "mul": 28.000000000000004,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "clang_default": {
                    "expr": "((b & ((b ^ (b ^ 0xffffffff | a) - (b ^ 0xffffffff)) + ((b ^ 0xffffffff) & (b ^ 0xffffffff | a) - (b ^ 0xffffffff) ) * -2 ^ 0xffffffff)) + (b ^ (b ^ 0xffffffff | a) - (b ^ 0xffffffff)) + ((b ^ 0xffffffff) & (b ^ 0xffffffff | a) - (b ^ 0xffffffff)) * -2 | ((b & a) * (b | a) + (b & (a ^ 0xffffffff)) * ((b ^ 0xffffffff) & a) ^ b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) + ((b & a) * (b | a) + (b & (a ^ 0xffffffff)) * ((b ^ 0xffffffff) & a) & b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) * 2) - ((b & ((b ^ (b ^ 0xffffffff | a) - (b ^ 0xffffffff)) + ((b ^ 0xffffffff) & (b ^ 0xffffffff | a) - (b ^ 0xffffffff)) * -2 ^ 0xffffffff)) + (b ^ (b ^ 0xffffffff | a) - (b ^ 0xffffffff)) + ((b ^ 0xffffffff) & (b ^ 0xffffffff | a) - (b ^ 0xffffffff)) * -2 & ((b & a) * (b | a) + (b & (a ^ 0xffffffff)) * ((b ^ 0xffffffff) & a) ^ b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) + ((b & a) * (b | a) + (b & (a ^ 0xffffffff)) * ((b ^ 0xffffffff) & a) & b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) * 2)",
                    "attributes": {
                        "numOps": 137,
                        "nestedExprLevel": 48,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 2.8368794326241136,
                        "opsPercentages": {
                            "arithmetic": 21.16788321167883,
                            "mul": 16.05839416058394,
                            "bitwise": 62.77372262773723
                        },
                        "percentageDAGsCancel": 21.875
                    }
                },
                "msvc_default": {
                    "expr": "((~(((~b | a) - ~b ^ b) + (~b & (~b | a) - ~b) * -2) & b) + ((~b | a) - ~b ^ b) + (~b & (~b | a) - ~b) * -2 | ((b & a) * (b | a) + (~a & b) * (~b & a) ^ b * b) + ((b & a) * (b | a) + (~a & b) * (~b & a) & b * b) * 2) - ((~(((~b | a) - ~b ^ b) + (~b & (~b | a) - ~b) * -2) & b) + ((~b | a) - ~b ^ b) + (~b & (~b | a) - ~b) * -2 & ((b & a) * (b | a) + (~a & b) * (~b & a) ^ b * b) + ((b & a) * (b | a) + (~a & b) * (~b & a) & b * b) * 2)",
                    "attributes": {
                        "numOps": 113,
                        "nestedExprLevel": 27,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 19.858156028368796,
                        "opsPercentages": {
                            "arithmetic": 22.123893805309734,
                            "mul": 15.929203539823009,
                            "bitwise": 61.94690265486725
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "gcc_O3": {
                    "expr": "((~b | a) + ~b & b & a * 2 & b) + (~a & b) + ~b & b & a * -2 ^ ((b | a) * (b & a) + (~b & a) * (~a & b) ^ b * b) + ((b | a) * (b & a) + (~b & a) * (~a & b) & b * b) * 2",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 9,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 70.2127659574468,
                        "opsPercentages": {
                            "arithmetic": 16.666666666666664,
                            "mul": 21.428571428571427,
                            "bitwise": 61.904761904761905
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                }
            }
        },
        {
            "num": 376,
            "gt": {
                "expr": "((-(~(-(~((e^d)*e))))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 8,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 16.666666666666664,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((e | d) - (e & d)) & e) * (((e | d) - (e & d)) | e) + (((e | d) - (e & d)) & ~ e) * (~ ((e | d) - (e & d)) & e)) + 1) + 1",
                "attributes": {
                    "numOps": 23,
                    "nestedExprLevel": 15,
                    "numDAGs": 14,
                    "opsPercentages": {
                        "arithmetic": 30.434782608695656,
                        "mul": 8.695652173913043,
                        "bitwise": 60.86956521739131
                    },
                    "percentageDAGsCancel": 7.142857142857142
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(e ^ d) & e) * ((e ^ d) & ~e) + (~d & e) * (e | d) + 2",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 5,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 43.47826086956522,
                        "opsPercentages": {
                            "arithmetic": 15.384615384615385,
                            "mul": 15.384615384615385,
                            "bitwise": 69.23076923076923
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((d | e) - (d & e) | e) * ((d | e) - (d & e) & e) + 2 + (~e & (d | e) - (d & e)) * (~(d | e) - (d & e) & e)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 9,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 4.3478260869565215,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 9.090909090909092,
                            "bitwise": 63.63636363636363
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_O3": {
                    "expr": "(e & d) * (~e & d) + (e | d) * (~d & e) + 2",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 56.52173913043478,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e | d) - (e & d) & e) * ((e | d) - (e & d) | e) + ((e | d) - (e & d) & (e ^ 0xffffffff)) * (((e | d) - (e & d) ^ 0xffffffff) & e) + 2",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 10,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 4.3478260869565215,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 9.090909090909092,
                            "bitwise": 63.63636363636363
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_default": {
                    "expr": "((e | d) - (e & d) & e) * ((e | d) - (e & d) | e) + 2 + ((e | d) - (e & d) & ~e) * (~((e | d) - (e & d)) & e)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 10,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 4.3478260869565215,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 9.090909090909092,
                            "bitwise": 63.63636363636363
                        },
                        "percentageDAGsCancel": 23.076923076923077
                    }
                },
                "gcc_O3": {
                    "expr": "(~e & (d ^ e)) * (~(d ^ e) & e) + 2 + (~d & e) * (d | e)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 5,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 43.47826086956522,
                        "opsPercentages": {
                            "arithmetic": 15.384615384615385,
                            "mul": 15.384615384615385,
                            "bitwise": 69.23076923076923
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 377,
            "gt": {
                "expr": "(((b&(((~b)*e)|a))|(-b)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 16.666666666666664,
                        "mul": 16.666666666666664,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "((((~ b | (((((- b - 1) & e) * ((- b - 1) | e) + ((- b - 1) & ~ e) * (~ (- b - 1) & e)) & ~ a) + a)) + b) + 1) & ~ (~ b + 1)) + (~ b + 1)",
                "attributes": {
                    "numOps": 31,
                    "nestedExprLevel": 14,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 48.38709677419355,
                        "mul": 6.451612903225806,
                        "bitwise": 45.16129032258064
                    },
                    "percentageDAGsCancel": 13.636363636363635
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(b - 1 & b + (~b | a + ((~b & e) * (~b | e) + (b & e) * ~(b | e) & ~a)) + 1) - b",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 6,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 35.483870967741936,
                        "opsPercentages": {
                            "arithmetic": 30.0,
                            "mul": 10.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~b + 1 + (b + 1 + (((~e & ~b) * (b & e) + (~b | e) * (~b & e) & ~a) + a | ~b) & ~(~b + 1))",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 7,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 19.35483870967742,
                        "opsPercentages": {
                            "arithmetic": 28.000000000000004,
                            "mul": 8.0,
                            "bitwise": 64.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(b - 1 & b + ((~a & (e & b) * (~e & ~b) + (~b | e) * (~b & e)) + a | ~b) + 1) - b",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 6,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 32.25806451612903,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 9.523809523809524,
                            "bitwise": 61.904761904761905
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "clang_default": {
                    "expr": "((b ^ 0xffffffff | ((0xffffffff - b & e) * (0xffffffff - b | e) + (0xffffffff - b & (e ^ 0xffffffff)) * ((0xffffffff - b ^ 0xffffffff) & e) & (a ^ 0xffffffff)) + a) + b + 1 & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) + (b ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 10,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 12.903225806451612,
                        "opsPercentages": {
                            "arithmetic": 40.74074074074074,
                            "mul": 7.4074074074074066,
                            "bitwise": 51.85185185185185
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "msvc_default": {
                    "expr": "((~b | ((0xffffffff - b & e) * (0xffffffff - b | e) + (0xffffffff - b & ~e) * (~(0xffffffff - b) & e) & ~a) + a) + 1 + b & ~(~b + 1)) + 1 + ~b",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 7,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 12.903225806451612,
                        "opsPercentages": {
                            "arithmetic": 40.74074074074074,
                            "mul": 7.4074074074074066,
                            "bitwise": 51.85185185185185
                        },
                        "percentageDAGsCancel": 13.636363636363635
                    }
                },
                "gcc_O3": {
                    "expr": "(b + 1 + ((~(b | e) * (b & e) + (e | ~b) * (~b & e) & ~a) + a | ~b) & b - 1) - b",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 6,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 35.483870967741936,
                        "opsPercentages": {
                            "arithmetic": 30.0,
                            "mul": 10.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 378,
            "gt": {
                "expr": "((-((~(d^b))-(-e))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 0.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (((((d & b) + ~ (d | b)) & ~ (~ (e - 1))) - (~ ((d & b) + ~ (d | b)) & ~ (e - 1))) - 1)",
                "attributes": {
                    "numOps": 19,
                    "nestedExprLevel": 11,
                    "numDAGs": 13,
                    "opsPercentages": {
                        "arithmetic": 31.57894736842105,
                        "mul": 0.0,
                        "bitwise": 68.42105263157895
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-e & (d ^ b)) + ~(e - 1 & (d & b) + ~(d | b)) + 1",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 36.84210526315789,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 0.0,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_O1": {
                    "expr": "~(e - 1 | ~(b | d) + (b & d)) - (e - 1 & ~(b | d) + (b & d))",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 5,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 26.31578947368421,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 0.0,
                            "bitwise": 64.28571428571429
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_O3": {
                    "expr": "((d ^ b) & -e) - (e - 1 & ~(d | b) + (d & b))",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 47.368421052631575,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 0.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d & b) + ((d | b) ^ 0xffffffff) & e - 1) - (((d & b) + ((d | b) ^ 0xffffffff) ^ 0xffffffff) & (e - 1 ^ 0xffffffff))) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 8,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 10.526315789473683,
                        "opsPercentages": {
                            "arithmetic": 35.294117647058826,
                            "mul": 0.0,
                            "bitwise": 64.70588235294117
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_default": {
                    "expr": "~((((d & b) + ~(d | b) & e - 1) - (~((d & b) + ~(d | b)) & ~(e - 1))) - 1)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 9,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 10.526315789473683,
                        "opsPercentages": {
                            "arithmetic": 35.294117647058826,
                            "mul": 0.0,
                            "bitwise": 64.70588235294117
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "gcc_O3": {
                    "expr": "((d ^ b) & -e) - (~(d | b) + (d & b) & e - 1)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 47.368421052631575,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 0.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 379,
            "gt": {
                "expr": "(((d+d)&((~e)^((d*b)|(e*d)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 6,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 14.285714285714285,
                        "mul": 28.57142857142857,
                        "bitwise": 57.14285714285714
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ (((d ^ ~ d) + ((d | d) << 1)) + 1) | ((((- e - 1) - (((((d & b) * (d | b) + (d & ~ b) * (~ d & b)) + ((e & d) * (e | d) + (e & ~ d) * (~ e & d))) + 1) + ((- ((d & b) * (d | b) + (d & ~ b) * (~ d & b)) - 1) | (- ((e & d) * (e | d) + (e & ~ d) * (~ e & d)) - 1)))) - (((- e - 1) | ~ (((((d & b) * (d | b) + (d & ~ b) * (~ d & b)) + ((e & d) * (e | d) + (e & ~ d) * (~ e & d))) + 1) + ((- ((d & b) * (d | b) + (d & ~ b) * (~ d & b)) - 1) | (- ((e & d) * (e | d) + (e & ~ d) * (~ e & d)) - 1)))) + ((- e - 1) | ~ (((((d & b) * (d | b) + (d & ~ b) * (~ d & b)) + ((e & d) * (e | d) + (e & ~ d) * (~ e & d))) + 1) + ((- ((d & b) * (d | b) + (d & ~ b) * (~ d & b)) - 1) | (- ((e & d) * (e | d) + (e & ~ d) * (~ e & d)) - 1)))))) - 2)) + (((d ^ ~ d) + ((d | d) << 1)) + 1)) + 1",
                "attributes": {
                    "numOps": 162,
                    "nestedExprLevel": 70,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 30.246913580246915,
                        "mul": 14.814814814814813,
                        "bitwise": 54.93827160493827
                    },
                    "percentageDAGsCancel": 2.380952380952381
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "d * 2 + (~(d * 2) | ((~e - (~((~e & d) * (~d & e) + (e & d) * (e | d) & (d & b) * (d | b) + (~d & b) * (~b & d)) + (~e & d) * (~d & e) + (e & d) * (e | d) + (d & b) * (d | b) + (~d & b) * (~b & d) + 1)) + (((d & b) * (d | b) + (~d & b) * (~b & d) & (~e & d) * (~d & e) + (e & d) * (e | d)) - ((~e & d) * (~d & e) + (e & d) * (e | d) + (d & b) * (d | b) + (~d & b) * (~b & d) + 1) | ~e) * -2) - 2) + 1",
                    "attributes": {
                        "numOps": 95,
                        "nestedExprLevel": 25,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 41.358024691358025,
                        "opsPercentages": {
                            "arithmetic": 21.052631578947366,
                            "mul": 20.0,
                            "bitwise": 58.94736842105262
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "msvc_O1": {
                    "expr": "d * 2 + 1 + ((((((((~(~e & d) * (~d & e) - (d | e) * (d & e) | ~(~b & d) * (~d & b) - (b | d) * (b & d) + (~e & d) * (~d & e) + (~b & d) * (~d & b) + (d | e) * (d & e) + (b | d) * (b & d) + 1 & e) * 2 + -2) - ~(~e & d) * (~d & e) - (d | e) * (d & e) | ~(~b & d) * (~d & b) - (b | d) * (b & d)) - (~e & d) * (~d & e)) - (~b & d) * (~d & b)) - (d | e) * (d & e)) - (b | d) * (b & d)) - e | ~(d * 2))",
                    "attributes": {
                        "numOps": 95,
                        "nestedExprLevel": 26,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 41.358024691358025,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 2.272727272727273
                    }
                },
                "clang_O3": {
                    "expr": "(-((~e & d) * (~d & e) + (e | d) * (e & d) | (~b & d) * (~d & b) + (d | b) * (d & b) + e + (~(~e & d) * (~d & e) + (e | d) * (e & d) | (~b & d) * (~d & b) + (d | b) * (d & b) | ~e) * 2) - 3 | ~(d * 2)) + d * 2 + 1",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 13,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 67.90123456790124,
                        "opsPercentages": {
                            "arithmetic": 19.230769230769234,
                            "mul": 21.153846153846153,
                            "bitwise": 59.61538461538461
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_default": {
                    "expr": "((d ^ d ^ 0xffffffff) + d * 2 + 1 ^ 0xffffffff | ((-((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) + (e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) + 1 + (0xffffffff - ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b)) | 0xffffffff - ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d)))) - e) - ((0xffffffff - e | (d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) + (e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) + 1 + (0xffffffff - ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b)) | 0xffffffff - ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d))) ^ 0xffffffff) + (0xffffffff - e | (d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b) + (e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) + 1 + (0xffffffff - ((d & b) * (d | b) + (d & (b ^ 0xffffffff)) * ((d ^ 0xffffffff) & b)) | 0xffffffff - ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d))) ^ 0xffffffff))) - 3) + (d ^ d ^ 0xffffffff) + d * 2 + 2",
                    "attributes": {
                        "numOps": 150,
                        "nestedExprLevel": 54,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 7.4074074074074066,
                        "opsPercentages": {
                            "arithmetic": 26.0,
                            "mul": 17.333333333333336,
                            "bitwise": 56.666666666666664
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "msvc_default": {
                    "expr": "(~(d * 2) | ((-((d & b) * (d | b) + (~b & d) * (~d & b) + (e & d) * (e | d) + (~d & e) * (~e & d) + 1 + (0xffffffff - ((d & b) * (d | b) + (~b & d) * (~d & b)) | 0xffffffff - ((e & d) * (e | d) + (~d & e) * (~e & d) ))) - e) - ((0xffffffff - e | ~((d & b) * (d | b) + (~b & d) * (~d & b) + (e & d) * (e | d) + (~d & e) * (~e & d) + 1 + (0xffffffff - ((d & b) * (d | b) + (~b & d) * (~d & b) ) | 0xffffffff - ((e & d) * (e | d) + (~d & e) * (~e & d))))) + (0xffffffff - e | ~((d & b) * (d | b) + (~b & d) * (~d & b) + (e & d) * (e | d) + (~d & e) * (~e & d) + 1 + (0xffffffff - ((d & b) * (d | b) + (~b & d) * (~d & b)) | 0xffffffff - ((e & d) * (e | d) + (~d & e) * (~e & d))))))) - 3) + d * 2 + 1",
                    "attributes": {
                        "numOps": 143,
                        "nestedExprLevel": 43,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 11.728395061728394,
                        "opsPercentages": {
                            "arithmetic": 25.174825174825177,
                            "mul": 18.181818181818183,
                            "bitwise": 56.64335664335665
                        },
                        "percentageDAGsCancel": 5.405405405405405
                    }
                },
                "gcc_O3": {
                    "expr": "d * 2 + 1 + (((~e - (~b & d) * (~d & b) + (d & b) * (b | d) + 1 + (d & e) * (d | e) + (~d & e) * (d & ~e)) + (~b & d) * (~d & b) + (d & b) * (b | d) & (d & e) * (d | e) + (~d & e) * (d & ~e) + ((~b & d) * (~d & b) + (d & b) * (b | d) & (d & e) * (d | e) + (~d & e) * (d & ~e) - (~b & d) * (~d & b) + (d & b) * (b | d) + 1 + (d & e) * (d | e) + (~d & e) * (d & ~e) | ~e) * -2) - 1 | ~(d * 2))",
                    "attributes": {
                        "numOps": 94,
                        "nestedExprLevel": 22,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 41.9753086419753,
                        "opsPercentages": {
                            "arithmetic": 21.27659574468085,
                            "mul": 20.212765957446805,
                            "bitwise": 58.51063829787234
                        },
                        "percentageDAGsCancel": 2.4390243902439024
                    }
                }
            }
        },
        {
            "num": 380,
            "gt": {
                "expr": "((-((~(d*(e*(e|d))))-(d*(e|(e+e))))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 33.33333333333333,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "~ ((((- ((d & ((e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (e | (((e + d) + 1) + ((- e - 1) | (- d - 1)))) + (e & ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (~ e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))))) * (d | ((e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (e | (((e + d) + 1) + ((- e - 1) | (- d - 1)))) + (e & ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (~ e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))))) + (d & ~ ((e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (e | (((e + d) + 1) + ((- e - 1) | (- d - 1)))) + (e & ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (~ e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))))) * (~ d & ((e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (e | (((e + d) + 1) + ((- e - 1) | (- d - 1)))) + (e & ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (~ e & (((e + d) + 1) + ((- e - 1) | (- d - 1))))))) - 1) & ~ ((d & ((e & ~ ((e | e) + (e & e))) + ((e | e) + (e & e)))) * (d | ((e & ~ ((e | e) + (e & e))) + ((e | e) + (e & e)))) + (d & ~ ((e & ~ ((e | e) + (e & e))) + ((e | e) + (e & e)))) * (~ d & ((e & ~ ((e | e) + (e & e))) + ((e | e) + (e & e)))))) - (~ (- ((d & ((e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (e | (((e + d) + 1) + ((- e - 1) | (- d - 1)))) + (e & ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (~ e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))))) * (d | ((e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (e | (((e + d) + 1) + ((- e - 1) | (- d - 1)))) + (e & ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (~ e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))))) + (d & ~ ((e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (e | (((e + d) + 1) + ((- e - 1) | (- d - 1)))) + (e & ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (~ e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))))) * (~ d & ((e & (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (e | (((e + d) + 1) + ((- e - 1) | (- d - 1)))) + (e & ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) * (~ e & (((e + d) + 1) + ((- e - 1) | (- d - 1))))))) - 1) & ((d & ((e & ~ ((e | e) + (e & e))) + ((e | e) + (e & e)))) * (d | ((e & ~ ((e | e) + (e & e))) + ((e | e) + (e & e)))) + (d & ~ ((e & ~ ((e | e) + (e & e))) + ((e | e) + (e & e)))) * (~ d & ((e & ~ ((e | e) + (e & e))) + ((e | e) + (e & e))))))) - 1)",
                "attributes": {
                    "numOps": 447,
                    "nestedExprLevel": 243,
                    "numDAGs": 49,
                    "opsPercentages": {
                        "arithmetic": 59.50782997762863,
                        "mul": 5.369127516778524,
                        "bitwise": 35.123042505592835
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(e * 2 + (~(e * 2) & e)) & d) * (e * 2 + (~(e * 2) & e) & ~d) + (e * 2 + (~(e * 2) & e) & d) * (e * 2 + (~(e * 2) & e) | d) + ((~(e & d) + d + e + 1 & ~e) * ((e & d) - (d + e + 1) & e) + (~(e & d) + d + e + 1 & e) * (~(e & d) + d + e + 1 | e) & d) * ((~(e & d) + d + e + 1 & ~e) * ((e & d) - (d + e + 1) & e) + (~(e & d) + d + e + 1 & e) * (~(e & d) + d + e + 1 | e) | d) + ((~(e & d) + d + e + 1 & ~e) * ((e & d) - (d + e + 1) & e) + (~(e & d) + d + e + 1 & e) * (~(e & d) + d + e + 1 | e) & ~d) * (~((~(e & d) + d + e + 1 & ~e) * ((e & d) - (d + e + 1) & e) + (~(e & d) + d + e + 1 & e) * (~(e & d) + d + e + 1 | e)) & d) + 1",
                    "attributes": {
                        "numOps": 148,
                        "nestedExprLevel": 36,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 66.8903803131991,
                        "opsPercentages": {
                            "arithmetic": 40.54054054054054,
                            "mul": 13.513513513513514,
                            "bitwise": 45.94594594594595
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "msvc_O1": {
                    "expr": "(~~((~(~(d - (d & e)) + e & e) * (~e & (d - (d & e)) + e) + ((d - (d & e)) + e | e) * ((d - (d & e)) + e & e) & d) * ((~(d - (d & e)) + e & e) * (~e & (d - (d & e)) + e) + ((d - (d & e)) + e | e) * ((d - (d & e)) + e & e) & ~d)) - ((~(d - (d & e)) + e & e) * (~e & (d - (d & e)) + e) + ((d - (d & e)) + e | e) * ((d - (d & e)) + e & e) | d) * ((~(d - (d & e)) + e & e) * (~e & (d - (d & e)) + e) + ((d - (d & e)) + e | e) * ((d - (d & e)) + e & e) & d) & (~(~(e * 2) & e) + e * 2 & d) * ((~(e * 2) & e) + e * 2 & ~d) + ((~(e * 2) & e) + e * 2 | d) * ((~(e * 2) & e) + e * 2 & d)) - (~(~(~(e * 2) & e) + e * 2 & d) * ((~(e * 2) & e) + e * 2 & ~d) + ((~(e * 2) & e) + e * 2 | d) * ((~(e * 2) & e) + e * 2 & d) & ~((~(~(d - (d & e)) + e & e) * (~e & (d - (d & e)) + e) + ((d - (d & e)) + e | e) * ((d - (d & e)) + e & e) & d) * ((~(d - (d & e)) + e & e) * (~e & (d - (d & e)) + e) + ((d - (d & e)) + e | e) * ((d - (d & e)) + e & e) & ~d)) - ((~(d - (d & e)) + e & e) * (~e & (d - (d & e)) + e) + ((d - (d & e)) + e | e) * ((d - (d & e)) + e & e) | d) * ((~(d - (d & e)) + e & e) * (~e & (d - (d & e)) + e) + ((d - (d & e)) + e | e) * ((d - (d & e)) + e & e) & d))",
                    "attributes": {
                        "numOps": 251,
                        "nestedExprLevel": 94,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 43.84787472035794,
                        "opsPercentages": {
                            "arithmetic": 33.86454183266932,
                            "mul": 15.936254980079681,
                            "bitwise": 50.199203187250994
                        },
                        "percentageDAGsCancel": 2.1739130434782608
                    }
                },
                "clang_O3": {
                    "expr": "((~d & (~(e * 2) & e) + e * 2) * (~(~(e * 2) & e) + e * 2 & d) + ((~(e * 2) & e) + e * 2 | d) * ((~(e * 2) & e) + e * 2 & d) | ((e | d) * e & ~d) * (~(e | d) * e & d) + ((e | d) * e | d) * ((e | d) * e & d)) + ((~d & (~(e * 2) & e) + e * 2) * (~(~(e * 2) & e) + e * 2 & d) + ((~(e * 2) & e) + e * 2 | d) * ((~(e * 2) & e) + e * 2 & d) & ((e | d) * e & ~d) * (~(e | d) * e & d) + ((e | d) * e | d) * ((e | d) * e & d)) + 1",
                    "attributes": {
                        "numOps": 96,
                        "nestedExprLevel": 28,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 78.52348993288591,
                        "opsPercentages": {
                            "arithmetic": 14.583333333333334,
                            "mul": 33.33333333333333,
                            "bitwise": 52.083333333333336
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                },
                "clang_default": {
                    "expr": "((0xffffffff - ((d & (e & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) * (e | e + d + 1 + (0xffffffff - e | 0xffffffff - d)) + (e & (e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff)) * ((e ^ 0xffffffff) & e + d + 1 + (0xffffffff - e | 0xffffffff - d))) * (d | (e & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) * (e | e + d + 1 + (0xffffffff - e | 0xffffffff - d)) + (e & (e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff)) * ((e ^ 0xffffffff) & e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (d & ((e & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) * (e | e + d + 1 + (0xffffffff - e | 0xffffffff - d)) + (e & (e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff)) * ((e ^ 0xffffffff) & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) ^ 0xffffffff)) * ((d ^ 0xffffffff) & (e & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) * (e | e + d + 1 + (0xffffffff - e | 0xffffffff - d)) + (e & (e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff)) * ((e ^ 0xffffffff) & e + d + 1 + (0xffffffff - e | 0xffffffff - d)))) & ((d & (e & (e * 2 ^ 0xffffffff)) + e * 2) * (d | (e & (e * 2 ^ 0xffffffff)) + e * 2) + (d & ((e & (e * 2 ^ 0xffffffff)) + e * 2 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (e & (e * 2 ^ 0xffffffff)) + e * 2) ^ 0xffffffff)) - ((0xffffffff - ((d & (e & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) * (e | e + d + 1 + (0xffffffff - e | 0xffffffff - d)) + (e & (e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff)) * ((e ^ 0xffffffff) & e + d + 1 + (0xffffffff - e | 0xffffffff - d))) * (d | (e & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) * (e | e + d + 1 + (0xffffffff - e | 0xffffffff - d)) + (e & (e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff)) * ((e ^ 0xffffffff) & e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (d & ((e & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) * (e | e + d + 1 + (0xffffffff - e | 0xffffffff - d)) + (e & (e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff)) * ((e ^ 0xffffffff) & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) ^ 0xffffffff)) * ((d ^ 0xffffffff) & (e & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) * (e | e + d + 1 + (0xffffffff - e | 0xffffffff - d)) + (e & (e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff)) * ((e ^ 0xffffffff) & e + d + 1 + (0xffffffff - e | 0xffffffff - d)))) ^ 0xffffffff) & (d & (e & (e * 2 ^ 0xffffffff)) + e * 2) * (d | (e & (e * 2 ^ 0xffffffff)) + e * 2) + (d & ((e & (e * 2 ^ 0xffffffff)) + e * 2 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (e & (e * 2 ^ 0xffffffff)) + e * 2))) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 349,
                        "nestedExprLevel": 85,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 21.92393736017897,
                        "opsPercentages": {
                            "arithmetic": 52.72206303724928,
                            "mul": 11.461318051575931,
                            "bitwise": 35.816618911174785
                        },
                        "percentageDAGsCancel": 15.909090909090908
                    }
                },
                "msvc_default": {
                    "expr": "~(((0xffffffff - (((e + d + 1 + (0xffffffff - e | 0xffffffff - d) & e) * (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | e) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) & e ) * (~e & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) & d) * ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) & e) * (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | e) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) & e ) * (~e & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) | d) + (~((e + d + 1 + (0xffffffff - e | 0xffffffff - d) & e) * (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | e ) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) & e) * (~e & e + d + 1 + (0xffffffff - e | 0xffffffff - d))) & d) * (~d & (e + d + 1 + (0xffffffff - e | 0xffffffff - d) & e) * (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | e) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) & e) * (~e & e + d + 1 + (0xffffffff - e | 0xffffffff - d))) ) & ~(((~(e * 2) & e) + e * 2 & d) * ((~(e * 2) & e) + e * 2 | d) + (~((~(e * 2) & e) + e * 2) & d) * (~d & (~(e * 2) & e) + e * 2))) - (~(0xffffffff - (((e + d + 1 + (0xffffffff - e | 0xffffffff - d) & e) * (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | e) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) & e ) * (~e & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) & d) * ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) & e) * (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | e) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) & e ) * (~e & e + d + 1 + (0xffffffff - e | 0xffffffff - d)) | d) + (~((e + d + 1 + (0xffffffff - e | 0xffffffff - d) & e) * (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | e ) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) & e) * (~e & e + d + 1 + (0xffffffff - e | 0xffffffff - d))) & d) * (~d & (e + d + 1 + (0xffffffff - e | 0xffffffff - d) & e) * (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | e) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) & e) * (~e & e + d + 1 + (0xffffffff - e | 0xffffffff - d))) )) & ((~(e * 2) & e) + e * 2 & d) * ((~(e * 2) & e) + e * 2 | d) + (~((~(e * 2) & e) + e * 2) & d) * (~d & (~(e * 2) & e) + e * 2))) - 1)",
                    "attributes": {
                        "numOps": 349,
                        "nestedExprLevel": 78,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 21.92393736017897,
                        "opsPercentages": {
                            "arithmetic": 52.72206303724928,
                            "mul": 11.461318051575931,
                            "bitwise": 35.816618911174785
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "gcc_O3": {
                    "expr": "(~((e & d) - d + 1 + e & e) * (~e & ~(e & d) + d + 1 + e) + (~(e & d) + d + 1 + e | e) * (~(e & d) + d + 1 + e & e) & d) * (((e & d) - d + 1 + e & e) * (~e & ~(e & d) + d + 1 + e) + (~(e & d) + d + 1 + e | e) * (~(e & d) + d + 1 + e & e) & ~d) + (((e & d) - d + 1 + e & e) * (~e & ~(e & d) + d + 1 + e) + (~(e & d) + d + 1 + e | e) * (~(e & d) + d + 1 + e & e) | d) * (((e & d) - d + 1 + e & e) * (~e & ~(e & d) + d + 1 + e) + (~(e & d) + d + 1 + e | e) * (~(e & d) + d + 1 + e & e) & d) + 1 + ((~(e * 2) & e) + e * 2 | d) * ((~(e * 2) & e) + e * 2 & d) + (~(~(e * 2) & e) + e * 2 & d) * (~d & (~(e * 2) & e) + e * 2)",
                    "attributes": {
                        "numOps": 148,
                        "nestedExprLevel": 30,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 66.8903803131991,
                        "opsPercentages": {
                            "arithmetic": 40.54054054054054,
                            "mul": 13.513513513513514,
                            "bitwise": 45.94594594594595
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                }
            }
        },
        {
            "num": 381,
            "gt": {
                "expr": "(((e^a)+((~a)+e)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((e | a) - (e & a)) - ~ ((((- a - 1) ^ ~ e) + (((- a - 1) | e) << 1)) + 1)) - 1",
                "attributes": {
                    "numOps": 16,
                    "nestedExprLevel": 10,
                    "numDAGs": 14,
                    "opsPercentages": {
                        "arithmetic": 56.25,
                        "mul": 0.0,
                        "bitwise": 43.75
                    },
                    "percentageDAGsCancel": 7.142857142857142
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((e ^ a) - (-2 - ((~a | e) * 2 + (a ^ e)))) + -1",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 31.25,
                        "opsPercentages": {
                            "arithmetic": 54.54545454545454,
                            "mul": 9.090909090909092,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(a | e) + 1 + (((-1 - a) * 2 | e * 2) - (a & e)) + (a ^ e)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 5,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 25.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_O3": {
                    "expr": "((~a | e) + (e ^ a)) * 2 + 1",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 62.5,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 16.666666666666664,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e | a) - (e & a)) - ((0xffffffff - a ^ e ^ 0xffffffff) + (0xffffffff - a | e) * 2 + 1 ^ 0xffffffff)) + -1",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 6.25,
                        "opsPercentages": {
                            "arithmetic": 53.333333333333336,
                            "mul": 6.666666666666667,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((e | a) - (e & a)) - ~((0xffffffff - a ^ ~e) + 1 + (0xffffffff - a | e) * 2)) + -1",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 6.25,
                        "opsPercentages": {
                            "arithmetic": 53.333333333333336,
                            "mul": 6.666666666666667,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(e ^ a) * 2 + 1 + (~a | e) * 2",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 56.25,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 28.57142857142857,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 382,
            "gt": {
                "expr": "(((-(a|(a*c)))*((a|c)*((c+a)^a))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 37.5,
                        "bitwise": 37.5
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ ((((a + ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + 1) + ((- a - 1) | (- ((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - 1))) - 1) & (((((a + c) + 1) + ((- a - 1) | (- c - 1))) & (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))) * ((((a + c) + 1) + ((- a - 1) | (- c - 1))) | (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))) + ((((a + c) + 1) + ((- a - 1) | (- c - 1))) & ~ (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))) * (~ (((a + c) + 1) + ((- a - 1) | (- c - 1))) & (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))))) * (~ ((((a + ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + 1) + ((- a - 1) | (- ((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - 1))) - 1) | (((((a + c) + 1) + ((- a - 1) | (- c - 1))) & (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))) * ((((a + c) + 1) + ((- a - 1) | (- c - 1))) | (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))) + ((((a + c) + 1) + ((- a - 1) | (- c - 1))) & ~ (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))) * (~ (((a + c) + 1) + ((- a - 1) | (- c - 1))) & (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))))) + (~ ((((a + ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + 1) + ((- a - 1) | (- ((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - 1))) - 1) & ~ (((((a + c) + 1) + ((- a - 1) | (- c - 1))) & (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))) * ((((a + c) + 1) + ((- a - 1) | (- c - 1))) | (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))) + ((((a + c) + 1) + ((- a - 1) | (- c - 1))) & ~ (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))) * (~ (((a + c) + 1) + ((- a - 1) | (- c - 1))) & (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))))) * (~ (~ ((((a + ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + 1) + ((- a - 1) | (- ((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - 1))) - 1)) & (((((a + c) + 1) + ((- a - 1) | (- c - 1))) & (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))) * ((((a + c) + 1) + ((- a - 1) | (- c - 1))) | (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))) + ((((a + c) + 1) + ((- a - 1) | (- c - 1))) & ~ (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a))) * (~ (((a + c) + 1) + ((- a - 1) | (- c - 1))) & (((((c | a) + (c | a)) - (c ^ a)) | a) - ((((c | a) + (c | a)) - (c ^ a)) & a)))))",
                "attributes": {
                    "numOps": 493,
                    "nestedExprLevel": 283,
                    "numDAGs": 50,
                    "opsPercentages": {
                        "arithmetic": 48.073022312373226,
                        "mul": 5.273833671399594,
                        "bitwise": 46.65314401622718
                    },
                    "percentageDAGsCancel": 2.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((((c | a) * 2 - (c ^ a) ^ a) & (a & c) - (c + a + 1)) * (c + a + 1 + ~(a & c) & ((c ^ a) + ~((c | a) * 2) ^ a)) + (c + a + 1 + ~(a & c) & ((c | a) * 2 - (c ^ a) ^ a)) * ((c | a) * 2 - (c ^ a) ^ a | c + a + 1 + ~(a & c)) & a + (a & c) * (a | c) + (~a & c) * (~c & a) + ~((~a & c) * (~c & a) + (a & c) * (a | c) & a) ) * ((((~a & c) * (~c & a) + (a & c) * (a | c) & a) - (a + (a & c) * (a | c) + (~a & c) * (~c & a) + 1)) + 1 & ~((((c | a) * 2 - (c ^ a) ^ a) & (a & c) - (c + a + 1)) * (c + a + 1 + ~(a & c) & ((c ^ a) + ~((c | a) * 2) ^ a)) + (c + a + 1 + ~(a & c) & ((c | a) * 2 - (c ^ a) ^ a)) * ((c | a) * 2 - (c ^ a) ^ a | c + a + 1 + ~(a & c)))) + ((((~a & c) * (~c & a) + (a & c) * (a | c) & a ) - (a + (a & c) * (a | c) + (~a & c) * (~c & a) + 1)) + 1 & (((c | a) * 2 - (c ^ a) ^ a) & (a & c) - (c + a + 1)) * (c + a + 1 + ~(a & c) & ((c ^ a) + ~((c | a) * 2) ^ a)) + (c + a + 1 + ~(a & c) & ((c | a) * 2 - (c ^ a) ^ a)) * ((c | a) * 2 - (c ^ a) ^ a | c + a + 1 + ~(a & c))) * ((((c | a) * 2 - (c ^ a) ^ a) & (a & c) - (c + a + 1)) * (c + a + 1 + ~(a & c) & ((c ^ a) + ~((c | a) * 2) ^ a)) + (c + a + 1 + ~(a & c) & ((c | a) * 2 - (c ^ a) ^ a)) * ((c | a) * 2 - (c ^ a) ^ a | c + a + 1 + ~(a & c)) | (((~a & c) * (~c & a) + (a & c) * (a | c) & a) - (a + (a & c) * (a | c) + (~a & c) * (~c & a) + 1)) + 1)",
                    "attributes": {
                        "numOps": 287,
                        "nestedExprLevel": 80,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 41.784989858012175,
                        "opsPercentages": {
                            "arithmetic": 31.70731707317073,
                            "mul": 14.634146341463413,
                            "bitwise": 53.65853658536586
                        },
                        "percentageDAGsCancel": 2.2222222222222223
                    }
                },
                "msvc_O1": {
                    "expr": "(~(((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a) & c + 1 + (~a | ~c) + a) * (c + 1 + (~a | ~c) + a | ((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a)) + (~((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a) & c + 1 + (~a | ~c) + a) * (~c + 1 + (~a | ~c) + a & ((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a)) & ~(~(~c & a) * (~a & c) - (a & c) * (a | c) | ~a) + (a & c) * (a | c) + (~c & a) * (~a & c) + a) * ((~(~c & a) * (~a & c) - (a & c) * (a | c) | ~a) + (a & c) * (a | c) + (~c & a) * (~a & c) + a & (((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a) & c + 1 + (~a | ~c) + a) * (c + 1 + (~a | ~c) + a | ((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a)) + (~((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a) & c + 1 + (~a | ~c) + a) * (~c + 1 + (~a | ~c) + a & ((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a))) + (~(~(~c & a) * (~a & c) - (a & c) * (a | c) | ~a) + (a & c) * (a | c) + (~c & a) * (~a & c) + a | (((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a) & c + 1 + (~a | ~c) + a) * (c + 1 + (~a | ~c) + a | ((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a)) + (~((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a) & c + 1 + (~a | ~c) + a) * (~c + 1 + (~a | ~c) + a & ((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a))) * (~(~(~c & a) * (~a & c) - (a & c) * (a | c) | ~a) + (a & c) * (a | c) + (~c & a) * (~a & c) + a & (((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a) & c + 1 + (~a | ~c) + a) * (c + 1 + (~a | ~c) + a | ((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a)) + (~((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a) & c + 1 + (~a | ~c) + a) * (~c + 1 + (~a | ~c) + a & ((a | c) * 2 - (a ^ c) | a) - ((a | c) * 2 - (a ^ c) & a)))",
                    "attributes": {
                        "numOps": 411,
                        "nestedExprLevel": 105,
                        "numDAGs": 51,
                        "percentDecreaseByOps": 16.63286004056795,
                        "opsPercentages": {
                            "arithmetic": 28.467153284671532,
                            "mul": 14.111922141119221,
                            "bitwise": 57.420924574209245
                        },
                        "percentageDAGsCancel": 7.8431372549019605
                    }
                },
                "clang_O3": {
                    "expr": "((~a + c + (~a | ~c) + 1 & a) * (~a & a + c + (~a | ~c) + 1) + (a | a + c + (~a | ~c) + 1) * (a & a + c + (~a | ~c) + 1) & (~(~a & c) * (~c & a) + (c & a) * (c | a) | ~a) + (~a & c) * (~c & a) + (c & a) * (c | a) + a) * (~(~a + c + (~a | ~c) + 1 & a) * (~a & a + c + (~a | ~c) + 1) + (a | a + c + (~a | ~c) + 1) * (a & a + c + (~a | ~c) + 1) & ~(~(~a & c) * (~c & a) + (c & a) * (c | a) | ~a) + (~a & c) * (~c & a) + (c & a) * (c | a) + a) + ((~a + c + (~a | ~c) + 1 & a) * (~a & a + c + (~a | ~c) + 1) + (a | a + c + (~a | ~c) + 1) * (a & a + c + (~a | ~c) + 1) | ~(~(~a & c) * (~c & a) + (c & a) * (c | a) | ~a) + (~a & c) * (~c & a) + (c & a) * (c | a) + a) * ((~a + c + (~a | ~c) + 1 & a) * (~a & a + c + (~a | ~c) + 1) + (a | a + c + (~a | ~c) + 1) * (a & a + c + (~a | ~c) + 1) & ~(~(~a & c) * (~c & a) + (c & a) * (c | a) | ~a) + (~a & c) * (~c & a) + (c & a) * (c | a) + a)",
                    "attributes": {
                        "numOps": 235,
                        "nestedExprLevel": 41,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 52.33265720081136,
                        "opsPercentages": {
                            "arithmetic": 29.361702127659573,
                            "mul": 11.063829787234042,
                            "bitwise": 59.57446808510638
                        },
                        "percentageDAGsCancel": 18.6046511627907
                    }
                },
                "clang_default": {
                    "expr": "((a + (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) + (0xffffffff - a | 0xffffffff - ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c))) ^ 0xffffffff) & (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) * (a + c + 1 + (0xffffffff - a | 0xffffffff - c) | (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) + (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & ((((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a) ^ 0xffffffff)) * ((a + c + 1 + (0xffffffff - a | 0xffffffff - c) ^ 0xffffffff) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a))) * (a + (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) + (0xffffffff - a | 0xffffffff - ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c))) ^ 0xffffffff | (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) * (a + c + 1 + (0xffffffff - a | 0xffffffff - c) | (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) + (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & ((((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a) ^ 0xffffffff)) * ((a + c + 1 + (0xffffffff - a | 0xffffffff - c) ^ 0xffffffff) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a))) + ((a + (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) + (0xffffffff - a | 0xffffffff - ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c))) ^ 0xffffffff) & ((a + c + 1 + (0xffffffff - a | 0xffffffff - c) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) * (a + c + 1 + (0xffffffff - a | 0xffffffff - c) | (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) + (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & ((((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a) ^ 0xffffffff)) * ((a + c + 1 + (0xffffffff - a | 0xffffffff - c) ^ 0xffffffff) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) ^ 0xffffffff)) * (a + (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) + (0xffffffff - a | 0xffffffff - ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c))) & (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) * (a + c + 1 + (0xffffffff - a | 0xffffffff - c) | (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) + (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & ((((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a) ^ 0xffffffff)) * ((a + c + 1 + (0xffffffff - a | 0xffffffff - c) ^ 0xffffffff) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)))",
                    "attributes": {
                        "numOps": 443,
                        "nestedExprLevel": 161,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 10.141987829614605,
                        "opsPercentages": {
                            "arithmetic": 42.66365688487584,
                            "mul": 5.8690744920993225,
                            "bitwise": 51.46726862302483
                        },
                        "percentageDAGsCancel": 2.2222222222222223
                    }
                },
                "msvc_default": {
                    "expr": "(~((~c & a) * (~a & c) + a + (a & c) * (a | c) + (0xffffffff - a | 0xffffffff - ((a & c) * (a | c) + (~c & a) * (~a & c)) )) & (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) * (a + c + 1 + (0xffffffff - a | 0xffffffff - c) | (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) + (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & ~((((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a))) * (~(a + c + 1 + (0xffffffff - a | 0xffffffff - c)) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a))) * (~((~c & a) * (~a & c) + a + (a & c) * (a | c) + (0xffffffff - a | 0xffffffff - ((a & c) * (a | c) + (~c & a) * (~a & c)) )) | (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) * (a + c + 1 + (0xffffffff - a | 0xffffffff - c) | (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) + (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & ~((((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a))) * (~(a + c + 1 + (0xffffffff - a | 0xffffffff - c)) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a))) + (~((~c & a) * (~a & c) + a + (a & c) * (a | c) + (0xffffffff - a | 0xffffffff - ((a & c) * (a | c) + (~c & a) * (~a & c)) )) & ~((a + c + 1 + (0xffffffff - a | 0xffffffff - c) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) * (a + c + 1 + (0xffffffff - a | 0xffffffff - c) | (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) + (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & ~((((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a))) * (~(a + c + 1 + (0xffffffff - a | 0xffffffff - c)) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)))) * ((~c & a) * (~a & c) + a + (a & c) * (a | c) + (0xffffffff - a | 0xffffffff - ((a & c) * (a | c) + (~c & a) * (~a & c))) & (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) * (a + c + 1 + (0xffffffff - a | 0xffffffff - c) | (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)) + (a + c + 1 + (0xffffffff - a | 0xffffffff - c) & ~((((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a))) * (~(a + c + 1 + (0xffffffff - a | 0xffffffff - c)) & (((c | a) + (c | a)) - (c ^ a) | a) - (((c | a) + (c | a)) - (c ^ a) & a)))",
                    "attributes": {
                        "numOps": 443,
                        "nestedExprLevel": 154,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 10.141987829614605,
                        "opsPercentages": {
                            "arithmetic": 42.66365688487584,
                            "mul": 5.8690744920993225,
                            "bitwise": 51.46726862302483
                        },
                        "percentageDAGsCancel": 2.2222222222222223
                    }
                },
                "gcc_O3": {
                    "expr": "((~c & a) * (~a & c) + a & c * (a | c) + 1 + a + -1 + ~(~c & a) * (~a & c) + a & c * (a | c) & a & ((~(a | c) * 2 + (c ^ a) ^ a) & ~a & c + a + 1 + c) * (a & c - a + 1 + c & (a | c) * 2 - (c ^ a) ^ a) + (~a & c + a + 1 + c & (a | c) * 2 - (c ^ a) ^ a) * (~a & c + a + 1 + c | (a | c) * 2 - (c ^ a) ^ a)) * (~((~(a | c) * 2 + (c ^ a) ^ a) & ~a & c + a + 1 + c) * (a & c - a + 1 + c & (a | c) * 2 - (c ^ a) ^ a) + (~a & c + a + 1 + c & (a | c) * 2 - (c ^ a) ^ a) * (~a & c + a + 1 + c | (a | c) * 2 - (c ^ a) ^ a) & ((~c & a) * (~a & c) + a & c * (a | c) & a - (~c & a) * (~a & c) + a & c * (a | c) + 1 + a) + 1) + (((~c & a) * (~a & c) + a & c * (a | c) & a - (~c & a) * (~a & c) + a & c * (a | c) + 1 + a) + 1 & ((~(a | c) * 2 + (c ^ a) ^ a) & ~a & c + a + 1 + c) * (a & c - a + 1 + c & (a | c) * 2 - (c ^ a) ^ a) + (~a & c + a + 1 + c & (a | c) * 2 - (c ^ a) ^ a) * (~a & c + a + 1 + c | (a | c) * 2 - (c ^ a) ^ a)) * (((~c & a) * (~a & c) + a & c * (a | c) & a - (~c & a) * (~a & c) + a & c * (a | c) + 1 + a) + 1 | ((~(a | c) * 2 + (c ^ a) ^ a) & ~a & c + a + 1 + c) * (a & c - a + 1 + c & (a | c) * 2 - (c ^ a) ^ a) + (~a & c + a + 1 + c & (a | c) * 2 - (c ^ a) ^ a) * (~a & c + a + 1 + c | (a | c) * 2 - (c ^ a) ^ a))",
                    "attributes": {
                        "numOps": 290,
                        "nestedExprLevel": 56,
                        "numDAGs": 61,
                        "percentDecreaseByOps": 41.17647058823529,
                        "opsPercentages": {
                            "arithmetic": 32.41379310344827,
                            "mul": 14.482758620689657,
                            "bitwise": 53.103448275862064
                        },
                        "percentageDAGsCancel": 9.836065573770492
                    }
                }
            }
        },
        {
            "num": 383,
            "gt": {
                "expr": "(((~(e|((e|e)-b)))*(b-(b|(-e)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 12.5,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "((- (((e + ((((e & ~ e) + e) ^ b) - ((~ ((e & ~ e) + e) & b) << 1))) + 1) + ((- e - 1) | (- ((((e & ~ e) + e) ^ b) - ((~ ((e & ~ e) + e) & b) << 1)) - 1))) - 1) & (((b & ~ (((b + ~ (e - 1)) + 1) + ((- b - 1) | (- (~ (e - 1)) - 1)))) + (b & ~ (((b + ~ (e - 1)) + 1) + ((- b - 1) | (- (~ (e - 1)) - 1))))) - (b ^ (((b + ~ (e - 1)) + 1) + ((- b - 1) | (- (~ (e - 1)) - 1)))))) * ((- (((e + ((((e & ~ e) + e) ^ b) - ((~ ((e & ~ e) + e) & b) << 1))) + 1) + ((- e - 1) | (- ((((e & ~ e) + e) ^ b) - ((~ ((e & ~ e) + e) & b) << 1)) - 1))) - 1) | (((b & ~ (((b + ~ (e - 1)) + 1) + ((- b - 1) | (- (~ (e - 1)) - 1)))) + (b & ~ (((b + ~ (e - 1)) + 1) + ((- b - 1) | (- (~ (e - 1)) - 1))))) - (b ^ (((b + ~ (e - 1)) + 1) + ((- b - 1) | (- (~ (e - 1)) - 1)))))) + ((- (((e + ((((e & ~ e) + e) ^ b) - ((~ ((e & ~ e) + e) & b) << 1))) + 1) + ((- e - 1) | (- ((((e & ~ e) + e) ^ b) - ((~ ((e & ~ e) + e) & b) << 1)) - 1))) - 1) & ~ (((b & ~ (((b + ~ (e - 1)) + 1) + ((- b - 1) | (- (~ (e - 1)) - 1)))) + (b & ~ (((b + ~ (e - 1)) + 1) + ((- b - 1) | (- (~ (e - 1)) - 1))))) - (b ^ (((b + ~ (e - 1)) + 1) + ((- b - 1) | (- (~ (e - 1)) - 1)))))) * (~ (- (((e + ((((e & ~ e) + e) ^ b) - ((~ ((e & ~ e) + e) & b) << 1))) + 1) + ((- e - 1) | (- ((((e & ~ e) + e) ^ b) - ((~ ((e & ~ e) + e) & b) << 1)) - 1))) - 1) & (((b & ~ (((b + ~ (e - 1)) + 1) + ((- b - 1) | (- (~ (e - 1)) - 1)))) + (b & ~ (((b + ~ (e - 1)) + 1) + ((- b - 1) | (- (~ (e - 1)) - 1))))) - (b ^ (((b + ~ (e - 1)) + 1) + ((- b - 1) | (- (~ (e - 1)) - 1))))))",
                "attributes": {
                    "numOps": 309,
                    "nestedExprLevel": 170,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 57.28155339805825,
                        "mul": 0.6472491909385114,
                        "bitwise": 42.07119741100323
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(e + (e ^ b) + (~e & b) * -2 + 1 + (((~e & b) * 2 - (e ^ b)) - 1 | ~e) & (~((e - 1 | ~b) + (b - e) + 1) & b) * 2 - ((e - 1 | ~b) + (b - e) + 1 ^ b)) * (~((((~e & b) * 2 - (e ^ b)) - 1 | ~e) + e + (e ^ b) + (~e & b) * -2 + 1) & ((e - 1 | ~b) + (b - e) + 1 ^ b) + ~((~((e - 1 | ~b) + (b - e) + 1) & b) * 2)) + (~((((~e & b) * 2 - (e ^ b)) - 1 | ~e) + e + (e ^ b) + (~e & b) * -2 + 1) & (~((e - 1 | ~b) + (b - e) + 1) & b) * 2 - ((e - 1 | ~b) + (b - e) + 1 ^ b)) * (~((((~e & b) * 2 - (e ^ b)) - 1 | ~e) + e + (e ^ b) + (~e & b) * -2 + 1) | (~((e - 1 | ~b) + (b - e) + 1) & b) * 2 - ((e - 1 | ~b) + (b - e) + 1 ^ b))",
                    "attributes": {
                        "numOps": 147,
                        "nestedExprLevel": 45,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 52.42718446601942,
                        "opsPercentages": {
                            "arithmetic": 44.21768707482993,
                            "mul": 9.523809523809524,
                            "bitwise": 46.25850340136054
                        },
                        "percentageDAGsCancel": 15.789473684210526
                    }
                },
                "msvc_O1": {
                    "expr": "(~((((~e & b) * 2 - (((~e & b) * 2 - (b ^ e)) - 1 | ~e)) - (b ^ e)) - e) - 2 & (~((~b | e - 1) - (e - 1)) + b & b) * 2 - (((~b | e - 1) - (e - 1)) + b ^ b)) * (~(~((~b | e - 1) - (e - 1)) + b & b) * 2 - (((~b | e - 1) - (e - 1)) + b ^ b) & ((((~e & b) * 2 - (((~e & b) * 2 - (b ^ e)) - 1 | ~e)) - (b ^ e)) - e) - 2) + ((~((~b | e - 1) - (e - 1)) + b & b) * 2 - (((~b | e - 1) - (e - 1)) + b ^ b) | ((((~e & b) * 2 - (((~e & b) * 2 - (b ^ e)) - 1 | ~e)) - (b ^ e)) - e) - 2) * ((~((~b | e - 1) - (e - 1)) + b & b) * 2 - (((~b | e - 1) - (e - 1)) + b ^ b) & ((((~e & b) * 2 - (((~e & b) * 2 - (b ^ e)) - 1 | ~e)) - (b ^ e)) - e) - 2)",
                    "attributes": {
                        "numOps": 141,
                        "nestedExprLevel": 54,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 54.36893203883495,
                        "opsPercentages": {
                            "arithmetic": 43.262411347517734,
                            "mul": 9.929078014184398,
                            "bitwise": 46.808510638297875
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "clang_O3": {
                    "expr": "((~(b - e) + (e - 1 | ~b) + 1 & b) * 2 - ((b - e) + (e - 1 | ~b) + 1 ^ b) & (e ^ b) + (~e & b) * -2 | e) * (~(~(b - e) + (e - 1 | ~b) + 1 & b) * 2 - ((b - e) + (e - 1 | ~b) + 1 ^ b) & ~(e ^ b) + (~e & b) * -2 | e) + ((~(b - e) + (e - 1 | ~b) + 1 & b) * 2 - ((b - e) + (e - 1 | ~b) + 1 ^ b) | ~(e ^ b) + (~e & b) * -2 | e) * ((~(b - e) + (e - 1 | ~b) + 1 & b) * 2 - ((b - e) + (e - 1 | ~b) + 1 ^ b) & ~(e ^ b) + (~e & b) * -2 | e)",
                    "attributes": {
                        "numOps": 107,
                        "nestedExprLevel": 25,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 65.37216828478964,
                        "opsPercentages": {
                            "arithmetic": 42.05607476635514,
                            "mul": 9.345794392523365,
                            "bitwise": 48.598130841121495
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - (e + ((e & (e ^ 0xffffffff)) + e ^ b) + (((e & (e ^ 0xffffffff)) + e ^ 0xffffffff) & b) * -2 + 1 + (0xffffffff - e | 0xffffffff - (((e & (e ^ 0xffffffff)) + e ^ b) + (((e & (e ^ 0xffffffff)) + e ^ 0xffffffff) & b) * -2))) & ((b & (b + (e - 1 ^ 0xffffffff) + 1 + (0xffffffff - b | 0xffffffff - (e - 1 ^ 0xffffffff)) ^ 0xffffffff)) + (b & (b + (e - 1 ^ 0xffffffff) + 1 + (0xffffffff - b | 0xffffffff - (e - 1 ^ 0xffffffff)) ^ 0xffffffff)) ) - (b ^ b + (e - 1 ^ 0xffffffff) + 1 + (0xffffffff - b | 0xffffffff - (e - 1 ^ 0xffffffff)))) * (0xffffffff - (e + ((e & (e ^ 0xffffffff)) + e ^ b) + (((e & (e ^ 0xffffffff)) + e ^ 0xffffffff) & b) * -2 + 1 + (0xffffffff - e | 0xffffffff - (((e & (e ^ 0xffffffff)) + e ^ b) + (((e & (e ^ 0xffffffff)) + e ^ 0xffffffff) & b) * -2))) | ((b & (b + (e - 1 ^ 0xffffffff) + 1 + (0xffffffff - b | 0xffffffff - (e - 1 ^ 0xffffffff)) ^ 0xffffffff)) + (b & (b + (e - 1 ^ 0xffffffff) + 1 + (0xffffffff - b | 0xffffffff - (e - 1 ^ 0xffffffff)) ^ 0xffffffff)) ) - (b ^ b + (e - 1 ^ 0xffffffff) + 1 + (0xffffffff - b | 0xffffffff - (e - 1 ^ 0xffffffff)))) + (0xffffffff - (e + ((e & (e ^ 0xffffffff)) + e ^ b) + (((e & (e ^ 0xffffffff)) + e ^ 0xffffffff) & b) * -2 + 1 + (0xffffffff - e | 0xffffffff - (((e & (e ^ 0xffffffff)) + e ^ b) + (((e & (e ^ 0xffffffff)) + e ^ 0xffffffff) & b) * -2))) & (((b & (b + (e - 1 ^ 0xffffffff) + 1 + (0xffffffff - b | 0xffffffff - (e - 1 ^ 0xffffffff)) ^ 0xffffffff)) + (b & (b + (e - 1 ^ 0xffffffff) + 1 + (0xffffffff - b | 0xffffffff - (e - 1 ^ 0xffffffff)) ^ 0xffffffff) )) - (b ^ b + (e - 1 ^ 0xffffffff) + 1 + (0xffffffff - b | 0xffffffff - (e - 1 ^ 0xffffffff))) ^ 0xffffffff)) * ((0xffffffff - (e + ((e & (e ^ 0xffffffff)) + e ^ b) + (((e & (e ^ 0xffffffff)) + e ^ 0xffffffff) & b) * -2 + 1 + (0xffffffff - e | 0xffffffff - (((e & (e ^ 0xffffffff)) + e ^ b) + (((e & (e ^ 0xffffffff)) + e ^ 0xffffffff) & b) * -2))) ^ 0xffffffff) & ((b & (b + (e - 1 ^ 0xffffffff) + 1 + (0xffffffff - b | 0xffffffff - (e - 1 ^ 0xffffffff)) ^ 0xffffffff)) + (b & (b + (e - 1 ^ 0xffffffff) + 1 + (0xffffffff - b | 0xffffffff - (e - 1 ^ 0xffffffff)) ^ 0xffffffff)) ) - (b ^ b + (e - 1 ^ 0xffffffff) + 1 + (0xffffffff - b | 0xffffffff - (e - 1 ^ 0xffffffff))))",
                    "attributes": {
                        "numOps": 281,
                        "nestedExprLevel": 96,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 9.06148867313916,
                        "opsPercentages": {
                            "arithmetic": 53.02491103202846,
                            "mul": 3.558718861209965,
                            "bitwise": 43.41637010676156
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - ((e ^ b) + (~e & b) * -2 + e + 1 + (0xffffffff - e | 0xffffffff - ((e ^ b) + (~e & b) * -2))) & ((~(~(e - 1) + b + 1 + (0xffffffff - b | 0xffffffff - ~(e - 1))) & b) + (~(~(e - 1) + b + 1 + (0xffffffff - b | 0xffffffff - ~(e - 1)) ) & b)) - (~(e - 1) + b + 1 + (0xffffffff - b | 0xffffffff - ~(e - 1)) ^ b)) * (0xffffffff - ((e ^ b) + (~e & b) * -2 + e + 1 + (0xffffffff - e | 0xffffffff - ((e ^ b) + (~e & b) * -2))) | ((~(~(e - 1) + b + 1 + (0xffffffff - b | 0xffffffff - ~(e - 1))) & b) + (~(~(e - 1) + b + 1 + (0xffffffff - b | 0xffffffff - ~(e - 1)) ) & b)) - (~(e - 1) + b + 1 + (0xffffffff - b | 0xffffffff - ~(e - 1)) ^ b)) + (0xffffffff - ((e ^ b) + (~e & b) * -2 + e + 1 + (0xffffffff - e | 0xffffffff - ((e ^ b) + (~e & b) * -2))) & ~(((~(~(e - 1) + b + 1 + (0xffffffff - b | 0xffffffff - ~(e - 1))) & b) + (~(~(e - 1) + b + 1 + (0xffffffff - b | 0xffffffff - ~(e - 1))) & b)) - (~(e - 1) + b + 1 + (0xffffffff - b | 0xffffffff - ~(e - 1)) ^ b))) * (~(0xffffffff - ((e ^ b) + (~e & b) * -2 + e + 1 + (0xffffffff - e | 0xffffffff - ((e ^ b) + (~e & b) * -2)) )) & ((~(~(e - 1) + b + 1 + (0xffffffff - b | 0xffffffff - ~(e - 1))) & b) + (~(~(e - 1) + b + 1 + (0xffffffff - b | 0xffffffff - ~(e - 1))) & b)) - (~(e - 1) + b + 1 + (0xffffffff - b | 0xffffffff - ~(e - 1)) ^ b))",
                    "attributes": {
                        "numOps": 233,
                        "nestedExprLevel": 64,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 24.59546925566343,
                        "opsPercentages": {
                            "arithmetic": 57.08154506437768,
                            "mul": 4.291845493562231,
                            "bitwise": 38.62660944206009
                        },
                        "percentageDAGsCancel": 11.428571428571429
                    }
                },
                "gcc_O3": {
                    "expr": "((~b | e - 1) + 1 + (b - e) ^ b + ~(~(~b | e - 1) + 1 + (b - e) & b) * 2 & ~e + 1 + (e ^ b) + ~e & b * -2 + ((~e & b * 2 - (e ^ b)) - 1 | ~e)) * (e + 1 + (e ^ b) + ~e & b * -2 + ((~e & b * 2 - (e ^ b)) - 1 | ~e) & (~(~b | e - 1) + 1 + (b - e) & b) * 2 - (~b | e - 1) + 1 + (b - e) ^ b) + (~e + 1 + (e ^ b) + ~e & b * -2 + ((~e & b * 2 - (e ^ b)) - 1 | ~e) | (~(~b | e - 1) + 1 + (b - e) & b) * 2 - (~b | e - 1) + 1 + (b - e) ^ b) * (~e + 1 + (e ^ b) + ~e & b * -2 + ((~e & b * 2 - (e ^ b)) - 1 | ~e) & (~(~b | e - 1) + 1 + (b - e) & b) * 2 - (~b | e - 1) + 1 + (b - e) ^ b)",
                    "attributes": {
                        "numOps": 147,
                        "nestedExprLevel": 25,
                        "numDAGs": 47,
                        "percentDecreaseByOps": 52.42718446601942,
                        "opsPercentages": {
                            "arithmetic": 44.21768707482993,
                            "mul": 9.523809523809524,
                            "bitwise": 46.25850340136054
                        },
                        "percentageDAGsCancel": 6.382978723404255
                    }
                }
            }
        },
        {
            "num": 384,
            "gt": {
                "expr": "(((d^(e+d))&(~(-(~(d+d))))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 0.0,
                        "bitwise": 57.14285714285714
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((d - ((e - ~ d) - 1)) - ((d | ~ ((e - ~ d) - 1)) << 1)) - 2) | (((d ^ d) + ((d & d) + (d & d))) + 1)) - (((d ^ d) + ((d & d) + (d & d))) + 1)",
                "attributes": {
                    "numOps": 26,
                    "nestedExprLevel": 17,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 53.84615384615385,
                        "mul": 0.0,
                        "bitwise": 46.15384615384615
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~d * 2 & ((d - ((e - ~d) + -1)) + (~d + ~e + 1 | d) * -2) - 2",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 34.61538461538461,
                        "opsPercentages": {
                            "arithmetic": 52.94117647058824,
                            "mul": 11.76470588235294,
                            "bitwise": 35.294117647058826
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((~d + (~(d + e) | d) * -2) - e) + d + -1 | d * 2 + 1) + d * -2 + -1",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 6,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 26.923076923076923,
                        "opsPercentages": {
                            "arithmetic": 63.1578947368421,
                            "mul": 15.789473684210526,
                            "bitwise": 21.052631578947366
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~d * 2 & -(e + (~(e + d) | d) * 2) - 2",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 61.53846153846154,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 20.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_default": {
                    "expr": "(((d - ((e - (d ^ 0xffffffff)) + -1)) + (d | (e - (d ^ 0xffffffff)) - 1 ^ 0xffffffff) * -2) - 2 | d * 2 + 1) - (d * 2 + 1)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 9,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 23.076923076923077,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 15.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((d - ((e - ~d) + -1)) + (~((e - ~d) - 1) | d) * -2) - 2 | d * 2 + 1) - (d * 2 + 1)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 8,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 23.076923076923077,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 15.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "gcc_O3": {
                    "expr": "((~d - e | d) * -2 - e) - 2 & ~d * 2",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 61.53846153846154,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 20.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 385,
            "gt": {
                "expr": "((((c^c)&((c*b)&(b-b)))+((b^(b*b))&(~c))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 20.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "((((~ (((c - c) - ((c | ~ c) << 1)) - 2) | ((~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b)) | (((b & ~ b) << 1) - (b ^ b))) - ~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b)))) - ~ (((c - c) - ((c | ~ c) << 1)) - 2)) ^ ~ ((((b | ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) - (b & ((b & b) * (b | b) + (b & ~ b) * (~ b & b)))) | c) - c)) + ((((~ (((c - c) - ((c | ~ c) << 1)) - 2) | ((~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b)) | (((b & ~ b) << 1) - (b ^ b))) - ~ ((c & b) * (c | b) + (c & ~ b) * (~ c & b)))) - ~ (((c - c) - ((c | ~ c) << 1)) - 2)) | ((((b | ((b & b) * (b | b) + (b & ~ b) * (~ b & b))) - (b & ((b & b) * (b | b) + (b & ~ b) * (~ b & b)))) | c) - c)) << 1)) + 1",
                "attributes": {
                    "numOps": 138,
                    "nestedExprLevel": 65,
                    "numDAGs": 41,
                    "opsPercentages": {
                        "arithmetic": 23.18840579710145,
                        "mul": 11.594202898550725,
                        "bitwise": 65.21739130434783
                    },
                    "percentageDAGsCancel": 29.268292682926827
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~c & (b * b ^ b)) * 2 + (~(b * b ^ b) | c) + 1",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 92.02898550724638,
                        "opsPercentages": {
                            "arithmetic": 18.181818181818183,
                            "mul": 27.27272727272727,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((c * 2 | (b * b * 2 | b * 2) + (b * b & b) * -2) - ((b * b | b) - (b * b & b) | c)) - c",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 6,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 86.23188405797102,
                        "opsPercentages": {
                            "arithmetic": 26.31578947368421,
                            "mul": 42.10526315789473,
                            "bitwise": 31.57894736842105
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(b * b ^ b) & ~c",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 97.10144927536231,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 25.0,
                            "bitwise": 75.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c | c ^ 0xffffffff) * -2 - 2 ^ 0xffffffff | ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff | (b & (b ^ 0xffffffff)) * 2) - ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff)) - ((c | c ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) ^ ((b | b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) - (b & b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) | c) - c ^ 0xffffffff) + (((c | c ^ 0xffffffff) * -2 - 2 ^ 0xffffffff | ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff | (b & (b ^ 0xffffffff)) * 2) - ((c & b) * (c | b) + (c & (b ^ 0xffffffff)) * ((c ^ 0xffffffff) & b) ^ 0xffffffff)) - ((c | c ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) | ((b | b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) - (b & b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b)) | c) - c) * 2 + 1",
                    "attributes": {
                        "numOps": 122,
                        "nestedExprLevel": 40,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 11.594202898550725,
                        "opsPercentages": {
                            "arithmetic": 21.311475409836063,
                            "mul": 18.852459016393443,
                            "bitwise": 59.83606557377049
                        },
                        "percentageDAGsCancel": 19.444444444444446
                    }
                },
                "msvc_default": {
                    "expr": "~(((b * b | b) - (b * b & b) | c) - c) + 1 + (((b * b | b) - (b * b & b) | c) - c) * 2",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 7,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 86.95652173913044,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 27.77777777777778,
                            "bitwise": 38.88888888888889
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~b | c) + 1 + (~c & b) * 2",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 94.92753623188406,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 14.285714285714285,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                }
            }
        },
        {
            "num": 386,
            "gt": {
                "expr": "(((c+(~e))+((e-(c^b))*((-b)-b))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 62.5,
                        "mul": 12.5,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((c - ~ (- e - 1)) - 1) ^ ~ ((((e ^ (((c - b) - ((c | ~ b) << 1)) - 2)) - ((~ e & (((c - b) - ((c | ~ b) << 1)) - 2)) << 1)) & ((~ (b - 1) + ~ b) + 1)) * (((e ^ (((c - b) - ((c | ~ b) << 1)) - 2)) - ((~ e & (((c - b) - ((c | ~ b) << 1)) - 2)) << 1)) | ((~ (b - 1) + ~ b) + 1)) + (((e ^ (((c - b) - ((c | ~ b) << 1)) - 2)) - ((~ e & (((c - b) - ((c | ~ b) << 1)) - 2)) << 1)) & ~ ((~ (b - 1) + ~ b) + 1)) * (~ ((e ^ (((c - b) - ((c | ~ b) << 1)) - 2)) - ((~ e & (((c - b) - ((c | ~ b) << 1)) - 2)) << 1)) & ((~ (b - 1) + ~ b) + 1)))) + ((((c - ~ (- e - 1)) - 1) | ((((e ^ (((c - b) - ((c | ~ b) << 1)) - 2)) - ((~ e & (((c - b) - ((c | ~ b) << 1)) - 2)) << 1)) & ((~ (b - 1) + ~ b) + 1)) * (((e ^ (((c - b) - ((c | ~ b) << 1)) - 2)) - ((~ e & (((c - b) - ((c | ~ b) << 1)) - 2)) << 1)) | ((~ (b - 1) + ~ b) + 1)) + (((e ^ (((c - b) - ((c | ~ b) << 1)) - 2)) - ((~ e & (((c - b) - ((c | ~ b) << 1)) - 2)) << 1)) & ~ ((~ (b - 1) + ~ b) + 1)) * (~ ((e ^ (((c - b) - ((c | ~ b) << 1)) - 2)) - ((~ e & (((c - b) - ((c | ~ b) << 1)) - 2)) << 1)) & ((~ (b - 1) + ~ b) + 1)))) << 1)) + 1",
                "attributes": {
                    "numOps": 210,
                    "nestedExprLevel": 116,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 43.80952380952381,
                        "mul": 1.9047619047619049,
                        "bitwise": 54.285714285714285
                    },
                    "percentageDAGsCancel": 5.714285714285714
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~b - b) + 1 & ((~b | c) * 2 + ~c + b + 2 ^ e) + (((c - b) + (~b | c) * -2) - 2 & ~e) * 2) * ((((c - b) + (~b | c) * -2) - 2 ^ e) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2 & b * 2 - 1) + ((((c - b) + (~b | c) * -2) - 2 ^ e) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2 & (~b - b) + 1) * ((~b - b) + 1 | (((c - b) + (~b | c) * -2) - 2 ^ e) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2) | (c - e) - 1) * 2 + (((((c - b) + (~b | c) * -2) - 2 ^ e) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2 & (~b - b) + 1) * ((~b - b) + 1 | (((c - b) + (~b | c) * -2) - 2 ^ e) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2) + ((~b - b) + 1 & ((~b | c) * 2 + ~c + b + 2 ^ e) + (((c - b) + (~b | c) * -2) - 2 & ~e) * 2) * ((((c - b) + (~b | c) * -2) - 2 ^ e) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2 & b * 2 - 1) ^ e + ~c + 1) + 1",
                    "attributes": {
                        "numOps": 204,
                        "nestedExprLevel": 55,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 2.857142857142857,
                        "opsPercentages": {
                            "arithmetic": 48.03921568627451,
                            "mul": 15.196078431372548,
                            "bitwise": 36.76470588235294
                        },
                        "percentageDAGsCancel": 2.4390243902439024
                    }
                },
                "msvc_O1": {
                    "expr": "((c - e) - 1 ^ ~((~b - b) + 1 & (((c + ~b | c * -2) - b) - 2 ^ e) - (((c - (~b | c * 2 + 2)) - b) * 2 & ~e * 2)) * ((~b - b) + 1 | (((c + ~b | c * -2) - b) - 2 ^ e) - (((c - (~b | c * 2 + 2)) - b) * 2 & ~e * 2)) + (~(((c + ~b | c * -2) - b) - 2 ^ e) - (((c - (~b | c * 2 + 2)) - b) * 2 & ~e * 2) & (~b - b) + 1) * (~(~b - b) + 1 & (((c + ~b | c * -2) - b) - 2 ^ e) - (((c - (~b | c * 2 + 2)) - b) * 2 & ~e * 2))) + 1 + ((c - e) * 2 - 2 | ((~b - b) + 1 & (((c + ~b | c * -2) - b) - 2 ^ e) - (((c - (~b | c * 2 + 2)) - b) * 2 & ~e * 2)) * ((~b - b) + 1 | (((c + ~b | c * -2) - b) - 2 ^ e) - (((c - (~b | c * 2 + 2)) - b) * 2 & ~e * 2)) + (~(((c + ~b | c * -2) - b) - 2 ^ e) - (((c - (~b | c * 2 + 2)) - b) * 2 & ~e * 2) & (~b - b) + 1) * (~(~b - b) + 1 & (((c + ~b | c * -2) - b) - 2 ^ e) - (((c - (~b | c * 2 + 2)) - b) * 2 & ~e * 2)) * 2)",
                    "attributes": {
                        "numOps": 205,
                        "nestedExprLevel": 54,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 2.380952380952381,
                        "opsPercentages": {
                            "arithmetic": 42.926829268292686,
                            "mul": 18.536585365853657,
                            "bitwise": 38.53658536585366
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((~(e ^ ((c - b) + (~b | c) * -2) - 2) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2 & ~b - b + 1) * (-~b - b - 2 & (e ^ ((c - b) + (~b | c) * -2) - 2) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2) + ((e ^ ((c - b) + (~b | c) * -2) - 2) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2 | ~b - b + 1) * ((e ^ ((c - b) + (~b | c) * -2) - 2) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2 & ~b - b + 1) | ~e + c) * 2 - ((~(e ^ ((c - b) + (~b | c) * -2) - 2) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2 & ~b - b + 1) * (-~b - b - 2 & (e ^ ((c - b) + (~b | c) * -2) - 2) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2) + ((e ^ ((c - b) + (~b | c) * -2) - 2) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2 | ~b - b + 1) * ((e ^ ((c - b) + (~b | c) * -2) - 2) + (((c - b) + (~b | c) * -2) - 2 & ~e) * -2 & ~b - b + 1) ^ ~e + c)",
                    "attributes": {
                        "numOps": 210,
                        "nestedExprLevel": 59,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 49.047619047619044,
                            "mul": 13.80952380952381,
                            "bitwise": 37.142857142857146
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((c - (0xffffffff - e ^ 0xffffffff)) - 1 ^ ((e ^ ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) + ((e ^ 0xffffffff) & ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) * -2 & (b - 1 ^ 0xffffffff) + (b ^ 0xffffffff) + 1) * ((e ^ ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) + ((e ^ 0xffffffff) & ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) * -2 | (b - 1 ^ 0xffffffff) + (b ^ 0xffffffff) + 1) + ((e ^ ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) + ((e ^ 0xffffffff) & ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) * -2 & ((b - 1 ^ 0xffffffff) + (b ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((e ^ ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) + ((e ^ 0xffffffff) & ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) * -2 ^ 0xffffffff) & (b - 1 ^ 0xffffffff) + (b ^ 0xffffffff) + 1) ^ 0xffffffff) + ((c - (0xffffffff - e ^ 0xffffffff)) - 1 | ((e ^ ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) + ((e ^ 0xffffffff) & ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) * -2 & (b - 1 ^ 0xffffffff) + (b ^ 0xffffffff) + 1) * ((e ^ ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) + ((e ^ 0xffffffff) & ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) * -2 | (b - 1 ^ 0xffffffff) + (b ^ 0xffffffff) + 1) + ((e ^ ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) + ((e ^ 0xffffffff) & ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) * -2 & ((b - 1 ^ 0xffffffff) + (b ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((e ^ ((c - b) + (c | b ^ 0xffffffff) * -2) - 2) + ((e ^ 0xffffffff) & ((c - b) + (c | b ^ 0xffffffff) * -2) - 2 ) * -2 ^ 0xffffffff) & (b - 1 ^ 0xffffffff) + (b ^ 0xffffffff) + 1)) * 2 + 1",
                    "attributes": {
                        "numOps": 232,
                        "nestedExprLevel": 73,
                        "numDAGs": 35,
                        "percentDecreaseByOps": -10.476190476190476,
                        "opsPercentages": {
                            "arithmetic": 49.137931034482754,
                            "mul": 12.5,
                            "bitwise": 38.362068965517246
                        },
                        "percentageDAGsCancel": 2.857142857142857
                    }
                },
                "msvc_default": {
                    "expr": "((c - ~(0xffffffff - e)) - 1 ^ ~(((((c - b) + (~b | c) * -2) - 2 ^ e) + (~e & ((c - b) + (~b | c) * -2) - 2) * -2 & ~(b - 1) + 1 + ~b) * ((((c - b) + (~b | c) * -2) - 2 ^ e) + (~e & ((c - b) + (~b | c) * -2) - 2) * -2 | ~(b - 1) + 1 + ~b) + ((((c - b) + (~b | c) * -2) - 2 ^ e) + (~e & ((c - b) + (~b | c) * -2) - 2) * -2 & ~(~(b - 1) + 1 + ~b)) * (~((((c - b) + (~b | c) * -2) - 2 ^ e) + (~e & ((c - b) + (~b | c) * -2) - 2) * -2) & ~(b - 1) + 1 + ~b))) + 1 + ((c - ~(0xffffffff - e)) - 1 | ((((c - b) + (~b | c) * -2) - 2 ^ e) + (~e & ((c - b) + (~b | c) * -2) - 2) * -2 & ~(b - 1) + 1 + ~b) * ((((c - b) + (~b | c) * -2) - 2 ^ e) + (~e & ((c - b) + (~b | c) * -2) - 2) * -2 | ~(b - 1) + 1 + ~b) + ((((c - b) + (~b | c) * -2) - 2 ^ e) + (~e & ((c - b) + (~b | c) * -2) - 2) * -2 & ~(~(b - 1) + 1 + ~b)) * (~((((c - b) + (~b | c) * -2) - 2 ^ e) + (~e & ((c - b) + (~b | c) * -2) - 2) * -2) & ~(b - 1) + 1 + ~b)) * 2",
                    "attributes": {
                        "numOps": 232,
                        "nestedExprLevel": 67,
                        "numDAGs": 35,
                        "percentDecreaseByOps": -10.476190476190476,
                        "opsPercentages": {
                            "arithmetic": 49.137931034482754,
                            "mul": 12.5,
                            "bitwise": 38.362068965517246
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "gcc_O3": {
                    "expr": "(((((c - b) + ~b | c * -2) - 2 ^ e) + ~e & ((c - b) + ~b | c * -2) - 2 * -2 | (~b - b) + 1) * ((((c - b) + ~b | c * -2) - 2 ^ e) + ~e & ((c - b) + ~b | c * -2) - 2 * -2 & (~b - b) + 1) + ((~b | c * 2 + 2 + ~c + b ^ e) + ~e & ((c - b) + ~b | c * -2) - 2 * 2 & (~b - b) + 1) * (b * 2 - 1 & (((c - b) + ~b | c * -2) - 2 ^ e) + ~e & ((c - b) + ~b | c * -2) - 2 * -2) ^ ~c + 1 + e) + 1 + ((c - e) - 1 | ((((c - b) + ~b | c * -2) - 2 ^ e) + ~e & ((c - b) + ~b | c * -2) - 2 * -2 | (~b - b) + 1) * ((((c - b) + ~b | c * -2) - 2 ^ e) + ~e & ((c - b) + ~b | c * -2) - 2 * -2 & (~b - b) + 1) + ((~b | c * 2 + 2 + ~c + b ^ e) + ~e & ((c - b) + ~b | c * -2) - 2 * 2 & (~b - b) + 1) * (b * 2 - 1 & (((c - b) + ~b | c * -2) - 2 ^ e) + ~e & ((c - b) + ~b | c * -2) - 2 * -2)) * 2",
                    "attributes": {
                        "numOps": 204,
                        "nestedExprLevel": 38,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 2.857142857142857,
                        "opsPercentages": {
                            "arithmetic": 48.03921568627451,
                            "mul": 15.196078431372548,
                            "bitwise": 36.76470588235294
                        },
                        "percentageDAGsCancel": 2.2222222222222223
                    }
                }
            }
        },
        {
            "num": 387,
            "gt": {
                "expr": "(((d+(~(e&e)))*((d+d)-(((b+e)-(d-d))&b))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 10.0,
                        "bitwise": 30.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "((((d ^ ~ (- (((~ e | e) + e) + 1) - 1)) + ((d | (- (((~ e | e) + e) + 1) - 1)) << 1)) + 1) & ((((d ^ d) + ((d & d) << 1)) + ~ (((~ (((((b ^ ~ e) + ((b | e) << 1)) + 1) + ~ ((d + ~ d) + 1)) + 1) | b) + (((((b ^ ~ e) + ((b | e) << 1)) + 1) + ~ ((d + ~ d) + 1)) + 1)) + 1)) + 1)) * ((((d ^ ~ (- (((~ e | e) + e) + 1) - 1)) + ((d | (- (((~ e | e) + e) + 1) - 1)) << 1)) + 1) | ((((d ^ d) + ((d & d) << 1)) + ~ (((~ (((((b ^ ~ e) + ((b | e) << 1)) + 1) + ~ ((d + ~ d) + 1)) + 1) | b) + (((((b ^ ~ e) + ((b | e) << 1)) + 1) + ~ ((d + ~ d) + 1)) + 1)) + 1)) + 1)) + ((((d ^ ~ (- (((~ e | e) + e) + 1) - 1)) + ((d | (- (((~ e | e) + e) + 1) - 1)) << 1)) + 1) & ~ ((((d ^ d) + ((d & d) << 1)) + ~ (((~ (((((b ^ ~ e) + ((b | e) << 1)) + 1) + ~ ((d + ~ d) + 1)) + 1) | b) + (((((b ^ ~ e) + ((b | e) << 1)) + 1) + ~ ((d + ~ d) + 1)) + 1)) + 1)) + 1)) * (~ (((d ^ ~ (- (((~ e | e) + e) + 1) - 1)) + ((d | (- (((~ e | e) + e) + 1) - 1)) << 1)) + 1) & ((((d ^ d) + ((d & d) << 1)) + ~ (((~ (((((b ^ ~ e) + ((b | e) << 1)) + 1) + ~ ((d + ~ d) + 1)) + 1) | b) + (((((b ^ ~ e) + ((b | e) << 1)) + 1) + ~ ((d + ~ d) + 1)) + 1)) + 1)) + 1))",
                "attributes": {
                    "numOps": 221,
                    "nestedExprLevel": 126,
                    "numDAGs": 43,
                    "opsPercentages": {
                        "arithmetic": 49.321266968325794,
                        "mul": 0.904977375565611,
                        "bitwise": 49.7737556561086
                    },
                    "percentageDAGsCancel": 13.953488372093023
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((d * 2 - ((((e ^ b) + (b | e) * -2) - 1 | b) + (b | e) * 2 + ~(e ^ b) + 1)) - 1 & -((~e | d) * 2 + (d ^ e)) - 2) * ((~e | d) * 2 + (d ^ e) + 1 & -(d * 2 + (-2 - ((((e ^ b) + (b | e) * -2) - 1 | b) + (b | e) * 2 + ~(e ^ b) + 1))) - 2) + ((~e | d) * 2 + (d ^ e) + 1 & (d * 2 - ((((e ^ b) + (b | e) * -2) - 1 | b) + (b | e) * 2 + ~(e ^ b) + 1)) - 1) * ((d * 2 - ((((e ^ b) + (b | e) * -2) - 1 | b) + (b | e) * 2 + ~(e ^ b) + 1)) - 1 | (~e | d) * 2 + (d ^ e) + 1)",
                    "attributes": {
                        "numOps": 103,
                        "nestedExprLevel": 35,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 53.39366515837104,
                        "opsPercentages": {
                            "arithmetic": 43.689320388349515,
                            "mul": 17.475728155339805,
                            "bitwise": 38.83495145631068
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(d ^ e) + 1 + (~e * 2 | d * 2) & (((d * 2 - (~(~e ^ b + 1 + (b | e) * 2) | b)) + (b | e) * -2) - ~e ^ b) - 2) * (~(((d * 2 - (~(~e ^ b + 1 + (b | e) * 2) | b)) + (b | e) * -2) - ~e ^ b) - 2 & (d ^ e) + 1 + (~e * 2 | d * 2)) + ((((d * 2 - (~(~e ^ b + 1 + (b | e) * 2) | b)) + (b | e) * -2) - ~e ^ b) - 2 | (d ^ e) + 1 + (~e * 2 | d * 2)) * ((((d * 2 - (~(~e ^ b + 1 + (b | e) * 2) | b)) + (b | e) * -2) - ~e ^ b) - 2 & (d ^ e) + 1 + (~e * 2 | d * 2))",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 33,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 50.678733031674206,
                        "opsPercentages": {
                            "arithmetic": 33.94495412844037,
                            "mul": 20.18348623853211,
                            "bitwise": 45.87155963302752
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(-((e ^ d) + (~e | d) * 2) - 2 & d * 2 - ((~(e | b) * 2 - (e ^ b) | b) + (e | b) * 2 - (e ^ b)) - 1) * (-d * 2 - ((~(e | b) * 2 - (e ^ b) | b) + (e | b) * 2 - (e ^ b)) & (e ^ d) + (~e | d) * 2 + 1) + (d * 2 - ((~(e | b) * 2 - (e ^ b) | b) + (e | b) * 2 - (e ^ b)) - 1 | (e ^ d) + (~e | d) * 2 + 1) * (d * 2 - ((~(e | b) * 2 - (e ^ b) | b) + (e | b) * 2 - (e ^ b)) - 1 & (e ^ d) + (~e | d) * 2 + 1)",
                    "attributes": {
                        "numOps": 88,
                        "nestedExprLevel": 26,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 60.18099547511312,
                        "opsPercentages": {
                            "arithmetic": 34.090909090909086,
                            "mul": 20.454545454545457,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "clang_default": {
                    "expr": "((d ^ 0xffffffff - ((e ^ 0xffffffff | e) + e + 1) ^ 0xffffffff) + (d | 0xffffffff - ((e ^ 0xffffffff | e) + e + 1)) * 2 + 1 & d * 2 + (((b ^ e ^ 0xffffffff) + (b | e) * 2 + (d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 2 ^ 0xffffffff | b) + (b ^ e ^ 0xffffffff) + (b | e) * 2 + (d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 3 ^ 0xffffffff) + 1) * ((d ^ 0xffffffff - ((e ^ 0xffffffff | e) + e + 1) ^ 0xffffffff) + (d | 0xffffffff - ((e ^ 0xffffffff | e) + e + 1)) * 2 + 1 | d * 2 + (((b ^ e ^ 0xffffffff) + (b | e) * 2 + (d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 2 ^ 0xffffffff | b) + (b ^ e ^ 0xffffffff) + (b | e) * 2 + (d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 3 ^ 0xffffffff) + 1) + ((d ^ 0xffffffff - ((e ^ 0xffffffff | e) + e + 1) ^ 0xffffffff) + (d | 0xffffffff - ((e ^ 0xffffffff | e) + e + 1)) * 2 + 1 & (d * 2 + (((b ^ e ^ 0xffffffff) + (b | e) * 2 + (d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 2 ^ 0xffffffff | b) + (b ^ e ^ 0xffffffff) + (b | e) * 2 + (d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 3 ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((d ^ 0xffffffff - ((e ^ 0xffffffff | e) + e + 1) ^ 0xffffffff) + (d | 0xffffffff - ((e ^ 0xffffffff | e) + e + 1)) * 2 + 1 ^ 0xffffffff) & d * 2 + (((b ^ e ^ 0xffffffff) + (b | e) * 2 + (d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 2 ^ 0xffffffff | b) + (b ^ e ^ 0xffffffff) + (b | e) * 2 + (d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 3 ^ 0xffffffff) + 1)",
                    "attributes": {
                        "numOps": 189,
                        "nestedExprLevel": 48,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 14.479638009049776,
                        "opsPercentages": {
                            "arithmetic": 44.97354497354497,
                            "mul": 9.523809523809524,
                            "bitwise": 45.5026455026455
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~(0xffffffff - e) ^ d) + 1 + (0xffffffff - e | d) * 2 & d * 2 + 1 + ~((~((~e ^ b) + (b | e) * 2 + 2 + ~(d + 1 + ~d)) | b) + (~e ^ b) + (b | e) * 2 + 3 + ~(d + 1 + ~d) )) * ((~(0xffffffff - e) ^ d) + 1 + (0xffffffff - e | d) * 2 | d * 2 + 1 + ~((~((~e ^ b) + (b | e) * 2 + 2 + ~(d + 1 + ~d)) | b) + (~e ^ b) + (b | e) * 2 + 3 + ~(d + 1 + ~d))) + ((~(0xffffffff - e) ^ d) + 1 + (0xffffffff - e | d) * 2 & ~(d * 2 + 1 + ~((~((~e ^ b) + (b | e) * 2 + 2 + ~(d + 1 + ~d)) | b) + (~e ^ b) + (b | e) * 2 + 3 + ~(d + 1 + ~d)))) * (~((~(0xffffffff - e) ^ d) + 1 + (0xffffffff - e | d) * 2) & d * 2 + 1 + ~((~((~e ^ b) + (b | e) * 2 + 2 + ~(d + 1 + ~d)) | b) + (~e ^ b) + (b | e) * 2 + 3 + ~(d + 1 + ~d) ))",
                    "attributes": {
                        "numOps": 157,
                        "nestedExprLevel": 39,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 28.95927601809955,
                        "opsPercentages": {
                            "arithmetic": 43.94904458598726,
                            "mul": 11.464968152866243,
                            "bitwise": 44.5859872611465
                        },
                        "percentageDAGsCancel": 2.7027027027027026
                    }
                },
                "gcc_O3": {
                    "expr": "(-(-2 - ((((e ^ b) + (e | b) * -2) - 1 | b) + ((e | b) * 2 - (e ^ b)))) + d * 2 - 2 & (d ^ e) + (~e | d) * 2 + 1) * (-(d ^ e) + (~e | d) * 2 - 2 & (-2 - ((((e ^ b) + (e | b) * -2) - 1 | b) + ((e | b) * 2 - (e ^ b)))) + d * 2 + 1) + ((d ^ e) + (~e | d) * 2 + 1 & (-2 - ((((e ^ b) + (e | b) * -2) - 1 | b) + ((e | b) * 2 - (e ^ b)))) + d * 2 + 1) * ((d ^ e) + (~e | d) * 2 + 1 | (-2 - ((((e ^ b) + (e | b) * -2) - 1 | b) + ((e | b) * 2 - (e ^ b)))) + d * 2 + 1)",
                    "attributes": {
                        "numOps": 101,
                        "nestedExprLevel": 37,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 54.29864253393665,
                        "opsPercentages": {
                            "arithmetic": 46.53465346534654,
                            "mul": 17.82178217821782,
                            "bitwise": 35.64356435643564
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 388,
            "gt": {
                "expr": "(((e&(d*d))|(d^e)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 25.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((~ e | ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - ~ e) + ((d | e) - (d & e))) + 1) + ((- ((~ e | ((d & d) * (d | d) + (d & ~ d) * (~ d & d))) - ~ e) - 1) | (- ((d | e) - (d & e)) - 1))",
                "attributes": {
                    "numOps": 40,
                    "nestedExprLevel": 20,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 32.5,
                        "mul": 10.0,
                        "bitwise": 57.49999999999999
                    },
                    "percentageDAGsCancel": 22.727272727272727
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((d ^ e) & d * d & e) + (d ^ e) + (d * d & e) + 1",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 72.5,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 18.181818181818183,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "e + 2 + (((~e - d * d | ~e) - 1 | ((d & e) - (d | e)) - 1) - (d & e)) + d * d | ~e + (d | e)",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 6,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 47.5,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 9.523809523809524,
                            "bitwise": 47.61904761904761
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "e ^ d | d * d & e",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 1,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 90.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 25.0,
                            "bitwise": 75.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e ^ 0xffffffff | d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)) - (e ^ 0xffffffff)) + ((d | e) - (d & e)) + 1 + (0xffffffff - ((e ^ 0xffffffff | d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)) - (e ^ 0xffffffff)) | 0xffffffff - ((d | e) - (d & e)))",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 16,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 15.0,
                        "opsPercentages": {
                            "arithmetic": 32.35294117647059,
                            "mul": 11.76470588235294,
                            "bitwise": 55.88235294117647
                        },
                        "percentageDAGsCancel": 22.22222222222222
                    }
                },
                "msvc_default": {
                    "expr": "((~e | d * d) - ~e) + ((d | e) - (d & e)) + 1 + (0xffffffff - ((~e | d * d) - ~e) | 0xffffffff - ((d | e) - (d & e)))",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 8,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 45.0,
                        "opsPercentages": {
                            "arithmetic": 40.909090909090914,
                            "mul": 9.090909090909092,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((d ^ e) + d * d & e) - (d * d & e & (d ^ e))",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 4,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 77.5,
                        "opsPercentages": {
                            "arithmetic": 22.22222222222222,
                            "mul": 22.22222222222222,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 389,
            "gt": {
                "expr": "(((~(a^e))&((-a)^e)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ ((a & e) + ~ (a | e)) | (((~ (a - 1) - e) - ((~ (a - 1) | ~ e) << 1)) - 2)) + ((a & e) + ~ (a | e))) + 1",
                "attributes": {
                    "numOps": 22,
                    "nestedExprLevel": 12,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 40.909090909090914,
                        "mul": 0.0,
                        "bitwise": 59.09090909090909
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(a | e) + (a & e) + (a ^ e | ((-e - a) + (~e | -a) * -2) - 2) + 1",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 22.727272727272727,
                        "opsPercentages": {
                            "arithmetic": 52.94117647058824,
                            "mul": 5.88235294117647,
                            "bitwise": 41.17647058823529
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_O1": {
                    "expr": "~(a | e) + 1 + (((~(a - 1) + (~e | ~(a - 1)) * -2) - e) - 2 | ~((a & e) + ~(a | e))) + (a & e)",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 8,
                        "numDAGs": 18,
                        "percentDecreaseByOps": -4.545454545454546,
                        "opsPercentages": {
                            "arithmetic": 43.47826086956522,
                            "mul": 4.3478260869565215,
                            "bitwise": 52.17391304347826
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~(e ^ a) & -(a + e + (~e | -a) * 2) - 2",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 9.090909090909092,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a & e) + ((a | e) ^ 0xffffffff) ^ 0xffffffff | (((a - 1 ^ 0xffffffff) - e) + (a - 1 ^ 0xffffffff | e ^ 0xffffffff) * -2) - 2) + (a & e) + ((a | e) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 8,
                        "numDAGs": 18,
                        "percentDecreaseByOps": -4.545454545454546,
                        "opsPercentages": {
                            "arithmetic": 43.47826086956522,
                            "mul": 4.3478260869565215,
                            "bitwise": 52.17391304347826
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~((a & e) + ~(a | e)) | ((~(a - 1) - e) + (~(a - 1) | ~e) * -2) - 2) + 1 + (a & e) + ~(a | e)",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": -4.545454545454546,
                        "opsPercentages": {
                            "arithmetic": 43.47826086956522,
                            "mul": 4.3478260869565215,
                            "bitwise": 52.17391304347826
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "gcc_O3": {
                    "expr": "((((-a - e) + (~e | -a) * -2) - 2 | a ^ e) - (a | e)) + (a & e)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 31.818181818181817,
                        "opsPercentages": {
                            "arithmetic": 53.333333333333336,
                            "mul": 6.666666666666667,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                }
            }
        },
        {
            "num": 390,
            "gt": {
                "expr": "((~(-((~(e^(c+e)))|(~(-c))))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 0.0,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((e & ((c ^ e) + ((c & e) + (c & e)))) - (e | ((c ^ e) + ((c & e) + (c & e))))) - 1) & ~ (c - 1)) + (c - 1)) - 1",
                "attributes": {
                    "numOps": 20,
                    "nestedExprLevel": 14,
                    "numDAGs": 13,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 7.6923076923076925
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "c + (~((c & e) * 2 + (c ^ e) ^ e) & -c) + -2",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 45.0,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 9.090909090909092,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_O1": {
                    "expr": "c + -2 + ((((c ^ e) + (c & e) * 2 & e) - ((c ^ e) + (c & e) * 2 | e)) - 1 & -c)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 7,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 15.0,
                        "opsPercentages": {
                            "arithmetic": 47.05882352941176,
                            "mul": 11.76470588235294,
                            "bitwise": 41.17647058823529
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(-c & ~((e ^ c) + (e & c) * 2 ^ e)) + c + -2",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 45.0,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 9.090909090909092,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e & (c ^ e) + (c & e) + (c & e)) - (e | (c ^ e) + (c & e) + (c & e))) - 1 & (c - 1 ^ 0xffffffff)) + c + -2",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 8,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((((c ^ e) + (c & e) + (c & e) & e) - ((c ^ e) + (c & e) + (c & e) | e)) - 1 & ~(c - 1)) - 2) + c",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 9,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 5.0,
                        "opsPercentages": {
                            "arithmetic": 47.368421052631575,
                            "mul": 0.0,
                            "bitwise": 52.63157894736842
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(c - 2) + (~((e ^ c) + (e & c) * 2 ^ e) & -c)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 10.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 391,
            "gt": {
                "expr": "(((((e*e)*(a|e))|a)^(~((e^a)*(a-e)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 11.11111111111111,
                        "mul": 33.33333333333333,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((((e & e) * (e | e) + (e & ~ e) * (~ e & e)) & ((a & ~ e) + e)) * (((e & e) * (e | e) + (e & ~ e) * (~ e & e)) | ((a & ~ e) + e)) + (((e & e) * (e | e) + (e & ~ e) * (~ e & e)) & ~ ((a & ~ e) + e)) * (~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) & ((a & ~ e) + e))) & ~ a) + a) - (- ((((e | a) - (e & a)) & ((a & ~ e) - (~ a & e))) * (((e | a) - (e & a)) | ((a & ~ e) - (~ a & e))) + (((e | a) - (e & a)) & ~ ((a & ~ e) - (~ a & e))) * (~ ((e | a) - (e & a)) & ((a & ~ e) - (~ a & e)))) - 1)) - ((((((((e & e) * (e | e) + (e & ~ e) * (~ e & e)) & ((a & ~ e) + e)) * (((e & e) * (e | e) + (e & ~ e) * (~ e & e)) | ((a & ~ e) + e)) + (((e & e) * (e | e) + (e & ~ e) * (~ e & e)) & ~ ((a & ~ e) + e)) * (~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) & ((a & ~ e) + e))) & ~ a) + a) | ~ (- ((((e | a) - (e & a)) & ((a & ~ e) - (~ a & e))) * (((e | a) - (e & a)) | ((a & ~ e) - (~ a & e))) + (((e | a) - (e & a)) & ~ ((a & ~ e) - (~ a & e))) * (~ ((e | a) - (e & a)) & ((a & ~ e) - (~ a & e)))) - 1)) << 1)) - 2",
                "attributes": {
                    "numOps": 212,
                    "nestedExprLevel": 95,
                    "numDAGs": 44,
                    "opsPercentages": {
                        "arithmetic": 21.22641509433962,
                        "mul": 11.320754716981133,
                        "bitwise": 67.45283018867924
                    },
                    "percentageDAGsCancel": 11.363636363636363
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((((e * e & e + (~e & a)) * (e + (~e & a) | e * e) + (e + (~e & a) & ~(e * e)) * (e * e & ~(e + (~e & a))) & ~a) + a) - ~(((~e & a) - (~a & e) & ~(e ^ a)) * ((e ^ a) & e + ~a) + ((e ^ a) & (~e & a) - (~a & e)) * ((~e & a) - (~a & e) | e ^ a))) + (((~e & a) - (~a & e) & ~(e ^ a)) * ((e ^ a) & e + ~a) + ((e ^ a) & (~e & a) - (~a & e)) * ((~e & a) - (~a & e) | e ^ a) | ((e * e & e + (~e & a)) * (e + (~e & a) | e * e) + (e + (~e & a) & ~(e * e)) * (e * e & ~(e + (~e & a))) & ~a) + a) * -2 + -2",
                    "attributes": {
                        "numOps": 122,
                        "nestedExprLevel": 34,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 42.45283018867924,
                        "opsPercentages": {
                            "arithmetic": 22.131147540983605,
                            "mul": 13.934426229508196,
                            "bitwise": 63.934426229508205
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "a + -1 + ((((~e & a) + e & e * e) * ((~e & a) + e | e * e) + (~e * e & (~e & a) + e) * (~(~e & a) + e & e * e) & ~a) - ((((~e & a) + e & e * e) * ((~e & a) + e | e * e) + (~e * e & (~e & a) + e) * (~(~e & a) + e & e * e) * 2 & ~a * 2) + a * 2 | ~(~(~(a | e) - (a & e) & (~e & a) - (~a & e)) * (~(~e & a) - (~a & e) & (a | e) - (a & e)) - ((~e & a) - (~a & e) | (a | e) - (a & e)) * ((~e & a) - (~a & e) & (a | e) - (a & e))) * 2)) + ((~e & a) - (~a & e) | (a | e) - (a & e)) * ((~e & a) - (~a & e) & (a | e) - (a & e)) + (~(a | e) - (a & e) & (~e & a) - (~a & e)) * (~(~e & a) - (~a & e) & (a | e) - (a & e))",
                    "attributes": {
                        "numOps": 149,
                        "nestedExprLevel": 38,
                        "numDAGs": 48,
                        "percentDecreaseByOps": 29.71698113207547,
                        "opsPercentages": {
                            "arithmetic": 22.818791946308725,
                            "mul": 13.422818791946309,
                            "bitwise": 63.758389261744966
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "clang_O3": {
                    "expr": "~((((~e * e & (~e & a) + e) * (~(~e & a) + e & e * e) + ((~e & a) + e | e * e) * ((~e & a) + e & e * e) & ~a) + a | ((~e & a) - (~a & e) & ~a ^ e) * (~(~e & a) - (~a & e) & a ^ e) + ((~e & a) - (~a & e) | a ^ e) * ((~e & a) - (~a & e) & a ^ e)) * 2) + ((~e & a) - (~a & e) & ~a ^ e) * (~(~e & a) - (~a & e) & a ^ e) + ((~e & a) - (~a & e) | a ^ e) * ((~e & a) - (~a & e) & a ^ e) + ((~e * e & (~e & a) + e) * (~(~e & a) + e & e * e) + ((~e & a) + e | e * e) * ((~e & a) + e & e * e) & ~a) + a",
                    "attributes": {
                        "numOps": 127,
                        "nestedExprLevel": 30,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 40.09433962264151,
                        "opsPercentages": {
                            "arithmetic": 18.89763779527559,
                            "mul": 13.385826771653544,
                            "bitwise": 67.71653543307087
                        },
                        "percentageDAGsCancel": 2.631578947368421
                    }
                },
                "clang_default": {
                    "expr": "((((e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) & (a & (e ^ 0xffffffff)) + e) * (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) | (a & (e ^ 0xffffffff)) + e) + (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) & ((a & (e ^ 0xffffffff)) + e ^ 0xffffffff)) * ((e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff) & (a & (e ^ 0xffffffff)) + e) & (a ^ 0xffffffff)) + a) - (-1 - (((e | a) - (e & a) & (a & (e ^ 0xffffffff)) - ((a ^ 0xffffffff) & e)) * ((e | a) - (e & a) | (a & (e ^ 0xffffffff)) - ((a ^ 0xffffffff) & e)) + ((e | a) - (e & a) & ((a & (e ^ 0xffffffff)) - ((a ^ 0xffffffff) & e) ^ 0xffffffff)) * (((e | a) - (e & a) ^ 0xffffffff) & (a & (e ^ 0xffffffff)) - ((a ^ 0xffffffff) & e))))) + (((e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) & (a & (e ^ 0xffffffff)) + e) * (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) | (a & (e ^ 0xffffffff)) + e) + (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) & ((a & (e ^ 0xffffffff)) + e ^ 0xffffffff)) * ((e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff) & (a & (e ^ 0xffffffff)) + e) & (a ^ 0xffffffff)) + a | 0xffffffff - (((e | a) - (e & a) & (a & (e ^ 0xffffffff)) - ((a ^ 0xffffffff) & e)) * ((e | a) - (e & a) | (a & (e ^ 0xffffffff)) - ((a ^ 0xffffffff) & e)) + ((e | a) - (e & a) & ((a & (e ^ 0xffffffff)) - ((a ^ 0xffffffff) & e) ^ 0xffffffff)) * (((e | a) - (e & a) ^ 0xffffffff) & (a & (e ^ 0xffffffff)) - ((a ^ 0xffffffff) & e))) ^ 0xffffffff) * -2 + -2",
                    "attributes": {
                        "numOps": 197,
                        "nestedExprLevel": 84,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 7.0754716981132075,
                        "opsPercentages": {
                            "arithmetic": 23.3502538071066,
                            "mul": 12.690355329949238,
                            "bitwise": 63.95939086294417
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_default": {
                    "expr": "((((e * e & (~e & a) + e) * (e * e | (~e & a) + e) + (e * e & ~((~e & a) + e)) * (~(e * e) & (~e & a) + e) & ~a) + a) - (-1 - (((e | a) - (e & a) & (~e & a) - (~a & e)) * ((e | a) - (e & a) | (~e & a) - (~a & e)) + ((e | a) - (e & a) & ~((~e & a) - (~a & e))) * (~((e | a) - (e & a)) & (~e & a) - (~a & e))))) + (((e * e & (~e & a) + e) * (e * e | (~e & a) + e) + (e * e & ~((~e & a) + e)) * (~(e * e) & (~e & a) + e) & ~a) + a | ~(0xffffffff - (((e | a) - (e & a) & (~e & a) - (~a & e)) * ((e | a) - (e & a) | (~e & a) - (~a & e)) + ((e | a) - (e & a) & ~((~e & a) - (~a & e))) * (~((e | a) - (e & a)) & (~e & a) - (~a & e))))) * -2 + -2",
                    "attributes": {
                        "numOps": 149,
                        "nestedExprLevel": 50,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 29.71698113207547,
                        "opsPercentages": {
                            "arithmetic": 25.503355704697988,
                            "mul": 11.409395973154362,
                            "bitwise": 63.08724832214765
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "gcc_O3": {
                    "expr": "(((~(~e & a) + e & e * e) * (~e * e & (~e & a) + e) + (e * e | (~e & a) + e) * (e * e & (~e & a) + e) & ~a) + a - ~(~a + e & a ^ e) * (~a ^ e & (~e & a) - (~a & e)) + (a ^ e | (~e & a) - (~a & e)) * (a ^ e & (~e & a) - (~a & e))) + (((~(~e & a) + e & e * e) * (~e * e & (~e & a) + e) + (e * e | (~e & a) + e) * (e * e & (~e & a) + e) & ~a) + a | (~a + e & a ^ e) * (~a ^ e & (~e & a) - (~a & e)) + (a ^ e | (~e & a) - (~a & e)) * (a ^ e & (~e & a) - (~a & e))) * -2 + -2",
                    "attributes": {
                        "numOps": 122,
                        "nestedExprLevel": 27,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 42.45283018867924,
                        "opsPercentages": {
                            "arithmetic": 22.131147540983605,
                            "mul": 13.934426229508196,
                            "bitwise": 63.934426229508205
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                }
            }
        },
        {
            "num": 392,
            "gt": {
                "expr": "(((-(e^e))^(((d+e)|(e+e))|d)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 0.0,
                        "bitwise": 57.14285714285714
                    },
                    "percentageDAGsCancel": 28.57142857142857
                }
            },
            "mba": {
                "expr": "((~ (((e - e) - ((e | ~ e) << 1)) - 2) + 1) | (((((((d | e) + (d & e)) & ~ (((e | e) << 1) - (e ^ e))) + (((e | e) << 1) - (e ^ e))) + d) + 1) + ((- ((((d | e) + (d & e)) & ~ (((e | e) << 1) - (e ^ e))) + (((e | e) << 1) - (e ^ e))) - 1) | (- d - 1)))) - ((~ (((e - e) - ((e | ~ e) << 1)) - 2) + 1) & (((((((d | e) + (d & e)) & ~ (((e | e) << 1) - (e ^ e))) + (((e | e) << 1) - (e ^ e))) + d) + 1) + ((- ((((d | e) + (d & e)) & ~ (((e | e) << 1) - (e ^ e))) + (((e | e) << 1) - (e ^ e))) - 1) | (- d - 1))))",
                "attributes": {
                    "numOps": 91,
                    "nestedExprLevel": 62,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 0.0,
                        "bitwise": 57.14285714285714
                    },
                    "percentageDAGsCancel": 24.137931034482758
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(e * 2 + (d + e & ~(e * 2)) & d) + d + (d + e & ~(e * 2)) + e * 2 + 1",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 81.31868131868131,
                        "opsPercentages": {
                            "arithmetic": 41.17647058823529,
                            "mul": 23.52941176470588,
                            "bitwise": 35.294117647058826
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_O1": {
                    "expr": "(~(d | e) + (d & e) & ~(e * 2) + e * -2 | ~d) + (d | e) + (d & e) & ~(e * 2) + e * 2 + d + 1",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 5,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 74.72527472527473,
                        "opsPercentages": {
                            "arithmetic": 34.78260869565217,
                            "mul": 17.391304347826086,
                            "bitwise": 47.82608695652174
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_O3": {
                    "expr": "(~(e * 2) & e + d) + e * 2 | d",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 92.3076923076923,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 28.57142857142857,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e | e ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) + 1 | ((d | e) + (d & e) & (e * 2 ^ 0xffffffff)) + e * 2 + d + 1 + (0xffffffff - (((d | e) + (d & e) & (e * 2 ^ 0xffffffff)) + e * 2) | 0xffffffff - d)) - (((e | e ^ 0xffffffff) * -2 - 2 ^ 0xffffffff) + 1 & ((d | e) + (d & e) & (e * 2 ^ 0xffffffff)) + e * 2 + d + 1 + (0xffffffff - (((d | e) + (d & e) & (e * 2 ^ 0xffffffff)) + e * 2) | 0xffffffff - d))",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 18,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 32.967032967032964,
                        "opsPercentages": {
                            "arithmetic": 40.98360655737705,
                            "mul": 16.39344262295082,
                            "bitwise": 42.62295081967213
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "e * 2 + ((d | e) + (d & e) & ~(e * 2)) + d + 1 + (0xffffffff - (((d | e) + (d & e) & ~(e * 2)) + e * 2) | 0xffffffff - d)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 8,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 75.82417582417582,
                        "opsPercentages": {
                            "arithmetic": 40.909090909090914,
                            "mul": 18.181818181818183,
                            "bitwise": 40.909090909090914
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((e + d & ~(e * 2)) + e * 2 + d) - ((e + d & ~(e * 2)) + e * 2 & d)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 83.51648351648352,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 26.666666666666668,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 393,
            "gt": {
                "expr": "(((-((c+(a*c))-c))&(a^a)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 16.666666666666664,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "(~ (~ (((((c ^ ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + ((c & ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) << 1)) ^ c) - ((~ ((c ^ ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + ((c & ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) << 1)) & c) << 1)) - 1)) | ((a | a) - (a & a))) - ~ (~ (((((c ^ ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + ((c & ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) << 1)) ^ c) - ((~ ((c ^ ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) + ((c & ((a & c) * (a | c) + (a & ~ c) * (~ a & c))) << 1)) & c) << 1)) - 1))",
                "attributes": {
                    "numOps": 109,
                    "nestedExprLevel": 56,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 16.51376146788991,
                        "mul": 14.678899082568808,
                        "bitwise": 68.80733944954129
                    },
                    "percentageDAGsCancel": 19.230769230769234
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((c ^ (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) + (c & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) * 2 ^ c) + (((c ^ (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) + (c & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) * 2 ^ 0xffffffff) & c) * -2 + -1) - (((c ^ (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) + (c & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) * 2 ^ c) + (((c ^ (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) + (c & (a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c)) * 2 ^ 0xffffffff) & c) * -2 + -1)",
                    "attributes": {
                        "numOps": 105,
                        "nestedExprLevel": 42,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 3.669724770642202,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.952380952380953,
                            "bitwise": 59.04761904761905
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_default": {
                    "expr": "((((a & c) * (a | c) + (~c & a) * (~a & c) ^ c) + ((a & c) * (a | c) + (~c & a) * (~a & c) & c) * 2 ^ c) + (~(((a & c) * (a | c) + (~c & a) * (~a & c) ^ c) + ((a & c) * (a | c) + (~c & a) * (~a & c) & c) * 2) & c) * -2 + -1) - ((((a & c) * (a | c) + (~c & a) * (~a & c) ^ c) + ((a & c) * (a | c) + (~c & a) * (~a & c) & c) * 2 ^ c) + (~(((a & c) * (a | c) + (~c & a) * (~a & c) ^ c) + ((a & c) * (a | c) + (~c & a) * (~a & c) & c) * 2) & c) * -2 + -1)",
                    "attributes": {
                        "numOps": 105,
                        "nestedExprLevel": 33,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 3.669724770642202,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.952380952380953,
                            "bitwise": 59.04761904761905
                        },
                        "percentageDAGsCancel": 13.636363636363635
                    }
                },
                "gcc_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 394,
            "gt": {
                "expr": "((((~(d+e))|(e*e))-(e*d)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 33.33333333333333,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((- ((d - ~ e) - 1) - 1) + ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + 1) + ((- (- ((d - ~ e) - 1) - 1) - 1) | (- ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) - 1))) & ~ ((e & d) * (e | d) + (e & ~ d) * (~ e & d))) << 1) - (((((- ((d - ~ e) - 1) - 1) + ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + 1) + ((- (- ((d - ~ e) - 1) - 1) - 1) | (- ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) - 1))) ^ ((e & d) * (e | d) + (e & ~ d) * (~ e & d)))",
                "attributes": {
                    "numOps": 95,
                    "nestedExprLevel": 42,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 38.94736842105263,
                        "mul": 12.631578947368421,
                        "bitwise": 48.421052631578945
                    },
                    "percentageDAGsCancel": 15.151515151515152
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~((~e & d) * (~d & e) + (e & d) * (e | d)) & e * e + (~e - d) + 1 + (~(e * e) | (d - ~e) - 1)) * 2 - (e * e + (~e - d) + 1 + (~(e * e) | (d - ~e) - 1) ^ (~e & d) * (~d & e) + (e & d) * (e | d))",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 12,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 50.526315789473685,
                        "opsPercentages": {
                            "arithmetic": 31.914893617021278,
                            "mul": 19.148936170212767,
                            "bitwise": 48.93617021276596
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "msvc_O1": {
                    "expr": "(((-1 - e * e) * 2 | (d + e) * 2) + 2 + ((e * e - d) + ~e) * 2 & ~(~d & e) * (~e & d) + (d | e) * (d & e) * 2) - ((((~e * e | d + e) - d) - e) + e * e ^ (~d & e) * (~e & d) + (d | e) * (d & e))",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 13,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 52.63157894736842,
                        "opsPercentages": {
                            "arithmetic": 31.11111111111111,
                            "mul": 26.666666666666668,
                            "bitwise": 42.22222222222222
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(~d & e) * (~e & d) + (e | d) * (e & d) & (~(e * e) | e + d) + (e * e - (e + d))) * 2 - ((~d & e) * (~e & d) + (e | d) * (e & d) ^ (~(e * e) | e + d) + (e * e - (e + d)))",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 12,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 58.94736842105262,
                        "opsPercentages": {
                            "arithmetic": 28.205128205128204,
                            "mul": 23.076923076923077,
                            "bitwise": 48.717948717948715
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) - ((d - (e ^ 0xffffffff)) + -1)) + (0xffffffff - (-1 - ((d - (e ^ 0xffffffff)) + -1)) | 0xffffffff - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e))) & ((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) ^ 0xffffffff)) * 2 - (((e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) - ((d - (e ^ 0xffffffff)) + -1)) + (0xffffffff - (-1 - ((d - (e ^ 0xffffffff)) + -1)) | 0xffffffff - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e))) ^ (e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d))",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 37,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 14.736842105263156,
                        "opsPercentages": {
                            "arithmetic": 38.2716049382716,
                            "mul": 16.049382716049383,
                            "bitwise": 45.67901234567901
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_default": {
                    "expr": "((e * e - ((d - ~e) + -1)) + (0xffffffff - (-1 - ((d - ~e) + -1)) | 0xffffffff - e * e) & ~((e & d) * (e | d) + (~d & e) * (~e & d))) * 2 - ((e * e - ((d - ~e) + -1)) + (0xffffffff - (-1 - ((d - ~e) + -1)) | 0xffffffff - e * e) ^ (e & d) * (e | d) + (~d & e) * (~e & d))",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 19,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 40.0,
                        "opsPercentages": {
                            "arithmetic": 47.368421052631575,
                            "mul": 15.789473684210526,
                            "bitwise": 36.84210526315789
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~(~d & e) * (~e & d) + (e | d) * (e & d) & (e + d | ~(e * e)) + e * e + 1 + (~e - d)) * 2 - ((e + d | ~(e * e)) + e * e + 1 + (~e - d) ^ (~d & e) * (~e & d) + (e | d) * (e & d))",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 11,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 54.736842105263165,
                        "opsPercentages": {
                            "arithmetic": 30.23255813953488,
                            "mul": 20.930232558139537,
                            "bitwise": 48.837209302325576
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 395,
            "gt": {
                "expr": "((-((b*b)-(~b))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 25.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ ((((b & b) * (b | b) + (b & ~ b) * (~ b & b)) ^ (- b - 1)) - ((~ ((b & b) * (b | b) + (b & ~ b) * (~ b & b)) & (- b - 1)) << 1)) + 1",
                "attributes": {
                    "numOps": 29,
                    "nestedExprLevel": 12,
                    "numDAGs": 17,
                    "opsPercentages": {
                        "arithmetic": 27.586206896551722,
                        "mul": 13.793103448275861,
                        "bitwise": 58.620689655172406
                    },
                    "percentageDAGsCancel": 29.411764705882355
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(b * b | b) * 2 + (b * b ^ b) + 1",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 72.41379310344827,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 37.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(b * b) * 2 & (-1 - b) * 2) - (~b ^ b * b)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 62.06896551724138,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 36.36363636363637,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(b * b) & ~b) * 2 - (b * b ^ ~b)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 68.96551724137932,
                        "opsPercentages": {
                            "arithmetic": 11.11111111111111,
                            "mul": 33.33333333333333,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff - b) + ((b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b) ^ 0xffffffff) & 0xffffffff - b) * -2 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 10,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 17.24137931034483,
                        "opsPercentages": {
                            "arithmetic": 29.166666666666668,
                            "mul": 20.833333333333336,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_default": {
                    "expr": "~((b * b ^ 0xffffffff - b) + (~(b * b) & 0xffffffff - b) * -2) + 1",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 58.620689655172406,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 25.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(b * b ^ b) + 1 + ~(b * b | b) * 2",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 72.41379310344827,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 37.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 396,
            "gt": {
                "expr": "(((~(-(~(e-b))))*(e&e)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 16.666666666666664,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "(((~ e + b) - 1) & (((~ e | e) + e) + 1)) * (((~ e + b) - 1) | (((~ e | e) + e) + 1)) + (((~ e + b) - 1) & ~ (((~ e | e) + e) + 1)) * (~ ((~ e + b) - 1) & (((~ e | e) + e) + 1))",
                "attributes": {
                    "numOps": 37,
                    "nestedExprLevel": 18,
                    "numDAGs": 15,
                    "opsPercentages": {
                        "arithmetic": 45.94594594594595,
                        "mul": 5.405405405405405,
                        "bitwise": 48.64864864864865
                    },
                    "percentageDAGsCancel": 6.666666666666667
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((e - b) + 1 & e) * ((b + ~e) - 1 & ~e) + ((b + ~e) - 1 & e) * ((b + ~e) - 1 | e)",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 48.64864864864865,
                        "opsPercentages": {
                            "arithmetic": 47.368421052631575,
                            "mul": 10.526315789473683,
                            "bitwise": 42.10526315789473
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~b + -1 + ~e & e) * (b + -1 + ~e & ~e) + (b + -1 + ~e | e) * (b + -1 + ~e & e)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 3,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 32.432432432432435,
                        "opsPercentages": {
                            "arithmetic": 52.0,
                            "mul": 8.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_O3": {
                    "expr": "(-(~e + b) & e) * ((~e + b) - 1 & ~e) + ((~e + b) - 1 | e) * ((~e + b) - 1 & e)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 6,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 45.94594594594595,
                        "opsPercentages": {
                            "arithmetic": 45.0,
                            "mul": 10.0,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_default": {
                    "expr": "(((e ^ 0xffffffff) + b) - 1 & (e ^ 0xffffffff | e) + e + 1) * (((e ^ 0xffffffff) + b) - 1 | (e ^ 0xffffffff | e) + e + 1) + (((e ^ 0xffffffff) + b) - 1 & ((e ^ 0xffffffff | e) + e + 1 ^ 0xffffffff)) * ((((e ^ 0xffffffff) + b) - 1 ^ 0xffffffff) & (e ^ 0xffffffff | e) + e + 1)",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 14,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 45.94594594594595,
                            "mul": 5.405405405405405,
                            "bitwise": 48.64864864864865
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "msvc_default": {
                    "expr": "((~e - 1) + b & e) * ((~e - 1) + b | e) + ((~e - 1) + b & ~e) * (~((~e - 1) + b) & e)",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 7,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 43.24324324324324,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 9.523809523809524,
                            "bitwise": 47.61904761904761
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((e - b) + 1 & e) * (~e & (~e - 1) + b) + ((~e - 1) + b | e) * ((~e - 1) + b & e)",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 48.64864864864865,
                        "opsPercentages": {
                            "arithmetic": 47.368421052631575,
                            "mul": 10.526315789473683,
                            "bitwise": 42.10526315789473
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                }
            }
        },
        {
            "num": 397,
            "gt": {
                "expr": "(((~(-(~(-e))))-(a^(-(e*e)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 12.5,
                        "bitwise": 37.5
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((e - 1) - 1) & ~ ((a | (~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) + 1)) - (a & (~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) + 1)))) << 1) - (((e - 1) - 1) ^ ((a | (~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) + 1)) - (a & (~ ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) + 1))))",
                "attributes": {
                    "numOps": 59,
                    "nestedExprLevel": 28,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 25.423728813559322,
                        "mul": 13.559322033898304,
                        "bitwise": 61.016949152542374
                    },
                    "percentageDAGsCancel": 30.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((e * e - 1 ^ a) & e - 2) * 2 - (e - 2 ^ -(e * e) ^ a)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 79.66101694915254,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 25.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(-(e * e) | a) - (-(e * e) & a) * 2 & (e - 2) * 2) - ((-(e * e) | a) - (-(e * e) & a) ^ e - 2)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 9,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 62.71186440677966,
                        "opsPercentages": {
                            "arithmetic": 40.909090909090914,
                            "mul": 27.27272727272727,
                            "bitwise": 31.818181818181817
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~a & e - 2) * 2 - (a ^ e - 2)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 88.13559322033898,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 14.285714285714285,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(e - 2 & ((a | (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff) + 1) - (a & (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff) + 1) ^ 0xffffffff)) * 2 - (e - 2 ^ (a | (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff) + 1) - (a & (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) ^ 0xffffffff) + 1))",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 21,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 16.94915254237288,
                        "opsPercentages": {
                            "arithmetic": 26.53061224489796,
                            "mul": 18.367346938775512,
                            "bitwise": 55.10204081632652
                        },
                        "percentageDAGsCancel": 17.647058823529413
                    }
                },
                "msvc_default": {
                    "expr": "(e - 2 & ~((~(e * e) + 1 | a) - (~(e * e) + 1 & a))) * 2 - (e - 2 ^ (~(e * e) + 1 | a) - (~(e * e) + 1 & a))",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 9,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 57.6271186440678,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 20.0,
                            "bitwise": 44.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((e * e - 1 ^ a) & e - 2) * 2 - (-(e * e) ^ e - 2 ^ a)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 79.66101694915254,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 25.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 10.0
                    }
                }
            }
        },
        {
            "num": 398,
            "gt": {
                "expr": "((d*(-((c&d)|c))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 25.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(d & (~ ((((~ c | d) - ~ c) & ~ c) + c) + 1)) * (d | (~ ((((~ c | d) - ~ c) & ~ c) + c) + 1)) + (d & ~ (~ ((((~ c | d) - ~ c) & ~ c) + c) + 1)) * (~ d & (~ ((((~ c | d) - ~ c) & ~ c) + c) + 1))",
                "attributes": {
                    "numOps": 45,
                    "nestedExprLevel": 22,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 28.888888888888886,
                        "mul": 4.444444444444445,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 18.75
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-(c + (d & c & ~c)) & ~d) * ((c + (d & c & ~c)) - 1 & d) + (-(c + (d & c & ~c)) & d) * (-(c + (d & c & ~c)) | d)",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 10,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 37.77777777777778,
                        "opsPercentages": {
                            "arithmetic": 32.142857142857146,
                            "mul": 7.142857142857142,
                            "bitwise": 60.71428571428571
                        },
                        "percentageDAGsCancel": 21.428571428571427
                    }
                },
                "msvc_O1": {
                    "expr": "(~d & -((c + 1 + (~c | d) & ~c) + c)) * (~-((c + 1 + (~c | d) & ~c) + c) & d) + (-((c + 1 + (~c | d) & ~c) + c) | d) * (-((c + 1 + (~c | d) & ~c) + c) & d)",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 14,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 8.88888888888889,
                        "opsPercentages": {
                            "arithmetic": 41.46341463414634,
                            "mul": 4.878048780487805,
                            "bitwise": 53.65853658536586
                        },
                        "percentageDAGsCancel": 18.75
                    }
                },
                "clang_O3": {
                    "expr": "(~d & -c) * (c - 1 & d) + (-c | d) * (-c & d)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 73.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 16.666666666666664,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(d & (((c ^ 0xffffffff | d) - (c ^ 0xffffffff) & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1) * (d | (((c ^ 0xffffffff | d) - (c ^ 0xffffffff) & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1) + (d & ((((c ^ 0xffffffff | d) - (c ^ 0xffffffff) & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((d ^ 0xffffffff) & (((c ^ 0xffffffff | d) - (c ^ 0xffffffff) & (c ^ 0xffffffff)) + c ^ 0xffffffff) + 1)",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 19,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 28.888888888888886,
                            "mul": 4.444444444444445,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 18.75
                    }
                },
                "msvc_default": {
                    "expr": "(~(((~c | d) - ~c & ~c) + c) + 1 & d) * (~(((~c | d) - ~c & ~c) + c) + 1 | d) + (~(~(((~c | d) - ~c & ~c) + c) + 1) & d) * (~d & ~(((~c | d) - ~c & ~c) + c) + 1)",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 15,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 28.888888888888886,
                            "mul": 4.444444444444445,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "gcc_O3": {
                    "expr": "(c - 1 & d) * (~d & -c) + (-c | d) * (-c & d)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 73.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 16.666666666666664,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 399,
            "gt": {
                "expr": "((((d|(d+b))+d)-((~(-(b*a)))^(b+b))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 11.11111111111111,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((d & ~ ((d | b) + (d & b))) + ((d | b) + (d & b))) ^ ~ d) + ((((d & ~ ((d | b) + (d & b))) + ((d | b) + (d & b))) | d) + (((d & ~ ((d | b) + (d & b))) + ((d | b) + (d & b))) | d))) + 1) + ~ ((((((b & a) * (b | a) + (b & ~ a) * (~ b & a)) - 1) - ((b - ~ b) - 1)) - (((((b & a) * (b | a) + (b & ~ a) * (~ b & a)) - 1) | ~ ((b - ~ b) - 1)) + ((((b & a) * (b | a) + (b & ~ a) * (~ b & a)) - 1) | ~ ((b - ~ b) - 1)))) - 2)) + 1",
                "attributes": {
                    "numOps": 84,
                    "nestedExprLevel": 48,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 35.714285714285715,
                        "mul": 7.142857142857142,
                        "bitwise": 57.14285714285714
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~b * 2 + 1 | ((~b & a) * (~a & b) + (b & a) * (b | a)) - 1) * 2 + ~((~b & a) * (~a & b) + (b & a) * (b | a)) + (b - ~b) + ((~(b + d) & d) + b + d | d) * 2 + ~((~(b + d) & d) + b + d ^ d) + 4",
                    "attributes": {
                        "numOps": 46,
                        "nestedExprLevel": 13,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 45.23809523809524,
                        "opsPercentages": {
                            "arithmetic": 34.78260869565217,
                            "mul": 15.217391304347828,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((((~d ^ (b & d) + (~((b & d) + (b | d)) & d) + (b | d)) + (((a | b) * (a & b) + -1 + (~a & b) * (~b & a) | ~(b * 2)) + ((b & d) + (~((b & d) + (b | d)) & d) + (b | d) | d)) * 2) - (~a & b) * (~b & a)) - (a | b) * (a & b)) - ~b) + b + 3",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 20,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 38.095238095238095,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 11.538461538461538,
                            "bitwise": 57.692307692307686
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(b * 2 - ((~b & a) * (~a & b) + (b | a) * (b & a) + ((~(d + b) & d) + d + b ^ d) + -1)) + (~(b * 2) | ((~b & a) * (~a & b) + (b | a) * (b & a)) - 1) * 2 + ((~(d + b) & d) + d + b | d) * 2 + 2",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 14,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 47.61904761904761,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 18.181818181818183,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                },
                "clang_default": {
                    "expr": "((d & ((d | b) + (d & b) ^ 0xffffffff)) + (d | b) + (d & b) ^ d ^ 0xffffffff) + ((d & ((d | b) + (d & b) ^ 0xffffffff)) + (d | b) + (d & b) | d) + ((d & ((d | b) + (d & b) ^ 0xffffffff)) + (d | b) + (d & b) | d) + (((((b & a) * (b | a) + (b & (a ^ 0xffffffff)) * ((b ^ 0xffffffff) & a)) - ((b - (b ^ 0xffffffff)) + -1)) - ((((b & a) * (b | a) + (b & (a ^ 0xffffffff)) * ((b ^ 0xffffffff) & a)) - 1 | (b - (b ^ 0xffffffff)) - 1 ^ 0xffffffff) + (((b & a) * (b | a) + (b & (a ^ 0xffffffff)) * ((b ^ 0xffffffff) & a)) - 1 | (b - (b ^ 0xffffffff)) - 1 ^ 0xffffffff))) - 3 ^ 0xffffffff) + 2",
                    "attributes": {
                        "numOps": 83,
                        "nestedExprLevel": 39,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 1.1904761904761905,
                        "opsPercentages": {
                            "arithmetic": 34.93975903614458,
                            "mul": 7.228915662650602,
                            "bitwise": 57.831325301204814
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "msvc_default": {
                    "expr": "((~((d | b) + (d & b)) & d) + (d | b) + (d & b) ^ ~d) + ((~((d | b) + (d & b)) & d) + (d | b) + (d & b) | d) + ((~((d | b) + (d & b)) & d) + (d | b) + (d & b) | d) + 2 + ~(((((b & a) * (b | a) + (~a & b) * (~b & a)) - ((b - ~b) + -1)) - (((b & a) * (b | a) + -1 + (~a & b) * (~b & a) | ~((b - ~b) - 1)) + ((b & a) * (b | a) + -1 + (~a & b) * (~b & a) | ~((b - ~b) - 1)))) - 3)",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 33,
                        "numDAGs": 36,
                        "percentDecreaseByOps": -1.1904761904761905,
                        "opsPercentages": {
                            "arithmetic": 36.470588235294116,
                            "mul": 7.0588235294117645,
                            "bitwise": 56.470588235294116
                        },
                        "percentageDAGsCancel": 2.7777777777777777
                    }
                },
                "gcc_O3": {
                    "expr": "((~(b & a) * (a | b) + (~b & a) * (~a & b) + (b - ~b) + (~b * 2 + 1 | (b & a) * (a | b) + (~b & a) * (~a & b) - 1) * 2 + ((~(d + b) & d) + d + b | d) * 2) - ((~(d + b) & d) + d + b ^ d)) + 3",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 13,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 46.42857142857143,
                        "opsPercentages": {
                            "arithmetic": 35.55555555555556,
                            "mul": 15.555555555555555,
                            "bitwise": 48.888888888888886
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                }
            }
        },
        {
            "num": 400,
            "gt": {
                "expr": "((((-c)*(d-d))|(d|(d|c))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 16.666666666666664,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "((((~ c + 1) & ((d & ~ d) - (~ d & d))) * ((~ c + 1) | ((d & ~ d) - (~ d & d))) + ((~ c + 1) & ~ ((d & ~ d) - (~ d & d))) * (~ (~ c + 1) & ((d & ~ d) - (~ d & d)))) & ~ (((d + ((d & ~ c) + c)) + 1) + ((- d - 1) | (- ((d & ~ c) + c) - 1)))) + (((d + ((d & ~ c) + c)) + 1) + ((- d - 1) | (- ((d & ~ c) + c) - 1)))",
                "attributes": {
                    "numOps": 68,
                    "nestedExprLevel": 30,
                    "numDAGs": 28,
                    "opsPercentages": {
                        "arithmetic": 41.17647058823529,
                        "mul": 2.941176470588235,
                        "bitwise": 55.88235294117647
                    },
                    "percentageDAGsCancel": 32.142857142857146
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(c + (~c & d) & d) + d + (~c & d) + c + 1",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 83.82352941176471,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 0.0,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "d + 1 + (~(~c & d) - c | ~d) + (~c & d) + c",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 82.35294117647058,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 0.0,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_O3": {
                    "expr": "(~c & d) + c | d",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 94.11764705882352,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 0.0,
                            "bitwise": 75.0
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "clang_default": {
                    "expr": "(((c ^ 0xffffffff) + 1 & (d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d)) * ((c ^ 0xffffffff) + 1 | (d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d)) + ((c ^ 0xffffffff) + 1 & ((d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d) ^ 0xffffffff)) * (((c ^ 0xffffffff) + 1 ^ 0xffffffff) & (d & (d ^ 0xffffffff)) - ((d ^ 0xffffffff) & d)) & (d + (d & (c ^ 0xffffffff)) + c + 1 + (0xffffffff - d | 0xffffffff - ((d & (c ^ 0xffffffff)) + c)) ^ 0xffffffff)) + d + (d & (c ^ 0xffffffff)) + c + 1 + (0xffffffff - d | 0xffffffff - ((d & (c ^ 0xffffffff)) + c))",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 26,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 5.88235294117647,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 3.125,
                            "bitwise": 59.375
                        },
                        "percentageDAGsCancel": 38.70967741935484
                    }
                },
                "msvc_default": {
                    "expr": "(~c & d) + c + d + 1 + (0xffffffff - d | 0xffffffff - ((~c & d) + c))",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 82.35294117647058,
                        "opsPercentages": {
                            "arithmetic": 58.333333333333336,
                            "mul": 0.0,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(c + d) - (c & d)",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 95.58823529411765,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 401,
            "gt": {
                "expr": "((((d+c)*a)+(-(~(a|a)))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 16.666666666666664,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "((((((d ^ ~ c) + ((d | c) << 1)) + 1) & a) * ((((d ^ ~ c) + ((d | c) << 1)) + 1) | a) + ((((d ^ ~ c) + ((d | c) << 1)) + 1) & ~ a) * (~ (((d ^ ~ c) + ((d | c) << 1)) + 1) & a)) - ~ ((((a + a) + 1) + ((- a - 1) | (- a - 1))) + 1)) - 1",
                "attributes": {
                    "numOps": 45,
                    "nestedExprLevel": 24,
                    "numDAGs": 25,
                    "opsPercentages": {
                        "arithmetic": 42.22222222222222,
                        "mul": 4.444444444444445,
                        "bitwise": 53.333333333333336
                    },
                    "percentageDAGsCancel": 8.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((((d | c) * 2 + ~(c ^ d) + 1 & a) * ((d | c) * 2 + ~(c ^ d) + 1 | a) + (((c ^ d) + (d | c) * -2) - 1 & a) * ((d | c) * 2 + ~(c ^ d) + 1 & ~a)) - (-2 - a)) + -1",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 13,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 17.77777777777778,
                        "opsPercentages": {
                            "arithmetic": 40.54054054054054,
                            "mul": 16.216216216216218,
                            "bitwise": 43.24324324324324
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((c | d) * 2 + 1 + (~c ^ d) | a) * ((c | d) * 2 + 1 + (~c ^ d) & a) + 1 + (~a & (c | d) * 2 + 1 + (~c ^ d)) * (~(c | d) * 2 + 1 + (~c ^ d) & a) + a",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 9,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 22.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 31.428571428571427,
                            "mul": 17.142857142857142,
                            "bitwise": 51.42857142857142
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(d | c) * 2 - (d ^ c) & a) * (~a & (d | c) * 2 - (d ^ c)) + a + ((d | c) * 2 - (d ^ c) | a) * ((d | c) * 2 - (d ^ c) & a) + 1",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 9,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 40.0,
                        "opsPercentages": {
                            "arithmetic": 25.925925925925924,
                            "mul": 22.22222222222222,
                            "bitwise": 51.85185185185185
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((d ^ c ^ 0xffffffff) + (d | c) * 2 + 1 & a) * ((d ^ c ^ 0xffffffff) + (d | c) * 2 + 1 | a) + ((d ^ c ^ 0xffffffff) + (d | c) * 2 + 1 & (a ^ 0xffffffff)) * (((d ^ c ^ 0xffffffff) + (d | c) * 2 + 1 ^ 0xffffffff) & a)) - (a * 2 + (0xffffffff - a | 0xffffffff - a) + 2 ^ 0xffffffff)) + -1",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 14,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 4.444444444444445,
                        "opsPercentages": {
                            "arithmetic": 37.2093023255814,
                            "mul": 16.27906976744186,
                            "bitwise": 46.51162790697674
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((((~c ^ d) + 1 + (d | c) * 2 & a) * ((~c ^ d) + 1 + (d | c) * 2 | a) + ((~c ^ d) + 1 + (d | c) * 2 & ~a) * (~((~c ^ d) + 1 + (d | c) * 2) & a)) - ~(a * 2 + 2 + (0xffffffff - a | 0xffffffff - a))) + -1",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 14,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 4.444444444444445,
                        "opsPercentages": {
                            "arithmetic": 37.2093023255814,
                            "mul": 16.27906976744186,
                            "bitwise": 46.51162790697674
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "a + 1 + (((d ^ c) + (c | d) * -2) - 1 & a) * (~a & (c | d) * 2 - (d ^ c)) + ((c | d) * 2 - (d ^ c) | a) * ((c | d) * 2 - (d ^ c) & a)",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 10,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 37.77777777777778,
                        "opsPercentages": {
                            "arithmetic": 32.142857142857146,
                            "mul": 21.428571428571427,
                            "bitwise": 46.42857142857143
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 402,
            "gt": {
                "expr": "(((-((c|(c|b))*(c+c)))&(b-(b&b))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 12.5,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 37.5
                }
            },
            "mba": {
                "expr": "((~ (~ (((((c & ~ ((c & ~ b) + b)) + ((c & ~ b) + b)) & ((c - ~ c) - 1)) * (((c & ~ ((c & ~ b) + b)) + ((c & ~ b) + b)) | ((c - ~ c) - 1)) + (((c & ~ ((c & ~ b) + b)) + ((c & ~ b) + b)) & ~ ((c - ~ c) - 1)) * (~ ((c & ~ ((c & ~ b) + b)) + ((c & ~ b) + b)) & ((c - ~ c) - 1))) - 1)) | ((b ^ ((~ b | b) - ~ b)) - ((~ b & ((~ b | b) - ~ b)) << 1))) + ~ (((((c & ~ ((c & ~ b) + b)) + ((c & ~ b) + b)) & ((c - ~ c) - 1)) * (((c & ~ ((c & ~ b) + b)) + ((c & ~ b) + b)) | ((c - ~ c) - 1)) + (((c & ~ ((c & ~ b) + b)) + ((c & ~ b) + b)) & ~ ((c - ~ c) - 1)) * (~ ((c & ~ ((c & ~ b) + b)) + ((c & ~ b) + b)) & ((c - ~ c) - 1))) - 1)) + 1",
                "attributes": {
                    "numOps": 135,
                    "nestedExprLevel": 63,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 36.2962962962963,
                        "mul": 2.9629629629629632,
                        "bitwise": 60.74074074074074
                    },
                    "percentageDAGsCancel": 23.333333333333332
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(-(~b * 2 & b * 2) | (c * 2 & (~(~b & c + b) & c) + ~b & c + b) * ((~(~b & c + b) & c) + ~b & c + b | c * 2) + (~c * 2 & (~(~b & c + b) & c) + ~b & c + b) * (~(~(~b & c + b) & c) + ~b & c + b & c * 2) + -1) - (c * 2 & (~(~b & c + b) & c) + ~b & c + b) * ((~(~b & c + b) & c) + ~b & c + b | c * 2) + (~c * 2 & (~(~b & c + b) & c) + ~b & c + b) * (~(~(~b & c + b) & c) + ~b & c + b & c * 2) + -1",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 19,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 19.25925925925926,
                        "opsPercentages": {
                            "arithmetic": 29.357798165137616,
                            "mul": 12.844036697247708,
                            "bitwise": 57.798165137614674
                        },
                        "percentageDAGsCancel": 9.375
                    }
                },
                "clang_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((c & ((c & (b ^ 0xffffffff)) + b ^ 0xffffffff)) + (c & (b ^ 0xffffffff)) + b & (c - (c ^ 0xffffffff)) - 1) * ((c & ((c & (b ^ 0xffffffff)) + b ^ 0xffffffff)) + (c & (b ^ 0xffffffff)) + b | (c - (c ^ 0xffffffff)) - 1) + ((c & ((c & (b ^ 0xffffffff)) + b ^ 0xffffffff)) + (c & (b ^ 0xffffffff)) + b & ((c - (c ^ 0xffffffff)) - 1 ^ 0xffffffff)) * (((c & ((c & (b ^ 0xffffffff)) + b ^ 0xffffffff)) + (c & (b ^ 0xffffffff)) + b ^ 0xffffffff) & (c - (c ^ 0xffffffff)) - 1)) - 1 | (b ^ (b ^ 0xffffffff | b) - (b ^ 0xffffffff)) + ((b ^ 0xffffffff) & (b ^ 0xffffffff | b) - (b ^ 0xffffffff)) * -2) + ((((c & ((c & (b ^ 0xffffffff)) + b ^ 0xffffffff)) + (c & (b ^ 0xffffffff)) + b & (c - (c ^ 0xffffffff)) - 1) * ((c & ((c & (b ^ 0xffffffff)) + b ^ 0xffffffff)) + (c & (b ^ 0xffffffff)) + b | (c - (c ^ 0xffffffff)) - 1) + ((c & ((c & (b ^ 0xffffffff)) + b ^ 0xffffffff)) + (c & (b ^ 0xffffffff)) + b & ((c - (c ^ 0xffffffff)) - 1 ^ 0xffffffff)) * (((c & ((c & (b ^ 0xffffffff)) + b ^ 0xffffffff)) + (c & (b ^ 0xffffffff)) + b ^ 0xffffffff) & (c - (c ^ 0xffffffff)) - 1)) - 1 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 134,
                        "nestedExprLevel": 62,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 0.7407407407407408,
                        "opsPercentages": {
                            "arithmetic": 37.3134328358209,
                            "mul": 3.731343283582089,
                            "bitwise": 58.95522388059702
                        },
                        "percentageDAGsCancel": 19.35483870967742
                    }
                },
                "msvc_default": {
                    "expr": "(((~b & c) + (~((~b & c) + b) & c) + b & (c - ~c) - 1) * ((~b & c) + (~((~b & c) + b) & c) + b | (c - ~c) - 1) + -1 + ((~b & c) + (~((~b & c) + b) & c) + b & ~((c - ~c) - 1)) * (~((~b & c) + (~((~b & c) + b) & c) + b) & (c - ~c) - 1) | (-~b - 1 ^ b) + (~b & -~b - 1) * -2 ) + 1 + ~(((~b & c) + (~((~b & c) + b) & c) + b & (c - ~c) - 1) * ((~b & c) + (~((~b & c) + b) & c) + b | (c - ~c) - 1) + -1 + ((~b & c) + (~((~b & c) + b) & c) + b & ~((c - ~c) - 1)) * (~((~b & c) + (~((~b & c) + b) & c) + b) & (c - ~c) - 1))",
                    "attributes": {
                        "numOps": 134,
                        "nestedExprLevel": 38,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 0.7407407407407408,
                        "opsPercentages": {
                            "arithmetic": 40.298507462686565,
                            "mul": 3.731343283582089,
                            "bitwise": 55.970149253731336
                        },
                        "percentageDAGsCancel": 28.125
                    }
                },
                "gcc_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 403,
            "gt": {
                "expr": "((((e+(c|c))-(c+e))|(-(c&c))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 0.0,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 42.857142857142854
                }
            },
            "mba": {
                "expr": "(((((e - ~ ((c & ~ c) + c)) - 1) ^ ((c - ~ e) - 1)) - ((~ ((e - ~ ((c & ~ c) + c)) - 1) & ((c - ~ e) - 1)) << 1)) & ~ (~ ((((~ c | c) + c) + 1) - 1))) + ~ ((((~ c | c) + c) + 1) - 1)",
                "attributes": {
                    "numOps": 38,
                    "nestedExprLevel": 22,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 47.368421052631575,
                        "mul": 0.0,
                        "bitwise": 52.63157894736842
                    },
                    "percentageDAGsCancel": 36.36363636363637
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c - 1 & ((e - ~c) - 1 ^ (c - ~e) - 1) + ((c - ~e) - 1 & ~c + ~e + 1) * -2) - c",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 6,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 44.73684210526316,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 4.761904761904762,
                            "bitwise": 38.095238095238095
                        },
                        "percentageDAGsCancel": 31.25
                    }
                },
                "msvc_O1": {
                    "expr": "(-(~(e + c) * 2 & (e + c) * 2) & c - 1) + ~(c - 1)",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 5,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 68.42105263157895,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 30.0
                    }
                },
                "clang_O3": {
                    "expr": "-c",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 97.36842105263158,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e - ((c & (c ^ 0xffffffff)) + c ^ 0xffffffff)) - 1 ^ (c - (e ^ 0xffffffff)) - 1) + (((e - ((c & (c ^ 0xffffffff)) + c ^ 0xffffffff)) - 1 ^ 0xffffffff) & (c - (e ^ 0xffffffff)) - 1) * -2 & (c ^ 0xffffffff | c) + c) + ((c ^ 0xffffffff | c) + c ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 16,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 13.157894736842104,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 3.0303030303030303,
                            "bitwise": 51.515151515151516
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_default": {
                    "expr": "(((e - ~c) - 1 ^ (c - ~e) - 1) + (~((e - ~c) - 1) & (c - ~e) - 1) * -2 & c - 1) + ~(c - 1)",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 8,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 39.473684210526315,
                        "opsPercentages": {
                            "arithmetic": 56.52173913043478,
                            "mul": 4.3478260869565215,
                            "bitwise": 39.130434782608695
                        },
                        "percentageDAGsCancel": 31.25
                    }
                },
                "gcc_O3": {
                    "expr": "((~c - e & e + c) * -2 & c - 1) - c",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 76.31578947368422,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 11.11111111111111,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 33.33333333333333
                    }
                }
            }
        },
        {
            "num": 404,
            "gt": {
                "expr": "((((~(e*c))+(c&(b&e)))&((b^e)*(e-b))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 8,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 22.22222222222222,
                        "mul": 22.22222222222222,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ (((- ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) - 1) | (((~ c | (((~ b | e) + b) + 1)) + c) + 1)) + ((- ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) - 1) & (((~ c | (((~ b | e) + b) + 1)) + c) + 1))) | ((((b | e) - (b & e)) & (((e & ~ b) + (e & ~ b)) - (e ^ b))) * (((b | e) - (b & e)) | (((e & ~ b) + (e & ~ b)) - (e ^ b))) + (((b | e) - (b & e)) & ~ (((e & ~ b) + (e & ~ b)) - (e ^ b))) * (~ ((b | e) - (b & e)) & (((e & ~ b) + (e & ~ b)) - (e ^ b))))) - ~ (((- ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) - 1) | (((~ c | (((~ b | e) + b) + 1)) + c) + 1)) + ((- ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) - 1) & (((~ c | (((~ b | e) + b) + 1)) + c) + 1)))",
                "attributes": {
                    "numOps": 135,
                    "nestedExprLevel": 70,
                    "numDAGs": 40,
                    "opsPercentages": {
                        "arithmetic": 32.592592592592595,
                        "mul": 7.4074074074074066,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 5.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "c + (~c | b + (~b | e) + 1) + 1 + ~((~e & c) * (~c & e) + (e & c) * (e | c)) & ((~b & e) * 2 - (e ^ b) & (b ^ e)) * (b ^ e | (~b & e) * 2 - (e ^ b)) + (~(b ^ e) & (~b & e) * 2 - (e ^ b)) * ((b ^ e) & (e ^ b) + ~((~b & e) * 2))",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 15,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 60.74074074074074,
                        "opsPercentages": {
                            "arithmetic": 20.754716981132077,
                            "mul": 15.09433962264151,
                            "bitwise": 64.15094339622641
                        },
                        "percentageDAGsCancel": 11.76470588235294
                    }
                },
                "msvc_O1": {
                    "expr": "(~(c + 1 + (b + 1 + (~b | e) | ~c) & ~((~e & c) * (~c & e)) - (c | e) * (c & e) + c + 1 + (b + 1 + (~b | e) | ~c) | ~((~e & c) * (~c & e)) - (c | e) * (c & e)) | (~(b | e) - (b & e) & (~b & e) * 2 - (b ^ e)) * (~(~b & e) * 2 - (b ^ e) & (b | e) - (b & e)) + ((~b & e) * 2 - (b ^ e) | (b | e) - (b & e)) * ((~b & e) * 2 - (b ^ e) & (b | e) - (b & e)) ) + c + 1 + (b + 1 + (~b | e) | ~c) & ~((~e & c) * (~c & e)) - (c | e) * (c & e) + 1 + c + 1 + (b + 1 + (~b | e) | ~c) | ~((~e & c) * (~c & e)) - (c | e) * (c & e)",
                    "attributes": {
                        "numOps": 123,
                        "nestedExprLevel": 31,
                        "numDAGs": 52,
                        "percentDecreaseByOps": 8.88888888888889,
                        "opsPercentages": {
                            "arithmetic": 26.82926829268293,
                            "mul": 11.38211382113821,
                            "bitwise": 61.78861788617886
                        },
                        "percentageDAGsCancel": 1.9230769230769231
                    }
                },
                "clang_O3": {
                    "expr": "(((~b | e) + b + 1 | ~c) + c) - ((~e & c) * (~c & e) + (e | c) * (e & c)) & ((~b & e) * 2 - b ^ e & ~b ^ e) * (~(~b & e) * 2 - b ^ e & b ^ e) + ((~b & e) * 2 - b ^ e | b ^ e) * ((~b & e) * 2 - b ^ e & b ^ e)",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 11,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 62.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 19.607843137254903,
                            "mul": 15.686274509803921,
                            "bitwise": 64.70588235294117
                        },
                        "percentageDAGsCancel": 8.108108108108109
                    }
                },
                "clang_default": {
                    "expr": "((0xffffffff - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) | (c ^ 0xffffffff | (b ^ 0xffffffff | e) + b + 1) + c + 1) + (0xffffffff - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) & (c ^ 0xffffffff | (b ^ 0xffffffff | e) + b + 1) + c + 1) ^ 0xffffffff | ((b | e) - (b & e) & ((e & (b ^ 0xffffffff)) + (e & (b ^ 0xffffffff))) - (e ^ b)) * ((b | e) - (b & e) | ((e & (b ^ 0xffffffff)) + (e & (b ^ 0xffffffff))) - (e ^ b)) + ((b | e) - (b & e) & (((e & (b ^ 0xffffffff)) + (e & (b ^ 0xffffffff))) - (e ^ b) ^ 0xffffffff)) * (((b | e) - (b & e) ^ 0xffffffff) & ((e & (b ^ 0xffffffff)) + (e & (b ^ 0xffffffff))) - (e ^ b))) - ((0xffffffff - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) | (c ^ 0xffffffff | (b ^ 0xffffffff | e) + b + 1) + c + 1) + (0xffffffff - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) & (c ^ 0xffffffff | (b ^ 0xffffffff | e) + b + 1) + c + 1) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 131,
                        "nestedExprLevel": 54,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 2.9629629629629632,
                        "opsPercentages": {
                            "arithmetic": 30.53435114503817,
                            "mul": 7.633587786259542,
                            "bitwise": 61.832061068702295
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                },
                "msvc_default": {
                    "expr": "(~((0xffffffff - ((e & c) * (e | c) + (~c & e) * (~e & c)) | (~c | (~b | e) + 1 + b) + 1 + c) + (0xffffffff - ((e & c) * (e | c) + (~c & e) * (~e & c) ) & (~c | (~b | e) + 1 + b) + 1 + c)) | ((b | e) - (b & e) & ((~b & e) + (~b & e)) - (e ^ b)) * ((b | e) - (b & e) | ((~b & e) + (~b & e)) - (e ^ b)) + ((b | e) - (b & e) & ~(((~b & e) + (~b & e)) - (e ^ b))) * (~((b | e) - (b & e)) & ((~b & e) + (~b & e)) - (e ^ b))) - ~((0xffffffff - ((e & c) * (e | c) + (~c & e) * (~e & c) ) | (~c | (~b | e) + 1 + b) + 1 + c) + (0xffffffff - ((e & c) * (e | c) + (~c & e) * (~e & c)) & (~c | (~b | e) + 1 + b) + 1 + c))",
                    "attributes": {
                        "numOps": 131,
                        "nestedExprLevel": 43,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 2.9629629629629632,
                        "opsPercentages": {
                            "arithmetic": 30.53435114503817,
                            "mul": 7.633587786259542,
                            "bitwise": 61.832061068702295
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "gcc_O3": {
                    "expr": "(c - ((~e & c) * (~c & e) + (e & c) * (e | c))) + (b + 1 + (~b | e) | ~c) & (~(~b & e) * 2 + b ^ e & b ^ e) * (~b ^ e & (~b & e) * 2 - b ^ e) + (b ^ e | (~b & e) * 2 - b ^ e) * (b ^ e & (~b & e) * 2 - b ^ e)",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 11,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 62.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 19.607843137254903,
                            "mul": 15.686274509803921,
                            "bitwise": 64.70588235294117
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 405,
            "gt": {
                "expr": "(((((d&a)*a)^(a+d))^((a^a)&d)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 14.285714285714285,
                        "mul": 14.285714285714285,
                        "bitwise": 71.42857142857143
                    },
                    "percentageDAGsCancel": 28.57142857142857
                }
            },
            "mba": {
                "expr": "((((((((~ d | a) + d) + 1) & a) * ((((~ d | a) + d) + 1) | a) + ((((~ d | a) + d) + 1) & ~ a) * (~ (((~ d | a) + d) + 1) & a)) | ((a ^ d) + ((a & d) + (a & d)))) - ((((((~ d | a) + d) + 1) & a) * ((((~ d | a) + d) + 1) | a) + ((((~ d | a) + d) + 1) & ~ a) * (~ (((~ d | a) + d) + 1) & a)) & ((a ^ d) + ((a & d) + (a & d))))) | ((~ ((a | a) - (a & a)) | d) - ~ ((a | a) - (a & a)))) - ((((((((~ d | a) + d) + 1) & a) * ((((~ d | a) + d) + 1) | a) + ((((~ d | a) + d) + 1) & ~ a) * (~ (((~ d | a) + d) + 1) & a)) | ((a ^ d) + ((a & d) + (a & d)))) - ((((((~ d | a) + d) + 1) & a) * ((((~ d | a) + d) + 1) | a) + ((((~ d | a) + d) + 1) & ~ a) * (~ (((~ d | a) + d) + 1) & a)) & ((a ^ d) + ((a & d) + (a & d))))) & ((~ ((a | a) - (a & a)) | d) - ~ ((a | a) - (a & a))))",
                "attributes": {
                    "numOps": 149,
                    "nestedExprLevel": 85,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 35.57046979865772,
                        "mul": 5.369127516778524,
                        "bitwise": 59.06040268456376
                    },
                    "percentageDAGsCancel": 31.03448275862069
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a & d) * 2 + (a ^ d) ^ (d + (~d | a) + 1 & a) * (d + (~d | a) + 1 | a) + (-((~d | a) + d) - 2 & a) * (d + (~d | a) + 1 & ~a)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 8,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 79.86577181208054,
                        "opsPercentages": {
                            "arithmetic": 36.666666666666664,
                            "mul": 10.0,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 15.0
                    }
                },
                "msvc_O1": {
                    "expr": "((d + 1 + (~d | a) & a) * (d + 1 + (~d | a) | a) + (~a & d + 1 + (~d | a)) * (~d + 1 + (~d | a) & a) | (a ^ d) + (a & d) * 2) - ((d + 1 + (~d | a) & a) * (d + 1 + (~d | a) | a) + (~a & d + 1 + (~d | a)) * (~d + 1 + (~d | a) & a) & (a ^ d) + (a & d) * 2)",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 14,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 59.06040268456376,
                        "opsPercentages": {
                            "arithmetic": 34.42622950819672,
                            "mul": 9.836065573770492,
                            "bitwise": 55.73770491803278
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_O3": {
                    "expr": "(d ^ a) + (d & a) * 2 ^ (-((~d | a) + d) - 2 & a) * (~a & (~d | a) + d + 1) + ((~d | a) + d + 1 | a) * ((~d | a) + d + 1 & a)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 8,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 79.86577181208054,
                        "opsPercentages": {
                            "arithmetic": 36.666666666666664,
                            "mul": 10.0,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 26.31578947368421
                    }
                },
                "clang_default": {
                    "expr": "(((d ^ 0xffffffff | a) + d + 1 & a) * ((d ^ 0xffffffff | a) + d + 1 | a) + ((d ^ 0xffffffff | a) + d + 1 & (a ^ 0xffffffff)) * (((d ^ 0xffffffff | a) + d + 1 ^ 0xffffffff) & a) | (a ^ d) + (a & d) + (a & d)) - (((d ^ 0xffffffff | a) + d + 1 & a) * ((d ^ 0xffffffff | a) + d + 1 | a) + ((d ^ 0xffffffff | a) + d + 1 & (a ^ 0xffffffff)) * (((d ^ 0xffffffff | a) + d + 1 ^ 0xffffffff) & a) & (a ^ d) + (a & d) + (a & d))",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 19,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 57.71812080536913,
                        "opsPercentages": {
                            "arithmetic": 36.507936507936506,
                            "mul": 6.349206349206349,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 15.0
                    }
                },
                "msvc_default": {
                    "expr": "(((~d | a) + 1 + d & a) * ((~d | a) + 1 + d | a) + ((~d | a) + 1 + d & ~a) * (~((~d | a) + 1 + d) & a) | (a ^ d) + (a & d) + (a & d)) - (((~d | a) + 1 + d & a) * ((~d | a) + 1 + d | a) + ((~d | a) + 1 + d & ~a) * (~((~d | a) + 1 + d) & a) & (a ^ d) + (a & d) + (a & d))",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 17,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 57.71812080536913,
                        "opsPercentages": {
                            "arithmetic": 36.507936507936506,
                            "mul": 6.349206349206349,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 15.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~a & (~d | a) + d + 1) * (-(~d | a) + d - 2 & a) + ((~d | a) + d + 1 & a) * ((~d | a) + d + 1 | a) ^ (d ^ a) + (d & a) * 2",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 7,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 79.86577181208054,
                        "opsPercentages": {
                            "arithmetic": 36.666666666666664,
                            "mul": 10.0,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 15.0
                    }
                }
            }
        },
        {
            "num": 406,
            "gt": {
                "expr": "((((~c)^(d-e))-((d|(d|e))-((e+d)-e))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 0.0,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "(((((- c - 1) - ((d ^ e) - ((~ d & e) + (~ d & e)))) - (((- c - 1) | ~ ((d ^ e) - ((~ d & e) + (~ d & e)))) << 1)) - 2) ^ (((((d + (((d + e) + 1) + ((- d - 1) | (- e - 1)))) + 1) + ((- d - 1) | (- (((d + e) + 1) + ((- d - 1) | (- e - 1))) - 1))) ^ ((((e ^ d) + ((e & d) + (e & d))) & ~ e) - (~ ((e ^ d) + ((e & d) + (e & d))) & e))) - ((~ (((d + (((d + e) + 1) + ((- d - 1) | (- e - 1)))) + 1) + ((- d - 1) | (- (((d + e) + 1) + ((- d - 1) | (- e - 1))) - 1))) & ((((e ^ d) + ((e & d) + (e & d))) & ~ e) - (~ ((e ^ d) + ((e & d) + (e & d))) & e))) + (~ (((d + (((d + e) + 1) + ((- d - 1) | (- e - 1)))) + 1) + ((- d - 1) | (- (((d + e) + 1) + ((- d - 1) | (- e - 1))) - 1))) & ((((e ^ d) + ((e & d) + (e & d))) & ~ e) - (~ ((e ^ d) + ((e & d) + (e & d))) & e)))))) - ((~ ((((- c - 1) - ((d ^ e) - ((~ d & e) + (~ d & e)))) - (((- c - 1) | ~ ((d ^ e) - ((~ d & e) + (~ d & e)))) << 1)) - 2) & (((((d + (((d + e) + 1) + ((- d - 1) | (- e - 1)))) + 1) + ((- d - 1) | (- (((d + e) + 1) + ((- d - 1) | (- e - 1))) - 1))) ^ ((((e ^ d) + ((e & d) + (e & d))) & ~ e) - (~ ((e ^ d) + ((e & d) + (e & d))) & e))) - ((~ (((d + (((d + e) + 1) + ((- d - 1) | (- e - 1)))) + 1) + ((- d - 1) | (- (((d + e) + 1) + ((- d - 1) | (- e - 1))) - 1))) & ((((e ^ d) + ((e & d) + (e & d))) & ~ e) - (~ ((e ^ d) + ((e & d) + (e & d))) & e))) + (~ (((d + (((d + e) + 1) + ((- d - 1) | (- e - 1)))) + 1) + ((- d - 1) | (- (((d + e) + 1) + ((- d - 1) | (- e - 1))) - 1))) & ((((e ^ d) + ((e & d) + (e & d))) & ~ e) - (~ ((e ^ d) + ((e & d) + (e & d))) & e)))))) << 1)",
                "attributes": {
                    "numOps": 301,
                    "nestedExprLevel": 168,
                    "numDAGs": 46,
                    "opsPercentages": {
                        "arithmetic": 60.797342192691026,
                        "mul": 0.0,
                        "bitwise": 39.202657807308974
                    },
                    "percentageDAGsCancel": 13.043478260869565
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~c + ((~d & e) * 2 - (d ^ e)) + ((~d & e) * 2 + ~(d ^ e) | ~c) * -2) - 2 ^ (((e ^ d) + (e & d) * 2 & ~e) - (~((e & d) * 2 + (e ^ d)) & e) ^ e + d * 2 + ~(d & e) + 2 + ((d & e) - (e + d + 1) | ~d)) + (~(((d & e) - (e + d + 1) | ~d) + e + d * 2 + ~(d & e) + 2) & ((e ^ d) + (e & d) * 2 & ~e) - (~((e & d) * 2 + (e ^ d)) & e)) * -2) + ((((e ^ d) + (e & d) * 2 & ~e) - (~((e & d) * 2 + (e ^ d)) & e) ^ e + d * 2 + ~(d & e) + 2 + ((d & e) - (e + d + 1) | ~d)) + (~(((d & e) - (e + d + 1) | ~d) + e + d * 2 + ~(d & e) + 2) & ((e ^ d) + (e & d) * 2 & ~e) - (~((e & d) * 2 + (e ^ d)) & e)) * -2 & ((~d & e) * 2 + ~(d ^ e) | ~c) * 2 + (d ^ e) + (~d & e) * -2 + c + 2) * -2",
                    "attributes": {
                        "numOps": 158,
                        "nestedExprLevel": 45,
                        "numDAGs": 54,
                        "percentDecreaseByOps": 47.50830564784053,
                        "opsPercentages": {
                            "arithmetic": 36.708860759493675,
                            "mul": 13.291139240506327,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "msvc_O1": {
                    "expr": "(((d ^ e + (d & e) * 2 & ~e) - (~d ^ e + (d & e) * 2 & e) ^ (((-2 - (~d | ~e)) - d) - e | ~d) + (~d | ~e) + d * 2 + e + 2) + ~(((-2 - (~d | ~e)) - d) - e | ~d) + (~d | ~e) + d * 2 + e + 2 & (d ^ e + (d & e) * 2 & ~e) - (~d ^ e + (d & e) * 2 & e) * -2 ^ ((((~d & e) * 2 - (~(d ^ e + (~d & e) * -2) * 2 | (-1 - c) * 2)) - d ^ e) - c) - 3) - ((((-1 - e) * 2 | d * -2 - 2) + (e + d * 2) * 2 + 4 + (((-2 - (~d | ~e)) - d) - e * 2 | d * -2 - 2) ^ (d ^ e + (d & e) * 2 * 2 & ~e * 2) + (~d ^ e + (d & e) * 2 & e) * -2) + ~(((-2 - (~d | ~e)) - d) - e | ~d) + (~d | ~e) + d * 2 + e + 2 & (d ^ e + (d & e) * 2 & ~e) - (~d ^ e + (d & e) * 2 & e) * -4 & ~((((~d & e) * 2 - (~(d ^ e + (~d & e) * -2) * 2 | (-1 - c) * 2)) - d ^ e) - c) - 3 * 2)",
                    "attributes": {
                        "numOps": 189,
                        "nestedExprLevel": 42,
                        "numDAGs": 82,
                        "percentDecreaseByOps": 37.2093023255814,
                        "opsPercentages": {
                            "arithmetic": 38.095238095238095,
                            "mul": 16.402116402116402,
                            "bitwise": 45.5026455026455
                        },
                        "percentageDAGsCancel": 2.4390243902439024
                    }
                },
                "clang_O3": {
                    "expr": "((~c - (e ^ d) + (~d & e) * -2) + (~(e ^ d) + (~d & e) * -2 | ~c) * -2 - 2 ^ (d + d + e + 1 + (~e | ~d) + 1 + (~d + e + 1 + (~e | ~d) | ~d) ^ (~e & (e ^ d) + (d & e) * 2) - (~(e ^ d) + (d & e) * 2 & e)) + (~d + d + e + 1 + (~e | ~d) + 1 + (~d + e + 1 + (~e | ~d) | ~d) & (~e & (e ^ d) + (d & e) * 2) - (~(e ^ d) + (d & e) * 2 & e)) * -2) + (1 - (~c - (e ^ d) + (~d & e) * -2) + (~(e ^ d) + (~d & e) * -2 | ~c) * -2 & (d + d + e + 1 + (~e | ~d) + 1 + (~d + e + 1 + (~e | ~d) | ~d) ^ (~e & (e ^ d) + (d & e) * 2) - (~(e ^ d) + (d & e) * 2 & e)) + (~d + d + e + 1 + (~e | ~d) + 1 + (~d + e + 1 + (~e | ~d) | ~d) & (~e & (e ^ d) + (d & e) * 2) - (~(e ^ d) + (d & e) * 2 & e)) * -2) * -2",
                    "attributes": {
                        "numOps": 183,
                        "nestedExprLevel": 35,
                        "numDAGs": 49,
                        "percentDecreaseByOps": 39.202657807308974,
                        "opsPercentages": {
                            "arithmetic": 38.25136612021858,
                            "mul": 9.289617486338798,
                            "bitwise": 52.459016393442624
                        },
                        "percentageDAGsCancel": 2.0408163265306123
                    }
                },
                "clang_default": {
                    "expr": "(((-((d ^ e) - (((d ^ 0xffffffff) & e) + ((d ^ 0xffffffff) & e))) - c) + (0xffffffff - c | (d ^ e) - (((d ^ 0xffffffff) & e) + ((d ^ 0xffffffff) & e)) ^ 0xffffffff) * -2) - 3 ^ (d * 2 + e + (0xffffffff - d | 0xffffffff - e) + 2 + (0xffffffff - d | 0xffffffff - (d + e + 1 + (0xffffffff - d | 0xffffffff - e))) ^ ((e ^ d) + (e & d) + (e & d) & (e ^ 0xffffffff)) - (((e ^ d) + (e & d) + (e & d) ^ 0xffffffff) & e )) - (((d * 2 + e + (0xffffffff - d | 0xffffffff - e) + 2 + (0xffffffff - d | 0xffffffff - (d + e + 1 + (0xffffffff - d | 0xffffffff - e))) ^ 0xffffffff) & ((e ^ d) + (e & d) + (e & d) & (e ^ 0xffffffff)) - (((e ^ d) + (e & d) + (e & d) ^ 0xffffffff) & e)) + ((d * 2 + e + (0xffffffff - d | 0xffffffff - e) + 2 + (0xffffffff - d | 0xffffffff - (d + e + 1 + (0xffffffff - d | 0xffffffff - e))) ^ 0xffffffff) & ((e ^ d) + (e & d) + (e & d) & (e ^ 0xffffffff)) - (((e ^ d) + (e & d) + (e & d) ^ 0xffffffff) & e)))) + ((((-((d ^ e) - (((d ^ 0xffffffff) & e) + ((d ^ 0xffffffff) & e))) - c) + (0xffffffff - c | (d ^ e) - (((d ^ 0xffffffff) & e) + ((d ^ 0xffffffff) & e)) ^ 0xffffffff) * -2) - 3 ^ 0xffffffff) & (d * 2 + e + (0xffffffff - d | 0xffffffff - e) + 2 + (0xffffffff - d | 0xffffffff - (d + e + 1 + (0xffffffff - d | 0xffffffff - e))) ^ ((e ^ d) + (e & d) + (e & d) & (e ^ 0xffffffff)) - (((e ^ d) + (e & d) + (e & d) ^ 0xffffffff) & e )) - (((d * 2 + e + (0xffffffff - d | 0xffffffff - e) + 2 + (0xffffffff - d | 0xffffffff - (d + e + 1 + (0xffffffff - d | 0xffffffff - e))) ^ 0xffffffff) & ((e ^ d) + (e & d) + (e & d) & (e ^ 0xffffffff)) - (((e ^ d) + (e & d) + (e & d) ^ 0xffffffff) & e)) + ((d * 2 + e + (0xffffffff - d | 0xffffffff - e) + 2 + (0xffffffff - d | 0xffffffff - (d + e + 1 + (0xffffffff - d | 0xffffffff - e))) ^ 0xffffffff) & ((e ^ d) + (e & d) + (e & d) & (e ^ 0xffffffff)) - (((e ^ d) + (e & d) + (e & d) ^ 0xffffffff) & e)))) * -2",
                    "attributes": {
                        "numOps": 258,
                        "nestedExprLevel": 85,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 14.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 51.93798449612403,
                            "mul": 3.488372093023256,
                            "bitwise": 44.57364341085272
                        },
                        "percentageDAGsCancel": 6.521739130434782
                    }
                },
                "msvc_default": {
                    "expr": "(((-((d ^ e) - ((~d & e) + (~d & e))) - c) + (0xffffffff - c | ~((d ^ e) - ((~d & e) + (~d & e)))) * -2) - 3 ^ ((0xffffffff - d | 0xffffffff - e) + d * 2 + e + 2 + (0xffffffff - d | 0xffffffff - (d + e + 1 + (0xffffffff - d | 0xffffffff - e))) ^ ((e ^ d) + (e & d) + (e & d) & ~e) - (~((e ^ d) + (e & d) + (e & d)) & e)) - ((~((0xffffffff - d | 0xffffffff - e) + d * 2 + e + 2 + (0xffffffff - d | 0xffffffff - (d + e + 1 + (0xffffffff - d | 0xffffffff - e)))) & ((e ^ d) + (e & d) + (e & d) & ~e) - (~((e ^ d) + (e & d) + (e & d)) & e)) + (~((0xffffffff - d | 0xffffffff - e) + d * 2 + e + 2 + (0xffffffff - d | 0xffffffff - (d + e + 1 + (0xffffffff - d | 0xffffffff - e)))) & ((e ^ d) + (e & d) + (e & d) & ~e) - (~((e ^ d) + (e & d) + (e & d)) & e)))) + (~(((-((d ^ e) - ((~d & e) + (~d & e))) - c) + (0xffffffff - c | ~((d ^ e) - ((~d & e) + (~d & e)))) * -2) - 3) & ((0xffffffff - d | 0xffffffff - e) + d * 2 + e + 2 + (0xffffffff - d | 0xffffffff - (d + e + 1 + (0xffffffff - d | 0xffffffff - e))) ^ ((e ^ d) + (e & d) + (e & d) & ~e) - (~((e ^ d) + (e & d) + (e & d)) & e)) - ((~((0xffffffff - d | 0xffffffff - e) + d * 2 + e + 2 + (0xffffffff - d | 0xffffffff - (d + e + 1 + (0xffffffff - d | 0xffffffff - e)))) & ((e ^ d) + (e & d) + (e & d) & ~e) - (~((e ^ d) + (e & d) + (e & d)) & e)) + (~((0xffffffff - d | 0xffffffff - e) + d * 2 + e + 2 + (0xffffffff - d | 0xffffffff - (d + e + 1 + (0xffffffff - d | 0xffffffff - e)))) & ((e ^ d) + (e & d) + (e & d) & ~e) - (~((e ^ d) + (e & d) + (e & d)) & e)))) * -2",
                    "attributes": {
                        "numOps": 258,
                        "nestedExprLevel": 77,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 14.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 51.93798449612403,
                            "mul": 3.488372093023256,
                            "bitwise": 44.57364341085272
                        },
                        "percentageDAGsCancel": 6.521739130434782
                    }
                },
                "gcc_O3": {
                    "expr": "(((~c - d ^ e + ~d & e * -2) + ~d ^ e + ~d & e * 2 | ~c * -2) - 2 ^ (d + (d + 1 + e - d & e) + (d & e - d + 1 + e | ~d) ^ (~e & d ^ e + d & e * 2) - (~d ^ e + d & e * 2 & e)) + (~d + (d + 1 + e - d & e) + (d & e - d + 1 + e | ~d) & (~e & d ^ e + d & e * 2) - (~d ^ e + d & e * 2 & e)) * -2) + (~d ^ e + ~d & e * 2 | ~c * 2 + 2 + d ^ e + ~d & e * -2 + c & (d + (d + 1 + e - d & e) + (d & e - d + 1 + e | ~d) ^ (~e & d ^ e + d & e * 2) - (~d ^ e + d & e * 2 & e)) + (~d + (d + 1 + e - d & e) + (d & e - d + 1 + e | ~d) & (~e & d ^ e + d & e * 2) - (~d ^ e + d & e * 2 & e)) * -2) * -2",
                    "attributes": {
                        "numOps": 155,
                        "nestedExprLevel": 16,
                        "numDAGs": 52,
                        "percentDecreaseByOps": 48.50498338870432,
                        "opsPercentages": {
                            "arithmetic": 40.64516129032258,
                            "mul": 10.967741935483872,
                            "bitwise": 48.38709677419355
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                }
            }
        },
        {
            "num": 407,
            "gt": {
                "expr": "((~((((e|e)&(e&e))^(~a))+(a|(-a)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 22.22222222222222,
                        "mul": 0.0,
                        "bitwise": 77.77777777777779
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "- ((((((((~ (((e + e) + 1) + ((- e - 1) | (- e - 1))) | ((~ e | e) - ~ e)) + (((e + e) + 1) + ((- e - 1) | (- e - 1)))) + 1) | (- a - 1)) - ((((~ (((e + e) + 1) + ((- e - 1) | (- e - 1))) | ((~ e | e) - ~ e)) + (((e + e) + 1) + ((- e - 1) | (- e - 1)))) + 1) & (- a - 1))) ^ ~ ((a & ~ (~ a + 1)) + (~ a + 1))) + (((((((~ (((e + e) + 1) + ((- e - 1) | (- e - 1))) | ((~ e | e) - ~ e)) + (((e + e) + 1) + ((- e - 1) | (- e - 1)))) + 1) | (- a - 1)) - ((((~ (((e + e) + 1) + ((- e - 1) | (- e - 1))) | ((~ e | e) - ~ e)) + (((e + e) + 1) + ((- e - 1) | (- e - 1)))) + 1) & (- a - 1))) | ((a & ~ (~ a + 1)) + (~ a + 1))) + ((((((~ (((e + e) + 1) + ((- e - 1) | (- e - 1))) | ((~ e | e) - ~ e)) + (((e + e) + 1) + ((- e - 1) | (- e - 1)))) + 1) | (- a - 1)) - ((((~ (((e + e) + 1) + ((- e - 1) | (- e - 1))) | ((~ e | e) - ~ e)) + (((e + e) + 1) + ((- e - 1) | (- e - 1)))) + 1) & (- a - 1))) | ((a & ~ (~ a + 1)) + (~ a + 1))))) + 1) - 1",
                "attributes": {
                    "numOps": 195,
                    "nestedExprLevel": 97,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 67.17948717948717,
                        "mul": 0.0,
                        "bitwise": 32.82051282051282
                    },
                    "percentageDAGsCancel": 9.67741935483871
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-2 - ((-((-e - 1 | e) + ~e + e * 2 + 1) - 2 ^ a ^ a + ~(a - 1 & a)) + ((a - 1 & a) - a | -((-e - 1 | e) + ~e + e * 2 + 1) - 2 ^ a) * 2)",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 8,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 82.05128205128204,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 8.571428571428571,
                            "bitwise": 31.428571428571427
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "-(((~(~a + 1) & a) + ~a + 1 | (~a | e) - (~a & e)) * 2 + 2) - (~(~(~a + 1) & a) + ~a + 1 ^ (~a | e) - (~a & e))",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 84.1025641025641,
                        "opsPercentages": {
                            "arithmetic": 35.483870967741936,
                            "mul": 3.225806451612903,
                            "bitwise": 61.29032258064516
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "clang_O3": {
                    "expr": "-2 - ((e ^ a ^ (a - 1 & a) - a) + ((a - 1 & a) - a | ~(e ^ a)) * 2)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 92.3076923076923,
                        "opsPercentages": {
                            "arithmetic": 46.666666666666664,
                            "mul": 6.666666666666667,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ 0xffffffff | (e ^ 0xffffffff | e) - (e ^ 0xffffffff)) + e * 2 + (0xffffffff - e | 0xffffffff - e) + 2 | 0xffffffff - a) - ((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ 0xffffffff | (e ^ 0xffffffff | e) - (e ^ 0xffffffff)) + e * 2 + (0xffffffff - e | 0xffffffff - e) + 2 & 0xffffffff - a) ^ (a & ((a ^ 0xffffffff) + 1 ^ 0xffffffff)) + (a ^ 0xffffffff) + 1 ^ 0xffffffff) + (((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ 0xffffffff | (e ^ 0xffffffff | e) - (e ^ 0xffffffff)) + e * 2 + (0xffffffff - e | 0xffffffff - e) + 2 | 0xffffffff - a) - ((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ 0xffffffff | (e ^ 0xffffffff | e) - (e ^ 0xffffffff)) + e * 2 + (0xffffffff - e | 0xffffffff - e) + 2 & 0xffffffff - a) | (a & ((a ^ 0xffffffff) + 1 ^ 0xffffffff)) + (a ^ 0xffffffff) + 1) + (((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ 0xffffffff | (e ^ 0xffffffff | e) - (e ^ 0xffffffff)) + e * 2 + (0xffffffff - e | 0xffffffff - e) + 2 | 0xffffffff - a) - ((e * 2 + 1 + (0xffffffff - e | 0xffffffff - e) ^ 0xffffffff | (e ^ 0xffffffff | e) - (e ^ 0xffffffff)) + e * 2 + (0xffffffff - e | 0xffffffff - e) + 2 & 0xffffffff - a) | (a & ((a ^ 0xffffffff) + 1 ^ 0xffffffff)) + (a ^ 0xffffffff) + 1) + 1)",
                    "attributes": {
                        "numOps": 159,
                        "nestedExprLevel": 38,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 18.461538461538463,
                        "opsPercentages": {
                            "arithmetic": 52.20125786163522,
                            "mul": 7.547169811320755,
                            "bitwise": 40.25157232704403
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((((~(e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | -~e - 1) + e * 2 + 2 + (0xffffffff - e | 0xffffffff - e) | 0xffffffff - a) - ((~(e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | -~e - 1) + e * 2 + 2 + (0xffffffff - e | 0xffffffff - e) & 0xffffffff - a) ^ ~((~(~a + 1) & a) + 1 + ~a)) + 1 + (((~(e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | -~e - 1) + e * 2 + 2 + (0xffffffff - e | 0xffffffff - e) | 0xffffffff - a) - ((~(e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | -~e - 1) + e * 2 + 2 + (0xffffffff - e | 0xffffffff - e) & 0xffffffff - a) | (~(~a + 1) & a) + 1 + ~a) + (((~(e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | -~e - 1) + e * 2 + 2 + (0xffffffff - e | 0xffffffff - e) | 0xffffffff - a) - ((~(e * 2 + 1 + (0xffffffff - e | 0xffffffff - e)) | -~e - 1) + e * 2 + 2 + (0xffffffff - e | 0xffffffff - e) & 0xffffffff - a) | (~(~a + 1) & a) + 1 + ~a))",
                    "attributes": {
                        "numOps": 153,
                        "nestedExprLevel": 34,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 21.53846153846154,
                        "opsPercentages": {
                            "arithmetic": 58.16993464052288,
                            "mul": 7.8431372549019605,
                            "bitwise": 33.98692810457516
                        },
                        "percentageDAGsCancel": 12.903225806451612
                    }
                },
                "gcc_O3": {
                    "expr": "-2 - ((~a - 1 & a + a ^ -((e - e * 2 + 1 | e) + ~e + e * 2 + 1) - 2 ^ a) + (a - 1 & a - a | -((e - e * 2 + 1 | e) + ~e + e * 2 + 1) - 2 ^ a) * 2)",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 7,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 81.02564102564102,
                        "opsPercentages": {
                            "arithmetic": 56.75675675675676,
                            "mul": 13.513513513513514,
                            "bitwise": 29.72972972972973
                        },
                        "percentageDAGsCancel": 8.0
                    }
                }
            }
        },
        {
            "num": 408,
            "gt": {
                "expr": "((((d-e)-(-(d-d)))-((e&e)-(d|a))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 7,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 0.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 37.5
                }
            },
            "mba": {
                "expr": "(((((d + ~ e) + 1) + ~ (~ ((d + ~ d) + 1) + 1)) + 1) ^ (((((~ e | e) + e) + 1) + ~ ((d & ~ a) + a)) + 1)) - ((~ ((((d + ~ e) + 1) + ~ (~ ((d + ~ d) + 1) + 1)) + 1) & (((((~ e | e) + e) + 1) + ~ ((d & ~ a) + a)) + 1)) + (~ ((((d + ~ e) + 1) + ~ (~ ((d + ~ d) + 1) + 1)) + 1) & (((((~ e | e) + e) + 1) + ~ ((d & ~ a) + a)) + 1)))",
                "attributes": {
                    "numOps": 70,
                    "nestedExprLevel": 36,
                    "numDAGs": 25,
                    "opsPercentages": {
                        "arithmetic": 54.285714285714285,
                        "mul": 0.0,
                        "bitwise": 45.714285714285715
                    },
                    "percentageDAGsCancel": 16.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(d + ~e + 1 ^ e + ~(a + (~a & d)) + 1) + (e + ~(a + (~a & d)) + 1 & (e - d) - 1) * -2",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 6,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 68.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 54.54545454545454,
                            "mul": 4.545454545454546,
                            "bitwise": 40.909090909090914
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(d - e ^ (e - (~a & d)) - a) + (~(d - e) & (e - (~a & d)) - a) * -2",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 6,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 77.14285714285715,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 6.25,
                            "bitwise": 43.75
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(e - ((~a & d) + a) ^ d - e) + (~(d - e) & e - ((~a & d) + a)) * -2",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 6,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 77.14285714285715,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 6.25,
                            "bitwise": 43.75
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_default": {
                    "expr": "(d + (e ^ 0xffffffff) + ((d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 2 ^ (e ^ 0xffffffff | e) + e + ((d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + 2) - (((d + (e ^ 0xffffffff) + ((d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 2 ^ 0xffffffff) & (e ^ 0xffffffff | e) + e + ((d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + 2) + ((d + (e ^ 0xffffffff) + ((d + (d ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + 2 ^ 0xffffffff) & (e ^ 0xffffffff | e) + e + ((d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + 2))",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 23,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 8.571428571428571,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "msvc_default": {
                    "expr": "(~e + d + 2 + ~(~(d + 1 + ~d) + 1) ^ e + 1 + ~((~a & d) + a)) - ((~(~e + d + 2 + ~(~(d + 1 + ~d) + 1)) & e + 1 + ~((~a & d) + a)) + (~(~e + d + 2 + ~(~(d + 1 + ~d) + 1)) & e + 1 + ~((~a & d) + a)))",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 14,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 21.428571428571427,
                        "opsPercentages": {
                            "arithmetic": 52.72727272727272,
                            "mul": 0.0,
                            "bitwise": 47.27272727272727
                        },
                        "percentageDAGsCancel": 9.523809523809524
                    }
                },
                "gcc_O3": {
                    "expr": "(d - e ^ e - (a + (~a & d))) + ((e - d) - 1 & e - (a + (~a & d))) * -2",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 77.14285714285715,
                        "opsPercentages": {
                            "arithmetic": 56.25,
                            "mul": 6.25,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 409,
            "gt": {
                "expr": "(((~(b^b))|((-e)-(b-b))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "((((b & b) + ~ (b | b)) + (((~ e + 1) + ~ (((b & ~ b) << 1) - (b ^ b))) + 1)) + 1) + ((- ((b & b) + ~ (b | b)) - 1) | (- (((~ e + 1) + ~ (((b & ~ b) << 1) - (b ^ b))) + 1) - 1))",
                "attributes": {
                    "numOps": 36,
                    "nestedExprLevel": 20,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 47.22222222222222,
                        "mul": 0.0,
                        "bitwise": 52.77777777777778
                    },
                    "percentageDAGsCancel": 36.36363636363637
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0xffffffff",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "-1",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 97.22222222222221,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "0xffffffff",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "b + (b ^ 0xffffffff) + (e ^ 0xffffffff) + ((b & (b ^ 0xffffffff)) * 2 ^ 0xffffffff) + 3 + (0xffffffff - (b + (b ^ 0xffffffff)) | 0xffffffff - ((e ^ 0xffffffff) + ((b & (b ^ 0xffffffff)) * 2 ^ 0xffffffff) + 2))",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 10,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 36.11111111111111,
                        "opsPercentages": {
                            "arithmetic": 43.47826086956522,
                            "mul": 8.695652173913043,
                            "bitwise": 47.82608695652174
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_default": {
                    "expr": "b + ~b + ~e + 2 + (0xffffffff - (b + ~b) | 0xffffffff - (~e + 1))",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 63.888888888888886,
                        "opsPercentages": {
                            "arithmetic": 61.53846153846154,
                            "mul": 0.0,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "0xffffffff",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 410,
            "gt": {
                "expr": "((((d-b)&d)+((a^b)&d)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((~ ((d + ~ b) + 1) | d) - ~ ((d + ~ b) + 1)) - ~ ((~ ((a | b) - (a & b)) | d) - ~ ((a | b) - (a & b)))) - 1",
                "attributes": {
                    "numOps": 23,
                    "nestedExprLevel": 12,
                    "numDAGs": 15,
                    "opsPercentages": {
                        "arithmetic": 43.47826086956522,
                        "mul": 0.0,
                        "bitwise": 56.52173913043478
                    },
                    "percentageDAGsCancel": 6.666666666666667
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((d + ~b + 1 & d) - ~((a ^ b) & d)) + -1",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 56.52173913043478,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "d + 3 + (((~((a | b) - (a & b)) | d) + (~(d + 1 + ~b) | d)) - (a & b)) + ~b + (a | b)",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 9,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 17.391304347826086,
                        "opsPercentages": {
                            "arithmetic": 47.368421052631575,
                            "mul": 0.0,
                            "bitwise": 52.63157894736842
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(d & (a ^ b)) + (d - b & d)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 78.26086956521739,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 0.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d + (b ^ 0xffffffff) + 1 ^ 0xffffffff | d) - (d + (b ^ 0xffffffff) + 1 ^ 0xffffffff)) - (((a | b) - (a & b) ^ 0xffffffff | d) - ((a | b) - (a & b) ^ 0xffffffff) ^ 0xffffffff)) + -1",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 10,
                        "numDAGs": 16,
                        "percentDecreaseByOps": -4.3478260869565215,
                        "opsPercentages": {
                            "arithmetic": 45.83333333333333,
                            "mul": 0.0,
                            "bitwise": 54.166666666666664
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "msvc_default": {
                    "expr": "(((~(d + 1 + ~b) | d) - ~(d + 1 + ~b)) - ~((~((a | b) - (a & b)) | d) - ~((a | b) - (a & b)))) + -1",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 11,
                        "numDAGs": 16,
                        "percentDecreaseByOps": -4.3478260869565215,
                        "opsPercentages": {
                            "arithmetic": 45.83333333333333,
                            "mul": 0.0,
                            "bitwise": 54.166666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(d - b & d) + ((b ^ a) & d)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 78.26086956521739,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 0.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 411,
            "gt": {
                "expr": "((((b^b)^c)|(e|((e*c)|b))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 16.666666666666664,
                        "bitwise": 83.33333333333334
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "((((((b - b) - ((b | ~ b) + (b | ~ b))) - 2) | c) - ((((b - b) - ((b | ~ b) + (b | ~ b))) - 2) & c)) & ~ (((e + (((((e & c) * (e | c) + (e & ~ c) * (~ e & c)) + b) + 1) + ((- ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) - 1) | (- b - 1)))) + 1) + ((- e - 1) | (- (((((e & c) * (e | c) + (e & ~ c) * (~ e & c)) + b) + 1) + ((- ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) - 1) | (- b - 1))) - 1)))) + (((e + (((((e & c) * (e | c) + (e & ~ c) * (~ e & c)) + b) + 1) + ((- ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) - 1) | (- b - 1)))) + 1) + ((- e - 1) | (- (((((e & c) * (e | c) + (e & ~ c) * (~ e & c)) + b) + 1) + ((- ((e & c) * (e | c) + (e & ~ c) * (~ e & c)) - 1) | (- b - 1))) - 1)))",
                "attributes": {
                    "numOps": 142,
                    "nestedExprLevel": 68,
                    "numDAGs": 37,
                    "opsPercentages": {
                        "arithmetic": 42.25352112676056,
                        "mul": 11.267605633802818,
                        "bitwise": 46.478873239436616
                    },
                    "percentageDAGsCancel": 27.027027027027028
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~e & c) * (~c & e) + (e & c) * (e | c) & b) - (b + (e & c) * (e | c) + (~e & c) * (~c & e) + 1) | ~e) + e + b + (e & c) * (e | c) + (~e & c) * (~c & e) + ~((~e & c) * (~c & e) + (e & c) * (e | c) & b) + 2 + (~((((~e & c) * (~c & e) + (e & c) * (e | c) & b) - (b + (e & c) * (e | c) + (~e & c) * (~c & e) + 1) | ~e) + e + b + (e & c) * (e | c) + (~e & c) * (~c & e) + ~((~e & c) * (~c & e) + (e & c) * (e | c) & b) + 2) & c)",
                    "attributes": {
                        "numOps": 101,
                        "nestedExprLevel": 27,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 28.87323943661972,
                        "opsPercentages": {
                            "arithmetic": 24.752475247524753,
                            "mul": 15.841584158415841,
                            "bitwise": 59.4059405940594
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~((((-2 - ~(~c & e) * (~e & c) - (c | e) * (c & e) | ~b) - (c | e) * (c & e)) - (~c & e) * (~e & c)) - b | ~e + ~(~c & e) * (~e & c) - (c | e) * (c & e) | ~b + (c | e) * (c & e) + (~c & e) * (~e & c) + b + e + 2) & c) + (((-2 - ~(~c & e) * (~e & c) - (c | e) * (c & e) | ~b) - (c | e) * (c & e)) - (~c & e) * (~e & c)) - b | ~e + ~(~c & e) * (~e & c) - (c | e) * (c & e) | ~b + (c | e) * (c & e) + (~c & e) * (~e & c) + b + e + 2",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 25,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 23.239436619718308,
                        "opsPercentages": {
                            "arithmetic": 24.770642201834864,
                            "mul": 14.678899082568808,
                            "bitwise": 60.550458715596335
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_O3": {
                    "expr": "(~e | b | (~e & c) * (~c & e) + (e | c) * (e & c) & c) + e | b | (~e & c) * (~c & e) + (e | c) * (e & c)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 6,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 82.3943661971831,
                        "opsPercentages": {
                            "arithmetic": 12.0,
                            "mul": 16.0,
                            "bitwise": 72.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((0xfffffffe - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff)) | c) - (0xfffffffe - ((b | b ^ 0xffffffff) + (b | b ^ 0xffffffff)) & c ) & (e + (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) + b + (0xffffffff - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) | 0xffffffff - b) + 2 + (0xffffffff - e | 0xffffffff - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) + b + 1 + (0xffffffff - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) | 0xffffffff - b))) ^ 0xffffffff)) + e + (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) + b + (0xffffffff - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) | 0xffffffff - b) + 2 + (0xffffffff - e | 0xffffffff - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) + b + 1 + (0xffffffff - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c)) | 0xffffffff - b)))",
                    "attributes": {
                        "numOps": 124,
                        "nestedExprLevel": 46,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 12.676056338028168,
                        "opsPercentages": {
                            "arithmetic": 33.87096774193548,
                            "mul": 12.903225806451612,
                            "bitwise": 53.2258064516129
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "msvc_default": {
                    "expr": "(c & ~((0xffffffff - ((e & c) * (e | c) + (~c & e) * (~e & c) ) | 0xffffffff - b) + e + (~c & e) * (~e & c) + (e & c) * (e | c) + b + 2 + (0xffffffff - e | 0xffffffff - ((~c & e) * (~e & c) + (e & c) * (e | c) + b + 1 + (0xffffffff - ((e & c) * (e | c) + (~c & e) * (~e & c)) | 0xffffffff - b))))) + (0xffffffff - ((e & c) * (e | c) + (~c & e) * (~e & c)) | 0xffffffff - b) + e + (~c & e) * (~e & c) + (e & c) * (e | c) + b + 2 + (0xffffffff - e | 0xffffffff - ((~c & e) * (~e & c) + (e & c) * (e | c) + b + 1 + (0xffffffff - ((e & c) * (e | c) + (~c & e) * (~e & c)) | 0xffffffff - b)))",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 31,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 23.239436619718308,
                        "opsPercentages": {
                            "arithmetic": 33.94495412844037,
                            "mul": 14.678899082568808,
                            "bitwise": 51.37614678899083
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~((~e & c) * (~c & e) + (e & c) * (e | c) + 1 + b - (~e & c) * (~c & e) + (e & c) * (e | c) & b) + e + ((~e & c) * (~c & e) + (e & c) * (e | c) & b - (~e & c) * (~c & e) + (e & c) * (e | c) + 1 + b | ~e) & c) + ((~e & c) * (~c & e) + (e & c) * (e | c) + 1 + b - (~e & c) * (~c & e) + (e & c) * (e | c) & b) + e + ((~e & c) * (~c & e) + (e & c) * (e | c) & b - (~e & c) * (~c & e) + (e & c) * (e | c) + 1 + b | ~e)",
                    "attributes": {
                        "numOps": 99,
                        "nestedExprLevel": 22,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 30.28169014084507,
                        "opsPercentages": {
                            "arithmetic": 25.252525252525253,
                            "mul": 16.161616161616163,
                            "bitwise": 58.58585858585859
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                }
            }
        },
        {
            "num": 412,
            "gt": {
                "expr": "(((-(e&e))-(~(-((e*d)|e)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 14.285714285714285,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "((~ ((((~ e | e) + e) + 1) - 1) & ~ (((((e & d) * (e | d) + (e & ~ d) * (~ e & d)) & ~ e) + e) - 1)) << 1) - (~ ((((~ e | e) + e) + 1) - 1) ^ (((((e & d) * (e | d) + (e & ~ d) * (~ e & d)) & ~ e) + e) - 1))",
                "attributes": {
                    "numOps": 43,
                    "nestedExprLevel": 22,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 30.23255813953488,
                        "mul": 9.30232558139535,
                        "bitwise": 60.46511627906976
                    },
                    "percentageDAGsCancel": 4.545454545454546
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-(e + ((e & d) * (e | d) + (~e & d) * (~d & e) & ~e)) & -e) * 2 - (-e ^ (e + ((e & d) * (e | d) + (~e & d) * (~d & e) & ~e)) - 1)",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 11,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 25.581395348837212,
                        "opsPercentages": {
                            "arithmetic": 28.125,
                            "mul": 15.625,
                            "bitwise": 56.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(((~d & e) * (~e & d) + (d | e) * (d & e) & ~e) - 1) + e & ~(e - 1)) * 2 - ((((~d & e) * (~e & d) + (d | e) * (d & e) & ~e) - 1) + e ^ ~(e - 1))",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 12,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 18.6046511627907,
                        "opsPercentages": {
                            "arithmetic": 25.71428571428571,
                            "mul": 14.285714285714285,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(-((~d & e) * (~e & d) + (e | d) * (e & d) & ~e + e) & -e) * 2 - (((~d & e) * (~e & d) + (e | d) * (e & d) & ~e + e) - 1 ^ -e)",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 25.581395348837212,
                        "opsPercentages": {
                            "arithmetic": 28.125,
                            "mul": 15.625,
                            "bitwise": 56.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e ^ 0xffffffff | e) + e ^ 0xffffffff) & ((((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) & (e ^ 0xffffffff)) + e) - 1 ^ 0xffffffff)) * 2 - ((e ^ 0xffffffff | e) + e ^ 0xffffffff ^ (((e & d) * (e | d) + (e & (d ^ 0xffffffff)) * ((e ^ 0xffffffff) & d) & (e ^ 0xffffffff)) + e) - 1)",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 17,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 9.30232558139535,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 12.82051282051282,
                            "bitwise": 64.1025641025641
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(e - 1) & ~((((e & d) * (e | d) + (~d & e) * (~e & d) & ~e) - 1) + e)) * 2 - (~(e - 1) ^ (((e & d) * (e | d) + (~d & e) * (~e & d) & ~e) - 1) + e)",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 12,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 18.6046511627907,
                        "opsPercentages": {
                            "arithmetic": 25.71428571428571,
                            "mul": 14.285714285714285,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "gcc_O3": {
                    "expr": "(-((~d & e) * (~e & d) + (d | e) * (e & d) & ~e) + e & -e) * 2 - (((~d & e) * (~e & d) + (d | e) * (e & d) & ~e) + e - 1 ^ -e)",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 9,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 25.581395348837212,
                        "opsPercentages": {
                            "arithmetic": 28.125,
                            "mul": 15.625,
                            "bitwise": 56.25
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 413,
            "gt": {
                "expr": "(((e^(e|d))+(-(~(d-(e&e))))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 0.0,
                        "bitwise": 57.14285714285714
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "((((e - ((e & ~ d) + d)) - ((e | ~ ((e & ~ d) + d)) << 1)) - 2) - ~ (((d + ~ ((~ e | e) - ~ e)) + 1) + 1)) - 1",
                "attributes": {
                    "numOps": 23,
                    "nestedExprLevel": 14,
                    "numDAGs": 19,
                    "opsPercentages": {
                        "arithmetic": 47.82608695652174,
                        "mul": 0.0,
                        "bitwise": 52.17391304347826
                    },
                    "percentageDAGsCancel": 5.263157894736842
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~(d + (~d & e)) | e) * -2 - (~d & e)) + -1",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 5,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 47.82608695652174,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 8.333333333333332,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~e + (~((~d & e) + d) | e) * -2) - (~d & e)) + e",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 6,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 43.47826086956522,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 7.6923076923076925,
                            "bitwise": 53.84615384615385
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((~d & e) + d) + d + (e | ~((~d & e) + d)) * -2",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 5,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 43.47826086956522,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 7.6923076923076925,
                            "bitwise": 53.84615384615385
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_default": {
                    "expr": "(((e - ((e & (d ^ 0xffffffff)) + d)) + (e | (e & (d ^ 0xffffffff)) + d ^ 0xffffffff) * -2) - (d + ((e ^ 0xffffffff | e) - (e ^ 0xffffffff) ^ 0xffffffff) + 2 ^ 0xffffffff)) + -3",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 11,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 47.82608695652174,
                            "mul": 4.3478260869565215,
                            "bitwise": 47.82608695652174
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_default": {
                    "expr": "(((e - ((~d & e) + d)) + (~((~d & e) + d) | e) * -2) - ~(d + 2 + ~(-~e - 1))) + -3",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 9,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 4.3478260869565215,
                        "opsPercentages": {
                            "arithmetic": 54.54545454545454,
                            "mul": 4.545454545454546,
                            "bitwise": 40.909090909090914
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "gcc_O3": {
                    "expr": "((~(~d & e) + d | e) * -2 - (~d & e) + d) + d + -1",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 39.130434782608695,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 7.142857142857142,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 414,
            "gt": {
                "expr": "(((-((b&a)|b))|((b-a)*(-(a+a)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 12.5,
                        "bitwise": 37.5
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "(~ (((((~ b | a) - ~ b) & ~ b) + b) - 1) & ~ ((((b & ~ a) - (~ b & a)) & (~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) + 1)) * (((b & ~ a) - (~ b & a)) | (~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) + 1)) + (((b & ~ a) - (~ b & a)) & ~ (~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) + 1)) * (~ ((b & ~ a) - (~ b & a)) & (~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) + 1)))) + ((((b & ~ a) - (~ b & a)) & (~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) + 1)) * (((b & ~ a) - (~ b & a)) | (~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) + 1)) + (((b & ~ a) - (~ b & a)) & ~ (~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) + 1)) * (~ ((b & ~ a) - (~ b & a)) & (~ (((a ^ ~ a) + ((a | a) + (a | a))) + 1) + 1)))",
                "attributes": {
                    "numOps": 142,
                    "nestedExprLevel": 72,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 32.3943661971831,
                        "mul": 2.8169014084507045,
                        "bitwise": 64.7887323943662
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a * -2 & ~b + a) * ((~a & b) - (~b & a) & ~(a * -2)) + ((~a & b) - (~b & a) & a * -2) * (a * -2 | (~a & b) - (~b & a)) + (-(b + (a & b & ~b)) & ~((a * -2 & ~b + a) * ((~a & b) - (~b & a) & ~(a * -2)) + ((~a & b) - (~b & a) & a * -2) * (a * -2 | (~a & b) - (~b & a))))",
                    "attributes": {
                        "numOps": 74,
                        "nestedExprLevel": 16,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 47.88732394366197,
                        "opsPercentages": {
                            "arithmetic": 28.37837837837838,
                            "mul": 16.216216216216218,
                            "bitwise": 55.4054054054054
                        },
                        "percentageDAGsCancel": 13.043478260869565
                    }
                },
                "msvc_O1": {
                    "expr": "(-(((~b | a) + 1 + b & ~b) + b) & ~(((~a & b) - (~b & a) | a * -2) * ((~a & b) - (~b & a) & a * -2) + (~a * -2 & (~a & b) - (~b & a)) * (~(~a & b) - (~b & a) & a * -2))) + ((~a & b) - (~b & a) | a * -2) * ((~a & b) - (~b & a) & a * -2) + (~a * -2 & (~a & b) - (~b & a)) * (~(~a & b) - (~b & a) & a * -2)",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 21,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 40.140845070422536,
                        "opsPercentages": {
                            "arithmetic": 27.058823529411764,
                            "mul": 14.117647058823529,
                            "bitwise": 58.82352941176471
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "clang_O3": {
                    "expr": "(~(~(~a & b) - (~b & a) & a * -2) * (a * 2 - 1 & (~a & b) - (~b & a)) + ((~a & b) - (~b & a) | a * -2) * ((~a & b) - (~b & a) & a * -2) & -b) + (~(~a & b) - (~b & a) & a * -2) * (a * 2 - 1 & (~a & b) - (~b & a)) + ((~a & b) - (~b & a) | a * -2) * ((~a & b) - (~b & a) & a * -2)",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 18,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 46.478873239436616,
                        "opsPercentages": {
                            "arithmetic": 26.31578947368421,
                            "mul": 15.789473684210526,
                            "bitwise": 57.89473684210527
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((((b ^ 0xffffffff | a) - (b ^ 0xffffffff) & (b ^ 0xffffffff)) + b) - 1 ^ 0xffffffff) & (((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a) & ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff) + 1) * ((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a) | ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff) + 1) + ((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a) & (((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a) ^ 0xffffffff) & ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff) + 1) ^ 0xffffffff)) + ((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a) & ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff) + 1) * ((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a) | ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff) + 1) + ((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a) & (((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff) + 1 ^ 0xffffffff)) * (((b & (a ^ 0xffffffff)) - ((b ^ 0xffffffff) & a) ^ 0xffffffff) & ((a ^ a ^ 0xffffffff) + a * 2 + 1 ^ 0xffffffff) + 1)",
                    "attributes": {
                        "numOps": 126,
                        "nestedExprLevel": 44,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 11.267605633802818,
                        "opsPercentages": {
                            "arithmetic": 30.158730158730158,
                            "mul": 9.523809523809524,
                            "bitwise": 60.317460317460316
                        },
                        "percentageDAGsCancel": 9.67741935483871
                    }
                },
                "msvc_default": {
                    "expr": "(~((((~b | a) - ~b & ~b) - 1) + b) & ~(((~a & b) - (~b & a) & ~(a * 2) + 1) * ((~a & b) - (~b & a) | ~(a * 2) + 1) + ((~a & b) - (~b & a) & ~(~(a * 2) + 1)) * (~((~a & b) - (~b & a)) & ~(a * 2) + 1))) + ((~a & b) - (~b & a) & ~(a * 2) + 1) * ((~a & b) - (~b & a) | ~(a * 2) + 1) + ((~a & b) - (~b & a) & ~(~(a * 2) + 1)) * (~((~a & b) - (~b & a)) & ~(a * 2) + 1)",
                    "attributes": {
                        "numOps": 94,
                        "nestedExprLevel": 27,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 33.80281690140845,
                        "opsPercentages": {
                            "arithmetic": 23.404255319148938,
                            "mul": 12.76595744680851,
                            "bitwise": 63.829787234042556
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "gcc_O3": {
                    "expr": "((~a & b) - (~b & a) | a * -2) * ((~a & b) - (~b & a) & a * -2) + (~a * -2 & (~a & b) - (~b & a)) * (~b + a & a * -2) + (-b & ~((~a & b) - (~b & a) | a * -2) * ((~a & b) - (~b & a) & a * -2) + (~a * -2 & (~a & b) - (~b & a)) * (~b + a & a * -2))",
                    "attributes": {
                        "numOps": 70,
                        "nestedExprLevel": 15,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 50.70422535211267,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 17.142857142857142,
                            "bitwise": 54.285714285714285
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 415,
            "gt": {
                "expr": "((~((-a)&(a+(a&a)))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "- ((~ (~ a + 1) | (((a | (((~ a | a) + a) + 1)) + (a | (((~ a | a) + a) + 1))) - (a ^ (((~ a | a) + a) + 1)))) - ~ (~ a + 1)) - 1",
                "attributes": {
                    "numOps": 27,
                    "nestedExprLevel": 15,
                    "numDAGs": 14,
                    "opsPercentages": {
                        "arithmetic": 48.148148148148145,
                        "mul": 0.0,
                        "bitwise": 51.85185185185185
                    },
                    "percentageDAGsCancel": 21.428571428571427
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(-a & a * 2)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 85.18518518518519,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((a - 1) - (a * 2 | a - 1)) + -1",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 74.07407407407408,
                        "opsPercentages": {
                            "arithmetic": 71.42857142857143,
                            "mul": 14.285714285714285,
                            "bitwise": 14.285714285714285
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~(a * 2 & -a)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 85.18518518518519,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((a ^ 0xffffffff) + 1 ^ 0xffffffff | ((a | (a ^ 0xffffffff | a) + a + 1) + (a | (a ^ 0xffffffff | a) + a + 1)) - (a ^ (a ^ 0xffffffff | a) + a + 1)) - ((a ^ 0xffffffff) + 1 ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 9,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 48.148148148148145,
                            "mul": 0.0,
                            "bitwise": 51.85185185185185
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((~(~a + 1) | a * 2) - ~(~a + 1))",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 59.25925925925925,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 9.090909090909092,
                            "bitwise": 45.45454545454545
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(a * 2 & -a)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 85.18518518518519,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 416,
            "gt": {
                "expr": "((((e&b)&b)*(c&c)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 25.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "((((~ (((~ e | b) + e) + 1) | b) + (((~ e | b) + e) + 1)) + 1) & (((~ c | c) + c) + 1)) * ((((~ (((~ e | b) + e) + 1) | b) + (((~ e | b) + e) + 1)) + 1) | (((~ c | c) + c) + 1)) + ((((~ (((~ e | b) + e) + 1) | b) + (((~ e | b) + e) + 1)) + 1) & ~ (((~ c | c) + c) + 1)) * (~ (((~ (((~ e | b) + e) + 1) | b) + (((~ e | b) + e) + 1)) + 1) & (((~ c | c) + c) + 1))",
                "attributes": {
                    "numOps": 73,
                    "nestedExprLevel": 42,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 45.20547945205479,
                        "mul": 2.73972602739726,
                        "bitwise": 52.054794520547944
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-((-((~e | b) + e) - 2 | b) + e + (~e | b) + 1) - 2 & c) * (e + (~e | b) + (-((~e | b) + e) - 2 | b) + 2 & ~c) + (e + (~e | b) + (-((~e | b) + e) - 2 | b) + 2 & c) * (e + (~e | b) + (-((~e | b) + e) - 2 | b) + 2 | c)",
                    "attributes": {
                        "numOps": 54,
                        "nestedExprLevel": 16,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 26.027397260273972,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 3.7037037037037033,
                            "bitwise": 46.2962962962963
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_O1": {
                    "expr": "(~c & e + 2 + (~(e + 1 + (~e | b)) | b) + (~e | b)) * (~e + 2 + (~(e + 1 + (~e | b)) | b) + (~e | b) & c) + (e + 2 + (~(e + 1 + (~e | b)) | b) + (~e | b) | c) * (e + 2 + (~(e + 1 + (~e | b)) | b) + (~e | b) & c)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 17,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 27.397260273972602,
                        "opsPercentages": {
                            "arithmetic": 39.62264150943396,
                            "mul": 3.7735849056603774,
                            "bitwise": 56.60377358490566
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_O3": {
                    "expr": "(-((~e | b) + e + b) - 3 & c) * (~c & b + (~e | b) + e + 2) + (b + (~e | b) + e + 2 | c) * (b + (~e | b) + e + 2 & c)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 60.273972602739725,
                        "opsPercentages": {
                            "arithmetic": 48.275862068965516,
                            "mul": 6.896551724137931,
                            "bitwise": 44.827586206896555
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e ^ 0xffffffff | b) + e + 1 ^ 0xffffffff | b) + (e ^ 0xffffffff | b) + e + 2 & (c ^ 0xffffffff | c) + c + 1) * (((e ^ 0xffffffff | b) + e + 1 ^ 0xffffffff | b) + (e ^ 0xffffffff | b) + e + 2 | (c ^ 0xffffffff | c) + c + 1) + (((e ^ 0xffffffff | b) + e + 1 ^ 0xffffffff | b) + (e ^ 0xffffffff | b) + e + 2 & ((c ^ 0xffffffff | c) + c + 1 ^ 0xffffffff)) * ((((e ^ 0xffffffff | b) + e + 1 ^ 0xffffffff | b) + (e ^ 0xffffffff | b) + e + 2 ^ 0xffffffff) & (c ^ 0xffffffff | c) + c + 1)",
                    "attributes": {
                        "numOps": 69,
                        "nestedExprLevel": 16,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 5.47945205479452,
                        "opsPercentages": {
                            "arithmetic": 42.028985507246375,
                            "mul": 2.898550724637681,
                            "bitwise": 55.072463768115945
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~e | b) + 2 + (~((~e | b) + 1 + e) | b) + e & c) * ((~e | b) + 2 + (~((~e | b) + 1 + e) | b) + e | c) + ((~e | b) + 2 + (~((~e | b) + 1 + e) | b) + e & ~c) * (~((~e | b) + 2 + (~((~e | b) + 1 + e) | b) + e ) & c)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 15,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 27.397260273972602,
                        "opsPercentages": {
                            "arithmetic": 39.62264150943396,
                            "mul": 3.7735849056603774,
                            "bitwise": 56.60377358490566
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "gcc_O3": {
                    "expr": "(~c & (~e | b) + e + 1 + (-(~e | b) + e - 2 | b) + 1) * (-(~e | b) + e + 1 + (-(~e | b) + e - 2 | b) - 2 & c) + ((~e | b) + e + 1 + (-(~e | b) + e - 2 | b) + 1 & c) * ((~e | b) + e + 1 + (-(~e | b) + e - 2 | b) + 1 | c)",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 10,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 21.91780821917808,
                        "opsPercentages": {
                            "arithmetic": 52.63157894736842,
                            "mul": 3.508771929824561,
                            "bitwise": 43.859649122807014
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                }
            }
        },
        {
            "num": 417,
            "gt": {
                "expr": "((~((a|e)^(b-(a+b)))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((a + e) + 1) + ((- a - 1) | (- e - 1))) & ((b ^ ((a - ~ b) - 1)) - ((~ b & ((a - ~ b) - 1)) + (~ b & ((a - ~ b) - 1))))) - ((((a + e) + 1) + ((- a - 1) | (- e - 1))) | ((b ^ ((a - ~ b) - 1)) - ((~ b & ((a - ~ b) - 1)) + (~ b & ((a - ~ b) - 1)))))) - 1",
                "attributes": {
                    "numOps": 52,
                    "nestedExprLevel": 29,
                    "numDAGs": 19,
                    "opsPercentages": {
                        "arithmetic": 61.53846153846154,
                        "mul": 0.0,
                        "bitwise": 38.46153846153847
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((a - ~b) - 1 ^ b) + ((a - ~b) - 1 & ~b) * -2 ^ (a & e) - (e + a + 1)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 67.3076923076923,
                        "opsPercentages": {
                            "arithmetic": 52.94117647058824,
                            "mul": 5.88235294117647,
                            "bitwise": 41.17647058823529
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_O1": {
                    "expr": "(((a - (a & e)) + e & (a + b ^ b) + (~b & a + b) * -2) - ((a - (a & e)) + e | (a + b ^ b) + (~b & a + b) * -2)) + -1",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 9,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 48.07692307692308,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 7.4074074074074066,
                            "bitwise": 37.03703703703704
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((b + a ^ b) + (~b & b + a) * -2 ^ (a | e))",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 78.84615384615384,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 9.090909090909092,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a + e + 1 + (0xffffffff - a | 0xffffffff - e) & (b ^ (a - (b ^ 0xffffffff)) - 1) - (((b ^ 0xffffffff) & (a - (b ^ 0xffffffff)) - 1) + ((b ^ 0xffffffff) & (a - (b ^ 0xffffffff)) - 1))) - (a + e + 1 + (0xffffffff - a | 0xffffffff - e) | (b ^ (a - (b ^ 0xffffffff)) - 1) - (((b ^ 0xffffffff) & (a - (b ^ 0xffffffff)) - 1) + ((b ^ 0xffffffff) & (a - (b ^ 0xffffffff)) - 1)))) + -1",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 19,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 5.769230769230769,
                        "opsPercentages": {
                            "arithmetic": 59.183673469387756,
                            "mul": 0.0,
                            "bitwise": 40.816326530612244
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((a + e + 1 + (0xffffffff - a | 0xffffffff - e) & ((a - ~b) - 1 ^ b) - ((~b & (a - ~b) - 1) + (~b & (a - ~b) - 1))) - (a + e + 1 + (0xffffffff - a | 0xffffffff - e) | ((a - ~b) - 1 ^ b) - ((~b & (a - ~b) - 1) + (~b & (a - ~b) - 1)))) + -1",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 13,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 5.769230769230769,
                        "opsPercentages": {
                            "arithmetic": 59.183673469387756,
                            "mul": 0.0,
                            "bitwise": 40.816326530612244
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(a & e) - (a + 1 + e) ^ (b ^ b + a) + (~b & b + a) * -2",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 3,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 75.0,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 7.6923076923076925,
                            "bitwise": 38.46153846153847
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                }
            }
        },
        {
            "num": 418,
            "gt": {
                "expr": "((-(-(((b&b)|(a-(b+b)))|(b-(~(b^b)))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "~ (~ (((((((((~ b | b) + b) + 1) + ((a & ~ (((b | b) << 1) - (b ^ b))) - (~ a & (((b | b) << 1) - (b ^ b))))) + 1) + ((- (((~ b | b) + b) + 1) - 1) | (- ((a & ~ (((b | b) << 1) - (b ^ b))) - (~ a & (((b | b) << 1) - (b ^ b)))) - 1))) & ~ ((b + ~ (((b & b) - (b | b)) - 1)) + 1)) + ((b + ~ (((b & b) - (b | b)) - 1)) + 1)) - 1)) + 1",
                "attributes": {
                    "numOps": 63,
                    "nestedExprLevel": 43,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 0.0,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 20.588235294117645
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "b + 1 + (b + ((~(b * 2) & a) - (~a & b * 2)) + 1 + (((~a & b * 2) - (~(b * 2) & a)) - 1 | ~b) & -b - 2)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 60.317460317460316,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 16.0,
                            "bitwise": 44.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "b + 1 + ((((~a & b * 2 - ~(b * 2) & a) - 1 | ~b) - ~a & b * 2) + ~(b * 2) & a + 1 + b & ~(b + 1))",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 7,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 60.317460317460316,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 16.0,
                            "bitwise": 48.0
                        },
                        "percentageDAGsCancel": 15.789473684210526
                    }
                },
                "clang_O3": {
                    "expr": "(-b - 2 & ((~(b * 2) & a) - (~a & b * 2) | b)) + b + 1",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 5,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 79.36507936507937,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 15.384615384615385,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_default": {
                    "expr": "((b ^ 0xffffffff | b) + b + ((a & (b * 2 ^ 0xffffffff)) - ((a ^ 0xffffffff) & b * 2)) + 2 + (0xffffffff - ((b ^ 0xffffffff | b) + b + 1) | 0xffffffff - ((a & (b * 2 ^ 0xffffffff)) - ((a ^ 0xffffffff) & b * 2)) ) & (b + 1 ^ 0xffffffff)) + b + 1",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 11,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 49.2063492063492,
                        "opsPercentages": {
                            "arithmetic": 40.625,
                            "mul": 12.5,
                            "bitwise": 46.875
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "msvc_default": {
                    "expr": "(b + ((~(b * 2) & a) - (~a & b * 2)) + 1 + (0xffffffff - b | 0xffffffff - ((~(b * 2) & a) - (~a & b * 2))) & ~(b + 1)) + b + 1",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 10,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 60.317460317460316,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 16.0,
                            "bitwise": 44.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "b + 1 + (((~a & b * 2 - ~(b * 2) & a) - 1 | ~b) + b + 1 + (~(b * 2) & a - ~a & b * 2) & -b - 2)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 6,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 60.317460317460316,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 16.0,
                            "bitwise": 44.0
                        },
                        "percentageDAGsCancel": 25.0
                    }
                }
            }
        },
        {
            "num": 419,
            "gt": {
                "expr": "((-((a|(b|b))^(d&d))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "~ ((((((a & ~ (((b + b) + 1) + ((- b - 1) | (- b - 1)))) + (((b + b) + 1) + ((- b - 1) | (- b - 1)))) - (((~ d | d) + d) + 1)) - ((((a & ~ (((b + b) + 1) + ((- b - 1) | (- b - 1)))) + (((b + b) + 1) + ((- b - 1) | (- b - 1)))) | ~ (((~ d | d) + d) + 1)) + (((a & ~ (((b + b) + 1) + ((- b - 1) | (- b - 1)))) + (((b + b) + 1) + ((- b - 1) | (- b - 1)))) | ~ (((~ d | d) + d) + 1)))) - 2) - 1)",
                "attributes": {
                    "numOps": 79,
                    "nestedExprLevel": 45,
                    "numDAGs": 21,
                    "opsPercentages": {
                        "arithmetic": 70.88607594936708,
                        "mul": 0.0,
                        "bitwise": 29.11392405063291
                    },
                    "percentageDAGsCancel": 9.523809523809524
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~d | (-b - 1 & a) + ~b + b * 2 + 1) * 2 + ~(~b + b * 2 + 1 + (-b - 1 & a)) + d + 3",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 4,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 70.88607594936708,
                        "opsPercentages": {
                            "arithmetic": 56.52173913043478,
                            "mul": 13.043478260869565,
                            "bitwise": 30.434782608695656
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "msvc_O1": {
                    "expr": "~(b + -3 + (((~b & a) + ((~b & a) + b | ~d) * -2) - d))",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 6,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 81.0126582278481,
                        "opsPercentages": {
                            "arithmetic": 46.666666666666664,
                            "mul": 6.666666666666667,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(d - b) + (~d | b) * 2 + 2",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 92.40506329113924,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((a & (b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) ^ 0xffffffff)) + b * 2 + (0xffffffff - b | 0xffffffff - b)) - ((d ^ 0xffffffff | d) + d + 1)) - (((a & (b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) ^ 0xffffffff)) + b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) | (d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff) + ((a & (b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) ^ 0xffffffff)) + b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) | (d ^ 0xffffffff | d) + d + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 18,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 17.72151898734177,
                        "opsPercentages": {
                            "arithmetic": 55.38461538461539,
                            "mul": 9.230769230769232,
                            "bitwise": 35.38461538461539
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~(((((~(b * 2 + 1 + (0xffffffff - b | 0xffffffff - b)) & a) + b * 2 + (0xffffffff - b | 0xffffffff - b)) - d) - (((~(b * 2 + 1 + (0xffffffff - b | 0xffffffff - b)) & a) + b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) | ~d) + ((~(b * 2 + 1 + (0xffffffff - b | 0xffffffff - b)) & a) + b * 2 + 1 + (0xffffffff - b | 0xffffffff - b) | ~d))) - 2)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 17,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 32.91139240506329,
                        "opsPercentages": {
                            "arithmetic": 56.60377358490566,
                            "mul": 11.320754716981133,
                            "bitwise": 32.075471698113205
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(b - b * 2 + 1 & a) + ~b + b * 2 + 1 + d + 3 + (~d | (b - b * 2 + 1 & a) + ~b + b * 2 + 1) * 2",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 3,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 68.35443037974683,
                        "opsPercentages": {
                            "arithmetic": 52.0,
                            "mul": 20.0,
                            "bitwise": 28.000000000000004
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 420,
            "gt": {
                "expr": "((-(((d&(c^c))^((c-d)+(d|c)))|(~(c^c)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 0.0,
                        "bitwise": 70.0
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "~ (((((((((~ d | (((c - c) - ((c | ~ c) + (c | ~ c))) - 2)) - ~ d) - ((((((c & ~ d) + (c & ~ d)) - (c ^ d)) | ((d & ~ c) + c)) + ((((c & ~ d) + (c & ~ d)) - (c ^ d)) | ((d & ~ c) + c))) - ((((c & ~ d) + (c & ~ d)) - (c ^ d)) ^ ((d & ~ c) + c)))) - ((((~ d | (((c - c) - ((c | ~ c) + (c | ~ c))) - 2)) - ~ d) | ~ ((((((c & ~ d) + (c & ~ d)) - (c ^ d)) | ((d & ~ c) + c)) + ((((c & ~ d) + (c & ~ d)) - (c ^ d)) | ((d & ~ c) + c))) - ((((c & ~ d) + (c & ~ d)) - (c ^ d)) ^ ((d & ~ c) + c)))) << 1)) - 2) + ((c & c) + ~ (c | c))) + 1) + ((- (((((~ d | (((c - c) - ((c | ~ c) + (c | ~ c))) - 2)) - ~ d) - ((((((c & ~ d) + (c & ~ d)) - (c ^ d)) | ((d & ~ c) + c)) + ((((c & ~ d) + (c & ~ d)) - (c ^ d)) | ((d & ~ c) + c))) - ((((c & ~ d) + (c & ~ d)) - (c ^ d)) ^ ((d & ~ c) + c)))) - ((((~ d | (((c - c) - ((c | ~ c) + (c | ~ c))) - 2)) - ~ d) | ~ ((((((c & ~ d) + (c & ~ d)) - (c ^ d)) | ((d & ~ c) + c)) + ((((c & ~ d) + (c & ~ d)) - (c ^ d)) | ((d & ~ c) + c))) - ((((c & ~ d) + (c & ~ d)) - (c ^ d)) ^ ((d & ~ c) + c)))) << 1)) - 2) - 1) | (- ((c & c) + ~ (c | c)) - 1))) - 1)",
                "attributes": {
                    "numOps": 218,
                    "nestedExprLevel": 114,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 36.69724770642202,
                        "mul": 0.0,
                        "bitwise": 63.30275229357798
                    },
                    "percentageDAGsCancel": 17.94871794871795
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "1",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(~d + ~c + c + d)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 97.24770642201835,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "1",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((d ^ 0xffffffff | 0xfffffffe - ((c | c ^ 0xffffffff) + (c | c ^ 0xffffffff))) - (d ^ 0xffffffff)) - (((((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) | (d & (c ^ 0xffffffff)) + c) + (((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) | (d & (c ^ 0xffffffff)) + c)) - (((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) ^ (d & (c ^ 0xffffffff)) + c))) + ((d ^ 0xffffffff | 0xfffffffe - ((c | c ^ 0xffffffff) + (c | c ^ 0xffffffff))) - (d ^ 0xffffffff) | ((((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) | (d & (c ^ 0xffffffff)) + c) + (((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) | (d & (c ^ 0xffffffff)) + c)) - (((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) ^ (d & (c ^ 0xffffffff)) + c) ^ 0xffffffff) * -2 + c + (c ^ 0xffffffff) + (0xffffffff - ((((d ^ 0xffffffff | 0xfffffffe - ((c | c ^ 0xffffffff) + (c | c ^ 0xffffffff))) - (d ^ 0xffffffff)) - (((((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) | (d & (c ^ 0xffffffff)) + c) + (((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) | (d & (c ^ 0xffffffff)) + c)) - (((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) ^ (d & (c ^ 0xffffffff)) + c))) + ((d ^ 0xffffffff | 0xfffffffe - ((c | c ^ 0xffffffff) + (c | c ^ 0xffffffff))) - (d ^ 0xffffffff) | ((((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) | (d & (c ^ 0xffffffff)) + c) + (((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) | (d & (c ^ 0xffffffff)) + c)) - (((c & (d ^ 0xffffffff)) + (c & (d ^ 0xffffffff))) - (c ^ d) ^ (d & (c ^ 0xffffffff)) + c) ^ 0xffffffff) * -2 + -2 ) | 0xffffffff - (c + (c ^ 0xffffffff)))) - 2 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 205,
                        "nestedExprLevel": 103,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 5.963302752293578,
                        "opsPercentages": {
                            "arithmetic": 34.63414634146341,
                            "mul": 0.975609756097561,
                            "bitwise": 64.39024390243902
                        },
                        "percentageDAGsCancel": 3.0303030303030303
                    }
                },
                "msvc_default": {
                    "expr": "~(((~d - ~d) - (((((~d & c) + (~d & c)) - (c ^ d) | (~c & d) + c) + (((~d & c) + (~d & c)) - (c ^ d) | (~c & d) + c)) - (((~d & c) + (~d & c)) - (c ^ d) ^ (~c & d) + c))) + (~d - ~d | ~(((((~d & c) + (~d & c)) - (c ^ d) | (~c & d) + c) + (((~d & c) + (~d & c)) - (c ^ d) | (~c & d) + c)) - (((~d & c) + (~d & c)) - (c ^ d) ^ (~c & d) + c))) * -2 + -2 + c + ~c + (0xffffffff - (((~d - ~d) - (((((~d & c) + (~d & c)) - (c ^ d) | (~c & d) + c) + (((~d & c) + (~d & c)) - (c ^ d) | (~c & d) + c)) - (((~d & c) + (~d & c)) - (c ^ d) ^ (~c & d) + c))) + (~d - ~d | ~(((((~d & c) + (~d & c)) - (c ^ d) | (~c & d) + c) + (((~d & c) + (~d & c)) - (c ^ d) | (~c & d) + c)) - (((~d & c) + (~d & c)) - (c ^ d) ^ (~c & d) + c))) * -2 + -2) | 0xffffffff - (c + ~c)))",
                    "attributes": {
                        "numOps": 178,
                        "nestedExprLevel": 65,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 18.34862385321101,
                        "opsPercentages": {
                            "arithmetic": 35.95505617977528,
                            "mul": 1.1235955056179776,
                            "bitwise": 62.92134831460674
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "gcc_O3": {
                    "expr": "1",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 421,
            "gt": {
                "expr": "((-((-((e-c)^(e*c)))-(-(-(c&(~e)))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 11,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 10.0,
                        "bitwise": 30.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "~ (((~ (((((((e & ~ c) << 1) - (e ^ c)) - ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) - (((((e & ~ c) << 1) - (e ^ c)) | ~ ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) << 1)) - 2) - 1) & ~ (~ (~ ((c | e) - e) + 1) + 1)) + (~ (((((((e & ~ c) << 1) - (e ^ c)) - ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) - (((((e & ~ c) << 1) - (e ^ c)) | ~ ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) << 1)) - 2) - 1) & ~ (~ (~ ((c | e) - e) + 1) + 1))) - (~ (((((((e & ~ c) << 1) - (e ^ c)) - ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) - (((((e & ~ c) << 1) - (e ^ c)) | ~ ((e & c) * (e | c) + (e & ~ c) * (~ e & c))) << 1)) - 2) - 1) ^ (~ (~ ((c | e) - e) + 1) + 1))) + 1",
                "attributes": {
                    "numOps": 135,
                    "nestedExprLevel": 70,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 26.666666666666668,
                        "mul": 8.88888888888889,
                        "bitwise": 64.44444444444444
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~e & c ^ (~((~e & c) * (~c & e) + (e & c) * (e | c)) | (~c & e) * 2 - (e ^ c)) * 2 + ~((~c & e) * 2) + (e ^ c) + (~e & c) * (~c & e) + (e & c) * (e | c) + 3) + ~(((~c | e) & (~((~e & c) * (~c & e) + (e & c) * (e | c)) | (~c & e) * 2 - (e ^ c)) * 2 + ~((~c & e) * 2) + (e ^ c) + (~e & c) * (~c & e) + (e & c) * (e | c) + 3) * 2) + 1",
                    "attributes": {
                        "numOps": 80,
                        "nestedExprLevel": 22,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 40.74074074074074,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 18.75,
                            "bitwise": 61.25000000000001
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(((((2 - (~e & c)) * ~c & e - (~(~c & e * (~e & c) + (c & e) * (c | e)) * 2 | (~c & e * 2 - (c ^ e)) * 2)) - (c & e) * (c | e)) - (c ^ e)) - 3) ^ (c | e) - e) + (~(c | e) - e & ~(((((2 - (~e & c)) * ~c & e - (~(~c & e * (~e & c) + (c & e) * (c | e)) * 2 | (~c & e * 2 - (c ^ e)) * 2)) - (c & e) * (c | e)) - (c ^ e)) - 3)) * -2",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 25,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 43.7037037037037,
                        "opsPercentages": {
                            "arithmetic": 23.684210526315788,
                            "mul": 19.736842105263158,
                            "bitwise": 56.57894736842105
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((e | c) - e ^ ((~e & c) * (~c & e) + (e & c) * (e | c) - (~c & e) * 2 - (e ^ c)) + (~(~e & c) * (~c & e) + (e & c) * (e | c) | (~c & e) * 2 - (e ^ c)) * 2 + 2) + (~(e | c) - e & ((~e & c) * (~c & e) + (e & c) * (e | c) - (~c & e) * 2 - (e ^ c)) + (~(~e & c) * (~c & e) + (e & c) * (e | c) | (~c & e) * 2 - (e ^ c)) * 2 + 2) * -2",
                    "attributes": {
                        "numOps": 78,
                        "nestedExprLevel": 19,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 42.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 19.230769230769234,
                            "bitwise": 57.692307692307686
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((((((e & (c ^ 0xffffffff)) * 2 - (e ^ c)) - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c))) + ((e & (c ^ 0xffffffff)) * 2 - (e ^ c) | (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) ^ 0xffffffff) * -2) - 3 ^ 0xffffffff) & ((((c | e) - e ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff)) + ((((((e & (c ^ 0xffffffff)) * 2 - (e ^ c)) - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c))) + ((e & (c ^ 0xffffffff)) * 2 - (e ^ c) | (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) ^ 0xffffffff) * -2 ) - 3 ^ 0xffffffff) & ((((c | e) - e ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff))) - (((((e & (c ^ 0xffffffff)) * 2 - (e ^ c)) - ((e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c))) + ((e & (c ^ 0xffffffff)) * 2 - (e ^ c) | (e & c) * (e | c) + (e & (c ^ 0xffffffff)) * ((e ^ 0xffffffff) & c) ^ 0xffffffff) * -2) - 3 ^ 0xffffffff ^ (((c | e) - e ^ 0xffffffff) + 1 ^ 0xffffffff) + 1) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 135,
                        "nestedExprLevel": 62,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 26.666666666666668,
                            "mul": 15.555555555555555,
                            "bitwise": 57.77777777777777
                        },
                        "percentageDAGsCancel": 3.0303030303030303
                    }
                },
                "msvc_default": {
                    "expr": "~(((~(((((~c & e) * 2 - (e ^ c)) - ((e & c) * (e | c) + (~c & e) * (~e & c))) + ((~c & e) * 2 - (e ^ c) | ~((e & c) * (e | c) + (~c & e) * (~e & c))) * -2) - 3) & ~(~(~((c | e) - e) + 1) + 1)) + (~(((((~c & e) * 2 - (e ^ c)) - ((e & c) * (e | c) + (~c & e) * (~e & c))) + ((~c & e) * 2 - (e ^ c) | ~((e & c) * (e | c) + (~c & e) * (~e & c))) * -2) - 3) & ~(~(~((c | e) - e) + 1) + 1))) - (~(((((~c & e) * 2 - (e ^ c)) - ((e & c) * (e | c) + (~c & e) * (~e & c))) + ((~c & e) * 2 - (e ^ c) | ~((e & c) * (e | c) + (~c & e) * (~e & c))) * -2) - 3) ^ ~(~((c | e) - e) + 1) + 1)) + 1",
                    "attributes": {
                        "numOps": 135,
                        "nestedExprLevel": 54,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 26.666666666666668,
                            "mul": 15.555555555555555,
                            "bitwise": 57.77777777777777
                        },
                        "percentageDAGsCancel": 3.0303030303030303
                    }
                },
                "gcc_O3": {
                    "expr": "(~e & c ^ ~~c & e * 2 + (c ^ e) + (c & e) * (c | e) + ~c & e * (~e & c) + 3 + (~c & e * 2 - (c ^ e) | ~(c & e) * (c | e) + ~c & e * (~e & c)) * 2) + ((~c | e) & ~~c & e * 2 + (c ^ e) + (c & e) * (c | e) + ~c & e * (~e & c) + 3 + (~c & e * 2 - (c ^ e) | ~(c & e) * (c | e) + ~c & e * (~e & c)) * 2) * -2",
                    "attributes": {
                        "numOps": 79,
                        "nestedExprLevel": 13,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 41.48148148148148,
                        "opsPercentages": {
                            "arithmetic": 20.253164556962027,
                            "mul": 18.9873417721519,
                            "bitwise": 60.75949367088608
                        },
                        "percentageDAGsCancel": 6.0606060606060606
                    }
                }
            }
        },
        {
            "num": 422,
            "gt": {
                "expr": "((((a&(-(~a)))+(b*(~a)))^((a^a)*(a*a))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 30.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "((((((~ a | (a + 1)) - ~ a) | ((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1)))) + (((~ a | (a + 1)) - ~ a) & ((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))))) - ((((a | a) - (a & a)) & ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) * (((a | a) - (a & a)) | ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) + (((a | a) - (a & a)) & ~ ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) * (~ ((a | a) - (a & a)) & ((a & a) * (a | a) + (a & ~ a) * (~ a & a))))) - ((((((~ a | (a + 1)) - ~ a) | ((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1)))) + (((~ a | (a + 1)) - ~ a) & ((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))))) | ~ ((((a | a) - (a & a)) & ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) * (((a | a) - (a & a)) | ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) + (((a | a) - (a & a)) & ~ ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) * (~ ((a | a) - (a & a)) & ((a & a) * (a | a) + (a & ~ a) * (~ a & a))))) + (((((~ a | (a + 1)) - ~ a) | ((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1)))) + (((~ a | (a + 1)) - ~ a) & ((b & (- a - 1)) * (b | (- a - 1)) + (b & ~ (- a - 1)) * (~ b & (- a - 1))))) | ~ ((((a | a) - (a & a)) & ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) * (((a | a) - (a & a)) | ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) + (((a | a) - (a & a)) & ~ ((a & a) * (a | a) + (a & ~ a) * (~ a & a))) * (~ ((a | a) - (a & a)) & ((a & a) * (a | a) + (a & ~ a) * (~ a & a))))))) - 2",
                "attributes": {
                    "numOps": 320,
                    "nestedExprLevel": 132,
                    "numDAGs": 41,
                    "opsPercentages": {
                        "arithmetic": 31.25,
                        "mul": 13.125,
                        "bitwise": 55.625
                    },
                    "percentageDAGsCancel": 31.70731707317073
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(b | a) * (b & a) + (~a & b) * (~a | b) + (a + 1 & a)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 95.9375,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 15.384615384615385,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((b & ~a) * (~a | b) + (~b & ~a) * (a & b) | a + 1 + (a + 1 | ~a)) + ((b & ~a) * (~a | b) + (~b & ~a) * (a & b) & a + 1 + (a + 1 | ~a))",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 8,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 89.0625,
                        "opsPercentages": {
                            "arithmetic": 25.71428571428571,
                            "mul": 11.428571428571429,
                            "bitwise": 62.857142857142854
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_O3": {
                    "expr": "(a + 1 & a) + (~b & ~a) * (b & a) + (~a | b) * (~a & b)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 95.625,
                        "opsPercentages": {
                            "arithmetic": 21.428571428571427,
                            "mul": 14.285714285714285,
                            "bitwise": 64.28571428571429
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_default": {
                    "expr": "((a ^ 0xffffffff | a + 1) - (a ^ 0xffffffff) | (b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a)) + ((a ^ 0xffffffff | a + 1) - (a ^ 0xffffffff) & (b & 0xffffffff - a) * (b | 0xffffffff - a) + (b & (0xffffffff - a ^ 0xffffffff)) * ((b ^ 0xffffffff) & 0xffffffff - a))",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 12,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 87.8125,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 10.256410256410255,
                            "bitwise": 51.28205128205128
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_default": {
                    "expr": "((~a | a + 1) - ~a | (0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a)) + ((~a | a + 1) - ~a & (0xffffffff - a & b) * (0xffffffff - a | b) + (~(0xffffffff - a) & b) * (~b & 0xffffffff - a))",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 9,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 87.8125,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 10.256410256410255,
                            "bitwise": 51.28205128205128
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "gcc_O3": {
                    "expr": "~(a | b) * (a & b) + (~a | b) * (~a & b) + (a + 1 & a)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 95.9375,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 15.384615384615385,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 25.0
                    }
                }
            }
        },
        {
            "num": 423,
            "gt": {
                "expr": "((a|((c|(a+a))+(c+a))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 0.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((a + (((((c + (((a | a) << 1) - (a ^ a))) + 1) + ((- c - 1) | (- (((a | a) << 1) - (a ^ a)) - 1))) - ~ ((c - ~ a) - 1)) - 1)) + 1) + ((- a - 1) | (- (((((c + (((a | a) << 1) - (a ^ a))) + 1) + ((- c - 1) | (- (((a | a) << 1) - (a ^ a)) - 1))) - ~ ((c - ~ a) - 1)) - 1) - 1))",
                "attributes": {
                    "numOps": 52,
                    "nestedExprLevel": 34,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 63.46153846153846,
                        "mul": 0.0,
                        "bitwise": 36.53846153846153
                    },
                    "percentageDAGsCancel": 7.6923076923076925
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~a + ~c + 1) - (c + a * 2 + 1 + ~(a * 2 & c)) | ~a) + ((c + a * 3 + ~(a * 2 & c)) - (~a + ~c + 1)) + 1",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 6,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 48.07692307692308,
                        "opsPercentages": {
                            "arithmetic": 48.148148148148145,
                            "mul": 14.814814814814813,
                            "bitwise": 37.03703703703704
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((((~(a + c) - ~(a * 2 & c)) + a * -2) - c) - 1 | ~a) + ~(a * 2 & c) + (a * 2 + 1 + c) * 2",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 7,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 57.692307692307686,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 22.727272727272727,
                            "bitwise": 31.818181818181817
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(a * 2 | c) + c + a | a",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 90.38461538461539,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 20.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((c + a * 3 + (0xffffffff - c | a * -2 - 1)) - ((c - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)) + 1 + (0xffffffff - a | 0xffffffff - ((c + a * 2 + (0xffffffff - c | a * -2 - 1)) - ((c - (a ^ 0xffffffff)) - 1 ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 11,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 40.38461538461539,
                        "opsPercentages": {
                            "arithmetic": 64.51612903225806,
                            "mul": 12.903225806451612,
                            "bitwise": 22.58064516129032
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((a * 3 + c + (0xffffffff - c | a * -2 - 1)) - ~((c - ~a) - 1)) + 1 + (0xffffffff - a | 0xffffffff - ((a * 2 + c + (0xffffffff - c | a * -2 - 1)) - ~((c - ~a) - 1)))",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 9,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 40.38461538461539,
                        "opsPercentages": {
                            "arithmetic": 64.51612903225806,
                            "mul": 12.903225806451612,
                            "bitwise": 22.58064516129032
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~a - c - (a * 2 + c) - (a * 2 & c) | ~a) + a + ((a * 2 + c) - (a * 2 & c) - ~a - c)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 5,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 61.53846153846154,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 20.0,
                            "bitwise": 30.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 424,
            "gt": {
                "expr": "((~(~((~b)&d))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 0.0,
                        "bitwise": 100.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "- (- (((~ (- b - 1) | d) + (- b - 1)) + 1) - 1) - 1",
                "attributes": {
                    "numOps": 12,
                    "nestedExprLevel": 6,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 83.33333333333334,
                        "mul": 0.0,
                        "bitwise": 16.666666666666664
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~b & d",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 83.33333333333334,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 100.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(b | d) - b",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 83.33333333333334,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~b & d",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 83.33333333333334,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 100.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - (-1 - ((0xffffffff - b ^ 0xffffffff | d) - b))",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 4,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 33.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 75.0,
                            "mul": 0.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (-1 - ((~(0xffffffff - b) | d) - b))",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 5,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 33.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 75.0,
                            "mul": 0.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~b & d",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 83.33333333333334,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 100.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 425,
            "gt": {
                "expr": "((((a*d)^(a-d))*((d*(d^d))^((d+(a*d))*a))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 50.0,
                        "bitwise": 30.0
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "(((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | (((a & ~ d) + (a & ~ d)) - (a ^ d))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & (((a & ~ d) + (a & ~ d)) - (a ^ d)))) & ((((d & ((d | d) - (d & d))) * (d | ((d | d) - (d & d))) + (d & ~ ((d | d) - (d & d))) * (~ d & ((d | d) - (d & d)))) | ((((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a) * (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) | a) + (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & ~ a) * (~ ((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a))) - (((d & ((d | d) - (d & d))) * (d | ((d | d) - (d & d))) + (d & ~ ((d | d) - (d & d))) * (~ d & ((d | d) - (d & d)))) & ((((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a) * (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) | a) + (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & ~ a) * (~ ((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a))))) * (((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | (((a & ~ d) + (a & ~ d)) - (a ^ d))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & (((a & ~ d) + (a & ~ d)) - (a ^ d)))) | ((((d & ((d | d) - (d & d))) * (d | ((d | d) - (d & d))) + (d & ~ ((d | d) - (d & d))) * (~ d & ((d | d) - (d & d)))) | ((((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a) * (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) | a) + (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & ~ a) * (~ ((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a))) - (((d & ((d | d) - (d & d))) * (d | ((d | d) - (d & d))) + (d & ~ ((d | d) - (d & d))) * (~ d & ((d | d) - (d & d)))) & ((((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a) * (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) | a) + (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & ~ a) * (~ ((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a))))) + (((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | (((a & ~ d) + (a & ~ d)) - (a ^ d))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & (((a & ~ d) + (a & ~ d)) - (a ^ d)))) & ~ ((((d & ((d | d) - (d & d))) * (d | ((d | d) - (d & d))) + (d & ~ ((d | d) - (d & d))) * (~ d & ((d | d) - (d & d)))) | ((((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a) * (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) | a) + (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & ~ a) * (~ ((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a))) - (((d & ((d | d) - (d & d))) * (d | ((d | d) - (d & d))) + (d & ~ ((d | d) - (d & d))) * (~ d & ((d | d) - (d & d)))) & ((((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a) * (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) | a) + (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & ~ a) * (~ ((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a))))) * (~ ((((a & d) * (a | d) + (a & ~ d) * (~ a & d)) | (((a & ~ d) + (a & ~ d)) - (a ^ d))) - (((a & d) * (a | d) + (a & ~ d) * (~ a & d)) & (((a & ~ d) + (a & ~ d)) - (a ^ d)))) & ((((d & ((d | d) - (d & d))) * (d | ((d | d) - (d & d))) + (d & ~ ((d | d) - (d & d))) * (~ d & ((d | d) - (d & d)))) | ((((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a) * (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) | a) + (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & ~ a) * (~ ((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a))) - (((d & ((d | d) - (d & d))) * (d | ((d | d) - (d & d))) + (d & ~ ((d | d) - (d & d))) * (~ d & ((d | d) - (d & d)))) & ((((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a) * (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) | a) + (((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & ~ a) * (~ ((d ^ ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + ((d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))) + (d & ((a & d) * (a | d) + (a & ~ d) * (~ a & d))))) & a)))))",
                "attributes": {
                    "numOps": 1425,
                    "nestedExprLevel": 669,
                    "numDAGs": 50,
                    "opsPercentages": {
                        "arithmetic": 16.912280701754387,
                        "mul": 16.982456140350877,
                        "bitwise": 66.10526315789474
                    },
                    "percentageDAGsCancel": 26.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~(((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 + ((~a & d) * (~d & a) + (a & d) * (a | d) ^ d)) & a) * (((~a & d) * (~d & a) + (a & d) * (a | d) ^ d) + ((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 & ~a) + (((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 + ((~a & d) * (~d & a) + (a & d) * (a | d) ^ d) & a) * (((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 + ((~a & d) * (~d & a) + (a & d) * (a | d) ^ d) | a) & ((a & d) * (a | d) + (~a & d) * (~d & a) ^ (a ^ d) + ~((~d & a) * 2))) * (((a & d) * (a | d) + (~a & d) * (~d & a) ^ (~d & a) * 2 - (a ^ d)) & ~((~(((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 + ((~a & d) * (~d & a) + (a & d) * (a | d) ^ d)) & a) * (((~a & d) * (~d & a) + (a & d) * (a | d) ^ d) + ((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 & ~a) + (((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 + ((~a & d) * (~d & a) + (a & d) * (a | d) ^ d) & a) * (((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 + ((~a & d) * (~d & a) + (a & d) * (a | d) ^ d) | a))) + (((a & d) * (a | d) + (~a & d) * (~d & a) ^ (~d & a) * 2 - (a ^ d)) & (~(((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 + ((~a & d) * (~d & a) + (a & d) * (a | d) ^ d)) & a) * (((~a & d) * (~d & a) + (a & d) * (a | d) ^ d) + ((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 & ~a) + (((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 + ((~a & d) * (~d & a) + (a & d) * (a | d) ^ d) & a) * (((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 + ((~a & d) * (~d & a) + (a & d) * (a | d) ^ d) | a)) * ((~(((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 + ((~a & d) * (~d & a) + (a & d) * (a | d) ^ d)) & a) * (((~a & d) * (~d & a) + (a & d) * (a | d) ^ d) + ((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 & ~a) + (((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 + ((~a & d) * (~d & a) + (a & d) * (a | d) ^ d) & a) * (((~a & d) * (~d & a) + (a & d) * (a | d) & d) * 2 + ((~a & d) * (~d & a) + (a & d) * (a | d) ^ d) | a) | (a & d) * (a | d) + (~a & d) * (~d & a) ^ (~d & a) * 2 - (a ^ d))",
                    "attributes": {
                        "numOps": 457,
                        "nestedExprLevel": 137,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 67.9298245614035,
                        "opsPercentages": {
                            "arithmetic": 13.347921225382933,
                            "mul": 22.319474835886215,
                            "bitwise": 64.33260393873084
                        },
                        "percentageDAGsCancel": 2.631578947368421
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~a & ((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2) * (~((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2 & a) + (((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2 | a) * (((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2 & a) & ((~d & a) * 2 - (a ^ d) | (a | d) * (a & d) + (~a & d) * (~d & a)) - ((~d & a) * 2 - (a ^ d) & (a | d) * (a & d) + (~a & d) * (~d & a))) * (~((~d & a) * 2 - (a ^ d) | (a | d) * (a & d) + (~a & d) * (~d & a)) - ((~d & a) * 2 - (a ^ d) & (a | d) * (a & d) + (~a & d) * (~d & a)) & (~a & ((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2) * (~((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2 & a) + (((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2 | a) * (((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2 & a)) + (((~d & a) * 2 - (a ^ d) | (a | d) * (a & d) + (~a & d) * (~d & a)) - ((~d & a) * 2 - (a ^ d) & (a | d) * (a & d) + (~a & d) * (~d & a)) | (~a & ((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2) * (~((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2 & a) + (((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2 | a) * (((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2 & a)) * (((~d & a) * 2 - (a ^ d) | (a | d) * (a & d) + (~a & d) * (~d & a)) - ((~d & a) * 2 - (a ^ d) & (a | d) * (a & d) + (~a & d) * (~d & a)) & (~a & ((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2) * (~((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2 & a) + (((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2 | a) * (((a | d) * (a & d) + (~a & d) * (~d & a) ^ d) + ((a | d) * (a & d) + (~a & d) * (~d & a) & d) * 2 & a))",
                    "attributes": {
                        "numOps": 521,
                        "nestedExprLevel": 149,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 63.43859649122807,
                        "opsPercentages": {
                            "arithmetic": 14.011516314779271,
                            "mul": 21.8809980806142,
                            "bitwise": 64.10748560460652
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(~d & a) * 2 - (d ^ a) ^ (~a & d) * (~d & a) + (d | a) * (d & a) & (~((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2 & a) * (~a & ((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2) + (((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2 | a) * (((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2 & a)) * (~(~((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2 & a) * (~a & ((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2) + (((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2 | a) * (((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2 & a) & (~d & a) * 2 - (d ^ a) ^ (~a & d) * (~d & a) + (d | a) * (d & a)) + ((~((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2 & a) * (~a & ((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2) + (((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2 | a) * (((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2 & a) | (~d & a) * 2 - (d ^ a) ^ (~a & d) * (~d & a) + (d | a) * (d & a)) * ((~((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2 & a) * (~a & ((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2) + (((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2 | a) * (((~a & d) * (~d & a) + (d | a) * (d & a) ^ d) + ((~a & d) * (~d & a) + (d | a) * (d & a) & d) * 2 & a) & (~d & a) * 2 - (d ^ a) ^ (~a & d) * (~d & a) + (d | a) * (d & a))",
                    "attributes": {
                        "numOps": 457,
                        "nestedExprLevel": 129,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 67.9298245614035,
                        "opsPercentages": {
                            "arithmetic": 13.347921225382933,
                            "mul": 22.319474835886215,
                            "bitwise": 64.33260393873084
                        },
                        "percentageDAGsCancel": 2.380952380952381
                    }
                },
                "clang_default": {
                    "expr": "(((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) & ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) & ((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) & a) * ((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) | a) + ((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) & (a ^ 0xffffffff)) * (((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) ^ 0xffffffff) & a)) * (((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) & ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) | ((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) & a) * ((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) | a) + ((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) & (a ^ 0xffffffff)) * (((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) ^ 0xffffffff) & a)) + (((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) & ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) & (((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) & a) * ((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) | a) + ((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) & (a ^ 0xffffffff)) * (((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) ^ 0xffffffff) & a) ^ 0xffffffff)) * ((((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) | ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) - ((a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d) & ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) ^ 0xffffffff) & ((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) & a) * ((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) | a) + ((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) & (a ^ 0xffffffff)) * (((d ^ (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) + (d & (a & d) * (a | d) + (a & (d ^ 0xffffffff)) * ((a ^ 0xffffffff) & d)) ^ 0xffffffff) & a))",
                    "attributes": {
                        "numOps": 697,
                        "nestedExprLevel": 288,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 51.08771929824562,
                        "opsPercentages": {
                            "arithmetic": 16.212338593974174,
                            "mul": 17.50358680057389,
                            "bitwise": 66.28407460545193
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((a & d) * (a | d) + (~d & a) * (~a & d) | ((~d & a) + (~d & a)) - (a ^ d)) - ((a & d) * (a | d) + (~d & a) * (~a & d) & ((~d & a) + (~d & a)) - (a ^ d)) & (((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) & a) * (((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) | a) + (((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) & ~a) * (~(((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d)) & a)) * (((a & d) * (a | d) + (~d & a) * (~a & d) | ((~d & a) + (~d & a)) - (a ^ d)) - ((a & d) * (a | d) + (~d & a) * (~a & d) & ((~d & a) + (~d & a)) - (a ^ d)) | (((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) & a) * (((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) | a) + (((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) & ~a) * (~(((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d)) & a)) + (((a & d) * (a | d) + (~d & a) * (~a & d) | ((~d & a) + (~d & a)) - (a ^ d)) - ((a & d) * (a | d) + (~d & a) * (~a & d) & ((~d & a) + (~d & a)) - (a ^ d)) & ~((((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) & a) * (((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) | a) + (((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) & ~a) * (~(((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d)) & a))) * (~(((a & d) * (a | d) + (~d & a) * (~a & d) | ((~d & a) + (~d & a)) - (a ^ d)) - ((a & d) * (a | d) + (~d & a) * (~a & d) & ((~d & a) + (~d & a)) - (a ^ d))) & (((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) & a) * (((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) | a) + (((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) & ~a) * (~(((a & d) * (a | d) + (~d & a) * (~a & d) ^ d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d) + ((a & d) * (a | d) + (~d & a) * (~a & d) & d)) & a))",
                    "attributes": {
                        "numOps": 697,
                        "nestedExprLevel": 211,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 51.08771929824562,
                        "opsPercentages": {
                            "arithmetic": 16.212338593974174,
                            "mul": 17.50358680057389,
                            "bitwise": 66.28407460545193
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "gcc_O3": {
                    "expr": "((~(~d & a) * 2 + (a ^ d) ^ (a & d) * (a | d) + (~a & d) * (~d & a)) & (~(d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2 & a) * (~a & (d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2) + ((d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2 & a) * ((d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2 | a)) * (~(~(d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2 & a) * (~a & (d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2) + ((d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2 & a) * ((d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2 | a) & (~d & a) * 2 - (a ^ d) ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((~d & a) * 2 - (a ^ d) ^ (a & d) * (a | d) + (~a & d) * (~d & a) & (~(d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2 & a) * (~a & (d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2) + ((d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2 & a) * ((d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2 | a)) * ((~d & a) * 2 - (a ^ d) ^ (a & d) * (a | d) + (~a & d) * (~d & a) | (~(d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2 & a) * (~a & (d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2) + ((d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2 & a) * ((d ^ (a & d) * (a | d) + (~a & d) * (~d & a)) + ((a & d) * (a | d) + (~a & d) * (~d & a) & d) * 2 | a))",
                    "attributes": {
                        "numOps": 457,
                        "nestedExprLevel": 130,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 67.9298245614035,
                        "opsPercentages": {
                            "arithmetic": 13.347921225382933,
                            "mul": 22.319474835886215,
                            "bitwise": 64.33260393873084
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                }
            }
        },
        {
            "num": 426,
            "gt": {
                "expr": "((~((c+(~(c-c)))*((c|(e&e))|(~c)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 22.22222222222222,
                        "mul": 11.11111111111111,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "- ((((c - ~ ((c - c) - 1)) - 1) & (((((c + ((~ e | e) - ~ e)) + 1) + ((- c - 1) | (- ((~ e | e) - ~ e) - 1))) & ~ (- c - 1)) + (- c - 1))) * (((c - ~ ((c - c) - 1)) - 1) | (((((c + ((~ e | e) - ~ e)) + 1) + ((- c - 1) | (- ((~ e | e) - ~ e) - 1))) & ~ (- c - 1)) + (- c - 1))) + (((c - ~ ((c - c) - 1)) - 1) & ~ (((((c + ((~ e | e) - ~ e)) + 1) + ((- c - 1) | (- ((~ e | e) - ~ e) - 1))) & ~ (- c - 1)) + (- c - 1))) * (~ ((c - ~ ((c - c) - 1)) - 1) & (((((c + ((~ e | e) - ~ e)) + 1) + ((- c - 1) | (- ((~ e | e) - ~ e) - 1))) & ~ (- c - 1)) + (- c - 1)))) - 1",
                "attributes": {
                    "numOps": 123,
                    "nestedExprLevel": 59,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 60.97560975609756,
                        "mul": 1.6260162601626018,
                        "bitwise": 37.39837398373984
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((~c + (~(c & e) + e + c + 1 & c) & -c) * (c - 1 & (c & e) - (e + c + 1) & c) + (c - 1 & ~c + (~(c & e) + e + c + 1 & c)) * (~c + (~(c & e) + e + c + 1 & c) | c - 1))",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 11,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 48.78048780487805,
                            "mul": 4.878048780487805,
                            "bitwise": 46.34146341463415
                        },
                        "percentageDAGsCancel": 18.181818181818183
                    }
                },
                "msvc_O1": {
                    "expr": "~((~c - 1 & (((c - (c & e)) + e & c) - c) - 1) * (~(((c - (c & e)) + e & c) - c) - 1 & c - 1)) - ((((c - (c & e)) + e & c) - c) - 1 | c - 1) * ((((c - (c & e)) + e & c) - c) - 1 & c - 1)",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 19,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 69.10569105691057,
                        "opsPercentages": {
                            "arithmetic": 55.26315789473685,
                            "mul": 5.263157894736842,
                            "bitwise": 39.473684210526315
                        },
                        "percentageDAGsCancel": 15.789473684210526
                    }
                },
                "clang_O3": {
                    "expr": "~((~c + (~e | ~c) + c + e + 1 & c & -c) * (c - (~e | ~c) + c + e + 1 & c & c - 1) + (~c + (~e | ~c) + c + e + 1 & c | c - 1) * (~c + (~e | ~c) + c + e + 1 & c & c - 1))",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 7,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 61.78861788617886,
                        "opsPercentages": {
                            "arithmetic": 44.680851063829785,
                            "mul": 4.25531914893617,
                            "bitwise": 51.06382978723404
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((c - 1 & (c + ((e ^ 0xffffffff | e) - (e ^ 0xffffffff)) + 1 + (0xffffffff - c | 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff))) & (0xffffffff - c ^ 0xffffffff)) + (-1 - c)) * (c - 1 | (c + ((e ^ 0xffffffff | e) - (e ^ 0xffffffff)) + 1 + (0xffffffff - c | 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff))) & (0xffffffff - c ^ 0xffffffff)) + (-1 - c)) + (c - 1 & ((c + ((e ^ 0xffffffff | e) - (e ^ 0xffffffff)) + 1 + (0xffffffff - c | 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff))) & (0xffffffff - c ^ 0xffffffff)) + (-1 - c) ^ 0xffffffff)) * ((c - 1 ^ 0xffffffff) & (c + ((e ^ 0xffffffff | e) - (e ^ 0xffffffff)) + 1 + (0xffffffff - c | 0xffffffff - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff))) & (0xffffffff - c ^ 0xffffffff)) + (-1 - c)))",
                    "attributes": {
                        "numOps": 95,
                        "nestedExprLevel": 35,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 22.76422764227642,
                        "opsPercentages": {
                            "arithmetic": 53.68421052631579,
                            "mul": 2.1052631578947367,
                            "bitwise": 44.21052631578947
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((c - 1 & (((c - ~e) + (0xffffffff - c | 0xffffffff - (-1 - ~e)) & ~(0xffffffff - c)) - 1) - c) * (c - 1 | (((c - ~e) + (0xffffffff - c | 0xffffffff - (-1 - ~e)) & ~(0xffffffff - c)) - 1) - c) + (c - 1 & ~((((c - ~e) + (0xffffffff - c | 0xffffffff - (-1 - ~e)) & ~(0xffffffff - c)) - 1) - c)) * (~(c - 1) & (((c - ~e) + (0xffffffff - c | 0xffffffff - (-1 - ~e)) & ~(0xffffffff - c)) - 1) - c))",
                    "attributes": {
                        "numOps": 71,
                        "nestedExprLevel": 23,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 42.27642276422765,
                        "opsPercentages": {
                            "arithmetic": 60.56338028169014,
                            "mul": 2.8169014084507045,
                            "bitwise": 36.61971830985916
                        },
                        "percentageDAGsCancel": 13.043478260869565
                    }
                },
                "gcc_O3": {
                    "expr": "~(((e & c) - c + 1 + e & c - 1 & c) * (-c & (~(e & c) + c + 1 + e & c) + ~c) + (c - 1 & (~(e & c) + c + 1 + e & c) + ~c) * (c - 1 | (~(e & c) + c + 1 + e & c) + ~c))",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 10,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 48.78048780487805,
                            "mul": 4.878048780487805,
                            "bitwise": 46.34146341463415
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 427,
            "gt": {
                "expr": "(((((c+d)+c)&a)^((c-d)*(c*c))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 28.57142857142857,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((~ ((((((c ^ ~ d) + ((c | d) + (c | d))) + 1) | c) << 1) - ((((c ^ ~ d) + ((c | d) + (c | d))) + 1) ^ c)) | a) + ((((((c ^ ~ d) + ((c | d) + (c | d))) + 1) | c) << 1) - ((((c ^ ~ d) + ((c | d) + (c | d))) + 1) ^ c))) + 1) | ((((c & ~ d) - (~ c & d)) & ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) * (((c & ~ d) - (~ c & d)) | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + (((c & ~ d) - (~ c & d)) & ~ ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) * (~ ((c & ~ d) - (~ c & d)) & ((c & c) * (c | c) + (c & ~ c) * (~ c & c))))) - ((((~ ((((((c ^ ~ d) + ((c | d) + (c | d))) + 1) | c) << 1) - ((((c ^ ~ d) + ((c | d) + (c | d))) + 1) ^ c)) | a) + ((((((c ^ ~ d) + ((c | d) + (c | d))) + 1) | c) << 1) - ((((c ^ ~ d) + ((c | d) + (c | d))) + 1) ^ c))) + 1) & ((((c & ~ d) - (~ c & d)) & ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) * (((c & ~ d) - (~ c & d)) | ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) + (((c & ~ d) - (~ c & d)) & ~ ((c & c) * (c | c) + (c & ~ c) * (~ c & c))) * (~ ((c & ~ d) - (~ c & d)) & ((c & c) * (c | c) + (c & ~ c) * (~ c & c)))))",
                "attributes": {
                    "numOps": 213,
                    "nestedExprLevel": 107,
                    "numDAGs": 37,
                    "opsPercentages": {
                        "arithmetic": 23.943661971830984,
                        "mul": 9.389671361502346,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 21.62162162162162
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c * c & ~c + d) * ((~d & c) - (~c & d) & ~(c * c)) + ((~d & c) - (~c & d) & c * c) * (c * c | (~d & c) - (~c & d)) ^ (((c | d) * 2 + ~(d ^ c) + 1 ^ c) + ~(((c | d) * 2 + ~(d ^ c) + 1 | c) * 2) | a) + (((c | d) * 2 + ~(d ^ c) + 1 | c) * 2 - ((c | d) * 2 + ~(d ^ c) + 1 ^ c)) + 1",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 18,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 69.01408450704226,
                        "opsPercentages": {
                            "arithmetic": 25.757575757575758,
                            "mul": 18.181818181818183,
                            "bitwise": 56.060606060606055
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~d ^ c) + (c | d) * 2 * 2 + 2 | c * 2 + 1 + ((~((~d ^ c) + (c | d) * 2 * 2 + 2 | c * 2 - (~d ^ c) + (c | d) * 2 + 1 ^ c) | a) - (~d ^ c) + (c | d) * 2 + 1 ^ c) | (c * c & (~d & c) - (~c & d)) * ((~d & c) - (~c & d) | c * c) + (~c * c & (~d & c) - (~c & d)) * (~(~d & c) - (~c & d) & c * c)) - ((~d ^ c) + (c | d) * 2 * 2 + 2 | c * 2 + 1 + ((~((~d ^ c) + (c | d) * 2 * 2 + 2 | c * 2 - (~d ^ c) + (c | d) * 2 + 1 ^ c) | a) - (~d ^ c) + (c | d) * 2 + 1 ^ c) & (c * c & (~d & c) - (~c & d)) * ((~d & c) - (~c & d) | c * c) + (~c * c & (~d & c) - (~c & d)) * (~(~d & c) - (~c & d) & c * c))",
                    "attributes": {
                        "numOps": 145,
                        "nestedExprLevel": 33,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 31.92488262910798,
                        "opsPercentages": {
                            "arithmetic": 24.137931034482758,
                            "mul": 19.310344827586206,
                            "bitwise": 56.55172413793104
                        },
                        "percentageDAGsCancel": 2.4390243902439024
                    }
                },
                "clang_O3": {
                    "expr": "(~(~d & c) - (~c & d) & c) * (~c & (~d & c) - (~c & d)) + ((~d & c) - (~c & d) | c) * ((~d & c) - (~c & d) & c) ^ ((~d ^ c) + (d | c) * 2 + 1 | c) * 2 - ((~d ^ c) + (d | c) * 2 + 1 ^ c) + (~((~d ^ c) + (d | c) * 2 + 1 | c) * 2 - ((~d ^ c) + (d | c) * 2 + 1 ^ c) | a) + 1",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 18,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 69.01408450704226,
                        "opsPercentages": {
                            "arithmetic": 25.757575757575758,
                            "mul": 12.121212121212121,
                            "bitwise": 62.121212121212125
                        },
                        "percentageDAGsCancel": 3.3333333333333335
                    }
                },
                "clang_default": {
                    "expr": "((((c ^ d ^ 0xffffffff) + (c | d) + (c | d) + 1 | c) * 2 - ((c ^ d ^ 0xffffffff) + (c | d) + (c | d) + 1 ^ c) ^ 0xffffffff | a) + (((c ^ d ^ 0xffffffff) + (c | d) + (c | d) + 1 | c) * 2 - ((c ^ d ^ 0xffffffff) + (c | d) + (c | d) + 1 ^ c)) + 1 | ((c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d) & c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) * ((c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d) | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) + ((c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d) & (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) ^ 0xffffffff)) * (((c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d) ^ 0xffffffff) & c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c))) - ((((c ^ d ^ 0xffffffff) + (c | d) + (c | d) + 1 | c) * 2 - ((c ^ d ^ 0xffffffff) + (c | d) + (c | d) + 1 ^ c) ^ 0xffffffff | a) + (((c ^ d ^ 0xffffffff) + (c | d) + (c | d) + 1 | c) * 2 - ((c ^ d ^ 0xffffffff) + (c | d) + (c | d) + 1 ^ c)) + 1 & ((c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d) & c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) * ((c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d) | c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)) + ((c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d) & (c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c) ^ 0xffffffff)) * (((c & (d ^ 0xffffffff)) - ((c ^ 0xffffffff) & d) ^ 0xffffffff) & c * c + (c & (c ^ 0xffffffff)) * ((c ^ 0xffffffff) & c)))",
                    "attributes": {
                        "numOps": 197,
                        "nestedExprLevel": 68,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 7.511737089201878,
                        "opsPercentages": {
                            "arithmetic": 25.888324873096447,
                            "mul": 12.18274111675127,
                            "bitwise": 61.92893401015228
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_default": {
                    "expr": "((~(((~d ^ c) + 1 + (c | d) + (c | d) | c) * 2 - ((~d ^ c) + 1 + (c | d) + (c | d) ^ c)) | a) + 1 + (((~d ^ c) + 1 + (c | d) + (c | d) | c) * 2 - ((~d ^ c) + 1 + (c | d) + (c | d) ^ c)) | ((~d & c) - (~c & d) & c * c) * ((~d & c) - (~c & d) | c * c) + ((~d & c) - (~c & d) & ~(c * c)) * (~((~d & c) - (~c & d)) & c * c)) - ((~(((~d ^ c) + 1 + (c | d) + (c | d) | c) * 2 - ((~d ^ c) + 1 + (c | d) + (c | d) ^ c)) | a) + 1 + (((~d ^ c) + 1 + (c | d) + (c | d) | c) * 2 - ((~d ^ c) + 1 + (c | d) + (c | d) ^ c)) & ((~d & c) - (~c & d) & c * c) * ((~d & c) - (~c & d) | c * c) + ((~d & c) - (~c & d) & ~(c * c)) * (~((~d & c) - (~c & d)) & c * c))",
                    "attributes": {
                        "numOps": 149,
                        "nestedExprLevel": 43,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 30.046948356807512,
                        "opsPercentages": {
                            "arithmetic": 28.859060402684566,
                            "mul": 10.738255033557047,
                            "bitwise": 60.40268456375839
                        },
                        "percentageDAGsCancel": 9.67741935483871
                    }
                },
                "gcc_O3": {
                    "expr": "(~c * c & (~d & c) - (~c & d)) * (~c + d & c * c) + ((~d & c) - (~c & d) | c * c) * ((~d & c) - (~c & d) & c * c) ^ (~(~(d ^ c) + 1 + (d | c) * 2 | c) * 2 + ~(d ^ c) + 1 + (d | c) * 2 ^ c | a) + 1 + ((~(d ^ c) + 1 + (d | c) * 2 | c) * 2 - ~(d ^ c) + 1 + (d | c) * 2 ^ c)",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 15,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 69.01408450704226,
                        "opsPercentages": {
                            "arithmetic": 25.757575757575758,
                            "mul": 18.181818181818183,
                            "bitwise": 56.060606060606055
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 428,
            "gt": {
                "expr": "(((~b)&(~((b|c)*c))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 20.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(- b - 1) - ((- b - 1) & (((((b + c) + 1) + ((- b - 1) | (- c - 1))) & c) * ((((b + c) + 1) + ((- b - 1) | (- c - 1))) | c) + ((((b + c) + 1) + ((- b - 1) | (- c - 1))) & ~ c) * (~ (((b + c) + 1) + ((- b - 1) | (- c - 1))) & c)))",
                "attributes": {
                    "numOps": 47,
                    "nestedExprLevel": 23,
                    "numDAGs": 19,
                    "opsPercentages": {
                        "arithmetic": 72.3404255319149,
                        "mul": 4.25531914893617,
                        "bitwise": 23.404255319148938
                    },
                    "percentageDAGsCancel": 15.789473684210526
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((b & c) - (c + b + 1) & c) * (c + b + 1 + ~(b & c) & ~c) + (~(b & c) + c + b + 1 & c) * (~(b & c) + c + b + 1 | c) | b)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 8,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 38.297872340425535,
                        "opsPercentages": {
                            "arithmetic": 44.827586206896555,
                            "mul": 6.896551724137931,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 15.789473684210526
                    }
                },
                "msvc_O1": {
                    "expr": "~((c + 1 + (~b | ~c) + b & ~c) * (~c + 1 + (~b | ~c) + b & c) + (c + 1 + (~b | ~c) + b | c) * (c + 1 + (~b | ~c) + b & c) & ~b) - b",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 7,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 21.27659574468085,
                        "opsPercentages": {
                            "arithmetic": 37.83783783783784,
                            "mul": 5.405405405405405,
                            "bitwise": 56.75675675675676
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "clang_O3": {
                    "expr": "~((~(~c | ~b) + b + c + 1 & c) * (~c & (~c | ~b) + b + c + 1) + ((~c | ~b) + b + c + 1 | c) * ((~c | ~b) + b + c + 1 & c)) & ~b",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 7,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 23.404255319148938,
                        "opsPercentages": {
                            "arithmetic": 36.11111111111111,
                            "mul": 5.555555555555555,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "clang_default": {
                    "expr": "(-1 - b) - (0xffffffff - b & (b + c + 1 + (0xffffffff - b | 0xffffffff - c) & c) * (b + c + 1 + (0xffffffff - b | 0xffffffff - c) | c) + (b + c + 1 + (0xffffffff - b | 0xffffffff - c) & (c ^ 0xffffffff) ) * ((b + c + 1 + (0xffffffff - b | 0xffffffff - c) ^ 0xffffffff) & c))",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 9,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 19.148936170212767,
                        "opsPercentages": {
                            "arithmetic": 65.78947368421053,
                            "mul": 5.263157894736842,
                            "bitwise": 28.947368421052634
                        },
                        "percentageDAGsCancel": 15.789473684210526
                    }
                },
                "msvc_default": {
                    "expr": "(-1 - b) - (0xffffffff - b & (b + c + 1 + (0xffffffff - b | 0xffffffff - c) & c) * (b + c + 1 + (0xffffffff - b | 0xffffffff - c) | c) + (b + c + 1 + (0xffffffff - b | 0xffffffff - c) & ~c) * (~(b + c + 1 + (0xffffffff - b | 0xffffffff - c)) & c))",
                    "attributes": {
                        "numOps": 38,
                        "nestedExprLevel": 8,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 19.148936170212767,
                        "opsPercentages": {
                            "arithmetic": 65.78947368421053,
                            "mul": 5.263157894736842,
                            "bitwise": 28.947368421052634
                        },
                        "percentageDAGsCancel": 15.789473684210526
                    }
                },
                "gcc_O3": {
                    "expr": "~((~c & ~(b & c) + b + 1 + c) * ((b & c) - b + 1 + c & c) + (~(b & c) + b + 1 + c | c) * (~(b & c) + b + 1 + c & c) | b)",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 38.297872340425535,
                        "opsPercentages": {
                            "arithmetic": 44.827586206896555,
                            "mul": 6.896551724137931,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                }
            }
        },
        {
            "num": 429,
            "gt": {
                "expr": "((((b+(~(-b)))^((~e)^b))*b))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 28.57142857142857,
                        "mul": 14.285714285714285,
                        "bitwise": 57.14285714285714
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((b ^ ~ (b - 1)) + ((b | (b - 1)) << 1)) + 1) | (((- e - 1) | b) - ((- e - 1) & b))) - ((((b ^ ~ (b - 1)) + ((b | (b - 1)) << 1)) + 1) & (((- e - 1) | b) - ((- e - 1) & b)))) & b) * ((((((b ^ ~ (b - 1)) + ((b | (b - 1)) << 1)) + 1) | (((- e - 1) | b) - ((- e - 1) & b))) - ((((b ^ ~ (b - 1)) + ((b | (b - 1)) << 1)) + 1) & (((- e - 1) | b) - ((- e - 1) & b)))) | b) + ((((((b ^ ~ (b - 1)) + ((b | (b - 1)) << 1)) + 1) | (((- e - 1) | b) - ((- e - 1) & b))) - ((((b ^ ~ (b - 1)) + ((b | (b - 1)) << 1)) + 1) & (((- e - 1) | b) - ((- e - 1) & b)))) & ~ b) * (~ (((((b ^ ~ (b - 1)) + ((b | (b - 1)) << 1)) + 1) | (((- e - 1) | b) - ((- e - 1) & b))) - ((((b ^ ~ (b - 1)) + ((b | (b - 1)) << 1)) + 1) & (((- e - 1) | b) - ((- e - 1) & b)))) & b)",
                "attributes": {
                    "numOps": 141,
                    "nestedExprLevel": 82,
                    "numDAGs": 24,
                    "opsPercentages": {
                        "arithmetic": 54.60992907801418,
                        "mul": 1.4184397163120568,
                        "bitwise": 43.97163120567376
                    },
                    "percentageDAGsCancel": 8.333333333333332
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((b - 1 | b) * 2 + (-b ^ b) + 1 ^ e ^ b) & b) * ((e ^ b ^ ((b - 1 | b) * -2 - (-b ^ b)) - 2) & ~b) + ((((b - 1 | b) * -2 - (-b ^ b)) - 2 ^ e ^ b) & b) * (((b - 1 | b) * -2 - (-b ^ b)) - 2 ^ e ^ b | b)",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 15,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 42.5531914893617,
                            "mul": 12.76595744680851,
                            "bitwise": 44.680851063829785
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~b & ((~e | b) - (~e & b) | (-b ^ b) + (b * 2 - 2 | b * 2) + 1) - ((~e | b) - (~e & b) & (-b ^ b) + (b * 2 - 2 | b * 2) + 1)) * (~((~e | b) - (~e & b) | (-b ^ b) + (b * 2 - 2 | b * 2) + 1) - ((~e | b) - (~e & b) & (-b ^ b) + (b * 2 - 2 | b * 2) + 1) & b) + (((~e | b) - (~e & b) | (-b ^ b) + (b * 2 - 2 | b * 2) + 1) - ((~e | b) - (~e & b) & (-b ^ b) + (b * 2 - 2 | b * 2) + 1) | b) * (((~e | b) - (~e & b) | (-b ^ b) + (b * 2 - 2 | b * 2) + 1) - ((~e | b) - (~e & b) & (-b ^ b) + (b * 2 - 2 | b * 2) + 1) & b)",
                    "attributes": {
                        "numOps": 125,
                        "nestedExprLevel": 29,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 11.347517730496454,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 14.399999999999999,
                            "bitwise": 49.6
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~-((-b ^ b) + (b - 1 | b) * 2) - 2 ^ e ^ b & b) * (~b & -((-b ^ b) + (b - 1 | b) * 2) - 2 ^ e ^ b) + (-((-b ^ b) + (b - 1 | b) * 2) - 2 ^ e ^ b | b) * (-((-b ^ b) + (b - 1 | b) * 2) - 2 ^ e ^ b & b)",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 13,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 65.24822695035462,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 12.244897959183673,
                            "bitwise": 44.89795918367347
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_default": {
                    "expr": "(((b ^ b - 1 ^ 0xffffffff) + (b | b - 1) * 2 + 1 | (0xffffffff - e | b) - (0xffffffff - e & b)) - ((b ^ b - 1 ^ 0xffffffff) + (b | b - 1) * 2 + 1 & (0xffffffff - e | b) - (0xffffffff - e & b)) & b) * (((b ^ b - 1 ^ 0xffffffff) + (b | b - 1) * 2 + 1 | (0xffffffff - e | b) - (0xffffffff - e & b)) - ((b ^ b - 1 ^ 0xffffffff) + (b | b - 1) * 2 + 1 & (0xffffffff - e | b) - (0xffffffff - e & b)) | b) + (((b ^ b - 1 ^ 0xffffffff) + (b | b - 1) * 2 + 1 | (0xffffffff - e | b) - (0xffffffff - e & b)) - ((b ^ b - 1 ^ 0xffffffff) + (b | b - 1) * 2 + 1 & (0xffffffff - e | b) - (0xffffffff - e & b)) & (b ^ 0xffffffff)) * ((((b ^ b - 1 ^ 0xffffffff) + (b | b - 1) * 2 + 1 | (0xffffffff - e | b) - (0xffffffff - e & b)) - ((b ^ b - 1 ^ 0xffffffff) + (b | b - 1) * 2 + 1 & (0xffffffff - e | b) - (0xffffffff - e & b)) ^ 0xffffffff) & b)",
                    "attributes": {
                        "numOps": 125,
                        "nestedExprLevel": 30,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 11.347517730496454,
                        "opsPercentages": {
                            "arithmetic": 48.8,
                            "mul": 8.0,
                            "bitwise": 43.2
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "msvc_default": {
                    "expr": "(((~(b - 1) ^ b) + 1 + (b - 1 | b) * 2 | (0xffffffff - e | b) - (0xffffffff - e & b)) - ((~(b - 1) ^ b) + 1 + (b - 1 | b) * 2 & (0xffffffff - e | b) - (0xffffffff - e & b)) & b) * (((~(b - 1) ^ b) + 1 + (b - 1 | b) * 2 | (0xffffffff - e | b) - (0xffffffff - e & b)) - ((~(b - 1) ^ b) + 1 + (b - 1 | b) * 2 & (0xffffffff - e | b) - (0xffffffff - e & b)) | b) + (((~(b - 1) ^ b) + 1 + (b - 1 | b) * 2 | (0xffffffff - e | b) - (0xffffffff - e & b)) - ((~(b - 1) ^ b) + 1 + (b - 1 | b) * 2 & (0xffffffff - e | b) - (0xffffffff - e & b)) & ~b) * (~(((~(b - 1) ^ b) + 1 + (b - 1 | b) * 2 | (0xffffffff - e | b) - (0xffffffff - e & b)) - ((~(b - 1) ^ b) + 1 + (b - 1 | b) * 2 & (0xffffffff - e | b) - (0xffffffff - e & b))) & b)",
                    "attributes": {
                        "numOps": 125,
                        "nestedExprLevel": 38,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 11.347517730496454,
                        "opsPercentages": {
                            "arithmetic": 48.8,
                            "mul": 8.0,
                            "bitwise": 43.2
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((-b ^ b) + (b - 1 | b) * 2 + 1 ^ e ^ b) & b) * (~b & -(-b ^ b) + (b - 1 | b) * 2 - 2 ^ e ^ b) + (-(-b ^ b) + (b - 1 | b) * 2 - 2 ^ e ^ b & b) * (-(-b ^ b) + (b - 1 | b) * 2 - 2 ^ e ^ b | b)",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 10,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 42.5531914893617,
                            "mul": 12.76595744680851,
                            "bitwise": 44.680851063829785
                        },
                        "percentageDAGsCancel": 8.0
                    }
                }
            }
        },
        {
            "num": 430,
            "gt": {
                "expr": "((~((((d&b)^(c|c))-((c^b)*d))+((d-c)^c))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 10.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "- ((((((((((~ d | b) + d) + 1) - ((c & ~ c) + c)) - (((((~ d | b) + d) + 1) | ~ ((c & ~ c) + c)) + ((((~ d | b) + d) + 1) | ~ ((c & ~ c) + c)))) - 2) + ~ (((((c - b) - ((c | ~ b) + (c | ~ b))) - 2) & d) * ((((c - b) - ((c | ~ b) + (c | ~ b))) - 2) | d) + ((((c - b) - ((c | ~ b) + (c | ~ b))) - 2) & ~ d) * (~ (((c - b) - ((c | ~ b) + (c | ~ b))) - 2) & d))) + 1) | (((((d & ~ c) - (~ d & c)) - c) - ((((d & ~ c) - (~ d & c)) | ~ c) << 1)) - 2)) + (((((((((~ d | b) + d) + 1) - ((c & ~ c) + c)) - (((((~ d | b) + d) + 1) | ~ ((c & ~ c) + c)) + ((((~ d | b) + d) + 1) | ~ ((c & ~ c) + c)))) - 2) + ~ (((((c - b) - ((c | ~ b) + (c | ~ b))) - 2) & d) * ((((c - b) - ((c | ~ b) + (c | ~ b))) - 2) | d) + ((((c - b) - ((c | ~ b) + (c | ~ b))) - 2) & ~ d) * (~ (((c - b) - ((c | ~ b) + (c | ~ b))) - 2) & d))) + 1) & (((((d & ~ c) - (~ d & c)) - c) - ((((d & ~ c) - (~ d & c)) | ~ c) << 1)) - 2))) - 1",
                "attributes": {
                    "numOps": 183,
                    "nestedExprLevel": 98,
                    "numDAGs": 43,
                    "opsPercentages": {
                        "arithmetic": 42.07650273224044,
                        "mul": 2.185792349726776,
                        "bitwise": 55.73770491803278
                    },
                    "percentageDAGsCancel": 6.976744186046512
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((~c & d) - (~d & c)) + c * -2 + (~c | (~c & d) - (~d & c)) * -2 + ~(((~b | c) * 2 + ~c + b + 2 & d) * (((c - b) + (~b | c) * -2) - 2 & ~d) + (((c - b) + (~b | c) * -2) - 2 & d) * (((c - b) + (~b | c) * -2) - 2 | d)) + d + (~d | b) + (~c | d + (~d | b) + 1) * -2 + -2)",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 19,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 60.65573770491803,
                        "opsPercentages": {
                            "arithmetic": 43.05555555555556,
                            "mul": 12.5,
                            "bitwise": 44.44444444444444
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(((((~c & d) - (((~c & d) - (~d & c)) * 2 | ~c * 2)) - (~d & c)) - c) - 2 | ((~(((c - ((~b | c) * 2 + 2)) - b & d) * ((c - ((~b | c) * 2 + 2)) - b | d) + (~(c - ((~b | c) * 2 + 2)) - b & d) * (~d & (c - ((~b | c) * 2 + 2)) - b)) + (d + 1 + (~d | b) | ~c) * -2) - c) + (~d | b) + d) - (((((~c & d) - (((~c & d) - (~d & c)) * 2 | ~c * 2)) - (~d & c)) - c) - 2 & ((~(((c - ((~b | c) * 2 + 2)) - b & d) * ((c - ((~b | c) * 2 + 2)) - b | d) + (~(c - ((~b | c) * 2 + 2)) - b & d) * (~d & (c - ((~b | c) * 2 + 2)) - b)) + (d + 1 + (~d | b) | ~c) * -2) - c) + (~d | b) + d)",
                    "attributes": {
                        "numOps": 134,
                        "nestedExprLevel": 49,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 26.775956284153008,
                        "opsPercentages": {
                            "arithmetic": 38.059701492537314,
                            "mul": 13.432835820895523,
                            "bitwise": 48.507462686567166
                        },
                        "percentageDAGsCancel": 11.904761904761903
                    }
                },
                "clang_O3": {
                    "expr": "((1 - (c - b) + (~b | c) * -2 & d) * ((c - b) + (~b | c) * -2 - 2 & ~d) - ((d & ~c) - (~d & c) + d + (~d | b) + 1)) + ((c - b) + (~b | c) * -2 - 2 | d) * ((c - b) + (~b | c) * -2 - 2 & d) + ((~c | (d & ~c) - (~d & c)) + c + (d + (~d | b) + 1 | ~c)) * 2 + 3",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 17,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 64.48087431693989,
                        "opsPercentages": {
                            "arithmetic": 44.61538461538462,
                            "mul": 10.76923076923077,
                            "bitwise": 44.61538461538462
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((((((d ^ 0xffffffff | b) + d) - ((c & (c ^ 0xffffffff)) + c)) - (((d ^ 0xffffffff | b) + d + 1 | (c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + ((d ^ 0xffffffff | b) + d + 1 | (c & (c ^ 0xffffffff)) + c ^ 0xffffffff))) + ((((c - b) - ((c | b ^ 0xffffffff) + (c | b ^ 0xffffffff))) - 2 & d) * (((c - b) - ((c | b ^ 0xffffffff) + (c | b ^ 0xffffffff))) - 2 | d ) + (((c - b) - ((c | b ^ 0xffffffff) + (c | b ^ 0xffffffff))) - 2 & (d ^ 0xffffffff)) * ((((c - b) - ((c | b ^ 0xffffffff) + (c | b ^ 0xffffffff))) - 2 ^ 0xffffffff) & d) ^ 0xffffffff) | ((((d & (c ^ 0xffffffff)) - ((d ^ 0xffffffff) & c)) - c) + ((d & (c ^ 0xffffffff)) - ((d ^ 0xffffffff) & c) | c ^ 0xffffffff) * -2) - 2) + (((((d ^ 0xffffffff | b) + d) - ((c & (c ^ 0xffffffff)) + c)) - (((d ^ 0xffffffff | b) + d + 1 | (c & (c ^ 0xffffffff)) + c ^ 0xffffffff) + ((d ^ 0xffffffff | b) + d + 1 | (c & (c ^ 0xffffffff)) + c ^ 0xffffffff))) + ((((c - b) - ((c | b ^ 0xffffffff) + (c | b ^ 0xffffffff))) - 2 & d) * (((c - b) - ((c | b ^ 0xffffffff) + (c | b ^ 0xffffffff))) - 2 | d) + (((c - b) - ((c | b ^ 0xffffffff) + (c | b ^ 0xffffffff))) - 2 & (d ^ 0xffffffff)) * ((((c - b) - ((c | b ^ 0xffffffff) + (c | b ^ 0xffffffff))) - 2 ^ 0xffffffff) & d) ^ 0xffffffff) & ((((d & (c ^ 0xffffffff)) - ((d ^ 0xffffffff) & c)) - c) + ((d & (c ^ 0xffffffff)) - ((d ^ 0xffffffff) & c) | c ^ 0xffffffff) * -2) - 2))",
                    "attributes": {
                        "numOps": 179,
                        "nestedExprLevel": 77,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 2.185792349726776,
                        "opsPercentages": {
                            "arithmetic": 40.78212290502793,
                            "mul": 3.35195530726257,
                            "bitwise": 55.865921787709496
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((((((~d | b) + d) - c) - (((~d | b) + 1 + d | ~c) + ((~d | b) + 1 + d | ~c))) + ~((((c - b) - ((~b | c) + (~b | c))) - 2 & d) * (((c - b) - ((~b | c) + (~b | c))) - 2 | d) + (((c - b) - ((~b | c) + (~b | c))) - 2 & ~d) * (~(((c - b) - ((~b | c) + (~b | c))) - 2) & d)) | ((((~c & d) - (~d & c)) - c) + ((~c & d) - (~d & c) | ~c) * -2) - 2) + (((((~d | b) + d) - c) - (((~d | b) + 1 + d | ~c) + ((~d | b) + 1 + d | ~c))) + ~((((c - b) - ((~b | c) + (~b | c))) - 2 & d) * (((c - b) - ((~b | c) + (~b | c))) - 2 | d) + (((c - b) - ((~b | c) + (~b | c))) - 2 & ~d) * (~(((c - b) - ((~b | c) + (~b | c))) - 2) & d)) & ((((~c & d) - (~d & c)) - c) + ((~c & d) - (~d & c) | ~c) * -2) - 2))",
                    "attributes": {
                        "numOps": 161,
                        "nestedExprLevel": 64,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 12.021857923497267,
                        "opsPercentages": {
                            "arithmetic": 41.61490683229814,
                            "mul": 3.7267080745341614,
                            "bitwise": 54.6583850931677
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "gcc_O3": {
                    "expr": "~(((d + 1 + (~d | b) + c * -2 + (d + 1 + (~d | b) | ~c) * -2) - ((((c - b) + (~b | c) * -2) - 2 | d) * (((c - b) + (~b | c) * -2) - 2 & d) + ((~b | c) * 2 + 2 + b + ~c & d) * (~d & ((c - b) + (~b | c) * -2) - 2))) + -4 + (~c & d) - (~d & c) + (~c | (~c & d) - (~d & c)) * -2)",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 19,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 60.65573770491803,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 12.5,
                            "bitwise": 43.05555555555556
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 431,
            "gt": {
                "expr": "((((d-e)^d)|(d+((d&d)|e))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "((((((d + ~ e) + 1) | d) - (((d + ~ e) + 1) & d)) + ((d ^ ((((~ d | d) - ~ d) & ~ e) + e)) + ((d & ((((~ d | d) - ~ d) & ~ e) + e)) << 1))) + 1) + ((- ((((d + ~ e) + 1) | d) - (((d + ~ e) + 1) & d)) - 1) | (- ((d ^ ((((~ d | d) - ~ d) & ~ e) + e)) + ((d & ((((~ d | d) - ~ d) & ~ e) + e)) << 1)) - 1))",
                "attributes": {
                    "numOps": 62,
                    "nestedExprLevel": 37,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 43.54838709677419,
                        "mul": 0.0,
                        "bitwise": 56.451612903225815
                    },
                    "percentageDAGsCancel": 8.695652173913043
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~((e + (~e & d) & d) * 2 + (e + (~e & d) ^ d)) | (e - d) - 1 ^ d) + (e + (~e & d) & d) * 2 + (e + (~e & d) ^ d) + (d + ~e + 1 ^ d) + 1",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 9,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 48.38709677419355,
                        "opsPercentages": {
                            "arithmetic": 40.625,
                            "mul": 6.25,
                            "bitwise": 53.125
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "msvc_O1": {
                    "expr": "(~e * 2 & d * 2) + e * 2 & d * 2 + 1 + (((~e + 1 + d & d - ~e + 1 + d | d) - 1 | ~(~e * 2 & d * 2) + e * 2 & d * 2 - (~e & d) + e ^ d) - ~e + 1 + d & d) + ~e + 1 + d | d + (~e & d) + e ^ d",
                    "attributes": {
                        "numOps": 50,
                        "nestedExprLevel": 5,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 19.35483870967742,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 16.0,
                            "bitwise": 44.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((~e & d) + e ^ d) + ((~e & d) + e & d) * 2 | d - e ^ d",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 79.03225806451613,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 7.6923076923076925,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "clang_default": {
                    "expr": "((d + (e ^ 0xffffffff) + 1 | d) - (d + (e ^ 0xffffffff) + 1 & d)) + (d ^ ((d ^ 0xffffffff | d) - (d ^ 0xffffffff) & (e ^ 0xffffffff)) + e) + (d & ((d ^ 0xffffffff | d) - (d ^ 0xffffffff) & (e ^ 0xffffffff)) + e) * 2 + 1 + (0xffffffff - ((d + (e ^ 0xffffffff) + 1 | d) - (d + (e ^ 0xffffffff) + 1 & d)) | 0xffffffff - ((d ^ ((d ^ 0xffffffff | d) - (d ^ 0xffffffff) & (e ^ 0xffffffff)) + e) + (d & ((d ^ 0xffffffff | d) - (d ^ 0xffffffff) & (e ^ 0xffffffff)) + e) * 2))",
                    "attributes": {
                        "numOps": 60,
                        "nestedExprLevel": 22,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 3.225806451612903,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 3.3333333333333335,
                            "bitwise": 55.00000000000001
                        },
                        "percentageDAGsCancel": 13.636363636363635
                    }
                },
                "msvc_default": {
                    "expr": "((d + 1 + ~e | d) - (d + 1 + ~e & d)) + ((-~d - 1 & ~e) + e ^ d) + ((-~d - 1 & ~e) + e & d) * 2 + 1 + (0xffffffff - ((d + 1 + ~e | d) - (d + 1 + ~e & d)) | 0xffffffff - (((-~d - 1 & ~e) + e ^ d) + ((-~d - 1 & ~e) + e & d) * 2))",
                    "attributes": {
                        "numOps": 56,
                        "nestedExprLevel": 12,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 9.67741935483871,
                        "opsPercentages": {
                            "arithmetic": 51.78571428571429,
                            "mul": 3.571428571428571,
                            "bitwise": 44.642857142857146
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "gcc_O3": {
                    "expr": "((~e & d) + e ^ d) + ((~e & d) + e & d) * 2 + 1 + (~e + 1 + d ^ d) + ((e - d) - 1 ^ d | ~((~e & d) + e ^ d) + ((~e & d) + e & d) * 2)",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 8,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 48.38709677419355,
                        "opsPercentages": {
                            "arithmetic": 40.625,
                            "mul": 6.25,
                            "bitwise": 53.125
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                }
            }
        },
        {
            "num": 432,
            "gt": {
                "expr": "((-(c-(c&(b-c)))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 0.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ ((((c & ~ (((~ c | ((b & ~ c) - (~ b & c))) + c) + 1)) << 1) - (c ^ (((~ c | ((b & ~ c) - (~ b & c))) + c) + 1))) - 1)",
                "attributes": {
                    "numOps": 25,
                    "nestedExprLevel": 16,
                    "numDAGs": 15,
                    "opsPercentages": {
                        "arithmetic": 32.0,
                        "mul": 0.0,
                        "bitwise": 68.0
                    },
                    "percentageDAGsCancel": 6.666666666666667
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c + (~c | (~c & b) - (~b & c)) + 1 ^ c) + ~((-((~c | (~c & b) - (~b & c)) + c) - 2 & c) * 2) + 1",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 9,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 4.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((~c & b) - (~b & c) | ~c) + 1 + c ^ c) + (~((~c & b) - (~b & c) | ~c) + 1 + c & c) * -2",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 7,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 4.0,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 4.166666666666666,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "clang_O3": {
                    "expr": "~((-((~c & b) - (~b & c) | ~c) + c - 2 ^ c) + (0x7ffffffe - ((~c & b) - (~b & c) | ~c) + c & c) * 2)",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 8,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 4.0,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 4.166666666666666,
                            "bitwise": 62.5
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_default": {
                    "expr": "((c & ((c ^ 0xffffffff | (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + c + 1 ^ 0xffffffff)) * 2 - (c ^ (c ^ 0xffffffff | (b & (c ^ 0xffffffff)) - ((b ^ 0xffffffff) & c)) + c + 1 )) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 12,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 32.0,
                            "mul": 4.0,
                            "bitwise": 64.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~(((~((~c | (~c & b) - (~b & c)) + 1 + c) & c) * 2 - ((~c | (~c & b) - (~b & c)) + 1 + c ^ c)) - 1)",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 10,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 32.0,
                            "mul": 4.0,
                            "bitwise": 64.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "gcc_O3": {
                    "expr": "(((~c & b) - (~b & c) | ~c) + c + 1 ^ c) + (-((~c & b) - (~b & c) | ~c) + c - 2 & c) * -2",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 7,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 4.0,
                        "opsPercentages": {
                            "arithmetic": 37.5,
                            "mul": 4.166666666666666,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 433,
            "gt": {
                "expr": "((((~a)&((-(a|b))*e))|(-((~(a^a))&a))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 10.0,
                        "bitwise": 70.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((((~ (- a - 1) | ((~ ((((a + b) + 1) + ((- a - 1) | (- b - 1))) - 1) & e) * (~ ((((a + b) + 1) + ((- a - 1) | (- b - 1))) - 1) | e) + (~ ((((a + b) + 1) + ((- a - 1) | (- b - 1))) - 1) & ~ e) * (~ (~ ((((a + b) + 1) + ((- a - 1) | (- b - 1))) - 1)) & e))) + (- a - 1)) + 1) + (~ (((~ (((a & a) - (a | a)) - 1) | a) + (((a & a) - (a | a)) - 1)) + 1) + 1)) + 1) + ((- (((~ (- a - 1) | ((~ ((((a + b) + 1) + ((- a - 1) | (- b - 1))) - 1) & e) * (~ ((((a + b) + 1) + ((- a - 1) | (- b - 1))) - 1) | e) + (~ ((((a + b) + 1) + ((- a - 1) | (- b - 1))) - 1) & ~ e) * (~ (~ ((((a + b) + 1) + ((- a - 1) | (- b - 1))) - 1)) & e))) + (- a - 1)) + 1) - 1) | (- (~ (((~ (((a & a) - (a | a)) - 1) | a) + (((a & a) - (a | a)) - 1)) + 1) + 1) - 1))",
                "attributes": {
                    "numOps": 150,
                    "nestedExprLevel": 84,
                    "numDAGs": 41,
                    "opsPercentages": {
                        "arithmetic": 66.0,
                        "mul": 2.666666666666667,
                        "bitwise": 31.333333333333336
                    },
                    "percentageDAGsCancel": 21.951219512195124
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a - 1 | (a - ((b + a + ~(a & b) & e) * (((a & b) - (b + a + 1)) + 1 & ~e) + (((a & b) - (b + a + 1)) + 1 & e) * (((a & b) - (b + a + 1)) + 1 | e) | a)) - 1) + ((~a + ((b + a + ~(a & b) & e) * (((a & b) - (b + a + 1)) + 1 & ~e) + (((a & b) - (b + a + 1)) + 1 & e) * (((a & b) - (b + a + 1)) + 1 | e) | a)) - a) + 2",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 27,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 56.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 56.92307692307692,
                            "mul": 6.153846153846154,
                            "bitwise": 36.92307692307693
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "msvc_O1": {
                    "expr": "~a + 2 + (((a - ~((~b | ~a) + a + b | e) * ((~b | ~a) + a + b & e) + (~(~b | ~a) + a + b | e) * (~(~b | ~a) + a + b & e) | a) - 1 | a - 1) - a) + ~((~b | ~a) + a + b | e) * ((~b | ~a) + a + b & e) + (~(~b | ~a) + a + b | e) * (~(~b | ~a) + a + b & e) | a",
                    "attributes": {
                        "numOps": 71,
                        "nestedExprLevel": 13,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 52.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 35.2112676056338,
                            "mul": 5.633802816901409,
                            "bitwise": 59.154929577464785
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                },
                "clang_O3": {
                    "expr": "(~a & (~e & (b & a) - (b + a)) * (~(b & a) + b + a & e) + ((b & a) - (b + a) | e) * ((b & a) - (b + a) & e) - a) + (a - 1 | ~~a & (~e & (b & a) - (b + a)) * (~(b & a) + b + a & e) + ((b & a) - (b + a) | e) * ((b & a) - (b + a) & e)) + 1",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 17,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 65.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 42.30769230769231,
                            "mul": 7.6923076923076925,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 13.043478260869565
                    }
                },
                "clang_default": {
                    "expr": "((0xffffffff - a ^ 0xffffffff | ((a + b + (0xffffffff - a | 0xffffffff - b) ^ 0xffffffff) & e) * (a + b + (0xffffffff - a | 0xffffffff - b) ^ 0xffffffff | e) + ((a + b + (0xffffffff - a | 0xffffffff - b) ^ 0xffffffff) & (e ^ 0xffffffff)) * (a + b + (0xffffffff - a | 0xffffffff - b) & e)) - a) + (a ^ 0xffffffff) + 2 + (0xffffffff - ((0xffffffff - a ^ 0xffffffff | ((a + b + (0xffffffff - a | 0xffffffff - b) ^ 0xffffffff) & e) * (a + b + (0xffffffff - a | 0xffffffff - b) ^ 0xffffffff | e) + ((a + b + (0xffffffff - a | 0xffffffff - b) ^ 0xffffffff) & (e ^ 0xffffffff)) * (a + b + (0xffffffff - a | 0xffffffff - b) & e)) - a) | 0xffffffff - ((a ^ 0xffffffff) + 1))",
                    "attributes": {
                        "numOps": 79,
                        "nestedExprLevel": 23,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 47.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 55.69620253164557,
                            "mul": 5.063291139240507,
                            "bitwise": 39.24050632911392
                        },
                        "percentageDAGsCancel": 8.0
                    }
                },
                "msvc_default": {
                    "expr": "((~(0xffffffff - a) | (~(a + b + (0xffffffff - a | 0xffffffff - b)) & e) * (~(a + b + (0xffffffff - a | 0xffffffff - b)) | e) + (~(a + b + (0xffffffff - a | 0xffffffff - b)) & ~e) * (a + b + (0xffffffff - a | 0xffffffff - b) & e)) - a ) + ~a + 2 + (0xffffffff - ((~(0xffffffff - a) | (~(a + b + (0xffffffff - a | 0xffffffff - b)) & e) * (~(a + b + (0xffffffff - a | 0xffffffff - b)) | e) + (~(a + b + (0xffffffff - a | 0xffffffff - b)) & ~e) * (a + b + (0xffffffff - a | 0xffffffff - b) & e)) - a) | 0xffffffff - (~a + 1))",
                    "attributes": {
                        "numOps": 79,
                        "nestedExprLevel": 21,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 47.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 55.69620253164557,
                            "mul": 5.063291139240507,
                            "bitwise": 39.24050632911392
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(a + 1 + b + -1 + ~(a & b) & e) * (~e & ((a & b) - a + 1 + b) + 1) + (((a & b) - a + 1 + b) + 1 | e) * (((a & b) - a + 1 + b) + 1 & e) | a + a * -2 + 1 + (a - 1 | (a - (a + 1 + b + -1 + ~(a & b) & e) * (~e & ((a & b) - a + 1 + b) + 1) + (((a & b) - a + 1 + b) + 1 | e) * (((a & b) - a + 1 + b) + 1 & e) | a) - 1)",
                    "attributes": {
                        "numOps": 71,
                        "nestedExprLevel": 18,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 52.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 60.56338028169014,
                            "mul": 7.042253521126761,
                            "bitwise": 32.3943661971831
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                }
            }
        },
        {
            "num": 434,
            "gt": {
                "expr": "(((-(-(b*(-a))))|((b+a)^a)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 14.285714285714285,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ (~ (((b & (~ a + 1)) * (b | (~ a + 1)) + (b & ~ (~ a + 1)) * (~ b & (~ a + 1))) - 1)) + 1) & ~ ((((((b ^ ~ a) + ((b | a) + (b | a))) + 1) - a) - (((((b ^ ~ a) + ((b | a) + (b | a))) + 1) | ~ a) << 1)) - 2)) + ((((((b ^ ~ a) + ((b | a) + (b | a))) + 1) - a) - (((((b ^ ~ a) + ((b | a) + (b | a))) + 1) | ~ a) << 1)) - 2)",
                "attributes": {
                    "numOps": 64,
                    "nestedExprLevel": 36,
                    "numDAGs": 28,
                    "opsPercentages": {
                        "arithmetic": 40.625,
                        "mul": 3.125,
                        "bitwise": 56.25
                    },
                    "percentageDAGsCancel": 3.571428571428571
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((b | a) * 2 + ~(a ^ b)) - a) + (~a | (b | a) * 2 + ~(a ^ b) + 1) * -2 + -1 + ((-a & b) * (-a | b) + (a - 1 & b) * (-a & ~b) & (~a | (b | a) * 2 + ~(a ^ b) + 1) * 2 + (a ^ b) + (b | a) * -2 + a + 1)",
                    "attributes": {
                        "numOps": 50,
                        "nestedExprLevel": 12,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 21.875,
                        "opsPercentages": {
                            "arithmetic": 42.0,
                            "mul": 16.0,
                            "bitwise": 42.0
                        },
                        "percentageDAGsCancel": 3.125
                    }
                },
                "msvc_O1": {
                    "expr": "(a | b) * 2 + -1 + ((((~b & -a) * (~-a & b) + (-a | b) * (-a & b) & (((a | b) * 2 + ~a ^ b) * 2 + 2 | ~a * 2 - ~a ^ b) + (a | b) * -2 + a) - ((a | b) * 2 + ~a ^ b) * 2 + 2 | ~a * 2) - a) + ~a ^ b",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 11,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 18.75,
                        "opsPercentages": {
                            "arithmetic": 36.53846153846153,
                            "mul": 19.230769230769234,
                            "bitwise": 44.230769230769226
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(1 - ((~a ^ b) + (b | a) * 2 + 1 - a) + (~a | (~a ^ b) + (b | a) * 2 + 1) * -2 & (~b & -a) * (a - 1 & b) + (-a | b) * (-a & b)) + ((~a ^ b) + (b | a) * 2 + 1 - a) + (~a | (~a ^ b) + (b | a) * 2 + 1) * -2 + -2",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 12,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 17.1875,
                        "opsPercentages": {
                            "arithmetic": 43.39622641509434,
                            "mul": 15.09433962264151,
                            "bitwise": 41.509433962264154
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "clang_default": {
                    "expr": "((b & (a ^ 0xffffffff) + 1) * (b | (a ^ 0xffffffff) + 1) + (b & ((a ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((b ^ 0xffffffff) & (a ^ 0xffffffff) + 1) & (((((b ^ a ^ 0xffffffff) + (b | a) + (b | a)) - a) + ((b ^ a ^ 0xffffffff) + (b | a) + (b | a) + 1 | a ^ 0xffffffff) * -2) - 1 ^ 0xffffffff)) + (((b ^ a ^ 0xffffffff) + (b | a) + (b | a)) - a) + ((b ^ a ^ 0xffffffff) + (b | a) + (b | a) + 1 | a ^ 0xffffffff) * -2 + -1",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 21,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 4.6875,
                        "opsPercentages": {
                            "arithmetic": 40.98360655737705,
                            "mul": 6.557377049180328,
                            "bitwise": 52.459016393442624
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                },
                "msvc_default": {
                    "expr": "((~a + 1 & b) * (~a + 1 | b) + (~(~a + 1) & b) * (~b & ~a + 1) & ~(((((~a ^ b) + (b | a) + (b | a)) - a) + ((~a ^ b) + 1 + (b | a) + (b | a) | ~a) * -2) - 1)) + ((((~a ^ b) - 1) + (b | a) + (b | a)) - a) + ((~a ^ b) + 1 + (b | a) + (b | a) | ~a) * -2",
                    "attributes": {
                        "numOps": 60,
                        "nestedExprLevel": 19,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 6.25,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 6.666666666666667,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 9.375
                    }
                },
                "gcc_O3": {
                    "expr": "(((a - 1 & b) * (~b & -a) + (-a & b) * (-a | b) & ~a | (a | b) * 2 - (a ^ b) * 2 + a + 1 + (a ^ b) + (a | b) * -2) - 2) + ((a | b) * 2 - (a ^ b) - a) + ~a | (a | b) * 2 - (a ^ b) * -2",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 10,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 31.25,
                        "opsPercentages": {
                            "arithmetic": 40.909090909090914,
                            "mul": 18.181818181818183,
                            "bitwise": 40.909090909090914
                        },
                        "percentageDAGsCancel": 3.125
                    }
                }
            }
        },
        {
            "num": 435,
            "gt": {
                "expr": "(((~(b&e))|((c^c)*c)))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 20.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "(((- (((~ b | e) + b) + 1) - 1) + ((((c | c) - (c & c)) & c) * (((c | c) - (c & c)) | c) + (((c | c) - (c & c)) & ~ c) * (~ ((c | c) - (c & c)) & c))) + 1) + ((- (- (((~ b | e) + b) + 1) - 1) - 1) | (- ((((c | c) - (c & c)) & c) * (((c | c) - (c & c)) | c) + (((c | c) - (c & c)) & ~ c) * (~ ((c | c) - (c & c)) & c)) - 1))",
                "attributes": {
                    "numOps": 62,
                    "nestedExprLevel": 38,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 40.32258064516129,
                        "mul": 6.451612903225806,
                        "bitwise": 53.2258064516129
                    },
                    "percentageDAGsCancel": 42.30769230769231
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-2 - ((~b | e) + b)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 91.93548387096774,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(-2 - (~b | e)) - b",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 91.93548387096774,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-2 - ((~b | e) + b)",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 91.93548387096774,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((b ^ 0xffffffff | e) + b + 1)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 90.32258064516128,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((~b | e) + 1 + b)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 90.32258064516128,
                        "opsPercentages": {
                            "arithmetic": 66.66666666666666,
                            "mul": 0.0,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-2 - (b + (~b | e))",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 91.93548387096774,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 436,
            "gt": {
                "expr": "((((d|d)^((-d)+a))-(~((d+(~a))&(d^a)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "(((((((d + d) + 1) + ((- d - 1) | (- d - 1))) - (((~ (d - 1) | a) << 1) - (~ (d - 1) ^ a))) - (((((d + d) + 1) + ((- d - 1) | (- d - 1))) | ~ (((~ (d - 1) | a) << 1) - (~ (d - 1) ^ a))) << 1)) - 2) + ~ (- ((~ ((d | (- a - 1)) + (d & (- a - 1))) | ((d | a) - (d & a))) - ~ ((d | (- a - 1)) + (d & (- a - 1)))) - 1)) + 1",
                "attributes": {
                    "numOps": 64,
                    "nestedExprLevel": 35,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 60.9375,
                        "mul": 0.0,
                        "bitwise": 39.0625
                    },
                    "percentageDAGsCancel": 2.941176470588235
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(d + ~a & (d ^ a)) + ((d * 2 + ~d) - ((-d | a) * 2 - (-d ^ a))) + ((-d ^ a) + ~((-d | a) * 2) | d * 2 + 1 + ~d) * -2",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 8,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 53.125,
                        "opsPercentages": {
                            "arithmetic": 46.666666666666664,
                            "mul": 16.666666666666664,
                            "bitwise": 36.666666666666664
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "msvc_O1": {
                    "expr": "d + -1 + (((((a | d) - (a & d) | ~((~a | d) + (~a & d))) - (~(~(d - 1) | a * 2 - ~(d - 1) ^ a) * 2 | d * 2)) + ~(d - 1) | a * -2) - ~((~a | d) + (~a & d))) + ~(d - 1) ^ a",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 14,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 32.8125,
                        "opsPercentages": {
                            "arithmetic": 37.2093023255814,
                            "mul": 9.30232558139535,
                            "bitwise": 53.48837209302325
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((~(-d | a) * 2 - (-d ^ a) | d) * 2) + (((~a + d & (d ^ a)) + d) - (-d | a) * 2 - (-d ^ a))",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 64.0625,
                        "opsPercentages": {
                            "arithmetic": 43.47826086956522,
                            "mul": 13.043478260869565,
                            "bitwise": 43.47826086956522
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "clang_default": {
                    "expr": "((d * 2 + (0xffffffff - d | 0xffffffff - d)) - ((d - 1 ^ 0xffffffff | a) * 2 - (d - 1 ^ 0xffffffff ^ a))) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | (d - 1 ^ 0xffffffff | a) * 2 - (d - 1 ^ 0xffffffff ^ a) ^ 0xffffffff) * -2 + (0xffffffff - (((d | 0xffffffff - a) + (d & 0xffffffff - a) ^ 0xffffffff | (d | a) - (d & a)) - ((d | 0xffffffff - a) + (d & 0xffffffff - a) ^ 0xffffffff)) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 14,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 17.1875,
                        "opsPercentages": {
                            "arithmetic": 49.056603773584904,
                            "mul": 9.433962264150944,
                            "bitwise": 41.509433962264154
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((d * 2 + (0xffffffff - d | 0xffffffff - d)) - ((~(d - 1) | a) * 2 - (~(d - 1) ^ a))) + (d * 2 + 1 + (0xffffffff - d | 0xffffffff - d) | ~((~(d - 1) | a) * 2 - (~(d - 1) ^ a))) * -2 + ~(0xffffffff - ((~((0xffffffff - a | d) + (0xffffffff - a & d)) | (d | a) - (d & a)) - ~((0xffffffff - a | d) + (0xffffffff - a & d))))",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 18,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 17.1875,
                        "opsPercentages": {
                            "arithmetic": 49.056603773584904,
                            "mul": 9.433962264150944,
                            "bitwise": 41.509433962264154
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "gcc_O3": {
                    "expr": "(d - ((-d | a) * 2 - -d ^ a)) + (~(-d | a) * 2 + -d ^ a | d) * -2 + -1 + (~a + d & (d ^ a))",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 6,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 60.9375,
                        "opsPercentages": {
                            "arithmetic": 52.0,
                            "mul": 12.0,
                            "bitwise": 36.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 437,
            "gt": {
                "expr": "(((a&(b^b))&(a&b)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 0.0,
                        "bitwise": 100.0
                    },
                    "percentageDAGsCancel": 100.0
                }
            },
            "mba": {
                "expr": "(~ (((~ a | (((b - b) - ((b | ~ b) << 1)) - 2)) + a) + 1) | (((~ a | b) + a) + 1)) - ~ (((~ a | (((b - b) - ((b | ~ b) << 1)) - 2)) + a) + 1)",
                "attributes": {
                    "numOps": 28,
                    "nestedExprLevel": 17,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 46.42857142857143,
                        "mul": 0.0,
                        "bitwise": 53.57142857142857
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a ^ 0xffffffff | (b | b ^ 0xffffffff) * -2 - 2) + a + 1 ^ 0xffffffff | (a ^ 0xffffffff | b) + a + 1) - ((a ^ 0xffffffff | (b | b ^ 0xffffffff) * -2 - 2) + a + 1 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 7,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 7.142857142857142,
                        "opsPercentages": {
                            "arithmetic": 42.30769230769231,
                            "mul": 7.6923076923076925,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "msvc_default": {
                    "expr": "(~(~a + 1 + a) | (~a | b) + 1 + a) - ~(~a + 1 + a)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 33.33333333333333
                    }
                },
                "gcc_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 438,
            "gt": {
                "expr": "(((c|a)^(((-c)*a)+(c*d))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 33.33333333333333,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((c & ~ a) + a) - ((((~ (c - 1) & a) * (~ (c - 1) | a) + (~ (c - 1) & ~ a) * (~ (~ (c - 1)) & a)) | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) + (((~ (c - 1) & a) * (~ (c - 1) | a) + (~ (c - 1) & ~ a) * (~ (~ (c - 1)) & a)) & ((c & d) * (c | d) + (c & ~ d) * (~ c & d))))) - ((((c & ~ a) + a) | ~ ((((~ (c - 1) & a) * (~ (c - 1) | a) + (~ (c - 1) & ~ a) * (~ (~ (c - 1)) & a)) | ((c & d) * (c | d) + (c & ~ d) * (~ c & d))) + (((~ (c - 1) & a) * (~ (c - 1) | a) + (~ (c - 1) & ~ a) * (~ (~ (c - 1)) & a)) & ((c & d) * (c | d) + (c & ~ d) * (~ c & d))))) << 1)) - 2",
                "attributes": {
                    "numOps": 122,
                    "nestedExprLevel": 49,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 25.40983606557377,
                        "mul": 13.114754098360656,
                        "bitwise": 61.47540983606557
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((~a & c) + a) - ((~c & d) * (~d & c) + (c & d) * (c | d) + (-c & a) * (-c | a) + (c - 1 & a) * (-c & ~a))) + (~((~c & d) * (~d & c) + (c & d) * (c | d) + (-c & a) * (-c | a) + (c - 1 & a) * (-c & ~a)) | (~a & c) + a) * -2 + -2",
                    "attributes": {
                        "numOps": 58,
                        "nestedExprLevel": 15,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 52.459016393442624,
                        "opsPercentages": {
                            "arithmetic": 36.206896551724135,
                            "mul": 15.517241379310345,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "a + -2 + (((~a & c - (~((~(c - 1) & ~a) * (c - 1 & a) + (~(c - 1) | a) * (~(c - 1) & a) & (c & d) * (c | d) + (~d & c) * (~c & d) + (~(c - 1) & ~a) * (c - 1 & a) + (~(c - 1) | a) * (~(c - 1) & a) | (c & d) * (c | d) + (~d & c) * (~c & d)) * 2 | (a + ~a & c) * 2)) - (~(c - 1) & ~a) * (c - 1 & a) + (~(c - 1) | a) * (~(c - 1) & a) & (c & d) * (c | d) + (~d & c) * (~c & d)) - (~(c - 1) & ~a) * (c - 1 & a) + (~(c - 1) | a) * (~(c - 1) & a) | (c & d) * (c | d) + (~d & c) * (~c & d))",
                    "attributes": {
                        "numOps": 116,
                        "nestedExprLevel": 32,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 4.918032786885246,
                        "opsPercentages": {
                            "arithmetic": 27.586206896551722,
                            "mul": 15.517241379310345,
                            "bitwise": 56.896551724137936
                        },
                        "percentageDAGsCancel": 7.5
                    }
                },
                "clang_O3": {
                    "expr": "((~a & c) + a - (~c & d) * (~d & c) + (c - 1 & a) * (-c & ~a) + (-c | a) * (-c & a) + (d | c) * (d & c)) + (~(~c & d) * (~d & c) + (c - 1 & a) * (-c & ~a) + (-c | a) * (-c & a) + (d | c) * (d & c) | (~a & c) + a) * -2 + -2",
                    "attributes": {
                        "numOps": 58,
                        "nestedExprLevel": 12,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 52.459016393442624,
                        "opsPercentages": {
                            "arithmetic": 36.206896551724135,
                            "mul": 15.517241379310345,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_default": {
                    "expr": "(((c & (a ^ 0xffffffff)) + a) - ((((c - 1 ^ 0xffffffff) & a) * (c - 1 ^ 0xffffffff | a) + ((c - 1 ^ 0xffffffff) & (a ^ 0xffffffff)) * (c - 1 & a) | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) + (((c - 1 ^ 0xffffffff) & a) * (c - 1 ^ 0xffffffff | a) + ((c - 1 ^ 0xffffffff) & (a ^ 0xffffffff)) * (c - 1 & a) & (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)))) + ((c & (a ^ 0xffffffff)) + a | (((c - 1 ^ 0xffffffff) & a) * (c - 1 ^ 0xffffffff | a) + ((c - 1 ^ 0xffffffff) & (a ^ 0xffffffff)) * (c - 1 & a) | (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) + (((c - 1 ^ 0xffffffff) & a) * (c - 1 ^ 0xffffffff | a) + ((c - 1 ^ 0xffffffff) & (a ^ 0xffffffff)) * (c - 1 & a) & (c & d) * (c | d) + (c & (d ^ 0xffffffff)) * ((c ^ 0xffffffff) & d)) ^ 0xffffffff) * -2 + -2",
                    "attributes": {
                        "numOps": 116,
                        "nestedExprLevel": 40,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 4.918032786885246,
                        "opsPercentages": {
                            "arithmetic": 28.448275862068968,
                            "mul": 14.655172413793101,
                            "bitwise": 56.896551724137936
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((~a & c) + a) - (((~(c - 1) & a) * (~(c - 1) | a) + (~(c - 1) & ~a) * (c - 1 & a) | (c & d) * (c | d) + (~d & c) * (~c & d)) + ((~(c - 1) & a) * (~(c - 1) | a) + (~(c - 1) & ~a) * (c - 1 & a) & (c & d) * (c | d) + (~d & c) * (~c & d)))) + ((~a & c) + a | ~(((~(c - 1) & a) * (~(c - 1) | a) + (~(c - 1) & ~a) * (c - 1 & a) | (c & d) * (c | d) + (~d & c) * (~c & d) ) + ((~(c - 1) & a) * (~(c - 1) | a) + (~(c - 1) & ~a) * (c - 1 & a) & (c & d) * (c | d) + (~d & c) * (~c & d)))) * -2 + -2",
                    "attributes": {
                        "numOps": 116,
                        "nestedExprLevel": 34,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 4.918032786885246,
                        "opsPercentages": {
                            "arithmetic": 28.448275862068968,
                            "mul": 14.655172413793101,
                            "bitwise": 56.896551724137936
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "gcc_O3": {
                    "expr": "((~a & c) + a - (~d & c) * (~c & d) + (d | c) * (c & d) + (c - 1 & a) * (~a & -c) + (-c & a) * (-c | a)) + (~(~d & c) * (~c & d) + (d | c) * (c & d) + (c - 1 & a) * (~a & -c) + (-c & a) * (-c | a) | (~a & c) + a) * -2 + -2",
                    "attributes": {
                        "numOps": 58,
                        "nestedExprLevel": 12,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 52.459016393442624,
                        "opsPercentages": {
                            "arithmetic": 36.206896551724135,
                            "mul": 15.517241379310345,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 439,
            "gt": {
                "expr": "(((a&b)-(~(e^e))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(((~ a | b) - ~ a) + ~ ((e & e) + ~ (e | e))) + 1",
                "attributes": {
                    "numOps": 11,
                    "nestedExprLevel": 5,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 36.36363636363637,
                        "mul": 0.0,
                        "bitwise": 63.63636363636363
                    },
                    "percentageDAGsCancel": 30.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(b & a) + 1",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~a | b) + 2 + a",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 63.63636363636363,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(a & b) + 1",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a ^ 0xffffffff | b) - (a ^ 0xffffffff)) + (e + (e ^ 0xffffffff) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 5,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 18.181818181818183,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 0.0,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_default": {
                    "expr": "((~a | b) - ~a) + 1 + ~(e + ~e)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 18.181818181818183,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 0.0,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "gcc_O3": {
                    "expr": "(b & a) + 1",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 50.0
                    }
                }
            }
        },
        {
            "num": 440,
            "gt": {
                "expr": "(((-((b^(b+(e-e)))&(b&b)))-(~b)))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 75.0
                }
            },
            "mba": {
                "expr": "((~ (((~ ((b | (((b | ((e ^ e) - ((~ e & e) + (~ e & e)))) + (b | ((e ^ e) - ((~ e & e) + (~ e & e))))) - (b ^ ((e ^ e) - ((~ e & e) + (~ e & e)))))) - (b & (((b | ((e ^ e) - ((~ e & e) + (~ e & e)))) + (b | ((e ^ e) - ((~ e & e) + (~ e & e))))) - (b ^ ((e ^ e) - ((~ e & e) + (~ e & e))))))) | ((~ b | b) - ~ b)) + ((b | (((b | ((e ^ e) - ((~ e & e) + (~ e & e)))) + (b | ((e ^ e) - ((~ e & e) + (~ e & e))))) - (b ^ ((e ^ e) - ((~ e & e) + (~ e & e)))))) - (b & (((b | ((e ^ e) - ((~ e & e) + (~ e & e)))) + (b | ((e ^ e) - ((~ e & e) + (~ e & e))))) - (b ^ ((e ^ e) - ((~ e & e) + (~ e & e)))))))) + 1) + 1) & ~ (- b - 1)) - (~ (~ (((~ ((b | (((b | ((e ^ e) - ((~ e & e) + (~ e & e)))) + (b | ((e ^ e) - ((~ e & e) + (~ e & e))))) - (b ^ ((e ^ e) - ((~ e & e) + (~ e & e)))))) - (b & (((b | ((e ^ e) - ((~ e & e) + (~ e & e)))) + (b | ((e ^ e) - ((~ e & e) + (~ e & e))))) - (b ^ ((e ^ e) - ((~ e & e) + (~ e & e))))))) | ((~ b | b) - ~ b)) + ((b | (((b | ((e ^ e) - ((~ e & e) + (~ e & e)))) + (b | ((e ^ e) - ((~ e & e) + (~ e & e))))) - (b ^ ((e ^ e) - ((~ e & e) + (~ e & e)))))) - (b & (((b | ((e ^ e) - ((~ e & e) + (~ e & e)))) + (b | ((e ^ e) - ((~ e & e) + (~ e & e))))) - (b ^ ((e ^ e) - ((~ e & e) + (~ e & e)))))))) + 1) + 1) & (- b - 1))",
                "attributes": {
                    "numOps": 249,
                    "nestedExprLevel": 138,
                    "numDAGs": 28,
                    "opsPercentages": {
                        "arithmetic": 32.53012048192771,
                        "mul": 0.0,
                        "bitwise": 67.46987951807229
                    },
                    "percentageDAGsCancel": 53.57142857142857
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "b + 1",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 99.59839357429718,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "b + 1",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 99.59839357429718,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "b + 1",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 99.59839357429718,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((b | ((b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e))) + (b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) - (b ^ -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) - (b & ((b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e))) + (b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) - (b ^ -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) ^ 0xffffffff | (b ^ 0xffffffff | b) - (b ^ 0xffffffff)) + ((b | ((b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e))) + (b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) - (b ^ -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) - (b & ((b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e))) + (b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) - (b ^ -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e))))) + 1 ^ 0xffffffff) + 1 & (0xffffffff - b ^ 0xffffffff)) - (((((b | ((b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e))) + (b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) - (b ^ -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) - (b & ((b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e))) + (b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) - (b ^ -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) ^ 0xffffffff | (b ^ 0xffffffff | b) - (b ^ 0xffffffff)) + ((b | ((b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e))) + (b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) - (b ^ -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) - (b & ((b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e))) + (b | -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e)))) - (b ^ -(((e ^ 0xffffffff) & e) + ((e ^ 0xffffffff) & e))))) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) & 0xffffffff - b)",
                    "attributes": {
                        "numOps": 223,
                        "nestedExprLevel": 126,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 10.441767068273093,
                        "opsPercentages": {
                            "arithmetic": 35.42600896860987,
                            "mul": 0.0,
                            "bitwise": 64.57399103139014
                        },
                        "percentageDAGsCancel": 46.15384615384615
                    }
                },
                "msvc_default": {
                    "expr": "-(-1 - b)",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 98.79518072289156,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "b + 1",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 99.59839357429718,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 441,
            "gt": {
                "expr": "((~(~(-((b-(b&b))+(a|b))))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 42.857142857142854,
                        "mul": 0.0,
                        "bitwise": 57.14285714285714
                    },
                    "percentageDAGsCancel": 28.57142857142857
                }
            },
            "mba": {
                "expr": "- (((((b & ~ (((~ b | b) + b) + 1)) - (~ b & (((~ b | b) + b) + 1))) - ~ ((a & ~ b) + b)) - 1) - 1) - 1",
                "attributes": {
                    "numOps": 22,
                    "nestedExprLevel": 13,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 31.25
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(b + (~b & a))",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 3,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "msvc_O1": {
                    "expr": "-((~b & a) + b)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 3,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-((~b & a) + b)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 3,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((((b & ((b ^ 0xffffffff | b) + b + 1 ^ 0xffffffff)) - ((b ^ 0xffffffff) & (b ^ 0xffffffff | b) + b + 1)) - ((a & (b ^ 0xffffffff)) + b ^ 0xffffffff)) + -2)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 11,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 18.75
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (-2 - ~((~b & a) + b))",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 63.63636363636363,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 0.0,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-((~b & a) + b)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 3,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 81.81818181818183,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 442,
            "gt": {
                "expr": "((((b^(a-(-b)))*a)*((-(-a))-(a-a))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 22.22222222222222,
                        "bitwise": 11.11111111111111
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "((((((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) & a) * ((((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) | a) + ((((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) & ~ a) * (~ (((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) & a)) & (((~ (~ (a - 1) - 1) & ~ ((a ^ a) - ((~ a & a) << 1))) << 1) - (~ (~ (a - 1) - 1) ^ ((a ^ a) - ((~ a & a) << 1))))) * ((((((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) & a) * ((((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) | a) + ((((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) & ~ a) * (~ (((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) & a)) | (((~ (~ (a - 1) - 1) & ~ ((a ^ a) - ((~ a & a) << 1))) << 1) - (~ (~ (a - 1) - 1) ^ ((a ^ a) - ((~ a & a) << 1))))) + ((((((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) & a) * ((((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) | a) + ((((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) & ~ a) * (~ (((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) & a)) & ~ (((~ (~ (a - 1) - 1) & ~ ((a ^ a) - ((~ a & a) << 1))) << 1) - (~ (~ (a - 1) - 1) ^ ((a ^ a) - ((~ a & a) << 1))))) * (~ (((((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) & a) * ((((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) | a) + ((((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) & ~ a) * (~ (((b - ((a + ~ (~ b + 1)) + 1)) - ((b | ~ ((a + ~ (~ b + 1)) + 1)) + (b | ~ ((a + ~ (~ b + 1)) + 1)))) - 2) & a)) & (((~ (~ (a - 1) - 1) & ~ ((a ^ a) - ((~ a & a) << 1))) << 1) - (~ (~ (a - 1) - 1) ^ ((a ^ a) - ((~ a & a) << 1)))))",
                "attributes": {
                    "numOps": 505,
                    "nestedExprLevel": 258,
                    "numDAGs": 42,
                    "opsPercentages": {
                        "arithmetic": 47.72277227722772,
                        "mul": 1.9801980198019802,
                        "bitwise": 50.2970297029703
                    },
                    "percentageDAGsCancel": 21.428571428571427
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a & ~(((-((b - 1) + a) - 2 | b) * 2 + ~b + a + b + 2 & a) * (((-((b - 1) + a) - 2 | b) * -2 - a) - 2 & ~a) + (((-((b - 1) + a) - 2 | b) * -2 - a) - 2 & a) * (((-((b - 1) + a) - 2 | b) * -2 - a) - 2 | a))) * ((((-((b - 1) + a) - 2 | b) * -2 - a) - 2 & a) * (((-((b - 1) + a) - 2 | b) * -2 - a) - 2 | a) + ((-((b - 1) + a) - 2 | b) * 2 + ~b + a + b + 2 & a) * (((-((b - 1) + a) - 2 | b) * -2 - a) - 2 & ~a) & a + ~(a * 2)) + ((((-((b - 1) + a) - 2 | b) * -2 - a) - 2 & a) * (((-((b - 1) + a) - 2 | b) * -2 - a) - 2 | a) + ((-((b - 1) + a) - 2 | b) * 2 + ~b + a + b + 2 & a) * (((-((b - 1) + a) - 2 | b) * -2 - a) - 2 & ~a) & a) * (a | (((-((b - 1) + a) - 2 | b) * -2 - a) - 2 & a) * (((-((b - 1) + a) - 2 | b) * -2 - a) - 2 | a) + ((-((b - 1) + a) - 2 | b) * 2 + ~b + a + b + 2 & a) * (((-((b - 1) + a) - 2 | b) * -2 - a) - 2 & ~a) )",
                    "attributes": {
                        "numOps": 195,
                        "nestedExprLevel": 68,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 61.386138613861384,
                        "opsPercentages": {
                            "arithmetic": 62.56410256410256,
                            "mul": 13.846153846153847,
                            "bitwise": 23.589743589743588
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "msvc_O1": {
                    "expr": "~((~b + -1 + ((~b + (~(b + a) | b) * -2) - a) & a) * (~a & b + -1 + ((~b + (~(b + a) | b) * -2) - a)) + (b + -1 + ((~b + (~(b + a) | b) * -2) - a) | a) * (b + -1 + ((~b + (~(b + a) | b) * -2) - a) & a) | ~a) * ((~b + -1 + ((~b + (~(b + a) | b) * -2) - a) & a) * (~a & b + -1 + ((~b + (~(b + a) | b) * -2) - a)) + (b + -1 + ((~b + (~(b + a) | b) * -2) - a) | a) * (b + -1 + ((~b + (~(b + a) | b) * -2) - a) & a) & ~a) + (a | (~b + -1 + ((~b + (~(b + a) | b) * -2) - a) & a) * (~a & b + -1 + ((~b + (~(b + a) | b) * -2) - a)) + (b + -1 + ((~b + (~(b + a) | b) * -2) - a) | a) * (b + -1 + ((~b + (~(b + a) | b) * -2) - a) & a)) * (a & (~b + -1 + ((~b + (~(b + a) | b) * -2) - a) & a) * (~a & b + -1 + ((~b + (~(b + a) | b) * -2) - a)) + (b + -1 + ((~b + (~(b + a) | b) * -2) - a) | a) * (b + -1 + ((~b + (~(b + a) | b) * -2) - a) & a))",
                    "attributes": {
                        "numOps": 222,
                        "nestedExprLevel": 70,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 56.03960396039604,
                        "opsPercentages": {
                            "arithmetic": 52.702702702702695,
                            "mul": 11.711711711711711,
                            "bitwise": 35.585585585585584
                        },
                        "percentageDAGsCancel": 10.344827586206897
                    }
                },
                "clang_O3": {
                    "expr": "(~(a + b * 2 + 1 & a) * (-(a + b * 2) - 2 & ~a) + (-(a + b * 2) - 2 | a) * (-(a + b * 2) - 2 & a) & a) * (~a & (a + b * 2 + 1 & a) * (-(a + b * 2) - 2 & ~a) + (-(a + b * 2) - 2 | a) * (-(a + b * 2) - 2 & a)) + ((a + b * 2 + 1 & a) * (-(a + b * 2) - 2 & ~a) + (-(a + b * 2) - 2 | a) * (-(a + b * 2) - 2 & a) | a) * ((a + b * 2 + 1 & a) * (-(a + b * 2) - 2 & ~a) + (-(a + b * 2) - 2 | a) * (-(a + b * 2) - 2 & a) & a)",
                    "attributes": {
                        "numOps": 101,
                        "nestedExprLevel": 18,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 80.0,
                        "opsPercentages": {
                            "arithmetic": 48.51485148514851,
                            "mul": 25.742574257425744,
                            "bitwise": 25.742574257425744
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "clang_default": {
                    "expr": "((((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 & a) * (((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) )) - 2 | a) + (((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) * ((((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) & a) & (((a - 1 ^ 0xffffffff) - 1 ^ 0xffffffff) & (((a ^ 0xffffffff) & a) * -2 ^ 0xffffffff)) * 2 - ((a - 1 ^ 0xffffffff) - 1 ^ 0xffffffff ^ ((a ^ 0xffffffff) & a) * -2)) * ((((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 & a) * (((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) )) - 2 | a) + (((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) * ((((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) & a) | (((a - 1 ^ 0xffffffff) - 1 ^ 0xffffffff) & (((a ^ 0xffffffff) & a) * -2 ^ 0xffffffff)) * 2 - ((a - 1 ^ 0xffffffff) - 1 ^ 0xffffffff ^ ((a ^ 0xffffffff) & a) * -2)) + ((((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 & a) * (((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) )) - 2 | a) + (((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) * ((((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) & a) & ((((a - 1 ^ 0xffffffff) - 1 ^ 0xffffffff) & (((a ^ 0xffffffff) & a) * -2 ^ 0xffffffff)) * 2 - ((a - 1 ^ 0xffffffff) - 1 ^ 0xffffffff ^ ((a ^ 0xffffffff) & a) * -2) ^ 0xffffffff)) * (((((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 & a) * (((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff ))) - 2 | a) + (((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) * ((((b - (a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1)) - ((b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff) + (b | a + ((b ^ 0xffffffff) + 1 ^ 0xffffffff) + 1 ^ 0xffffffff))) - 2 ^ 0xffffffff) & a) ^ 0xffffffff) & (((a - 1 ^ 0xffffffff) - 1 ^ 0xffffffff) & (((a ^ 0xffffffff) & a) * -2 ^ 0xffffffff)) * 2 - ((a - 1 ^ 0xffffffff) - 1 ^ 0xffffffff ^ ((a ^ 0xffffffff) & a) * -2))",
                    "attributes": {
                        "numOps": 497,
                        "nestedExprLevel": 200,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 1.5841584158415842,
                        "opsPercentages": {
                            "arithmetic": 48.49094567404427,
                            "mul": 4.426559356136821,
                            "bitwise": 47.08249496981891
                        },
                        "percentageDAGsCancel": 14.634146341463413
                    }
                },
                "msvc_default": {
                    "expr": "((((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2 & a) * (((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2 | a) + (((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2 & ~a) * (~(((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2) & a) & ~(~(a - 1) - 1) * 2 - ~(~(a - 1) - 1)) * ((((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2 & a) * (((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2 | a) + (((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2 & ~a) * (~(((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2) & a) | ~(~(a - 1) - 1) * 2 - ~(~(a - 1) - 1)) + ((((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2 & a) * (((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2 | a) + (((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2 & ~a) * (~(((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2) & a) & ~(~(~(a - 1) - 1) * 2 - ~(~(a - 1) - 1))) * (~((((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2 & a) * (((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2 | a) + (((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2 & ~a) * (~(((b - (a + 1 + ~(~b + 1))) - ((~(a + 1 + ~(~b + 1)) | b) + (~(a + 1 + ~(~b + 1)) | b))) - 2) & a)) & ~(~(a - 1) - 1) * 2 - ~(~(a - 1) - 1))",
                    "attributes": {
                        "numOps": 453,
                        "nestedExprLevel": 164,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 10.297029702970297,
                        "opsPercentages": {
                            "arithmetic": 51.434878587196465,
                            "mul": 3.090507726269316,
                            "bitwise": 45.47461368653421
                        },
                        "percentageDAGsCancel": 8.571428571428571
                    }
                },
                "gcc_O3": {
                    "expr": "((~b - a | b * 2 + 2 + ~b + a + b & a) * (~a & (~b - a | b * -2 - a) - 2) + ((~b - a | b * -2 - a) - 2 | a) * ((~b - a | b * -2 - a) - 2 & a) & a) * ((~b - a | b * 2 + 2 + ~b + a + b & a) * (~a & (~b - a | b * -2 - a) - 2) + ((~b - a | b * -2 - a) - 2 | a) * ((~b - a | b * -2 - a) - 2 & a) | a) + (~(a * 2) + a & (~b - a | b * 2 + 2 + ~b + a + b & a) * (~a & (~b - a | b * -2 - a) - 2) + ((~b - a | b * -2 - a) - 2 | a) * ((~b - a | b * -2 - a) - 2 & a)) * (~(~b - a | b * 2 + 2 + ~b + a + b & a) * (~a & (~b - a | b * -2 - a) - 2) + ((~b - a | b * -2 - a) - 2 | a) * ((~b - a | b * -2 - a) - 2 & a) & a)",
                    "attributes": {
                        "numOps": 163,
                        "nestedExprLevel": 19,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 67.72277227722773,
                        "opsPercentages": {
                            "arithmetic": 45.39877300613497,
                            "mul": 16.56441717791411,
                            "bitwise": 38.036809815950924
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 443,
            "gt": {
                "expr": "(((e*e)|((a|(a+e))+(~e))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 16.666666666666664,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((e & e) * (e | e) + (e & ~ e) * (~ e & e)) + ((((a & ~ ((a ^ e) + ((a & e) + (a & e)))) + ((a ^ e) + ((a & e) + (a & e)))) ^ (- e - 1)) + ((((a & ~ ((a ^ e) + ((a & e) + (a & e)))) + ((a ^ e) + ((a & e) + (a & e)))) & (- e - 1)) + (((a & ~ ((a ^ e) + ((a & e) + (a & e)))) + ((a ^ e) + ((a & e) + (a & e)))) & (- e - 1))))) + 1) + ((- ((e & e) * (e | e) + (e & ~ e) * (~ e & e)) - 1) | (- ((((a & ~ ((a ^ e) + ((a & e) + (a & e)))) + ((a ^ e) + ((a & e) + (a & e)))) ^ (- e - 1)) + ((((a & ~ ((a ^ e) + ((a & e) + (a & e)))) + ((a ^ e) + ((a & e) + (a & e)))) & (- e - 1)) + (((a & ~ ((a ^ e) + ((a & e) + (a & e)))) + ((a ^ e) + ((a & e) + (a & e)))) & (- e - 1)))) - 1))",
                "attributes": {
                    "numOps": 126,
                    "nestedExprLevel": 71,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 43.65079365079365,
                        "mul": 3.1746031746031744,
                        "bitwise": 53.17460317460318
                    },
                    "percentageDAGsCancel": 17.24137931034483
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((a & e) * 2 + (a ^ e) + (~((a & e) * 2 + (a ^ e)) & a) ^ e) + (~e & (~((a & e) * 2 + (a ^ e)) & a) + (a & e) * 2 + (a ^ e)) * -2 | ~(e * e)) + (~e & (~((a & e) * 2 + (a ^ e)) & a) + (a & e) * 2 + (a ^ e)) * 2 + ~((a & e) * 2 + (a ^ e) + (~((a & e) * 2 + (a ^ e)) & a) ^ e) + e * e + 1",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 22,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 19.047619047619047,
                            "bitwise": 52.38095238095239
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "e * e + 1 + (~(~e & (~((a ^ e) + (a & e) * 2) & a) + (a ^ e) + (a & e) * 2) * 2 - ~e ^ (~((a ^ e) + (a & e) * 2) & a) + (a ^ e) + (a & e) * 2 | ~(e * e)) + ~e ^ (~((a ^ e) + (a & e) * 2) & a) + (a ^ e) + (a & e) * 2 + (~e & (~((a ^ e) + (a & e) * 2) & a) + (a ^ e) + (a & e) * 2) * 2",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 20,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 49.2063492063492,
                        "opsPercentages": {
                            "arithmetic": 26.5625,
                            "mul": 18.75,
                            "bitwise": 54.6875
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((~(e ^ a) + (e & a) * 2 & a) + (e ^ a) + (e & a) * 2 ^ ~e) + (~e & (~(e ^ a) + (e & a) * 2 & a) + (e ^ a) + (e & a) * 2) * 2 | e * e",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 9,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 76.19047619047619,
                        "opsPercentages": {
                            "arithmetic": 23.333333333333332,
                            "mul": 20.0,
                            "bitwise": 56.666666666666664
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "clang_default": {
                    "expr": "e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + ((a & ((a ^ e) + (a & e) + (a & e) ^ 0xffffffff)) + (a ^ e) + (a & e) + (a & e) ^ 0xffffffff - e) + ((a & ((a ^ e) + (a & e) + (a & e) ^ 0xffffffff)) + (a ^ e) + (a & e) + (a & e) & 0xffffffff - e) + ((a & ((a ^ e) + (a & e) + (a & e) ^ 0xffffffff)) + (a ^ e) + (a & e) + (a & e) & 0xffffffff - e) + 1 + (0xffffffff - (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) | 0xffffffff - (((a & ((a ^ e) + (a & e) + (a & e) ^ 0xffffffff)) + (a ^ e) + (a & e) + (a & e) ^ 0xffffffff - e) + ((a & ((a ^ e) + (a & e) + (a & e) ^ 0xffffffff)) + (a ^ e) + (a & e) + (a & e) & 0xffffffff - e) + ((a & ((a ^ e) + (a & e) + (a & e) ^ 0xffffffff )) + (a ^ e) + (a & e) + (a & e) & 0xffffffff - e)))",
                    "attributes": {
                        "numOps": 114,
                        "nestedExprLevel": 44,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 9.523809523809524,
                        "opsPercentages": {
                            "arithmetic": 41.228070175438596,
                            "mul": 3.508771929824561,
                            "bitwise": 55.26315789473685
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_default": {
                    "expr": "e * e + ((~((a ^ e) + (a & e) + (a & e)) & a) + (a ^ e) + (a & e) + (a & e) ^ 0xffffffff - e) + ((~((a ^ e) + (a & e) + (a & e)) & a) + (a ^ e) + (a & e) + (a & e) & 0xffffffff - e) + ((~((a ^ e) + (a & e) + (a & e)) & a) + (a ^ e) + (a & e) + (a & e) & 0xffffffff - e) + 1 + (0xffffffff - e * e | 0xffffffff - (((~((a ^ e) + (a & e) + (a & e)) & a) + (a ^ e) + (a & e) + (a & e) ^ 0xffffffff - e) + ((~((a ^ e) + (a & e) + (a & e)) & a) + (a ^ e) + (a & e) + (a & e) & 0xffffffff - e) + ((~((a ^ e) + (a & e) + (a & e)) & a) + (a ^ e) + (a & e) + (a & e) & 0xffffffff - e)))",
                    "attributes": {
                        "numOps": 102,
                        "nestedExprLevel": 39,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 19.047619047619047,
                        "opsPercentages": {
                            "arithmetic": 44.11764705882353,
                            "mul": 1.9607843137254901,
                            "bitwise": 53.92156862745098
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "gcc_O3": {
                    "expr": "(e * e - (~(e ^ a) + (e & a) * 2 & a) + (e ^ a) + (e & a) * 2 ^ e) + ~e & (~(e ^ a) + (e & a) * 2 & a) + (e ^ a) + (e & a) * 2 * 2 + (~(e * e) | (~(e ^ a) + (e & a) * 2 & a) + (e ^ a) + (e & a) * 2 ^ e + ~e & (~(e ^ a) + (e & a) * 2 & a) + (e ^ a) + (e & a) * 2 * -2)",
                    "attributes": {
                        "numOps": 61,
                        "nestedExprLevel": 15,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 51.587301587301596,
                        "opsPercentages": {
                            "arithmetic": 27.86885245901639,
                            "mul": 19.672131147540984,
                            "bitwise": 52.459016393442624
                        },
                        "percentageDAGsCancel": 3.7037037037037033
                    }
                }
            }
        },
        {
            "num": 444,
            "gt": {
                "expr": "((((c&(~c))-d)+(((d+a)|(-a))*a)))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 12.5,
                        "bitwise": 37.5
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "(((((c | c) - c) ^ d) - ((~ ((c | c) - c) & d) + (~ ((c | c) - c) & d))) ^ (((((((d - ~ a) - 1) + ~ (a - 1)) + 1) + ((- ((d - ~ a) - 1) - 1) | (- (~ (a - 1)) - 1))) & a) * ((((((d - ~ a) - 1) + ~ (a - 1)) + 1) + ((- ((d - ~ a) - 1) - 1) | (- (~ (a - 1)) - 1))) | a) + ((((((d - ~ a) - 1) + ~ (a - 1)) + 1) + ((- ((d - ~ a) - 1) - 1) | (- (~ (a - 1)) - 1))) & ~ a) * (~ (((((d - ~ a) - 1) + ~ (a - 1)) + 1) + ((- ((d - ~ a) - 1) - 1) | (- (~ (a - 1)) - 1))) & a))) + ((((((c | c) - c) ^ d) - ((~ ((c | c) - c) & d) + (~ ((c | c) - c) & d))) & (((((((d - ~ a) - 1) + ~ (a - 1)) + 1) + ((- ((d - ~ a) - 1) - 1) | (- (~ (a - 1)) - 1))) & a) * ((((((d - ~ a) - 1) + ~ (a - 1)) + 1) + ((- ((d - ~ a) - 1) - 1) | (- (~ (a - 1)) - 1))) | a) + ((((((d - ~ a) - 1) + ~ (a - 1)) + 1) + ((- ((d - ~ a) - 1) - 1) | (- (~ (a - 1)) - 1))) & ~ a) * (~ (((((d - ~ a) - 1) + ~ (a - 1)) + 1) + ((- ((d - ~ a) - 1) - 1) | (- (~ (a - 1)) - 1))) & a))) << 1)",
                "attributes": {
                    "numOps": 192,
                    "nestedExprLevel": 111,
                    "numDAGs": 32,
                    "opsPercentages": {
                        "arithmetic": 60.9375,
                        "mul": 2.083333333333333,
                        "bitwise": 36.97916666666667
                    },
                    "percentageDAGsCancel": 18.75
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~((a - 1 | ~a - d) + ((d - ~a) - a)) & a) * (((d - ~a) - a) + (a - 1 | ~a - d) & ~a) + ((a - 1 | ~a - d) + ((d - ~a) - a) & a) * ((a - 1 | ~a - d) + ((d - ~a) - a) | a) & -d) * 2 + (-d ^ (~((a - 1 | ~a - d) + ((d - ~a) - a)) & a) * (((d - ~a) - a) + (a - 1 | ~a - d) & ~a) + ((a - 1 | ~a - d) + ((d - ~a) - a) & a) * ((a - 1 | ~a - d) + ((d - ~a) - a) | a))",
                    "attributes": {
                        "numOps": 88,
                        "nestedExprLevel": 24,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 54.166666666666664,
                        "opsPercentages": {
                            "arithmetic": 51.13636363636363,
                            "mul": 5.681818181818182,
                            "bitwise": 43.18181818181818
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((((~a - d | a - 1) - (a - 1)) + a + d & a) * (((~a - d | a - 1) - (a - 1)) + a + d | a) + (~((~a - d | a - 1) - (a - 1)) + a + d & a) * (((~a - d | a - 1) - (a - 1)) + a + d & ~a) * 2 & d * -2) + (-d ^ (((~a - d | a - 1) - (a - 1)) + a + d & a) * (((~a - d | a - 1) - (a - 1)) + a + d | a) + (~((~a - d | a - 1) - (a - 1)) + a + d & a) * (((~a - d | a - 1) - (a - 1)) + a + d & ~a))",
                    "attributes": {
                        "numOps": 89,
                        "nestedExprLevel": 27,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 53.645833333333336,
                        "opsPercentages": {
                            "arithmetic": 59.55056179775281,
                            "mul": 6.741573033707865,
                            "bitwise": 33.70786516853933
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((~d + (a - 1 | ~(d + a)) + 1 & a) * (~a & d + (a - 1 | ~(d + a)) + 1) + (d + (a - 1 | ~(d + a)) + 1 | a) * (d + (a - 1 | ~(d + a)) + 1 & a) ^ -d) + ((~d + (a - 1 | ~(d + a)) + 1 & a) * (~a & d + (a - 1 | ~(d + a)) + 1) + (d + (a - 1 | ~(d + a)) + 1 | a) * (d + (a - 1 | ~(d + a)) + 1 & a) & -d) * 2",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 20,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 62.5,
                        "opsPercentages": {
                            "arithmetic": 51.388888888888886,
                            "mul": 6.944444444444445,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(-d ^ ((d - (a ^ 0xffffffff)) + (a - 1 ^ 0xffffffff) + (0xffffffff - ((d - (a ^ 0xffffffff)) + -1) | 0xffffffff - (a - 1 ^ 0xffffffff)) & a) * ((d - (a ^ 0xffffffff)) + (a - 1 ^ 0xffffffff) + (0xffffffff - ((d - (a ^ 0xffffffff)) + -1) | 0xffffffff - (a - 1 ^ 0xffffffff)) | a) + ((d - (a ^ 0xffffffff)) + (a - 1 ^ 0xffffffff) + (0xffffffff - ((d - (a ^ 0xffffffff)) + -1) | 0xffffffff - (a - 1 ^ 0xffffffff)) & (a ^ 0xffffffff)) * (((d - (a ^ 0xffffffff)) + (a - 1 ^ 0xffffffff) + (0xffffffff - ((d - (a ^ 0xffffffff)) + -1) | 0xffffffff - (a - 1 ^ 0xffffffff)) ^ 0xffffffff) & a)) + (-d & ((d - (a ^ 0xffffffff)) + (a - 1 ^ 0xffffffff) + (0xffffffff - ((d - (a ^ 0xffffffff)) + -1) | 0xffffffff - (a - 1 ^ 0xffffffff)) & a) * ((d - (a ^ 0xffffffff)) + (a - 1 ^ 0xffffffff) + (0xffffffff - ((d - (a ^ 0xffffffff)) + -1) | 0xffffffff - (a - 1 ^ 0xffffffff)) | a) + ((d - (a ^ 0xffffffff)) + (a - 1 ^ 0xffffffff) + (0xffffffff - ((d - (a ^ 0xffffffff)) + -1) | 0xffffffff - (a - 1 ^ 0xffffffff)) & (a ^ 0xffffffff)) * (((d - (a ^ 0xffffffff)) + (a - 1 ^ 0xffffffff) + (0xffffffff - ((d - (a ^ 0xffffffff)) + -1) | 0xffffffff - (a - 1 ^ 0xffffffff)) ^ 0xffffffff) & a)) * 2",
                    "attributes": {
                        "numOps": 144,
                        "nestedExprLevel": 61,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 25.0,
                        "opsPercentages": {
                            "arithmetic": 59.02777777777778,
                            "mul": 3.4722222222222223,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(-d ^ ((d - ~a) + ~(a - 1) + (0xffffffff - ((d - ~a) + -1) | 0xffffffff - ~(a - 1)) & a) * ((d - ~a) + ~(a - 1) + (0xffffffff - ((d - ~a) + -1) | 0xffffffff - ~(a - 1)) | a) + ((d - ~a) + ~(a - 1) + (0xffffffff - ((d - ~a) + -1) | 0xffffffff - ~(a - 1)) & ~a) * (~((d - ~a) + ~(a - 1) + (0xffffffff - ((d - ~a) + -1) | 0xffffffff - ~(a - 1))) & a)) + (-d & ((d - ~a) + ~(a - 1) + (0xffffffff - ((d - ~a) + -1) | 0xffffffff - ~(a - 1)) & a) * ((d - ~a) + ~(a - 1) + (0xffffffff - ((d - ~a) + -1) | 0xffffffff - ~(a - 1)) | a) + ((d - ~a) + ~(a - 1) + (0xffffffff - ((d - ~a) + -1) | 0xffffffff - ~(a - 1)) & ~a) * (~((d - ~a) + ~(a - 1) + (0xffffffff - ((d - ~a) + -1) | 0xffffffff - ~(a - 1))) & a)) * 2",
                    "attributes": {
                        "numOps": 144,
                        "nestedExprLevel": 45,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 25.0,
                        "opsPercentages": {
                            "arithmetic": 59.02777777777778,
                            "mul": 3.4722222222222223,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(-d ^ (~a & d + 1 + (~a - d | a - 1)) * (~d + 1 + (~a - d | a - 1) & a) + (d + 1 + (~a - d | a - 1) & a) * (d + 1 + (~a - d | a - 1) | a)) + (-d & (~a & d + 1 + (~a - d | a - 1)) * (~d + 1 + (~a - d | a - 1) & a) + (d + 1 + (~a - d | a - 1) & a) * (d + 1 + (~a - d | a - 1) | a)) * 2",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 12,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 62.5,
                        "opsPercentages": {
                            "arithmetic": 51.388888888888886,
                            "mul": 6.944444444444445,
                            "bitwise": 41.66666666666667
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 445,
            "gt": {
                "expr": "(((-((-d)*e))|(d^((d+d)+b))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 14.285714285714285,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ (((~ (d - 1) & e) * (~ (d - 1) | e) + (~ (d - 1) & ~ e) * (~ (~ (d - 1)) & e)) - 1) + (((d - (((((d | d) << 1) - (d ^ d)) | b) + ((((d | d) << 1) - (d ^ d)) & b))) - ((d | ~ (((((d | d) << 1) - (d ^ d)) | b) + ((((d | d) << 1) - (d ^ d)) & b))) << 1)) - 2)) + 1) + ((- (~ (((~ (d - 1) & e) * (~ (d - 1) | e) + (~ (d - 1) & ~ e) * (~ (~ (d - 1)) & e)) - 1)) - 1) | (- (((d - (((((d | d) << 1) - (d ^ d)) | b) + ((((d | d) << 1) - (d ^ d)) & b))) - ((d | ~ (((((d | d) << 1) - (d ^ d)) | b) + ((((d | d) << 1) - (d ^ d)) & b))) << 1)) - 2) - 1))",
                "attributes": {
                    "numOps": 102,
                    "nestedExprLevel": 67,
                    "numDAGs": 34,
                    "opsPercentages": {
                        "arithmetic": 36.27450980392157,
                        "mul": 3.9215686274509802,
                        "bitwise": 59.80392156862745
                    },
                    "percentageDAGsCancel": 5.88235294117647
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(d + b + (~(b + d * 2) | d) * 2 + 1 | ((d - 1 & e) * (-d & ~e) + (-d & e) * (-d | e)) - 1) + (((-d - b) + (~(b + d * 2) | d) * -2) - ((-d & e) * (-d | e) + (d - 1 & e) * (-d & ~e))) + -1",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 12,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 53.92156862745098,
                        "opsPercentages": {
                            "arithmetic": 51.06382978723404,
                            "mul": 17.02127659574468,
                            "bitwise": 31.914893617021278
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((((d * 2 | b + 1 + (~(d * 2 & b + d * 2 | b) | d * 2 - d) + d * 2 & b | (~d - 1 | e) * (~d - 1 & e) + ~(d - 1 | e) * (d - 1 & e) + -1) + ~(d * 2 & b + d * 2 | b) | d * -2) - d * 2 & b) - d * 2 | b) + d + (~(~d - 1 | e) * (~d - 1 & e) + ~(d - 1 | e) * (d - 1 & e) + -1 - 1)",
                    "attributes": {
                        "numOps": 69,
                        "nestedExprLevel": 12,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 32.35294117647059,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 20.28985507246377,
                            "bitwise": 40.57971014492754
                        },
                        "percentageDAGsCancel": 4.878048780487805
                    }
                },
                "clang_O3": {
                    "expr": "~((-d | e) * (-d & e) + (~e & -d) * (d - 1 & e)) + (d - b + d * 2) + (~b + d * 2 | d) * -2 + (1 - (d - b + d * 2) + (~b + d * 2 | d) * -2 | ((~e & -d) * (d - 1 & e) + (-d | e) * (-d & e)) - 1)",
                    "attributes": {
                        "numOps": 50,
                        "nestedExprLevel": 10,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 50.98039215686274,
                        "opsPercentages": {
                            "arithmetic": 48.0,
                            "mul": 20.0,
                            "bitwise": 32.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((d - 1 ^ 0xffffffff) & e) * (d - 1 ^ 0xffffffff | e) + ((d - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) * (d - 1 & e)) - 1 ^ 0xffffffff) + (d - ((d * 2 | b) + (d * 2 & b))) + (d | (d * 2 | b) + (d * 2 & b) ^ 0xffffffff) * -2 + -1 + (0xffffffff - ((((d - 1 ^ 0xffffffff) & e) * (d - 1 ^ 0xffffffff | e) + ((d - 1 ^ 0xffffffff) & (e ^ 0xffffffff)) * (d - 1 & e)) - 1 ^ 0xffffffff) | 0xffffffff - ((d - ((d * 2 | b) + (d * 2 & b))) + (d | (d * 2 | b) + (d * 2 & b) ^ 0xffffffff) * -2 + -2))",
                    "attributes": {
                        "numOps": 75,
                        "nestedExprLevel": 25,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 26.47058823529412,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 18.666666666666668,
                            "bitwise": 41.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "~((~(d - 1) & e) * (~(d - 1) | e) + -1 + (~(d - 1) & ~e) * (d - 1 & e)) + (d - ((d * 2 | b) + (d * 2 & b))) + (~((d * 2 | b) + (d * 2 & b)) | d) * -2 + -1 + (0xffffffff - ~((~(d - 1) & e) * (~(d - 1) | e) + -1 + (~(d - 1) & ~e) * (d - 1 & e)) | 0xffffffff - ((d - ((d * 2 | b) + (d * 2 & b))) + (~((d * 2 | b) + (d * 2 & b)) | d) * -2 + -2))",
                    "attributes": {
                        "numOps": 77,
                        "nestedExprLevel": 25,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 24.509803921568626,
                        "opsPercentages": {
                            "arithmetic": 41.55844155844156,
                            "mul": 18.181818181818183,
                            "bitwise": 40.25974025974026
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                },
                "gcc_O3": {
                    "expr": "~(~e & -d) * (d - 1 & e) + (-d & e) * (-d | e) + (d - b + d * 2) + (~b + d * 2 | d) * -2 + ((~e & -d) * (d - 1 & e) + (-d & e) * (-d | e) - 1 | 1 - (d - b + d * 2) + (~b + d * 2 | d) * -2)",
                    "attributes": {
                        "numOps": 50,
                        "nestedExprLevel": 8,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 50.98039215686274,
                        "opsPercentages": {
                            "arithmetic": 48.0,
                            "mul": 20.0,
                            "bitwise": 32.0
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                }
            }
        },
        {
            "num": 446,
            "gt": {
                "expr": "(((~((b^d)&b))-(~(~((d^d)-e)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "((- ((~ ((b | d) - (b & d)) | b) - ~ ((b | d) - (b & d))) - 1) ^ (- (~ (((d - d) - ((d | ~ d) + (d | ~ d))) - 2) + e) - 1)) - ((~ (- ((~ ((b | d) - (b & d)) | b) - ~ ((b | d) - (b & d))) - 1) & (- (~ (((d - d) - ((d | ~ d) + (d | ~ d))) - 2) + e) - 1)) + (~ (- ((~ ((b | d) - (b & d)) | b) - ~ ((b | d) - (b & d))) - 1) & (- (~ (((d - d) - ((d | ~ d) + (d | ~ d))) - 2) + e) - 1)))",
                "attributes": {
                    "numOps": 79,
                    "nestedExprLevel": 44,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 48.10126582278481,
                        "mul": 0.0,
                        "bitwise": 51.89873417721519
                    },
                    "percentageDAGsCancel": 13.043478260869565
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~(b ^ d) - (~d | b)) - 1 ^ -e) + (-e & (~d | b) + (b ^ d) + 1) * -2",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 77.21518987341773,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 5.555555555555555,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_O1": {
                    "expr": "(-e ^ (~((b | d) - (b & d)) - (~((b | d) - (b & d)) | b)) - 1) + (~(~((b | d) - (b & d)) - (~((b | d) - (b & d)) | b)) - 1 & -e) * -2",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 15,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 62.0253164556962,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 3.3333333333333335,
                            "bitwise": 56.666666666666664
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_O3": {
                    "expr": "((~b | d) ^ -e) + (~(~b | d) & -e) * -2",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 84.81012658227847,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 8.333333333333332,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - (((b | d) - (b & d) ^ 0xffffffff | b) - ((b | d) - (b & d) ^ 0xffffffff)) ^ 0xffffffff - ((0xfffffffe - ((d | d ^ 0xffffffff) + (d | d ^ 0xffffffff)) ^ 0xffffffff) + e)) - (((0xffffffff - (((b | d) - (b & d) ^ 0xffffffff | b) - ((b | d) - (b & d) ^ 0xffffffff)) ^ 0xffffffff) & 0xffffffff - ((0xfffffffe - ((d | d ^ 0xffffffff) + (d | d ^ 0xffffffff)) ^ 0xffffffff) + e)) + ((0xffffffff - (((b | d) - (b & d) ^ 0xffffffff | b) - ((b | d) - (b & d) ^ 0xffffffff)) ^ 0xffffffff) & 0xffffffff - ((0xfffffffe - ((d | d ^ 0xffffffff) + (d | d ^ 0xffffffff)) ^ 0xffffffff) + e)))",
                    "attributes": {
                        "numOps": 67,
                        "nestedExprLevel": 34,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 15.18987341772152,
                        "opsPercentages": {
                            "arithmetic": 38.80597014925373,
                            "mul": 0.0,
                            "bitwise": 61.19402985074627
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - ((~((b | d) - (b & d)) | b) - ~((b | d) - (b & d))) ^ 0xffffffff - (e + -1)) - ((~(0xffffffff - ((~((b | d) - (b & d)) | b) - ~((b | d) - (b & d)))) & 0xffffffff - (e + -1)) + (~(0xffffffff - ((~((b | d) - (b & d)) | b) - ~((b | d) - (b & d)))) & 0xffffffff - (e + -1)))",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 26,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 37.9746835443038,
                        "opsPercentages": {
                            "arithmetic": 46.93877551020408,
                            "mul": 0.0,
                            "bitwise": 53.06122448979592
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "gcc_O3": {
                    "expr": "((~(b ^ d) - (b | ~d)) - 1 ^ -e) + ((b ^ d) + 1 + (b | ~d) & -e) * -2",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 77.21518987341773,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 5.555555555555555,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 447,
            "gt": {
                "expr": "((~((~(~(a*c)))&(b|((c&b)*c)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 25.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "- ((~ (- (- ((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - 1) - 1) | (((b + (((((~ c | b) + c) + 1) & c) * ((((~ c | b) + c) + 1) | c) + ((((~ c | b) + c) + 1) & ~ c) * (~ (((~ c | b) + c) + 1) & c))) + 1) + ((- b - 1) | (- (((((~ c | b) + c) + 1) & c) * ((((~ c | b) + c) + 1) | c) + ((((~ c | b) + c) + 1) & ~ c) * (~ (((~ c | b) + c) + 1) & c)) - 1)))) - ~ (- (- ((a & c) * (a | c) + (a & ~ c) * (~ a & c)) - 1) - 1)) - 1",
                "attributes": {
                    "numOps": 90,
                    "nestedExprLevel": 44,
                    "numDAGs": 37,
                    "opsPercentages": {
                        "arithmetic": 42.22222222222222,
                        "mul": 8.88888888888889,
                        "bitwise": 48.888888888888886
                    },
                    "percentageDAGsCancel": 10.81081081081081
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~((~a & c) * (~c & a) + (a & c) * (a | c) & b + (c + (~c | b) + 1 & c) * (c + (~c | b) + 1 | c) + (-((~c | b) + c) - 2 & c) * (c + (~c | b) + 1 & ~c) + 1 + ~((-((~c | b) + c) - 2 & c) * (c + (~c | b) + 1 & ~c) + (c + (~c | b) + 1 & c) * (c + (~c | b) + 1 | c) & b))",
                    "attributes": {
                        "numOps": 66,
                        "nestedExprLevel": 16,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 26.666666666666668,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 9.090909090909092,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "msvc_O1": {
                    "expr": "(~((~a & c) * (~c & a) + (a | c) * (a & c)) - (b + 1 + (~(~c + 1 + (~c | b) & c) * (c + 1 + (~c | b) & ~c) - (c + 1 + (~c | b) | c) * (c + 1 + (~c | b) & c) | ~b) + (c + 1 + (~c | b) | c) * (c + 1 + (~c | b) & c) + (~c + 1 + (~c | b) & c) * (c + 1 + (~c | b) & ~c) | ~((~a & c) * (~c & a) + (a | c) * (a & c)))) + -1",
                    "attributes": {
                        "numOps": 80,
                        "nestedExprLevel": 18,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 11.11111111111111,
                        "opsPercentages": {
                            "arithmetic": 32.5,
                            "mul": 10.0,
                            "bitwise": 57.49999999999999
                        },
                        "percentageDAGsCancel": 14.705882352941178
                    }
                },
                "clang_O3": {
                    "expr": "~(((-((~c | b) + c) - 2 & c) * (~c & (~c | b) + c + 1) + ((~c | b) + c + 1 | c) * ((~c | b) + c + 1 & c) | b) & (~c & a) * (~a & c) + (c | a) * (c & a))",
                    "attributes": {
                        "numOps": 37,
                        "nestedExprLevel": 11,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 58.88888888888889,
                        "opsPercentages": {
                            "arithmetic": 29.72972972972973,
                            "mul": 10.81081081081081,
                            "bitwise": 59.45945945945946
                        },
                        "percentageDAGsCancel": 20.833333333333336
                    }
                },
                "clang_default": {
                    "expr": "-1 - ((0xffffffff - (-1 - ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c))) ^ 0xffffffff | b + ((c ^ 0xffffffff | b) + c + 1 & c) * ((c ^ 0xffffffff | b) + c + 1 | c) + ((c ^ 0xffffffff | b) + c + 1 & (c ^ 0xffffffff)) * (((c ^ 0xffffffff | b) + c + 1 ^ 0xffffffff) & c) + 1 + (0xffffffff - b | 0xffffffff - (((c ^ 0xffffffff | b) + c + 1 & c) * ((c ^ 0xffffffff | b) + c + 1 | c) + ((c ^ 0xffffffff | b) + c + 1 & (c ^ 0xffffffff)) * (((c ^ 0xffffffff | b) + c + 1 ^ 0xffffffff) & c)))) - (0xffffffff - (-1 - ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c))) ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 86,
                        "nestedExprLevel": 29,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 4.444444444444445,
                        "opsPercentages": {
                            "arithmetic": 39.53488372093023,
                            "mul": 9.30232558139535,
                            "bitwise": 51.162790697674424
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_default": {
                    "expr": "-1 - ((~(0xffffffff - (-1 - ((a & c) * (a | c) + (~c & a) * (~a & c)))) | ((~c | b) + 1 + c & ~c) * (~((~c | b) + 1 + c) & c) + b + ((~c | b) + 1 + c & c) * ((~c | b) + 1 + c | c) + 1 + (0xffffffff - b | 0xffffffff - (((~c | b) + 1 + c & c) * ((~c | b) + 1 + c | c) + ((~c | b) + 1 + c & ~c) * (~((~c | b) + 1 + c) & c)))) - ~(0xffffffff - (-1 - ((a & c) * (a | c) + (~c & a) * (~a & c)))))",
                    "attributes": {
                        "numOps": 86,
                        "nestedExprLevel": 25,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 4.444444444444445,
                        "opsPercentages": {
                            "arithmetic": 39.53488372093023,
                            "mul": 9.30232558139535,
                            "bitwise": 51.162790697674424
                        },
                        "percentageDAGsCancel": 14.705882352941178
                    }
                },
                "gcc_O3": {
                    "expr": "~((~a & c) * (~c & a) + (c & a) * (c | a) & ((-(~c | b) + c - 2 & c) * (~c & (~c | b) + c + 1) + ((~c | b) + c + 1 | c) * ((~c | b) + c + 1 & c) + b) - ((-(~c | b) + c - 2 & c) * (~c & (~c | b) + c + 1) + ((~c | b) + c + 1 | c) * ((~c | b) + c + 1 & c) & b))",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 15,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 28.888888888888886,
                        "opsPercentages": {
                            "arithmetic": 35.9375,
                            "mul": 9.375,
                            "bitwise": 54.6875
                        },
                        "percentageDAGsCancel": 18.51851851851852
                    }
                }
            }
        },
        {
            "num": 448,
            "gt": {
                "expr": "(((-((d*d)^((~c)|c)))+((d^d)&(~d))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 8,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 22.22222222222222,
                        "mul": 11.11111111111111,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "(~ (((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | ((((- c - 1) + c) + 1) + ((- (- c - 1) - 1) | (- c - 1)))) - (((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & ((((- c - 1) + c) + 1) + ((- (- c - 1) - 1) | (- c - 1))))) - 1) | (((d | d) - (d & d)) - (((d | d) - (d & d)) & d))) + (~ (((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | ((((- c - 1) + c) + 1) + ((- (- c - 1) - 1) | (- c - 1)))) - (((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & ((((- c - 1) + c) + 1) + ((- (- c - 1) - 1) | (- c - 1))))) - 1) & (((d | d) - (d & d)) - (((d | d) - (d & d)) & d)))",
                "attributes": {
                    "numOps": 113,
                    "nestedExprLevel": 59,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 52.21238938053098,
                        "mul": 7.079646017699115,
                        "bitwise": 40.707964601769916
                    },
                    "percentageDAGsCancel": 40.74074074074074
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "d * d + 1",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 98.23008849557522,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 50.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "d * d + 1",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 98.23008849557522,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 50.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "d * d + 1",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 98.23008849557522,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 50.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) | 0xffffffff - (-1 - c) | 0xffffffff - c) - (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) & (0xffffffff - (-1 - c) | 0xffffffff - c))) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 11,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 74.33628318584071,
                        "opsPercentages": {
                            "arithmetic": 41.37931034482759,
                            "mul": 13.793103448275861,
                            "bitwise": 44.827586206896555
                        },
                        "percentageDAGsCancel": 17.647058823529413
                    }
                },
                "msvc_default": {
                    "expr": "~(((d * d | 0xffffffff - (-1 - c) | 0xffffffff - c) - (d * d & (0xffffffff - (-1 - c) | 0xffffffff - c))) - 1)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 7,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 84.95575221238938,
                        "opsPercentages": {
                            "arithmetic": 58.82352941176471,
                            "mul": 11.76470588235294,
                            "bitwise": 29.411764705882355
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "d * d + 1",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 1,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 98.23008849557522,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 50.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 449,
            "gt": {
                "expr": "(((e-c)^(-(~c))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((e ^ c) - ((~ e & c) + (~ e & c))) - (c + 1)) - ((((e ^ c) - ((~ e & c) + (~ e & c))) | ~ (c + 1)) + (((e ^ c) - ((~ e & c) + (~ e & c))) | ~ (c + 1)))) - 2",
                "attributes": {
                    "numOps": 32,
                    "nestedExprLevel": 16,
                    "numDAGs": 12,
                    "opsPercentages": {
                        "arithmetic": 40.625,
                        "mul": 0.0,
                        "bitwise": 59.375
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((e ^ c) + (~e & c) * -2) - (c + 1)) + (-c - 2 | (e ^ c) + (~e & c) * -2) * -2 + -2",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 6,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 31.25,
                        "opsPercentages": {
                            "arithmetic": 54.54545454545454,
                            "mul": 13.636363636363635,
                            "bitwise": 31.818181818181817
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((c ^ e) + (((c ^ e) + (~e & c) * -2 | ~(c + 1)) + (~e & c)) * -2) - c) + -3",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 7,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 40.625,
                        "opsPercentages": {
                            "arithmetic": 47.368421052631575,
                            "mul": 10.526315789473683,
                            "bitwise": 42.10526315789473
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "clang_O3": {
                    "expr": "((e ^ c) + (~e & c) * -2 - c) + (-c - 2 | (e ^ c) + (~e & c) * -2) * -2 + -3",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 5,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 34.375,
                        "opsPercentages": {
                            "arithmetic": 52.38095238095239,
                            "mul": 14.285714285714285,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((e ^ c) - (((e ^ 0xffffffff) & c) + ((e ^ 0xffffffff) & c))) - (c + 1)) - (((e ^ c) - (((e ^ 0xffffffff) & c) + ((e ^ 0xffffffff) & c)) | c + 1 ^ 0xffffffff) + ((e ^ c) - (((e ^ 0xffffffff) & c) + ((e ^ 0xffffffff) & c)) | c + 1 ^ 0xffffffff))) + -2",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 18,
                        "numDAGs": 13,
                        "percentDecreaseByOps": -3.125,
                        "opsPercentages": {
                            "arithmetic": 42.42424242424242,
                            "mul": 0.0,
                            "bitwise": 57.57575757575758
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_default": {
                    "expr": "((((e ^ c) - ((~e & c) + (~e & c))) - (c + 1)) - (((e ^ c) - ((~e & c) + (~e & c)) | ~(c + 1)) + ((e ^ c) - ((~e & c) + (~e & c)) | ~(c + 1)))) + -2",
                    "attributes": {
                        "numOps": 33,
                        "nestedExprLevel": 14,
                        "numDAGs": 13,
                        "percentDecreaseByOps": -3.125,
                        "opsPercentages": {
                            "arithmetic": 42.42424242424242,
                            "mul": 0.0,
                            "bitwise": 57.57575757575758
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((e ^ c) + (~e & c) * -2 - (c + 1)) + (-c - 2 | (e ^ c) + (~e & c) * -2) * -2 + -2",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 5,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 31.25,
                        "opsPercentages": {
                            "arithmetic": 54.54545454545454,
                            "mul": 13.636363636363635,
                            "bitwise": 31.818181818181817
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 450,
            "gt": {
                "expr": "(((((b^a)*a)+(~b))^(b&b)))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 16.666666666666664,
                        "mul": 16.666666666666664,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "((((((((b | a) - (b & a)) & a) * (((b | a) - (b & a)) | a) + (((b | a) - (b & a)) & ~ a) * (~ ((b | a) - (b & a)) & a)) - ~ (- b - 1)) - 1) - ((~ b | b) - ~ b)) - ((((((((b | a) - (b & a)) & a) * (((b | a) - (b & a)) | a) + (((b | a) - (b & a)) & ~ a) * (~ ((b | a) - (b & a)) & a)) - ~ (- b - 1)) - 1) | ~ ((~ b | b) - ~ b)) << 1)) - 2",
                "attributes": {
                    "numOps": 66,
                    "nestedExprLevel": 38,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 34.84848484848485,
                        "mul": 6.0606060606060606,
                        "bitwise": 59.09090909090909
                    },
                    "percentageDAGsCancel": 11.538461538461538
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(b ^ a) & a) * ((b ^ a) & ~a) + (~b & a) * (a | b) + b * -2 + (~b | (((~(b ^ a) & a) * ((b ^ a) & ~a) + (~b & a) * (a | b)) - b) - 1) * -2 + -3",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 11,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 45.45454545454545,
                        "opsPercentages": {
                            "arithmetic": 27.77777777777778,
                            "mul": 16.666666666666664,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~b - 2) + ((((a | b) - (a & b) | a) * ((a | b) - (a & b) & a) - (((((a | b) - (a & b) | a) * ((a | b) - (a & b) & a) - b) + (~a & (a | b) - (a & b)) * (~(a | b) - (a & b) & a)) * 2 - 2 | ~b * 2)) - b) + (~a & (a | b) - (a & b)) * (~(a | b) - (a & b) & a)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 22,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 19.696969696969695,
                        "opsPercentages": {
                            "arithmetic": 30.18867924528302,
                            "mul": 11.320754716981133,
                            "bitwise": 58.490566037735846
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "clang_O3": {
                    "expr": "((b | a) * (~b & a) + (~a & b) * (b & a) + ~b - b) + (~b | (b | a) * (~b & a) + (~a & b) * (b & a) + ~b) * -2 + -2",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 7,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 54.54545454545454,
                        "opsPercentages": {
                            "arithmetic": 30.0,
                            "mul": 16.666666666666664,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((((b | a) - (b & a) & a) * ((b | a) - (b & a) | a) + ((b | a) - (b & a) & (a ^ 0xffffffff)) * (((b | a) - (b & a) ^ 0xffffffff) & a)) - (0xffffffff - b ^ 0xffffffff)) - ((b ^ 0xffffffff | b) - (b ^ 0xffffffff))) + (((((b | a) - (b & a) & a) * ((b | a) - (b & a) | a) + ((b | a) - (b & a) & (a ^ 0xffffffff)) * (((b | a) - (b & a) ^ 0xffffffff) & a)) - (0xffffffff - b ^ 0xffffffff)) - 1 | (b ^ 0xffffffff | b) - (b ^ 0xffffffff) ^ 0xffffffff) * -2 + -3",
                    "attributes": {
                        "numOps": 65,
                        "nestedExprLevel": 29,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 1.5151515151515151,
                        "opsPercentages": {
                            "arithmetic": 33.84615384615385,
                            "mul": 7.6923076923076925,
                            "bitwise": 58.46153846153847
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                },
                "msvc_default": {
                    "expr": "(((((b | a) - (b & a) & a) * ((b | a) - (b & a) | a) + ((b | a) - (b & a) & ~a) * (~((b | a) - (b & a)) & a)) - ~(0xffffffff - b)) - (-1 - ~b)) + (((((b | a) - (b & a) & a) * ((b | a) - (b & a) | a) + ((b | a) - (b & a) & ~a) * (~((b | a) - (b & a)) & a)) - ~(0xffffffff - b)) - 1 | ~(-~b - 1)) * -2 + -3",
                    "attributes": {
                        "numOps": 63,
                        "nestedExprLevel": 27,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 4.545454545454546,
                        "opsPercentages": {
                            "arithmetic": 38.095238095238095,
                            "mul": 7.936507936507936,
                            "bitwise": 53.96825396825397
                        },
                        "percentageDAGsCancel": 10.344827586206897
                    }
                },
                "gcc_O3": {
                    "expr": "((((~a & (b ^ a)) * (~(b ^ a) & a) + (~b & a) * (a | b)) - b) - 1 - b) + (~b | (((~a & (b ^ a)) * (~(b ^ a) & a) + (~b & a) * (a | b)) - b) - 1) * -2 + -2",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 14,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 45.45454545454545,
                        "opsPercentages": {
                            "arithmetic": 30.555555555555557,
                            "mul": 13.88888888888889,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 451,
            "gt": {
                "expr": "((~(~(((e+b)+b)|(-a)))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "- (- (((((((e | b) + (e & b)) - ~ b) - 1) + (~ a + 1)) + 1) + ((- ((((e | b) + (e & b)) - ~ b) - 1) - 1) | (- (~ a + 1) - 1))) - 1) - 1",
                "attributes": {
                    "numOps": 28,
                    "nestedExprLevel": 17,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 67.85714285714286,
                        "mul": 0.0,
                        "bitwise": 32.142857142857146
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a - 1 | ~b - (e + b)) + (((e + b) - ~b) - a)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 5,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 64.28571428571429,
                        "opsPercentages": {
                            "arithmetic": 70.0,
                            "mul": 0.0,
                            "bitwise": 30.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "b + 2 + ~a + ((~b - (b & e)) - (b | e) | a - 1) + (b & e) + (b | e)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 5,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 46.42857142857143,
                        "opsPercentages": {
                            "arithmetic": 53.333333333333336,
                            "mul": 0.0,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "b * 2 + e - ((-a & b * 2 + e) + a)",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 71.42857142857143,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 25.0,
                            "bitwise": 12.5
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - (-1 - ((((e | b) + (e & b)) - (b ^ 0xffffffff)) + (a ^ 0xffffffff) + 1 + (0xffffffff - ((((e | b) + (e & b)) - (b ^ 0xffffffff)) + -1) | 0xffffffff - ((a ^ 0xffffffff) + 1))))",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 14,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 10.714285714285714,
                        "opsPercentages": {
                            "arithmetic": 64.0,
                            "mul": 0.0,
                            "bitwise": 36.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (-1 - ((((e | b) + (e & b)) - ~b) + ~a + 1 + (0xffffffff - ((((e | b) + (e & b)) - ~b) + -1) | 0xffffffff - (~a + 1))))",
                    "attributes": {
                        "numOps": 25,
                        "nestedExprLevel": 12,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 10.714285714285714,
                        "opsPercentages": {
                            "arithmetic": 64.0,
                            "mul": 0.0,
                            "bitwise": 36.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((e + b) - a) + 1 + b + (~b - (e + b) | a - 1)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 64.28571428571429,
                        "opsPercentages": {
                            "arithmetic": 80.0,
                            "mul": 0.0,
                            "bitwise": 20.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 452,
            "gt": {
                "expr": "((-((((a*(-b))^a)*(-(~(b-b))))+(d+a))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 20.0,
                        "bitwise": 20.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "~ (((((((((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) | a) - (((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) & a)) & (((b ^ b) - ((~ b & b) << 1)) + 1)) * (((((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) | a) - (((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) & a)) | (((b ^ b) - ((~ b & b) << 1)) + 1)) + (((((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) | a) - (((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) & a)) & ~ (((b ^ b) - ((~ b & b) << 1)) + 1)) * (~ ((((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) | a) - (((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) & a)) & (((b ^ b) - ((~ b & b) << 1)) + 1))) ^ (((d ^ ~ a) + ((d | a) + (d | a))) + 1)) + ((((((((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) | a) - (((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) & a)) & (((b ^ b) - ((~ b & b) << 1)) + 1)) * (((((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) | a) - (((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) & a)) | (((b ^ b) - ((~ b & b) << 1)) + 1)) + (((((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) | a) - (((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) & a)) & ~ (((b ^ b) - ((~ b & b) << 1)) + 1)) * (~ ((((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) | a) - (((a & (~ b + 1)) * (a | (~ b + 1)) + (a & ~ (~ b + 1)) * (~ a & (~ b + 1))) & a)) & (((b ^ b) - ((~ b & b) << 1)) + 1))) & (((d ^ ~ a) + ((d | a) + (d | a))) + 1)) << 1)) - 1)",
                "attributes": {
                    "numOps": 382,
                    "nestedExprLevel": 152,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 29.84293193717277,
                        "mul": 9.424083769633508,
                        "bitwise": 60.73298429319372
                    },
                    "percentageDAGsCancel": 15.384615384615385
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(((d | a) * 2 + ~(a ^ d) + 1 & (((b - 1 & a) * (-b & ~a) + (-b & a) * (-b | a) ^ a) & 1) * ((b - 1 & a) * (-b & ~a) + (-b & a) * (-b | a) ^ a | 1) + ((((b - 1 & a) * (-b & ~a) + (-b & a) * (-b | a) ^ a) & 1) == 0) * (((b - 1 & a) * (-b & ~a) + (-b & a) * (-b | a) ^ a) & 0xfffffffe)) * 2 + ((((b - 1 & a) * (-b & ~a) + (-b & a) * (-b | a) ^ a) & 1) * ((b - 1 & a) * (-b & ~a) + (-b & a) * (-b | a) ^ a | 1) + ((((b - 1 & a) * (-b & ~a) + (-b & a) * (-b | a) ^ a) & 1) == 0) * (((b - 1 & a) * (-b & ~a) + (-b & a) * (-b | a) ^ a) & 0xfffffffe) ^ (d | a) * 2 + ~(a ^ d) + 1))",
                    "attributes": {
                        "numOps": 135,
                        "nestedExprLevel": 38,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 64.65968586387434,
                        "opsPercentages": {
                            "arithmetic": 35.55555555555556,
                            "mul": 17.037037037037038,
                            "bitwise": 47.40740740740741
                        },
                        "percentageDAGsCancel": 13.333333333333334
                    }
                },
                "msvc_O1": {
                    "expr": "-(((~a ^ d) + (a | d) * 2 * 2 + 2 & (~((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) | a) - ((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) & a) & 1) * (((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) | a) - ((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) & a) & 0xfffffffe) + (((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) | a) - ((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) & a) | 1) * (((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) | a) - ((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) & a) & 1) * 2) + ((~a ^ d) + (a | d) * 2 + 1 ^ (~((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) | a) - ((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) & a) & 1) * (((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) | a) - ((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) & a) & 0xfffffffe) + (((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) | a) - ((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) & a) | 1) * (((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) | a) - ((-b | a) * (-b & a) + (~-b & a) * (-b & ~a) & a) & 1)))",
                    "attributes": {
                        "numOps": 266,
                        "nestedExprLevel": 62,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 30.36649214659686,
                        "opsPercentages": {
                            "arithmetic": 36.09022556390977,
                            "mul": 15.037593984962406,
                            "bitwise": 48.87218045112782
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "clang_O3": {
                    "expr": "-((((-b & ~a) * (b - 1 & a) + (-b | a) * (-b & a) ^ a & 1 ^ 1) * ((-b & ~a) * (b - 1 & a) + (-b | a) * (-b & a) ^ a & 0xfffffffe) + ((-b & ~a) * (b - 1 & a) + (-b | a) * (-b & a) ^ a | 1) * ((-b & ~a) * (b - 1 & a) + (-b | a) * (-b & a) ^ a & 1) ^ (~a ^ d) + (d | a) * 2 + 1) + (((-b & ~a) * (b - 1 & a) + (-b | a) * (-b & a) ^ a & 1 ^ 1) * ((-b & ~a) * (b - 1 & a) + (-b | a) * (-b & a) ^ a & 0xfffffffe) + ((-b & ~a) * (b - 1 & a) + (-b | a) * (-b & a) ^ a | 1) * ((-b & ~a) * (b - 1 & a) + (-b | a) * (-b & a) ^ a & 1) & (~a ^ d) + (d | a) * 2 + 1) * 2)",
                    "attributes": {
                        "numOps": 137,
                        "nestedExprLevel": 30,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 64.13612565445025,
                        "opsPercentages": {
                            "arithmetic": 35.03649635036496,
                            "mul": 16.78832116788321,
                            "bitwise": 48.175182481751825
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "clang_default": {
                    "expr": "(((((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) | a) - ((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) & a) & ((b ^ 0xffffffff) & b) * -2 + 1) * (((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) | a) - ((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) & a) | ((b ^ 0xffffffff) & b) * -2 + 1) + (((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) | a) - ((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) & a) & (((b ^ 0xffffffff) & b) * -2 + 1 ^ 0xffffffff)) * ((((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) | a) - ((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) & a) ^ 0xffffffff) & ((b ^ 0xffffffff) & b) * -2 + 1) ^ (d ^ a ^ 0xffffffff) + (d | a) + (d | a) + 1) + ((((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) | a) - ((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) & a) & ((b ^ 0xffffffff) & b) * -2 + 1) * (((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) | a) - ((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) & a) | ((b ^ 0xffffffff) & b) * -2 + 1) + (((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) | a) - ((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) & a) & (((b ^ 0xffffffff) & b) * -2 + 1 ^ 0xffffffff)) * ((((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) | a) - ((a & (b ^ 0xffffffff) + 1) * (a | (b ^ 0xffffffff) + 1) + (a & ((b ^ 0xffffffff) + 1 ^ 0xffffffff)) * ((a ^ 0xffffffff) & (b ^ 0xffffffff) + 1) & a) ^ 0xffffffff) & ((b ^ 0xffffffff) & b) * -2 + 1) & (d ^ a ^ 0xffffffff) + (d | a) + (d | a) + 1) * 2) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 374,
                        "nestedExprLevel": 140,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 2.094240837696335,
                        "opsPercentages": {
                            "arithmetic": 30.481283422459892,
                            "mul": 12.032085561497325,
                            "bitwise": 57.48663101604278
                        },
                        "percentageDAGsCancel": 10.256410256410255
                    }
                },
                "msvc_default": {
                    "expr": "~((((((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) | a) - ((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) & a) & 1) * (((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) | a) - ((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) & a) | 1) + (((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) | a) - ((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) & a) & 0xfffffffe) * (~(((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) | a) - ((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) & a)) & 1) ^ (~a ^ d) + 1 + (d | a) + (d | a)) - 1) + ((((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) | a) - ((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) & a) & 1) * (((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) | a) - ((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) & a) | 1) + (((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) | a) - ((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) & a) & 0xfffffffe) * (~(((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) | a) - ((~b + 1 & a) * (~b + 1 | a) + (~(~b + 1) & a) * (~a & ~b + 1) & a)) & 1) & (~a ^ d) + 1 + (d | a) + (d | a)) * 2)",
                    "attributes": {
                        "numOps": 332,
                        "nestedExprLevel": 82,
                        "numDAGs": 33,
                        "percentDecreaseByOps": 13.089005235602095,
                        "opsPercentages": {
                            "arithmetic": 29.518072289156628,
                            "mul": 11.144578313253012,
                            "bitwise": 59.337349397590366
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "gcc_O3": {
                    "expr": "-((((b - 1 & a) * (~a & -b) + (-b | a) * (-b & a) ^ a | 1) * ((b - 1 & a) * (~a & -b) + (-b | a) * (-b & a) ^ a & 1) + ((b - 1 & a) * (~a & -b) + (-b | a) * (-b & a) ^ a & 1 ^ 1) * ((b - 1 & a) * (~a & -b) + (-b | a) * (-b & a) ^ a & 0xfffffffe) ^ ~(d ^ a) + 1 + (a | d) * 2) + (((b - 1 & a) * (~a & -b) + (-b | a) * (-b & a) ^ a | 1) * ((b - 1 & a) * (~a & -b) + (-b | a) * (-b & a) ^ a & 1) + ((b - 1 & a) * (~a & -b) + (-b | a) * (-b & a) ^ a & 1 ^ 1) * ((b - 1 & a) * (~a & -b) + (-b | a) * (-b & a) ^ a & 0xfffffffe) & ~(d ^ a) + 1 + (a | d) * 2) * 2)",
                    "attributes": {
                        "numOps": 137,
                        "nestedExprLevel": 30,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 64.13612565445025,
                        "opsPercentages": {
                            "arithmetic": 35.03649635036496,
                            "mul": 16.78832116788321,
                            "bitwise": 48.175182481751825
                        },
                        "percentageDAGsCancel": 3.225806451612903
                    }
                }
            }
        },
        {
            "num": 453,
            "gt": {
                "expr": "(((a+(a|a))+(a-b)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 0.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "((((a | (((a + a) + 1) + ((- a - 1) | (- a - 1)))) + (a | (((a + a) + 1) + ((- a - 1) | (- a - 1))))) - (a ^ (((a + a) + 1) + ((- a - 1) | (- a - 1))))) | (((a & ~ b) << 1) - (a ^ b))) + ((((a | (((a + a) + 1) + ((- a - 1) | (- a - 1)))) + (a | (((a + a) + 1) + ((- a - 1) | (- a - 1))))) - (a ^ (((a + a) + 1) + ((- a - 1) | (- a - 1))))) & (((a & ~ b) << 1) - (a ^ b)))",
                "attributes": {
                    "numOps": 71,
                    "nestedExprLevel": 43,
                    "numDAGs": 18,
                    "opsPercentages": {
                        "arithmetic": 69.01408450704226,
                        "mul": 0.0,
                        "bitwise": 30.985915492957744
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~a + a * 2 + 1 | a) * 2 - (~a + a * 2 + 1 ^ a)) + ((~b & a) * 2 - (a ^ b))",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 5,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 74.64788732394366,
                        "opsPercentages": {
                            "arithmetic": 38.88888888888889,
                            "mul": 22.22222222222222,
                            "bitwise": 38.88888888888889
                        },
                        "percentageDAGsCancel": 21.428571428571427
                    }
                },
                "msvc_O1": {
                    "expr": "(a * 2 | (~b & a) * 2 - (a ^ b)) + (a * 2 & (~b & a) * 2 - (a ^ b))",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 5,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 78.87323943661971,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 26.666666666666668,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(a * 2 - (b ^ a)) + (~b & a) * 2",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 90.14084507042254,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 28.57142857142857,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((a | a * 2 + 1 + (0xffffffff - a | 0xffffffff - a)) + (a | a * 2 + 1 + (0xffffffff - a | 0xffffffff - a))) - (a ^ a * 2 + 1 + (0xffffffff - a | 0xffffffff - a)) | (a & (b ^ 0xffffffff)) * 2 - (a ^ b)) + (((a | a * 2 + 1 + (0xffffffff - a | 0xffffffff - a)) + (a | a * 2 + 1 + (0xffffffff - a | 0xffffffff - a))) - (a ^ a * 2 + 1 + (0xffffffff - a | 0xffffffff - a)) & (a & (b ^ 0xffffffff)) * 2 - (a ^ b))",
                    "attributes": {
                        "numOps": 59,
                        "nestedExprLevel": 15,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 16.901408450704224,
                        "opsPercentages": {
                            "arithmetic": 52.54237288135594,
                            "mul": 13.559322033898304,
                            "bitwise": 33.89830508474576
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) | a) + (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) | a)) - (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) ^ a) | (~b & a) * 2 - (a ^ b)) + (((a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) | a) + (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) | a)) - (a * 2 + 1 + (0xffffffff - a | 0xffffffff - a) ^ a) & (~b & a) * 2 - (a ^ b))",
                    "attributes": {
                        "numOps": 59,
                        "nestedExprLevel": 14,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 16.901408450704224,
                        "opsPercentages": {
                            "arithmetic": 52.54237288135594,
                            "mul": 13.559322033898304,
                            "bitwise": 33.89830508474576
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~b & a) * 2 - (b ^ a)) + a * 2",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 90.14084507042254,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 28.57142857142857,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 454,
            "gt": {
                "expr": "(((a-a)&((d*d)^(d*a))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 5,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 40.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "(~ ((a & ~ a) - (~ a & a)) | (((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) - ((d & a) * (d | a) + (d & ~ a) * (~ d & a))) - ((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | ~ ((d & a) * (d | a) + (d & ~ a) * (~ d & a))) << 1)) - 2)) - ~ ((a & ~ a) - (~ a & a))",
                "attributes": {
                    "numOps": 56,
                    "nestedExprLevel": 23,
                    "numDAGs": 28,
                    "opsPercentages": {
                        "arithmetic": 17.857142857142858,
                        "mul": 14.285714285714285,
                        "bitwise": 67.85714285714286
                    },
                    "percentageDAGsCancel": 32.142857142857146
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) ^ 0xffffffff | (((d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d)) - ((d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a))) + (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) | (d & a) * (d | a) + (d & (a ^ 0xffffffff)) * ((d ^ 0xffffffff) & a) ^ 0xffffffff) * -2) - 2) - ((a & (a ^ 0xffffffff)) - ((a ^ 0xffffffff) & a) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 53,
                        "nestedExprLevel": 23,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 5.357142857142857,
                        "opsPercentages": {
                            "arithmetic": 20.754716981132077,
                            "mul": 16.9811320754717,
                            "bitwise": 62.264150943396224
                        },
                        "percentageDAGsCancel": 22.22222222222222
                    }
                },
                "msvc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 455,
            "gt": {
                "expr": "((d+((e|d)^((d^d)^e))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "mba": {
                "expr": "((d | (((((e & ~ d) + d) - (((((d | d) - (d & d)) - e) - ((((d | d) - (d & d)) | ~ e) + (((d | d) - (d & d)) | ~ e))) - 2)) - ((((e & ~ d) + d) | ~ (((((d | d) - (d & d)) - e) - ((((d | d) - (d & d)) | ~ e) + (((d | d) - (d & d)) | ~ e))) - 2)) + (((e & ~ d) + d) | ~ (((((d | d) - (d & d)) - e) - ((((d | d) - (d & d)) | ~ e) + (((d | d) - (d & d)) | ~ e))) - 2)))) - 2)) + (d | (((((e & ~ d) + d) - (((((d | d) - (d & d)) - e) - ((((d | d) - (d & d)) | ~ e) + (((d | d) - (d & d)) | ~ e))) - 2)) - ((((e & ~ d) + d) | ~ (((((d | d) - (d & d)) - e) - ((((d | d) - (d & d)) | ~ e) + (((d | d) - (d & d)) | ~ e))) - 2)) + (((e & ~ d) + d) | ~ (((((d | d) - (d & d)) - e) - ((((d | d) - (d & d)) | ~ e) + (((d | d) - (d & d)) | ~ e))) - 2)))) - 2))) - (d ^ (((((e & ~ d) + d) - (((((d | d) - (d & d)) - e) - ((((d | d) - (d & d)) | ~ e) + (((d | d) - (d & d)) | ~ e))) - 2)) - ((((e & ~ d) + d) | ~ (((((d | d) - (d & d)) - e) - ((((d | d) - (d & d)) | ~ e) + (((d | d) - (d & d)) | ~ e))) - 2)) + (((e & ~ d) + d) | ~ (((((d | d) - (d & d)) - e) - ((((d | d) - (d & d)) | ~ e) + (((d | d) - (d & d)) | ~ e))) - 2)))) - 2))",
                "attributes": {
                    "numOps": 209,
                    "nestedExprLevel": 140,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 41.14832535885167,
                        "mul": 0.0,
                        "bitwise": 58.85167464114832
                    },
                    "percentageDAGsCancel": 22.727272727272727
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((((~d & e) + d) - ((~e * -2 - e) + -2)) + (~e * 2 + e + 1 | (~d & e) + d) * -2) - 2 | d) * 2 - (((((~d & e) + d) - ((~e * -2 - e) + -2)) + (~e * 2 + e + 1 | (~d & e) + d) * -2) - 2 ^ d)",
                    "attributes": {
                        "numOps": 48,
                        "nestedExprLevel": 14,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 77.03349282296651,
                        "opsPercentages": {
                            "arithmetic": 52.083333333333336,
                            "mul": 14.583333333333334,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 15.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~d & e) + (~e - (~(-(~e * 2 + 2) - e) | (~d & e) + d)) * 2 + d + e | d) * 2 - ((~d & e) + (~e - (~(-(~e * 2 + 2) - e) | (~d & e) + d)) * 2 + d + e ^ d)",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 11,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 80.86124401913875,
                        "opsPercentages": {
                            "arithmetic": 42.5,
                            "mul": 12.5,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 15.789473684210526
                    }
                },
                "clang_O3": {
                    "expr": "((((~d & e) + d - e) + (~e | (~d & e) + d) * -2) - 2 | d) * 2 - ((((~d & e) + d - e) + (~e | (~d & e) + d) * -2) - 2 ^ d)",
                    "attributes": {
                        "numOps": 30,
                        "nestedExprLevel": 10,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 85.64593301435407,
                        "opsPercentages": {
                            "arithmetic": 43.333333333333336,
                            "mul": 10.0,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_default": {
                    "expr": "((d | ((((e & (d ^ 0xffffffff)) + d) - ((-((e ^ 0xffffffff) + (e ^ 0xffffffff)) - e) + -2)) - (((e & (d ^ 0xffffffff)) + d | (-((e ^ 0xffffffff) + (e ^ 0xffffffff)) - e) - 2 ^ 0xffffffff) + ((e & (d ^ 0xffffffff)) + d | (-((e ^ 0xffffffff) + (e ^ 0xffffffff)) - e) - 2 ^ 0xffffffff))) - 2) + (d | ((((e & (d ^ 0xffffffff)) + d) - ((-((e ^ 0xffffffff) + (e ^ 0xffffffff)) - e) + -2)) - (((e & (d ^ 0xffffffff)) + d | (-((e ^ 0xffffffff) + (e ^ 0xffffffff)) - e) - 2 ^ 0xffffffff) + ((e & (d ^ 0xffffffff)) + d | (-((e ^ 0xffffffff) + (e ^ 0xffffffff)) - e) - 2 ^ 0xffffffff))) - 2)) - (d ^ ((((e & (d ^ 0xffffffff)) + d) - ((-((e ^ 0xffffffff) + (e ^ 0xffffffff)) - e) + -2)) - (((e & (d ^ 0xffffffff)) + d | (-((e ^ 0xffffffff) + (e ^ 0xffffffff)) - e) - 2 ^ 0xffffffff) + ((e & (d ^ 0xffffffff)) + d | (-((e ^ 0xffffffff) + (e ^ 0xffffffff)) - e) - 2 ^ 0xffffffff))) - 2)",
                    "attributes": {
                        "numOps": 113,
                        "nestedExprLevel": 62,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 45.933014354066984,
                        "opsPercentages": {
                            "arithmetic": 54.86725663716814,
                            "mul": 0.0,
                            "bitwise": 45.13274336283185
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "msvc_default": {
                    "expr": "((((((~d & e) + d) - ((-(~e + ~e) - e) + -2)) - (((~d & e) + d | ~((-(~e + ~e) - e) - 2)) + ((~d & e) + d | ~((-(~e + ~e) - e) - 2)))) - 2 | d) + (((((~d & e) + d) - ((-(~e + ~e) - e) + -2)) - (((~d & e) + d | ~((-(~e + ~e) - e) - 2)) + ((~d & e) + d | ~((-(~e + ~e) - e) - 2)))) - 2 | d)) - (((((~d & e) + d) - ((-(~e + ~e) - e) + -2)) - (((~d & e) + d | ~((-(~e + ~e) - e) - 2)) + ((~d & e) + d | ~((-(~e + ~e) - e) - 2)))) - 2 ^ d)",
                    "attributes": {
                        "numOps": 113,
                        "nestedExprLevel": 42,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 45.933014354066984,
                        "opsPercentages": {
                            "arithmetic": 54.86725663716814,
                            "mul": 0.0,
                            "bitwise": 45.13274336283185
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "gcc_O3": {
                    "expr": "((~d & e) + d + ~e * 2 + e + ((~d & e) + d | ~e * 2 + 1 + e) * -2 | d) * 2 - ((~d & e) + d + ~e * 2 + e + ((~d & e) + d | ~e * 2 + 1 + e) * -2 ^ d)",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 6,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 80.86124401913875,
                        "opsPercentages": {
                            "arithmetic": 42.5,
                            "mul": 17.5,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                }
            }
        },
        {
            "num": 456,
            "gt": {
                "expr": "((((~d)^(-(d+d)))^(~((~d)|((d^a)|a)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "(((((- d - 1) | (~ ((d ^ d) + ((d & d) << 1)) + 1)) - ((- d - 1) & (~ ((d ^ d) + ((d & d) << 1)) + 1))) - (- (((- d - 1) & ~ (((((d | a) - (d & a)) + a) + 1) + ((- ((d | a) - (d & a)) - 1) | (- a - 1)))) + (((((d | a) - (d & a)) + a) + 1) + ((- ((d | a) - (d & a)) - 1) | (- a - 1)))) - 1)) - (((((- d - 1) | (~ ((d ^ d) + ((d & d) << 1)) + 1)) - ((- d - 1) & (~ ((d ^ d) + ((d & d) << 1)) + 1))) | ~ (- (((- d - 1) & ~ (((((d | a) - (d & a)) + a) + 1) + ((- ((d | a) - (d & a)) - 1) | (- a - 1)))) + (((((d | a) - (d & a)) + a) + 1) + ((- ((d | a) - (d & a)) - 1) | (- a - 1)))) - 1)) + ((((- d - 1) | (~ ((d ^ d) + ((d & d) << 1)) + 1)) - ((- d - 1) & (~ ((d ^ d) + ((d & d) << 1)) + 1))) | ~ (- (((- d - 1) & ~ (((((d | a) - (d & a)) + a) + 1) + ((- ((d | a) - (d & a)) - 1) | (- a - 1)))) + (((((d | a) - (d & a)) + a) + 1) + ((- ((d | a) - (d & a)) - 1) | (- a - 1)))) - 1)))) - 2",
                "attributes": {
                    "numOps": 170,
                    "nestedExprLevel": 97,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 58.82352941176471,
                        "mul": 0.0,
                        "bitwise": 41.17647058823529
                    },
                    "percentageDAGsCancel": 12.121212121212121
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((d * 2 - 1 ^ d) - (~((~a | d) + a + (d ^ a) + 1) & d)) + (~d | a + (d ^ a) + 1 + (~a | d) | d * 2 - 1 ^ d) * -2 + -2",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 7,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 82.94117647058825,
                        "opsPercentages": {
                            "arithmetic": 44.827586206896555,
                            "mul": 10.344827586206897,
                            "bitwise": 44.827586206896555
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "msvc_O1": {
                    "expr": "~(a + 1 + ((a & d - a | d) - 1 | ~a - a & d) + a | d) & ~d + (((d * -2 | ~d + (a + 1 + (~(a + 1 + ((a & d - a | d) - 1 | ~a - a & d) + a | d) & ~d - a & d) + (a & d - a | d) - 1 | ~a + a | d | d * -2 | ~d - d * -2 & ~d) * -2) - d * -2 & ~d) - a & d) + (a & d - a | d) - 1 | ~a + a | d + a",
                    "attributes": {
                        "numOps": 78,
                        "nestedExprLevel": 12,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 54.11764705882353,
                        "opsPercentages": {
                            "arithmetic": 43.58974358974359,
                            "mul": 6.41025641025641,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 6.976744186046512
                    }
                },
                "clang_O3": {
                    "expr": "~(d * -2 ^ d)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 97.6470588235294,
                        "opsPercentages": {
                            "arithmetic": 25.0,
                            "mul": 25.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((((0xffffffff - d | (d * 2 ^ 0xffffffff) + 1) - (0xffffffff - d & (d * 2 ^ 0xffffffff) + 1)) - (-1 - ((0xffffffff - d & (((d | a) - (d & a)) + a + 1 + (0xffffffff - ((d | a) - (d & a)) | 0xffffffff - a) ^ 0xffffffff)) + ((d | a) - (d & a)) + a + 1 + (0xffffffff - ((d | a) - (d & a)) | 0xffffffff - a)))) - (((0xffffffff - d | (d * 2 ^ 0xffffffff) + 1) - (0xffffffff - d & (d * 2 ^ 0xffffffff) + 1) | 0xffffffff - ((0xffffffff - d & (((d | a) - (d & a)) + a + 1 + (0xffffffff - ((d | a) - (d & a)) | 0xffffffff - a) ^ 0xffffffff)) + ((d | a) - (d & a)) + a + 1 + (0xffffffff - ((d | a) - (d & a)) | 0xffffffff - a)) ^ 0xffffffff) + ((0xffffffff - d | (d * 2 ^ 0xffffffff) + 1) - (0xffffffff - d & (d * 2 ^ 0xffffffff) + 1) | 0xffffffff - ((0xffffffff - d & (((d | a) - (d & a)) + a + 1 + (0xffffffff - ((d | a) - (d & a)) | 0xffffffff - a) ^ 0xffffffff)) + ((d | a) - (d & a)) + a + 1 + (0xffffffff - ((d | a) - (d & a)) | 0xffffffff - a)) ^ 0xffffffff))) + -2",
                    "attributes": {
                        "numOps": 130,
                        "nestedExprLevel": 53,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 23.52941176470588,
                        "opsPercentages": {
                            "arithmetic": 55.38461538461539,
                            "mul": 4.615384615384616,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((((0xffffffff - d | ~(d * 2) + 1) - (0xffffffff - d & ~(d * 2) + 1)) - (-1 - ((0xffffffff - d & ~(((d | a) - (d & a)) + a + 1 + (0xffffffff - ((d | a) - (d & a)) | 0xffffffff - a ))) + ((d | a) - (d & a)) + a + 1 + (0xffffffff - ((d | a) - (d & a)) | 0xffffffff - a)))) - (((0xffffffff - d | ~(d * 2) + 1) - (0xffffffff - d & ~(d * 2) + 1) | ~(0xffffffff - ((0xffffffff - d & ~(((d | a) - (d & a)) + a + 1 + (0xffffffff - ((d | a) - (d & a)) | 0xffffffff - a))) + ((d | a) - (d & a)) + a + 1 + (0xffffffff - ((d | a) - (d & a)) | 0xffffffff - a)))) + ((0xffffffff - d | ~(d * 2) + 1) - (0xffffffff - d & ~(d * 2) + 1) | ~(0xffffffff - ((0xffffffff - d & ~(((d | a) - (d & a)) + a + 1 + (0xffffffff - ((d | a) - (d & a)) | 0xffffffff - a))) + ((d | a) - (d & a)) + a + 1 + (0xffffffff - ((d | a) - (d & a)) | 0xffffffff - a)))))) + -2",
                    "attributes": {
                        "numOps": 130,
                        "nestedExprLevel": 55,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 23.52941176470588,
                        "opsPercentages": {
                            "arithmetic": 55.38461538461539,
                            "mul": 4.615384615384616,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 3.125
                    }
                },
                "gcc_O3": {
                    "expr": "(d * 2 - 1 ^ d - (~(~a | d) + a + 1 + (d ^ a) & d)) + (~d | d * 2 - 1 ^ d | (~a | d) + a + 1 + (d ^ a)) * -2 + -2",
                    "attributes": {
                        "numOps": 29,
                        "nestedExprLevel": 6,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 82.94117647058825,
                        "opsPercentages": {
                            "arithmetic": 44.827586206896555,
                            "mul": 10.344827586206897,
                            "bitwise": 44.827586206896555
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                }
            }
        },
        {
            "num": 457,
            "gt": {
                "expr": "((((c^e)+(-(a-c)))*(((c&e)+c)&a)))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 12.5,
                        "bitwise": 37.5
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((((c | e) - (c & e)) | (~ ((a ^ c) - ((~ a & c) + (~ a & c))) + 1)) << 1) - (((c | e) - (c & e)) ^ (~ ((a ^ c) - ((~ a & c) + (~ a & c))) + 1))) & (((~ (((((~ c | e) + c) + 1) ^ c) + (((((~ c | e) + c) + 1) & c) << 1)) | a) + (((((~ c | e) + c) + 1) ^ c) + (((((~ c | e) + c) + 1) & c) << 1))) + 1)) * ((((((c | e) - (c & e)) | (~ ((a ^ c) - ((~ a & c) + (~ a & c))) + 1)) << 1) - (((c | e) - (c & e)) ^ (~ ((a ^ c) - ((~ a & c) + (~ a & c))) + 1))) | (((~ (((((~ c | e) + c) + 1) ^ c) + (((((~ c | e) + c) + 1) & c) << 1)) | a) + (((((~ c | e) + c) + 1) ^ c) + (((((~ c | e) + c) + 1) & c) << 1))) + 1)) + ((((((c | e) - (c & e)) | (~ ((a ^ c) - ((~ a & c) + (~ a & c))) + 1)) << 1) - (((c | e) - (c & e)) ^ (~ ((a ^ c) - ((~ a & c) + (~ a & c))) + 1))) & ~ (((~ (((((~ c | e) + c) + 1) ^ c) + (((((~ c | e) + c) + 1) & c) << 1)) | a) + (((((~ c | e) + c) + 1) ^ c) + (((((~ c | e) + c) + 1) & c) << 1))) + 1)) * (~ (((((c | e) - (c & e)) | (~ ((a ^ c) - ((~ a & c) + (~ a & c))) + 1)) << 1) - (((c | e) - (c & e)) ^ (~ ((a ^ c) - ((~ a & c) + (~ a & c))) + 1))) & (((~ (((((~ c | e) + c) + 1) ^ c) + (((((~ c | e) + c) + 1) & c) << 1)) | a) + (((((~ c | e) + c) + 1) ^ c) + (((((~ c | e) + c) + 1) & c) << 1))) + 1))",
                "attributes": {
                    "numOps": 233,
                    "nestedExprLevel": 146,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 36.48068669527897,
                        "mul": 0.8583690987124464,
                        "bitwise": 62.66094420600859
                    },
                    "percentageDAGsCancel": 5.714285714285714
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((c + (~c | e) + 1 & c) * 2 + (c + (~c | e) + 1 ^ c) + (~((c + (~c | e) + 1 & c) * 2 + (c + (~c | e) + 1 ^ c)) | a) + 1 & ~(((~a & c) * 2 + ~(a ^ c) + 1 | c ^ e) * 2) + ((~a & c) * 2 + ~(a ^ c) + 1 ^ c ^ e)) * (((~a & c) * 2 + ~(a ^ c) + 1 | c ^ e) * 2 - ((~a & c) * 2 + ~(a ^ c) + 1 ^ c ^ e) & -((~((c + (~c | e) + 1 & c) * 2 + (c + (~c | e) + 1 ^ c)) | a) + (c + (~c | e) + 1 & c) * 2 + (c + (~c | e) + 1 ^ c)) - 2) + (((~a & c) * 2 + ~(a ^ c) + 1 | c ^ e) * 2 - ((~a & c) * 2 + ~(a ^ c) + 1 ^ c ^ e) & (c + (~c | e) + 1 & c) * 2 + (c + (~c | e) + 1 ^ c) + (~((c + (~c | e) + 1 & c) * 2 + (c + (~c | e) + 1 ^ c)) | a) + 1) * ((c + (~c | e) + 1 & c) * 2 + (c + (~c | e) + 1 ^ c) + (~((c + (~c | e) + 1 & c) * 2 + (c + (~c | e) + 1 ^ c)) | a) + 1 | ((~a & c) * 2 + ~(a ^ c) + 1 | c ^ e) * 2 - ((~a & c) * 2 + ~(a ^ c) + 1 ^ c ^ e))",
                    "attributes": {
                        "numOps": 201,
                        "nestedExprLevel": 47,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 13.733905579399142,
                        "opsPercentages": {
                            "arithmetic": 34.82587064676617,
                            "mul": 10.945273631840797,
                            "bitwise": 54.22885572139303
                        },
                        "percentageDAGsCancel": 7.894736842105263
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~((a ^ c) + (~a & c) * -2) * 2 + 2 | (c | e) - (c & e) * 2) - (~((a ^ c) + (~a & c) * -2) + 1 ^ (c | e) - (c & e)) & (~c | e) + c * 2 + 2 & c * 2 + 1 + (~((~c | e) + c + 1 ^ c + (~c | e) + c * 2 + 2 & c * 2) | a) + (~c | e) + c + 1 ^ c) * (~(~c | e) + c * 2 + 2 & c * 2 + 1 + (~((~c | e) + c + 1 ^ c + (~c | e) + c * 2 + 2 & c * 2) | a) + (~c | e) + c + 1 ^ c & (~((a ^ c) + (~a & c) * -2) * 2 + 2 | (c | e) - (c & e) * 2) - (~((a ^ c) + (~a & c) * -2) + 1 ^ (c | e) - (c & e))) + ((~c | e) + c * 2 + 2 & c * 2 + 1 + (~((~c | e) + c + 1 ^ c + (~c | e) + c * 2 + 2 & c * 2) | a) + (~c | e) + c + 1 ^ c | (~((a ^ c) + (~a & c) * -2) * 2 + 2 | (c | e) - (c & e) * 2) - (~((a ^ c) + (~a & c) * -2) + 1 ^ (c | e) - (c & e))) * ((~c | e) + c * 2 + 2 & c * 2 + 1 + (~((~c | e) + c + 1 ^ c + (~c | e) + c * 2 + 2 & c * 2) | a) + (~c | e) + c + 1 ^ c & (~((a ^ c) + (~a & c) * -2) * 2 + 2 | (c | e) - (c & e) * 2) - (~((a ^ c) + (~a & c) * -2) + 1 ^ (c | e) - (c & e)))",
                    "attributes": {
                        "numOps": 237,
                        "nestedExprLevel": 49,
                        "numDAGs": 55,
                        "percentDecreaseByOps": -1.7167381974248928,
                        "opsPercentages": {
                            "arithmetic": 35.86497890295359,
                            "mul": 14.345991561181433,
                            "bitwise": 49.789029535864984
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_O3": {
                    "expr": "(~(e ^ c | (~a & c) * 2 - (c ^ a)) * 2 - ((~a & c) * 2 - (c ^ a) ^ e ^ c) & ((~c | e) + c + 1 ^ c) + ((~c | e) + c + 1 & c) * 2 + (~((~c | e) + c + 1 ^ c) + ((~c | e) + c + 1 & c) * 2 | a) + 1) * (-((~((~c | e) + c + 1 ^ c) + ((~c | e) + c + 1 & c) * 2 | a) + ((~c | e) + c + 1 ^ c) + ((~c | e) + c + 1 & c) * 2) - 2 & (e ^ c | (~a & c) * 2 - (c ^ a)) * 2 - ((~a & c) * 2 - (c ^ a) ^ e ^ c)) + (((~c | e) + c + 1 ^ c) + ((~c | e) + c + 1 & c) * 2 + (~((~c | e) + c + 1 ^ c) + ((~c | e) + c + 1 & c) * 2 | a) + 1 | (e ^ c | (~a & c) * 2 - (c ^ a)) * 2 - ((~a & c) * 2 - (c ^ a) ^ e ^ c)) * (((~c | e) + c + 1 ^ c) + ((~c | e) + c + 1 & c) * 2 + (~((~c | e) + c + 1 ^ c) + ((~c | e) + c + 1 & c) * 2 | a) + 1 & (e ^ c | (~a & c) * 2 - (c ^ a)) * 2 - ((~a & c) * 2 - (c ^ a) ^ e ^ c))",
                    "attributes": {
                        "numOps": 185,
                        "nestedExprLevel": 42,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 20.600858369098713,
                        "opsPercentages": {
                            "arithmetic": 33.513513513513516,
                            "mul": 11.891891891891893,
                            "bitwise": 54.59459459459459
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "clang_default": {
                    "expr": "(((c | e) - (c & e) | ((a ^ c) - (((a ^ 0xffffffff) & c) + ((a ^ 0xffffffff) & c)) ^ 0xffffffff) + 1) * 2 - ((c | e) - (c & e) ^ ((a ^ c) - (((a ^ 0xffffffff) & c) + ((a ^ 0xffffffff) & c)) ^ 0xffffffff) + 1) & (((c ^ 0xffffffff | e) + c + 1 ^ c) + ((c ^ 0xffffffff | e) + c + 1 & c) * 2 ^ 0xffffffff | a) + ((c ^ 0xffffffff | e) + c + 1 ^ c) + ((c ^ 0xffffffff | e) + c + 1 & c) * 2 + 1) * (((c | e) - (c & e) | ((a ^ c) - (((a ^ 0xffffffff) & c) + ((a ^ 0xffffffff) & c)) ^ 0xffffffff) + 1) * 2 - ((c | e) - (c & e) ^ ((a ^ c) - (((a ^ 0xffffffff) & c) + ((a ^ 0xffffffff) & c)) ^ 0xffffffff) + 1) | (((c ^ 0xffffffff | e) + c + 1 ^ c) + ((c ^ 0xffffffff | e) + c + 1 & c) * 2 ^ 0xffffffff | a) + ((c ^ 0xffffffff | e) + c + 1 ^ c) + ((c ^ 0xffffffff | e) + c + 1 & c) * 2 + 1) + (((c | e) - (c & e) | ((a ^ c) - (((a ^ 0xffffffff) & c) + ((a ^ 0xffffffff) & c)) ^ 0xffffffff) + 1) * 2 - ((c | e) - (c & e) ^ ((a ^ c) - (((a ^ 0xffffffff) & c) + ((a ^ 0xffffffff) & c)) ^ 0xffffffff) + 1) & ((((c ^ 0xffffffff | e) + c + 1 ^ c) + ((c ^ 0xffffffff | e) + c + 1 & c) * 2 ^ 0xffffffff | a) + ((c ^ 0xffffffff | e) + c + 1 ^ c) + ((c ^ 0xffffffff | e) + c + 1 & c) * 2 + 1 ^ 0xffffffff)) * ((((c | e) - (c & e) | ((a ^ c) - (((a ^ 0xffffffff) & c) + ((a ^ 0xffffffff) & c)) ^ 0xffffffff) + 1) * 2 - ((c | e) - (c & e) ^ ((a ^ c) - (((a ^ 0xffffffff) & c) + ((a ^ 0xffffffff) & c)) ^ 0xffffffff ) + 1) ^ 0xffffffff) & (((c ^ 0xffffffff | e) + c + 1 ^ c) + ((c ^ 0xffffffff | e) + c + 1 & c) * 2 ^ 0xffffffff | a) + ((c ^ 0xffffffff | e) + c + 1 ^ c) + ((c ^ 0xffffffff | e) + c + 1 & c) * 2 + 1)",
                    "attributes": {
                        "numOps": 233,
                        "nestedExprLevel": 76,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 36.48068669527897,
                            "mul": 6.008583690987124,
                            "bitwise": 57.5107296137339
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(((c | e) - (c & e) | ~((a ^ c) - ((~a & c) + (~a & c))) + 1) * 2 - ((c | e) - (c & e) ^ ~((a ^ c) - ((~a & c) + (~a & c))) + 1) & (~(((~c | e) + 1 + c ^ c) + ((~c | e) + 1 + c & c) * 2) | a) + 1 + ((~c | e) + 1 + c ^ c) + ((~c | e) + 1 + c & c) * 2) * (((c | e) - (c & e) | ~((a ^ c) - ((~a & c) + (~a & c))) + 1) * 2 - ((c | e) - (c & e) ^ ~((a ^ c) - ((~a & c) + (~a & c))) + 1) | (~(((~c | e) + 1 + c ^ c) + ((~c | e) + 1 + c & c) * 2) | a) + 1 + ((~c | e) + 1 + c ^ c) + ((~c | e) + 1 + c & c) * 2) + (((c | e) - (c & e) | ~((a ^ c) - ((~a & c) + (~a & c))) + 1) * 2 - ((c | e) - (c & e) ^ ~((a ^ c) - ((~a & c) + (~a & c))) + 1) & ~((~(((~c | e) + 1 + c ^ c) + ((~c | e) + 1 + c & c) * 2) | a) + 1 + ((~c | e) + 1 + c ^ c) + ((~c | e) + 1 + c & c) * 2)) * (~(((c | e) - (c & e) | ~((a ^ c) - ((~a & c) + (~a & c))) + 1) * 2 - ((c | e) - (c & e) ^ ~((a ^ c) - ((~a & c) + (~a & c))) + 1)) & (~(((~c | e) + 1 + c ^ c) + ((~c | e) + 1 + c & c) * 2) | a) + 1 + ((~c | e) + 1 + c ^ c) + ((~c | e) + 1 + c & c) * 2)",
                    "attributes": {
                        "numOps": 233,
                        "nestedExprLevel": 72,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 36.48068669527897,
                            "mul": 6.008583690987124,
                            "bitwise": 57.5107296137339
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "gcc_O3": {
                    "expr": "(~(e ^ c | ~(c ^ a) + 1 + (~a & c) * 2) * 2 + e ^ c ^ ~(c ^ a) + 1 + (~a & c) * 2 & (~(c + 1 + (~c | e) ^ c) + (c + 1 + (~c | e) & c) * 2 | a) + (c + 1 + (~c | e) ^ c) + (c + 1 + (~c | e) & c) * 2 + 1) * (-(~(c + 1 + (~c | e) ^ c) + (c + 1 + (~c | e) & c) * 2 | a) + (c + 1 + (~c | e) ^ c) + (c + 1 + (~c | e) & c) * 2 - 2 & (e ^ c | ~(c ^ a) + 1 + (~a & c) * 2) * 2 - e ^ c ^ ~(c ^ a) + 1 + (~a & c) * 2) + ((e ^ c | ~(c ^ a) + 1 + (~a & c) * 2) * 2 - e ^ c ^ ~(c ^ a) + 1 + (~a & c) * 2 & (~(c + 1 + (~c | e) ^ c) + (c + 1 + (~c | e) & c) * 2 | a) + (c + 1 + (~c | e) ^ c) + (c + 1 + (~c | e) & c) * 2 + 1) * ((e ^ c | ~(c ^ a) + 1 + (~a & c) * 2) * 2 - e ^ c ^ ~(c ^ a) + 1 + (~a & c) * 2 | (~(c + 1 + (~c | e) ^ c) + (c + 1 + (~c | e) & c) * 2 | a) + (c + 1 + (~c | e) ^ c) + (c + 1 + (~c | e) & c) * 2 + 1)",
                    "attributes": {
                        "numOps": 201,
                        "nestedExprLevel": 38,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 13.733905579399142,
                        "opsPercentages": {
                            "arithmetic": 34.82587064676617,
                            "mul": 10.945273631840797,
                            "bitwise": 54.22885572139303
                        },
                        "percentageDAGsCancel": 2.272727272727273
                    }
                }
            }
        },
        {
            "num": 458,
            "gt": {
                "expr": "((((a^(d|a))*a)+(a|(-(a&(a^d))))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 9,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 12.5,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(((((((a - ((d & ~ a) + a)) - ((a | ~ ((d & ~ a) + a)) + (a | ~ ((d & ~ a) + a)))) - 2) & a) * ((((a - ((d & ~ a) + a)) - ((a | ~ ((d & ~ a) + a)) + (a | ~ ((d & ~ a) + a)))) - 2) | a) + ((((a - ((d & ~ a) + a)) - ((a | ~ ((d & ~ a) + a)) + (a | ~ ((d & ~ a) + a)))) - 2) & ~ a) * (~ (((a - ((d & ~ a) + a)) - ((a | ~ ((d & ~ a) + a)) + (a | ~ ((d & ~ a) + a)))) - 2) & a)) | (((a + ~ ((((~ a | (((a - d) - ((a | ~ d) << 1)) - 2)) + a) + 1) - 1)) + 1) + ((- a - 1) | (- (~ ((((~ a | (((a - d) - ((a | ~ d) << 1)) - 2)) + a) + 1) - 1)) - 1)))) + ((((((a - ((d & ~ a) + a)) - ((a | ~ ((d & ~ a) + a)) + (a | ~ ((d & ~ a) + a)))) - 2) & a) * ((((a - ((d & ~ a) + a)) - ((a | ~ ((d & ~ a) + a)) + (a | ~ ((d & ~ a) + a)))) - 2) | a) + ((((a - ((d & ~ a) + a)) - ((a | ~ ((d & ~ a) + a)) + (a | ~ ((d & ~ a) + a)))) - 2) & ~ a) * (~ (((a - ((d & ~ a) + a)) - ((a | ~ ((d & ~ a) + a)) + (a | ~ ((d & ~ a) + a)))) - 2) & a)) | (((a + ~ ((((~ a | (((a - d) - ((a | ~ d) << 1)) - 2)) + a) + 1) - 1)) + 1) + ((- a - 1) | (- (~ ((((~ a | (((a - d) - ((a | ~ d) << 1)) - 2)) + a) + 1) - 1)) - 1))))) - ((((((a - ((d & ~ a) + a)) - ((a | ~ ((d & ~ a) + a)) + (a | ~ ((d & ~ a) + a)))) - 2) & a) * ((((a - ((d & ~ a) + a)) - ((a | ~ ((d & ~ a) + a)) + (a | ~ ((d & ~ a) + a)))) - 2) | a) + ((((a - ((d & ~ a) + a)) - ((a | ~ ((d & ~ a) + a)) + (a | ~ ((d & ~ a) + a)))) - 2) & ~ a) * (~ (((a - ((d & ~ a) + a)) - ((a | ~ ((d & ~ a) + a)) + (a | ~ ((d & ~ a) + a)))) - 2) & a)) ^ (((a + ~ ((((~ a | (((a - d) - ((a | ~ d) << 1)) - 2)) + a) + 1) - 1)) + 1) + ((- a - 1) | (- (~ ((((~ a | (((a - d) - ((a | ~ d) << 1)) - 2)) + a) + 1) - 1)) - 1))))",
                "attributes": {
                    "numOps": 332,
                    "nestedExprLevel": 189,
                    "numDAGs": 40,
                    "opsPercentages": {
                        "arithmetic": 43.97590361445783,
                        "mul": 1.8072289156626504,
                        "bitwise": 54.21686746987952
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((a + (~a | ((a - d) + (~d | a) * -2) - 2) | ~a) + a + ~(a + (~a | ((a - d) + (~d | a) * -2) - 2)) + 1 | (((~(a + (~a & d)) | a) * -2 - (~a & d)) - 2 & a) * (((~(a + (~a & d)) | a) * -2 - (~a & d)) - 2 | a) + ((~(a + (~a & d)) | a) * 2 + (~a & d) + 1 & a) * (((~(a + (~a & d)) | a) * -2 - (~a & d)) - 2 & ~a)) * 2 - ((((~(a + (~a & d)) | a) * -2 - (~a & d)) - 2 & a) * (((~(a + (~a & d)) | a) * -2 - (~a & d)) - 2 | a) + ((~(a + (~a & d)) | a) * 2 + (~a & d) + 1 & a) * (((~(a + (~a & d)) | a) * -2 - (~a & d)) - 2 & ~a ) ^ (a + (~a | ((a - d) + (~d | a) * -2) - 2) | ~a) + a + ~(a + (~a | ((a - d) + (~d | a) * -2) - 2 )) + 1)",
                    "attributes": {
                        "numOps": 158,
                        "nestedExprLevel": 57,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 52.40963855421686,
                        "opsPercentages": {
                            "arithmetic": 37.34177215189873,
                            "mul": 10.759493670886076,
                            "bitwise": 51.89873417721519
                        },
                        "percentageDAGsCancel": 13.88888888888889
                    }
                },
                "msvc_O1": {
                    "expr": "((((((a + (~d | a) * -2) - d) - 2 | ~a) + a | ~a) - (((a + (~d | a) * -2) - d) - 2 | ~a) + a) + a | (-((~((~a & d) + a) | a) * 2 + 2) - (~a & d) & a) * (-((~((~a & d) + a) | a) * 2 + 2) - (~a & d) | a) + (~-((~((~a & d) + a) | a) * 2 + 2) - (~a & d) & a) * (-((~((~a & d) + a) | a) * 2 + 2) - (~a & d) & ~a)) * 2 - ((((((a + (~d | a) * -2) - d) - 2 | ~a) + a | ~a) - (((a + (~d | a) * -2) - d) - 2 | ~a) + a) + a ^ (-((~((~a & d) + a) | a) * 2 + 2) - (~a & d) & a) * (-((~((~a & d) + a) | a) * 2 + 2) - (~a & d) | a) + (~-((~((~a & d) + a) | a) * 2 + 2) - (~a & d) & a) * (-((~((~a & d) + a) | a) * 2 + 2) - (~a & d) & ~a))",
                    "attributes": {
                        "numOps": 158,
                        "nestedExprLevel": 59,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 52.40963855421686,
                        "opsPercentages": {
                            "arithmetic": 37.34177215189873,
                            "mul": 10.759493670886076,
                            "bitwise": 51.89873417721519
                        },
                        "percentageDAGsCancel": 8.571428571428571
                    }
                },
                "clang_O3": {
                    "expr": "((~a & d + ~(~a & d + a) | a * 2 + 1 & a) * (-(~a & d + ~(~a & d + a) | a * 2) - 2 & ~a) + (-(~a & d + ~(~a & d + a) | a * 2) - 2 | a) * (-(~a & d + ~(~a & d + a) | a * 2) - 2 & a) | (a + ((a - d) + (~d | a) * -2) - 2 | ~a | ~a) - ((a - d) + (~d | a) * -2) - 2 | ~a) * 2 - ((a + ((a - d) + (~d | a) * -2) - 2 | ~a | ~a) - ((a - d) + (~d | a) * -2) - 2 | ~a ^ (~a & d + ~(~a & d + a) | a * 2 + 1 & a) * (-(~a & d + ~(~a & d + a) | a * 2) - 2 & ~a) + (-(~a & d + ~(~a & d + a) | a * 2) - 2 | a) * (-(~a & d + ~(~a & d + a) | a * 2) - 2 & a))",
                    "attributes": {
                        "numOps": 150,
                        "nestedExprLevel": 28,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 54.81927710843374,
                        "opsPercentages": {
                            "arithmetic": 35.333333333333336,
                            "mul": 11.333333333333332,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((((a - ((d & (a ^ 0xffffffff)) + a)) - ((a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + (a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff))) - 2 & a) * ((-((a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + (a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff)) - (d & (a ^ 0xffffffff))) - 2 | a) + ((-((a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + (a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff)) - (d & (a ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) * (((-((a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + (a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff)) - (d & (a ^ 0xffffffff))) - 2 ^ 0xffffffff) & a) | a + ((a ^ 0xffffffff | ((a - d) + (a | d ^ 0xffffffff) * -2) - 2) + a ^ 0xffffffff) + 1 + (0xffffffff - a | 0xffffffff - ((a ^ 0xffffffff | ((a - d) + (a | d ^ 0xffffffff) * -2) - 2) + a ^ 0xffffffff))) + (((-((a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + (a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff)) - (d & (a ^ 0xffffffff))) - 2 & a) * ((-((a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + (a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff)) - (d & (a ^ 0xffffffff))) - 2 | a) + ((-((a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + (a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff)) - (d & (a ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) * (((-((a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + (a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff)) - (d & (a ^ 0xffffffff))) - 2 ^ 0xffffffff) & a) | a + ((a ^ 0xffffffff | ((a - d) + (a | d ^ 0xffffffff) * -2) - 2) + a ^ 0xffffffff) + 1 + (0xffffffff - a | 0xffffffff - ((a ^ 0xffffffff | ((a - d) + (a | d ^ 0xffffffff) * -2) - 2) + a ^ 0xffffffff)))) - (((-((a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + (a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff)) - (d & (a ^ 0xffffffff))) - 2 & a) * ((-((a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + (a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff)) - (d & (a ^ 0xffffffff))) - 2 | a) + ((-((a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + (a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff)) - (d & (a ^ 0xffffffff))) - 2 & (a ^ 0xffffffff)) * (((-((a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff) + (a | (d & (a ^ 0xffffffff)) + a ^ 0xffffffff)) - (d & (a ^ 0xffffffff))) - 2 ^ 0xffffffff) & a) ^ a + ((a ^ 0xffffffff | ((a - d) + (a | d ^ 0xffffffff) * -2) - 2) + a ^ 0xffffffff) + 1 + (0xffffffff - a | 0xffffffff - ((a ^ 0xffffffff | ((a - d) + (a | d ^ 0xffffffff) * -2) - 2) + a ^ 0xffffffff)))",
                    "attributes": {
                        "numOps": 309,
                        "nestedExprLevel": 136,
                        "numDAGs": 44,
                        "percentDecreaseByOps": 6.927710843373494,
                        "opsPercentages": {
                            "arithmetic": 39.80582524271845,
                            "mul": 3.8834951456310676,
                            "bitwise": 56.310679611650485
                        },
                        "percentageDAGsCancel": 11.363636363636363
                    }
                },
                "msvc_default": {
                    "expr": "((((-((~((~a & d) + a) | a) + (~((~a & d) + a) | a)) - (~a & d)) - 2 & a) * ((-((~((~a & d) + a) | a) + (~((~a & d) + a) | a)) - (~a & d)) - 2 | a) + ((-((~((~a & d) + a) | a) + (~((~a & d) + a) | a)) - (~a & d)) - 2 & ~a ) * (~((-((~((~a & d) + a) | a) + (~((~a & d) + a) | a)) - (~a & d)) - 2) & a) | ~((~a | ((a - d) + (~d | a) * -2) - 2) + a) + a + 1 + (0xffffffff - a | 0xffffffff - ~((~a | ((a - d) + (~d | a) * -2) - 2) + a))) + (((-((~((~a & d) + a) | a) + (~((~a & d) + a) | a)) - (~a & d)) - 2 & a) * ((-((~((~a & d) + a) | a) + (~((~a & d) + a) | a)) - (~a & d)) - 2 | a ) + ((-((~((~a & d) + a) | a) + (~((~a & d) + a) | a)) - (~a & d)) - 2 & ~a) * (~((-((~((~a & d) + a) | a) + (~((~a & d) + a) | a)) - (~a & d)) - 2) & a) | ~((~a | ((a - d) + (~d | a) * -2) - 2) + a) + a + 1 + (0xffffffff - a | 0xffffffff - ~((~a | ((a - d) + (~d | a) * -2) - 2) + a)))) - (((-((~((~a & d) + a) | a) + (~((~a & d) + a) | a)) - (~a & d)) - 2 & a) * ((-((~((~a & d) + a) | a) + (~((~a & d) + a) | a)) - (~a & d)) - 2 | a ) + ((-((~((~a & d) + a) | a) + (~((~a & d) + a) | a)) - (~a & d)) - 2 & ~a) * (~((-((~((~a & d) + a) | a) + (~((~a & d) + a) | a)) - (~a & d)) - 2) & a) ^ ~((~a | ((a - d) + (~d | a) * -2) - 2) + a) + a + 1 + (0xffffffff - a | 0xffffffff - ~((~a | ((a - d) + (~d | a) * -2) - 2) + a)))",
                    "attributes": {
                        "numOps": 308,
                        "nestedExprLevel": 131,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 7.228915662650602,
                        "opsPercentages": {
                            "arithmetic": 39.61038961038961,
                            "mul": 3.896103896103896,
                            "bitwise": 56.493506493506494
                        },
                        "percentageDAGsCancel": 13.513513513513514
                    }
                },
                "gcc_O3": {
                    "expr": "((~a & d + 1 + ~(~a & d + a) | a * 2 & a) * (~a & (~(~a & d + a) | a * -2 - ~a & d) - 2) + ((~(~a & d + a) | a * -2 - ~a & d) - 2 | a) * ((~(~a & d + a) | a * -2 - ~a & d) - 2 & a) | (~a | a + ((a - d) + (~d | a) * -2) - 2 | ~a) - ((a - d) + (~d | a) * -2) - 2 | ~a) * 2 - ((~a & d + 1 + ~(~a & d + a) | a * 2 & a) * (~a & (~(~a & d + a) | a * -2 - ~a & d) - 2) + ((~(~a & d + a) | a * -2 - ~a & d) - 2 | a) * ((~(~a & d + a) | a * -2 - ~a & d) - 2 & a) ^ (~a | a + ((a - d) + (~d | a) * -2) - 2 | ~a) - ((a - d) + (~d | a) * -2) - 2 | ~a)",
                    "attributes": {
                        "numOps": 150,
                        "nestedExprLevel": 27,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 54.81927710843374,
                        "opsPercentages": {
                            "arithmetic": 35.333333333333336,
                            "mul": 11.333333333333332,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                }
            }
        },
        {
            "num": 459,
            "gt": {
                "expr": "(((~c)-(e+(a^e))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((- c - 1) & ~ ((e - ~ (((a - e) - ((a | ~ e) << 1)) - 2)) - 1)) - (~ (- c - 1) & ((e - ~ (((a - e) - ((a | ~ e) << 1)) - 2)) - 1))",
                "attributes": {
                    "numOps": 27,
                    "nestedExprLevel": 14,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 55.55555555555556,
                        "mul": 0.0,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~c & (~e | a) * 2 + ~a + e + ~e + 3) - (((~e | a) * -2 - ~a) - 3 & c)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 5,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 25.925925925925924,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 10.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~((a + (~e | a) * -2) - 2 | c) - ((a + (~e | a) * -2) - 2 & c)",
                    "attributes": {
                        "numOps": 16,
                        "nestedExprLevel": 6,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 40.74074074074074,
                        "opsPercentages": {
                            "arithmetic": 43.75,
                            "mul": 12.5,
                            "bitwise": 43.75
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(-(~((e - a) + (~e | a) * 2) + e) & ~c) - ((~((e - a) + (~e | a) * 2) + e) - 1 & c)",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 9,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 25.925925925925924,
                        "opsPercentages": {
                            "arithmetic": 45.0,
                            "mul": 10.0,
                            "bitwise": 45.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - c & ((e - (((a - e) + (a | e ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) - 1 ^ 0xffffffff)) - ((0xffffffff - c ^ 0xffffffff) & (e - (((a - e) + (a | e ^ 0xffffffff) * -2) - 2 ^ 0xffffffff)) - 1)",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 12,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 7.4074074074074066,
                            "bitwise": 37.03703703703704
                        },
                        "percentageDAGsCancel": 6.25
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - c & ~((e - ~(((a - e) + (~e | a) * -2) - 2)) - 1)) - (~(0xffffffff - c) & (e - ~(((a - e) + (~e | a) * -2) - 2)) - 1)",
                    "attributes": {
                        "numOps": 27,
                        "nestedExprLevel": 12,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 7.4074074074074066,
                            "bitwise": 37.03703703703704
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~e + 1 + ~a + e + 2 + (a | ~e) * 2 & ~c) - ((e - ~a + e + 2 + (a | ~e) * 2) - 1 & c)",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 5,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 14.814814814814813,
                        "opsPercentages": {
                            "arithmetic": 47.82608695652174,
                            "mul": 8.695652173913043,
                            "bitwise": 43.47826086956522
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 460,
            "gt": {
                "expr": "((((e+e)&e)|(c-e)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(((~ (((e ^ ~ e) + ((e | e) << 1)) + 1) | e) - ~ (((e ^ ~ e) + ((e | e) << 1)) + 1)) & ~ ((c + ~ e) + 1)) + ((c + ~ e) + 1)",
                "attributes": {
                    "numOps": 25,
                    "nestedExprLevel": 13,
                    "numDAGs": 14,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 7.142857142857142
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "c + ~e + 1 + (e * 2 & e & (e - c) - 1)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 64.0,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 11.11111111111111,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_O1": {
                    "expr": "((~(e * 2) | e) + 1 + e * 2 & ~(c - e)) + (c - e)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 5,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 56.00000000000001,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 18.181818181818183,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(c - e) & e * 2 & e) + (c - e)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 72.0,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 14.285714285714285,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e ^ e ^ 0xffffffff) + e * 2 + 1 ^ 0xffffffff | e) - ((e ^ e ^ 0xffffffff) + e * 2 + 1 ^ 0xffffffff) & (c + (e ^ 0xffffffff) + 1 ^ 0xffffffff)) + c + (e ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 6,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 8.0,
                        "opsPercentages": {
                            "arithmetic": 43.47826086956522,
                            "mul": 8.695652173913043,
                            "bitwise": 47.82608695652174
                        },
                        "percentageDAGsCancel": 18.75
                    }
                },
                "msvc_default": {
                    "expr": "~e + 1 + ((~(e * 2) | e) - ~(e * 2) & ~(c + 1 + ~e)) + c",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 5,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 40.0,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 13.333333333333334,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "gcc_O3": {
                    "expr": "(e * 2 & e & (e - c) - 1) + (c - e)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 72.0,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 14.285714285714285,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 461,
            "gt": {
                "expr": "((((e*e)-(-d))*(-((-e)+((e|d)^(d-d))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 20.0,
                        "bitwise": 20.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "(((((e & e) * (e | e) + (e & ~ e) * (~ e & e)) + ~ (~ (d - 1))) + 1) & ~ (((((~ e + 1) | ((((((e + d) + 1) + ((- e - 1) | (- d - 1))) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - (((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) + ((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))))) - 2)) + ((~ e + 1) | ((((((e + d) + 1) + ((- e - 1) | (- d - 1))) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - (((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) + ((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))))) - 2))) - ((~ e + 1) ^ ((((((e + d) + 1) + ((- e - 1) | (- d - 1))) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - (((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) + ((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))))) - 2))) - 1)) * (((((e & e) * (e | e) + (e & ~ e) * (~ e & e)) + ~ (~ (d - 1))) + 1) | ~ (((((~ e + 1) | ((((((e + d) + 1) + ((- e - 1) | (- d - 1))) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - (((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) + ((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))))) - 2)) + ((~ e + 1) | ((((((e + d) + 1) + ((- e - 1) | (- d - 1))) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - (((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) + ((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))))) - 2))) - ((~ e + 1) ^ ((((((e + d) + 1) + ((- e - 1) | (- d - 1))) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - (((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) + ((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))))) - 2))) - 1)) + (((((e & e) * (e | e) + (e & ~ e) * (~ e & e)) + ~ (~ (d - 1))) + 1) & ~ (~ (((((~ e + 1) | ((((((e + d) + 1) + ((- e - 1) | (- d - 1))) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - (((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) + ((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))))) - 2)) + ((~ e + 1) | ((((((e + d) + 1) + ((- e - 1) | (- d - 1))) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - (((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) + ((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))))) - 2))) - ((~ e + 1) ^ ((((((e + d) + 1) + ((- e - 1) | (- d - 1))) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - (((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) + ((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))))) - 2))) - 1))) * (~ ((((e & e) * (e | e) + (e & ~ e) * (~ e & e)) + ~ (~ (d - 1))) + 1) & ~ (((((~ e + 1) | ((((((e + d) + 1) + ((- e - 1) | (- d - 1))) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - (((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) + ((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))))) - 2)) + ((~ e + 1) | ((((((e + d) + 1) + ((- e - 1) | (- d - 1))) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - (((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) + ((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))))) - 2))) - ((~ e + 1) ^ ((((((e + d) + 1) + ((- e - 1) | (- d - 1))) - ((d ^ d) - ((~ d & d) + (~ d & d)))) - (((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))) + ((((e + d) + 1) + ((- e - 1) | (- d - 1))) | ~ ((d ^ d) - ((~ d & d) + (~ d & d)))))) - 2))) - 1))",
                "attributes": {
                    "numOps": 753,
                    "nestedExprLevel": 378,
                    "numDAGs": 48,
                    "opsPercentages": {
                        "arithmetic": 54.8472775564409,
                        "mul": 1.3280212483399734,
                        "bitwise": 43.82470119521912
                    },
                    "percentageDAGsCancel": 18.75
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~(e & d) + d + e + 1 ^ -e) + ~((~(e & d) + d + e + 1 | -e) * 2) + 1 & -((d - 1) + e * e) - 2) * (d + e * e & ((~(e & d) + d + e + 1 | -e) * 2 - (-e ^ ~(e & d) + d + e + 1)) - 1) + (d + e * e & (~(e & d) + d + e + 1 ^ -e) + ~((~(e & d) + d + e + 1 | -e) * 2) + 1) * ((~(e & d) + d + e + 1 ^ -e) + ~((~(e & d) + d + e + 1 | -e) * 2) + 1 | d + e * e)",
                    "attributes": {
                        "numOps": 89,
                        "nestedExprLevel": 19,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 88.18061088977423,
                        "opsPercentages": {
                            "arithmetic": 53.93258426966292,
                            "mul": 11.235955056179774,
                            "bitwise": 34.831460674157306
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "msvc_O1": {
                    "expr": "(~e * e + d & ~(((d - (d & e)) + e | -e) * 2 - ((d - (d & e)) + e ^ -e)) - 1) * ((((d - (d & e)) + e | -e) * 2 - ((d - (d & e)) + e ^ -e)) - 1 & e * e + d) + (~(((d - (d & e)) + e | -e) * 2 - ((d - (d & e)) + e ^ -e)) - 1 | e * e + d) * (~(((d - (d & e)) + e | -e) * 2 - ((d - (d & e)) + e ^ -e)) - 1 & e * e + d)",
                    "attributes": {
                        "numOps": 71,
                        "nestedExprLevel": 26,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 90.57104913678619,
                        "opsPercentages": {
                            "arithmetic": 52.112676056338024,
                            "mul": 14.084507042253522,
                            "bitwise": 33.80281690140845
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "clang_O3": {
                    "expr": "(~e * e + d & (e | d) ^ -e + e | d | -e * -2) * (~(e | d) ^ -e + e | d | -e * 2 & e * e + d) + ((e | d) ^ -e + e | d | -e * -2 | e * e + d) * ((e | d) ^ -e + e | d | -e * -2 & e * e + d)",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 6,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 93.09428950863213,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 19.230769230769234,
                            "bitwise": 42.30769230769231
                        },
                        "percentageDAGsCancel": 6.896551724137931
                    }
                },
                "clang_default": {
                    "expr": "(e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + d & (((((e ^ 0xffffffff) + 1 | ((e + d + (0xffffffff - e | 0xffffffff - d) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) - ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff ) + (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff))) - 1) + ((e ^ 0xffffffff) + 1 | ((e + d + (0xffffffff - e | 0xffffffff - d) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) - ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) + (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff ))) - 1)) - ((e ^ 0xffffffff) + 1 ^ ((e + d + (0xffffffff - e | 0xffffffff - d) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) - ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) + (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) )) - 1)) - 1 ^ 0xffffffff)) * (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + d | ((((e ^ 0xffffffff) + 1 | ((e + d + (0xffffffff - e | 0xffffffff - d) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) - ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) + (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff ))) - 1) + ((e ^ 0xffffffff) + 1 | ((e + d + (0xffffffff - e | 0xffffffff - d) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) - ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) + (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) )) - 1)) - ((e ^ 0xffffffff) + 1 ^ ((e + d + (0xffffffff - e | 0xffffffff - d) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) - ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) + (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff))) - 1)) - 1 ^ 0xffffffff) + (e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + d & ((((e ^ 0xffffffff) + 1 | ((e + d + (0xffffffff - e | 0xffffffff - d) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) - ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) + (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff ))) - 1) + ((e ^ 0xffffffff) + 1 | ((e + d + (0xffffffff - e | 0xffffffff - d) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) - ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) + (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) )) - 1)) - ((e ^ 0xffffffff) + 1 ^ ((e + d + (0xffffffff - e | 0xffffffff - d) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) - ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) + (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff))) - 1)) - 1) * ((e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e) + d ^ 0xffffffff) & (((((e ^ 0xffffffff) + 1 | ((e + d + (0xffffffff - e | 0xffffffff - d) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) - ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff ) + (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff))) - 1) + ((e ^ 0xffffffff) + 1 | ((e + d + (0xffffffff - e | 0xffffffff - d) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) - ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) + (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff ))) - 1)) - ((e ^ 0xffffffff) + 1 ^ ((e + d + (0xffffffff - e | 0xffffffff - d) + ((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) - ((e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) + (e + d + 1 + (0xffffffff - e | 0xffffffff - d) | -(((d ^ 0xffffffff) & d) + ((d ^ 0xffffffff) & d)) ^ 0xffffffff) )) - 1)) - 1 ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 595,
                        "nestedExprLevel": 193,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 20.98273572377158,
                        "opsPercentages": {
                            "arithmetic": 51.932773109243705,
                            "mul": 1.680672268907563,
                            "bitwise": 46.38655462184874
                        },
                        "percentageDAGsCancel": 17.5
                    }
                },
                "msvc_default": {
                    "expr": "(e * e + d & ~((((~e + 1 | e + d + (0xffffffff - e | 0xffffffff - d) + 1) + (~e + 1 | e + d + (0xffffffff - e | 0xffffffff - d) + 1 )) - (~e + 1 ^ e + d + (0xffffffff - e | 0xffffffff - d) + 1)) - 1)) * (e * e + d | ~((((~e + 1 | e + d + (0xffffffff - e | 0xffffffff - d) + 1) + (~e + 1 | e + d + (0xffffffff - e | 0xffffffff - d) + 1 )) - (~e + 1 ^ e + d + (0xffffffff - e | 0xffffffff - d) + 1)) - 1)) + (e * e + d & (((~e + 1 | e + d + (0xffffffff - e | 0xffffffff - d) + 1) + (~e + 1 | e + d + (0xffffffff - e | 0xffffffff - d) + 1 )) - (~e + 1 ^ e + d + (0xffffffff - e | 0xffffffff - d) + 1)) - 1) * (~(e * e + d) & ~((((~e + 1 | e + d + (0xffffffff - e | 0xffffffff - d) + 1) + (~e + 1 | e + d + (0xffffffff - e | 0xffffffff - d) + 1 )) - (~e + 1 ^ e + d + (0xffffffff - e | 0xffffffff - d) + 1)) - 1))",
                    "attributes": {
                        "numOps": 139,
                        "nestedExprLevel": 29,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 81.54050464807437,
                        "opsPercentages": {
                            "arithmetic": 64.02877697841727,
                            "mul": 4.316546762589928,
                            "bitwise": 31.654676258992804
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((-e | (d + e) - (e & d) * 2 - -e ^ (d + e) - (e & d)) - 1 & d + e * e) * (~(e * e) - d & -e ^ (d + e) - (e & d) + -e | (d + e) - (e & d) * -2) + (d + e * e & -e ^ (d + e) - (e & d) + -e | (d + e) - (e & d) * -2) * (d + e * e | -e ^ (d + e) - (e & d) + -e | (d + e) - (e & d) * -2)",
                    "attributes": {
                        "numOps": 68,
                        "nestedExprLevel": 14,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 90.96945551128817,
                        "opsPercentages": {
                            "arithmetic": 54.41176470588235,
                            "mul": 14.705882352941178,
                            "bitwise": 30.88235294117647
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 462,
            "gt": {
                "expr": "((((~d)|((~c)+d))*((a-(a-d))|a)))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 12.5,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 12.5
                }
            },
            "mba": {
                "expr": "(((((- d - 1) + ((((- c - 1) ^ ~ d) + (((- c - 1) | d) << 1)) + 1)) + 1) + ((- (- d - 1) - 1) | (- ((((- c - 1) ^ ~ d) + (((- c - 1) | d) << 1)) + 1) - 1))) & ((((a ^ (((a & ~ d) + (a & ~ d)) - (a ^ d))) - ((~ a & (((a & ~ d) + (a & ~ d)) - (a ^ d))) + (~ a & (((a & ~ d) + (a & ~ d)) - (a ^ d))))) & ~ a) + a)) * (((((- d - 1) + ((((- c - 1) ^ ~ d) + (((- c - 1) | d) << 1)) + 1)) + 1) + ((- (- d - 1) - 1) | (- ((((- c - 1) ^ ~ d) + (((- c - 1) | d) << 1)) + 1) - 1))) | ((((a ^ (((a & ~ d) + (a & ~ d)) - (a ^ d))) - ((~ a & (((a & ~ d) + (a & ~ d)) - (a ^ d))) + (~ a & (((a & ~ d) + (a & ~ d)) - (a ^ d))))) & ~ a) + a)) + (((((- d - 1) + ((((- c - 1) ^ ~ d) + (((- c - 1) | d) << 1)) + 1)) + 1) + ((- (- d - 1) - 1) | (- ((((- c - 1) ^ ~ d) + (((- c - 1) | d) << 1)) + 1) - 1))) & ~ ((((a ^ (((a & ~ d) + (a & ~ d)) - (a ^ d))) - ((~ a & (((a & ~ d) + (a & ~ d)) - (a ^ d))) + (~ a & (((a & ~ d) + (a & ~ d)) - (a ^ d))))) & ~ a) + a)) * (~ ((((- d - 1) + ((((- c - 1) ^ ~ d) + (((- c - 1) | d) << 1)) + 1)) + 1) + ((- (- d - 1) - 1) | (- ((((- c - 1) ^ ~ d) + (((- c - 1) | d) << 1)) + 1) - 1))) & ((((a ^ (((a & ~ d) + (a & ~ d)) - (a ^ d))) - ((~ a & (((a & ~ d) + (a & ~ d)) - (a ^ d))) + (~ a & (((a & ~ d) + (a & ~ d)) - (a ^ d))))) & ~ a) + a))",
                "attributes": {
                    "numOps": 261,
                    "nestedExprLevel": 134,
                    "numDAGs": 38,
                    "opsPercentages": {
                        "arithmetic": 49.42528735632184,
                        "mul": 0.7662835249042145,
                        "bitwise": 49.808429118773944
                    },
                    "percentageDAGsCancel": 5.263157894736842
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a + (((~d & a) * 2 - (a ^ d) ^ a) + (~a & (~d & a) * 2 - (a ^ d)) * -2 & ~a) & ~((((~c | d) * -2 - (c ^ d)) - 2 | d) + (~c | d) * 2 + (c ^ d) + ~d + 2)) * ((~c | d) * 2 + (c ^ d) + ~d + 2 + (((~c | d) * -2 - (c ^ d)) - 2 | d) & ~(a + (((~d & a) * 2 - (a ^ d) ^ a) + (~a & (~d & a) * 2 - (a ^ d)) * -2 & ~a))) + ((~c | d) * 2 + (c ^ d) + ~d + 2 + (((~c | d) * -2 - (c ^ d)) - 2 | d) & a + (((~d & a) * 2 - (a ^ d) ^ a) + (~a & (~d & a) * 2 - (a ^ d)) * -2 & ~a)) * (a + (((~d & a) * 2 - (a ^ d) ^ a) + (~a & (~d & a) * 2 - (a ^ d)) * -2 & ~a) | (~c | d) * 2 + (c ^ d) + ~d + 2 + (((~c | d) * -2 - (c ^ d)) - 2 | d))",
                    "attributes": {
                        "numOps": 153,
                        "nestedExprLevel": 43,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 41.37931034482759,
                        "opsPercentages": {
                            "arithmetic": 32.02614379084967,
                            "mul": 14.37908496732026,
                            "bitwise": 53.59477124183007
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_O1": {
                    "expr": "(~(((~d & a) * 2 - (a ^ d) ^ a) + ((~d & a) * 2 - (a ^ d) & ~a) * -2 & ~a) + a & (-1 - c) * 2 | d * 2 + 1 + (((-2 - ~c ^ ~d) - (-1 - c) * 2 | d * 2 | d) - d) + ~c ^ ~d) * (~(-1 - c) * 2 | d * 2 + 1 + (((-2 - ~c ^ ~d) - (-1 - c) * 2 | d * 2 | d) - d) + ~c ^ ~d & (((~d & a) * 2 - (a ^ d) ^ a) + ((~d & a) * 2 - (a ^ d) & ~a) * -2 & ~a) + a) + ((-1 - c) * 2 | d * 2 + 1 + (((-2 - ~c ^ ~d) - (-1 - c) * 2 | d * 2 | d) - d) + ~c ^ ~d | (((~d & a) * 2 - (a ^ d) ^ a) + ((~d & a) * 2 - (a ^ d) & ~a) * -2 & ~a) + a) * ((-1 - c) * 2 | d * 2 + 1 + (((-2 - ~c ^ ~d) - (-1 - c) * 2 | d * 2 | d) - d) + ~c ^ ~d & (((~d & a) * 2 - (a ^ d) ^ a) + ((~d & a) * 2 - (a ^ d) & ~a) * -2 & ~a) + a)",
                    "attributes": {
                        "numOps": 181,
                        "nestedExprLevel": 37,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 30.65134099616858,
                        "opsPercentages": {
                            "arithmetic": 35.91160220994475,
                            "mul": 16.574585635359114,
                            "bitwise": 47.51381215469613
                        },
                        "percentageDAGsCancel": 4.651162790697675
                    }
                },
                "clang_O3": {
                    "expr": "(~((d ^ c) + (~c | d) * 2 - d) + (-(d ^ c) + (~c | d) * 2 - 2 | d) + 1 & a) * (~a & ((d ^ c) + (~c | d) * 2 - d) + (-(d ^ c) + (~c | d) * 2 - 2 | d) + 1) + (a | ((d ^ c) + (~c | d) * 2 - d) + (-(d ^ c) + (~c | d) * 2 - 2 | d) + 1) * (a & ((d ^ c) + (~c | d) * 2 - d) + (-(d ^ c) + (~c | d) * 2 - 2 | d) + 1)",
                    "attributes": {
                        "numOps": 73,
                        "nestedExprLevel": 21,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 72.03065134099617,
                        "opsPercentages": {
                            "arithmetic": 39.726027397260275,
                            "mul": 13.698630136986301,
                            "bitwise": 46.57534246575342
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                },
                "clang_default": {
                    "expr": "((((0xffffffff - c ^ d ^ 0xffffffff) + (0xffffffff - c | d) * 2 + 1 ) - d) + (0xffffffff - (-1 - d) | 0xffffffff - ((0xffffffff - c ^ d ^ 0xffffffff) + (0xffffffff - c | d) * 2 + 1) ) & ((a ^ ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) - (((a ^ 0xffffffff) & ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) + ((a ^ 0xffffffff) & ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d))) & (a ^ 0xffffffff)) + a) * ((((0xffffffff - c ^ d ^ 0xffffffff) + (0xffffffff - c | d) * 2 + 1 ) - d) + (0xffffffff - (-1 - d) | 0xffffffff - ((0xffffffff - c ^ d ^ 0xffffffff) + (0xffffffff - c | d) * 2 + 1) ) | ((a ^ ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) - (((a ^ 0xffffffff) & ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) + ((a ^ 0xffffffff) & ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d))) & (a ^ 0xffffffff)) + a) + ((((0xffffffff - c ^ d ^ 0xffffffff) + (0xffffffff - c | d) * 2 + 1 ) - d) + (0xffffffff - (-1 - d) | 0xffffffff - ((0xffffffff - c ^ d ^ 0xffffffff) + (0xffffffff - c | d) * 2 + 1) ) & (((a ^ ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) - (((a ^ 0xffffffff) & ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) + ((a ^ 0xffffffff) & ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d))) & (a ^ 0xffffffff)) + a ^ 0xffffffff)) * (((((0xffffffff - c ^ d ^ 0xffffffff) + (0xffffffff - c | d) * 2 + 1) - d) + (0xffffffff - (-1 - d) | 0xffffffff - ((0xffffffff - c ^ d ^ 0xffffffff) + (0xffffffff - c | d) * 2 + 1 )) ^ 0xffffffff) & ((a ^ ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) - (((a ^ 0xffffffff) & ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d)) + ((a ^ 0xffffffff) & ((a & (d ^ 0xffffffff)) + (a & (d ^ 0xffffffff))) - (a ^ d))) & (a ^ 0xffffffff)) + a)",
                    "attributes": {
                        "numOps": 225,
                        "nestedExprLevel": 100,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 13.793103448275861,
                        "opsPercentages": {
                            "arithmetic": 41.333333333333336,
                            "mul": 4.444444444444445,
                            "bitwise": 54.22222222222223
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "msvc_default": {
                    "expr": "((((0xffffffff - c ^ ~d) + (0xffffffff - c | d) * 2) - d) + 1 + (0xffffffff - (-1 - d) | 0xffffffff - ((0xffffffff - c ^ ~d) + 1 + (0xffffffff - c | d) * 2)) & ~(((((~d & a) + (~d & a)) - (a ^ d) ^ a) - ((~a & ((~d & a) + (~d & a)) - (a ^ d)) + (~a & ((~d & a) + (~d & a)) - (a ^ d))) & ~a) + a)) * (~((((0xffffffff - c ^ ~d) + (0xffffffff - c | d) * 2) - d) + 1 + (0xffffffff - (-1 - d) | 0xffffffff - ((0xffffffff - c ^ ~d) + 1 + (0xffffffff - c | d) * 2))) & ((((~d & a) + (~d & a)) - (a ^ d) ^ a) - ((~a & ((~d & a) + (~d & a)) - (a ^ d)) + (~a & ((~d & a) + (~d & a)) - (a ^ d))) & ~a) + a) + ((((0xffffffff - c ^ ~d) + (0xffffffff - c | d) * 2) - d) + 1 + (0xffffffff - (-1 - d) | 0xffffffff - ((0xffffffff - c ^ ~d) + 1 + (0xffffffff - c | d) * 2)) & ((((~d & a) + (~d & a)) - (a ^ d) ^ a) - ((~a & ((~d & a) + (~d & a)) - (a ^ d)) + (~a & ((~d & a) + (~d & a)) - (a ^ d))) & ~a) + a) * ((((0xffffffff - c ^ ~d) + (0xffffffff - c | d) * 2) - d) + 1 + (0xffffffff - (-1 - d) | 0xffffffff - ((0xffffffff - c ^ ~d) + 1 + (0xffffffff - c | d) * 2)) | ((((~d & a) + (~d & a)) - (a ^ d) ^ a) - ((~a & ((~d & a) + (~d & a)) - (a ^ d)) + (~a & ((~d & a) + (~d & a)) - (a ^ d))) & ~a) + a)",
                    "attributes": {
                        "numOps": 225,
                        "nestedExprLevel": 76,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 13.793103448275861,
                        "opsPercentages": {
                            "arithmetic": 41.333333333333336,
                            "mul": 4.444444444444445,
                            "bitwise": 54.22222222222223
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "gcc_O3": {
                    "expr": "(~a & ((c ^ d) + (~c | d) * 2 - d) + 1 + (-(c ^ d) + (~c | d) * 2 - 2 | d)) * (~((c ^ d) + (~c | d) * 2 - d) + 1 + (-(c ^ d) + (~c | d) * 2 - 2 | d) & a) + (((c ^ d) + (~c | d) * 2 - d) + 1 + (-(c ^ d) + (~c | d) * 2 - 2 | d) & a) * (((c ^ d) + (~c | d) * 2 - d) + 1 + (-(c ^ d) + (~c | d) * 2 - 2 | d) | a)",
                    "attributes": {
                        "numOps": 73,
                        "nestedExprLevel": 21,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 72.03065134099617,
                        "opsPercentages": {
                            "arithmetic": 39.726027397260275,
                            "mul": 13.698630136986301,
                            "bitwise": 46.57534246575342
                        },
                        "percentageDAGsCancel": 4.3478260869565215
                    }
                }
            }
        },
        {
            "num": 463,
            "gt": {
                "expr": "((((b|b)+b)|(-b)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "mba": {
                "expr": "(((((b & ~ b) + b) | b) + (((b & ~ b) + b) & b)) & ~ (~ (b - 1))) + ~ (b - 1)",
                "attributes": {
                    "numOps": 16,
                    "nestedExprLevel": 9,
                    "numDAGs": 11,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 0.0,
                        "bitwise": 62.5
                    },
                    "percentageDAGsCancel": 36.36363636363637
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(b - 1 & b * 2) - b",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 75.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 25.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(b * 2 & b - 1) + ~(b - 1)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 62.5,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(b - 1 & b * 2) - b",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 75.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 25.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((b & (b ^ 0xffffffff)) + b | b) + ((b & (b ^ 0xffffffff)) + b & b) & b - 1) + (b - 1 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 7,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 12.5,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 0.0,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 50.0
                    }
                },
                "msvc_default": {
                    "expr": "(b * 2 & b - 1) + ~(b - 1)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 62.5,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(b * 2 & b - 1) - b",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 75.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 25.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 25.0
                    }
                }
            }
        },
        {
            "num": 464,
            "gt": {
                "expr": "((((e&e)|e)-(-((e+e)^a))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "(((((((~ e | e) + e) + 1) & ~ e) + e) & ~ (~ ((((((e | e) << 1) - (e ^ e)) | a) - ((((e | e) << 1) - (e ^ e)) & a)) - 1))) << 1) - ((((((~ e | e) + e) + 1) & ~ e) + e) ^ ~ ((((((e | e) << 1) - (e ^ e)) | a) - ((((e | e) << 1) - (e ^ e)) & a)) - 1))",
                "attributes": {
                    "numOps": 45,
                    "nestedExprLevel": 33,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 0.0,
                        "bitwise": 66.66666666666666
                    },
                    "percentageDAGsCancel": 25.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((e * 2 ^ a) - 1 & e) * 2 - (-(e * 2 ^ a) ^ e)",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 77.77777777777779,
                        "opsPercentages": {
                            "arithmetic": 30.0,
                            "mul": 30.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~e * 2 & e * 2) + e * 2 & (e * 2 | a) - (e * 2 & a) * 2 - 2) - (-(e * 2 | a) - (e * 2 & a) ^ e)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 5,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 51.11111111111111,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 36.36363636363637,
                            "bitwise": 36.36363636363637
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "clang_O3": {
                    "expr": "(a - 1 & e) * 2 - (-a ^ e)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 86.66666666666667,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e ^ 0xffffffff | e) + e + 1 & (e ^ 0xffffffff)) + e & ((e * 2 | a) - (e * 2 & a)) - 1) * 2 - (((e ^ 0xffffffff | e) + e + 1 & (e ^ 0xffffffff)) + e ^ ((e * 2 | a) - (e * 2 & a)) - 1 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 11,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 31.11111111111111,
                        "opsPercentages": {
                            "arithmetic": 35.483870967741936,
                            "mul": 16.129032258064516,
                            "bitwise": 48.38709677419355
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_default": {
                    "expr": "(e & ((e * 2 | a) - (e * 2 & a)) - 1) * 2 - (e ^ ~(((e * 2 | a) - (e * 2 & a)) - 1))",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 8,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 62.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 29.411764705882355,
                            "bitwise": 41.17647058823529
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "gcc_O3": {
                    "expr": "(a - 1 & e) * 2 - (-a ^ e)",
                    "attributes": {
                        "numOps": 6,
                        "nestedExprLevel": 2,
                        "numDAGs": 6,
                        "percentDecreaseByOps": 86.66666666666667,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 16.666666666666664,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 465,
            "gt": {
                "expr": "(((((a|a)&(~(-b)))*(c|c))*(-(~c))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 22.22222222222222,
                        "mul": 22.22222222222222,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 22.22222222222222
                }
            },
            "mba": {
                "expr": "((((((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) & ((c & ~ c) + c)) * ((((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) | ((c & ~ c) + c)) + ((((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) & ~ ((c & ~ c) + c)) * (~ (((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) & ((c & ~ c) + c))) & (c + 1)) * ((((((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) & ((c & ~ c) + c)) * ((((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) | ((c & ~ c) + c)) + ((((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) & ~ ((c & ~ c) + c)) * (~ (((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) & ((c & ~ c) + c))) | (c + 1)) + ((((((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) & ((c & ~ c) + c)) * ((((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) | ((c & ~ c) + c)) + ((((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) & ~ ((c & ~ c) + c)) * (~ (((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) & ((c & ~ c) + c))) & ~ (c + 1)) * (~ (((((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) & ((c & ~ c) + c)) * ((((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) | ((c & ~ c) + c)) + ((((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) & ~ ((c & ~ c) + c)) * (~ (((a & ~ a) + a) - (((a & ~ a) + a) & (~ b + 1))) & ((c & ~ c) + c))) & (c + 1))",
                "attributes": {
                    "numOps": 257,
                    "nestedExprLevel": 125,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 34.63035019455253,
                        "mul": 3.8910505836575875,
                        "bitwise": 61.478599221789885
                    },
                    "percentageDAGsCancel": 24.137931034482758
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c + 1 & ~((~(b - 1 & a) & c) * (b - 1 & a & ~c) + (b - 1 & a & c) * (b - 1 & a | c))) * ((b - 1 & a & c) * (b - 1 & a | c) + (~(b - 1 & a) & c) * (b - 1 & a & ~c) & -c - 2) + ((b - 1 & a & c) * (b - 1 & a | c) + (~(b - 1 & a) & c) * (b - 1 & a & ~c) & c + 1) * (c + 1 | (b - 1 & a & c) * (b - 1 & a | c) + (~(b - 1 & a) & c) * (b - 1 & a & ~c))",
                    "attributes": {
                        "numOps": 81,
                        "nestedExprLevel": 18,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 68.48249027237354,
                        "opsPercentages": {
                            "arithmetic": 32.098765432098766,
                            "mul": 12.345679012345679,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 21.73913043478261
                    }
                },
                "msvc_O1": {
                    "expr": "(~c + 1 & (a - (-b & a) & c) * (a - (-b & a) | c) + (~a - (-b & a) & c) * (~c & a - (-b & a))) * (~(a - (-b & a) & c) * (a - (-b & a) | c) + (~a - (-b & a) & c) * (~c & a - (-b & a)) & c + 1) + ((a - (-b & a) & c) * (a - (-b & a) | c) + (~a - (-b & a) & c) * (~c & a - (-b & a)) | c + 1) * ((a - (-b & a) & c) * (a - (-b & a) | c) + (~a - (-b & a) & c) * (~c & a - (-b & a)) & c + 1)",
                    "attributes": {
                        "numOps": 97,
                        "nestedExprLevel": 22,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 62.2568093385214,
                        "opsPercentages": {
                            "arithmetic": 42.2680412371134,
                            "mul": 10.309278350515463,
                            "bitwise": 47.42268041237113
                        },
                        "percentageDAGsCancel": 8.0
                    }
                },
                "clang_O3": {
                    "expr": "(~(~a & c) * (~c & a) + (a | c) * (a & c) & c + 1) * (-c - 2 & (~a & c) * (~c & a) + (a | c) * (a & c)) + ((~a & c) * (~c & a) + (a | c) * (a & c) | c + 1) * ((~a & c) * (~c & a) + (a | c) * (a & c) & c + 1)",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 13,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 80.93385214007782,
                        "opsPercentages": {
                            "arithmetic": 20.408163265306122,
                            "mul": 20.408163265306122,
                            "bitwise": 59.183673469387756
                        },
                        "percentageDAGsCancel": 4.545454545454546
                    }
                },
                "clang_default": {
                    "expr": "((((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) & (c & (c ^ 0xffffffff)) + c) * (((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) | (c & (c ^ 0xffffffff)) + c) + (((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) & ((c & (c ^ 0xffffffff)) + c ^ 0xffffffff)) * ((((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) ^ 0xffffffff) & (c & (c ^ 0xffffffff)) + c) & c + 1) * ((((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) & (c & (c ^ 0xffffffff)) + c) * (((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) | (c & (c ^ 0xffffffff)) + c) + (((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) & ((c & (c ^ 0xffffffff)) + c ^ 0xffffffff)) * ((((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) ^ 0xffffffff) & (c & (c ^ 0xffffffff)) + c) | c + 1) + ((((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) & (c & (c ^ 0xffffffff)) + c) * (((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) | (c & (c ^ 0xffffffff)) + c) + (((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) & ((c & (c ^ 0xffffffff)) + c ^ 0xffffffff)) * ((((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) ^ 0xffffffff) & (c & (c ^ 0xffffffff)) + c) & (c + 1 ^ 0xffffffff)) * (((((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) & (c & (c ^ 0xffffffff)) + c) * (((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) | (c & (c ^ 0xffffffff)) + c) + (((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) & ((c & (c ^ 0xffffffff)) + c ^ 0xffffffff)) * ((((a & (a ^ 0xffffffff)) + a) - ((a & (a ^ 0xffffffff)) + a & (b ^ 0xffffffff) + 1) ^ 0xffffffff) & (c & (c ^ 0xffffffff)) + c) ^ 0xffffffff) & c + 1)",
                    "attributes": {
                        "numOps": 257,
                        "nestedExprLevel": 128,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 34.63035019455253,
                            "mul": 3.8910505836575875,
                            "bitwise": 61.478599221789885
                        },
                        "percentageDAGsCancel": 24.137931034482758
                    }
                },
                "msvc_default": {
                    "expr": "((a - (a & ~b + 1) & c) * (a - (a & ~b + 1) | c) + (a - (a & ~b + 1) & ~c) * (~(a - (a & ~b + 1)) & c) & c + 1) * ((a - (a & ~b + 1) & c) * (a - (a & ~b + 1) | c) + (a - (a & ~b + 1) & ~c) * (~(a - (a & ~b + 1)) & c) | c + 1) + ((a - (a & ~b + 1) & c) * (a - (a & ~b + 1) | c) + (a - (a & ~b + 1) & ~c) * (~(a - (a & ~b + 1)) & c) & ~(c + 1)) * (~((a - (a & ~b + 1) & c) * (a - (a & ~b + 1) | c) + (a - (a & ~b + 1) & ~c) * (~(a - (a & ~b + 1)) & c)) & c + 1)",
                    "attributes": {
                        "numOps": 113,
                        "nestedExprLevel": 28,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 56.03112840466926,
                        "opsPercentages": {
                            "arithmetic": 36.283185840707965,
                            "mul": 8.849557522123893,
                            "bitwise": 54.86725663716814
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "gcc_O3": {
                    "expr": "(-c - 2 & (~c & a) * (~a & c) + (a & c) * (a | c)) * (~(~c & a) * (~a & c) + (a & c) * (a | c) & c + 1) + ((~c & a) * (~a & c) + (a & c) * (a | c) | c + 1) * ((~c & a) * (~a & c) + (a & c) * (a | c) & c + 1)",
                    "attributes": {
                        "numOps": 49,
                        "nestedExprLevel": 13,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 80.93385214007782,
                        "opsPercentages": {
                            "arithmetic": 20.408163265306122,
                            "mul": 20.408163265306122,
                            "bitwise": 59.183673469387756
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 466,
            "gt": {
                "expr": "((~(~(((a+c)+(c-a))&(-((a+c)+(c|c)))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 0.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "- (- (((~ (((((a | c) << 1) - (a ^ c)) ^ ((c ^ a) - ((~ c & a) + (~ c & a)))) + (((((a | c) << 1) - (a ^ c)) & ((c ^ a) - ((~ c & a) + (~ c & a)))) << 1)) | ~ ((((((a ^ ~ c) + ((a | c) << 1)) + 1) - ~ (((c + c) + 1) + ((- c - 1) | (- c - 1)))) - 1) - 1)) + (((((a | c) << 1) - (a ^ c)) ^ ((c ^ a) - ((~ c & a) + (~ c & a)))) + (((((a | c) << 1) - (a ^ c)) & ((c ^ a) - ((~ c & a) + (~ c & a)))) << 1))) + 1) - 1) - 1",
                "attributes": {
                    "numOps": 79,
                    "nestedExprLevel": 47,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 40.50632911392405,
                        "mul": 0.0,
                        "bitwise": 59.49367088607595
                    },
                    "percentageDAGsCancel": 5.714285714285714
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((c ^ a) + (~c & a) * -2 & (a | c) * 2 - (a ^ c)) * 2 + ((a | c) * 2 - (a ^ c) ^ (c ^ a) + (~c & a) * -2) + (~(((c ^ a) + (~c & a) * -2 & (a | c) * 2 - (a ^ c) ) * 2 + ((a | c) * 2 - (a ^ c) ^ (c ^ a) + (~c & a) * -2)) | ((c ^ a) + (a | c) * -2) - c) + 1",
                    "attributes": {
                        "numOps": 58,
                        "nestedExprLevel": 17,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 26.582278481012654,
                        "opsPercentages": {
                            "arithmetic": 32.758620689655174,
                            "mul": 18.96551724137931,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(a | c) * 2 - (a ^ c) * 2 & (a ^ c) + (~c & a) * -2 * 2 + ((a | c) * 2 - (a ^ c) ^ (a ^ c) + (~c & a) * -2 - ((~c ^ a) + (a | c) * 2 + c & (a | c) * 2 - (a ^ c) ^ (a ^ c) + (~c & a) * -2 + (a | c) * 2 - (a ^ c) * 2 & (a ^ c) + (~c & a) * -2 * 2))",
                    "attributes": {
                        "numOps": 58,
                        "nestedExprLevel": 12,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 26.582278481012654,
                        "opsPercentages": {
                            "arithmetic": 29.310344827586203,
                            "mul": 22.413793103448278,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((~c ^ a) + c + (c | a) * 2) & ((c | a) * 2 - (c ^ a) ^ (c ^ a) + (~c & a) * -2) + ((c ^ a) + (~c & a) * -2 & (c | a) * 2 - (c ^ a)) * 2",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 59.49367088607595,
                        "opsPercentages": {
                            "arithmetic": 28.125,
                            "mul": 18.75,
                            "bitwise": 53.125
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - (-1 - ((((a | c) * 2 - (a ^ c) ^ (c ^ a) - (((c ^ 0xffffffff) & a) + ((c ^ 0xffffffff) & a))) + ((a | c) * 2 - (a ^ c) & (c ^ a) - (((c ^ 0xffffffff) & a) + ((c ^ 0xffffffff) & a))) * 2 ^ 0xffffffff | (((a ^ c ^ 0xffffffff) + (a | c) * 2) - (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) ^ 0xffffffff)) - 1 ^ 0xffffffff) + ((a | c) * 2 - (a ^ c) ^ (c ^ a) - (((c ^ 0xffffffff) & a) + ((c ^ 0xffffffff) & a))) + ((a | c) * 2 - (a ^ c) & (c ^ a) - (((c ^ 0xffffffff) & a) + ((c ^ 0xffffffff) & a))) * 2 + 1) )",
                    "attributes": {
                        "numOps": 75,
                        "nestedExprLevel": 29,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 5.063291139240507,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 10.666666666666668,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (-1 - ((~(((a | c) * 2 - (a ^ c) ^ (c ^ a) - ((~c & a) + (~c & a))) + ((a | c) * 2 - (a ^ c) & (c ^ a) - ((~c & a) + (~c & a))) * 2) | ~((((~c ^ a) + (a | c) * 2) - ~(c * 2 + 1 + (0xffffffff - c | 0xffffffff - c))) - 1)) + 1 + ((a | c) * 2 - (a ^ c) ^ (c ^ a) - ((~c & a) + (~c & a))) + ((a | c) * 2 - (a ^ c) & (c ^ a) - ((~c & a) + (~c & a))) * 2))",
                    "attributes": {
                        "numOps": 75,
                        "nestedExprLevel": 26,
                        "numDAGs": 32,
                        "percentDecreaseByOps": 5.063291139240507,
                        "opsPercentages": {
                            "arithmetic": 36.0,
                            "mul": 10.666666666666668,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 3.125
                    }
                },
                "gcc_O3": {
                    "expr": "((a | c) * 2 - a ^ c ^ a ^ c + (~c & a) * -2) + ((a | c) * 2 - a ^ c & a ^ c + (~c & a) * -2) * 2 + 1 + ((a ^ c + (a | c) * -2) - c | ~((a | c) * 2 - a ^ c ^ a ^ c + (~c & a) * -2) + ((a | c) * 2 - a ^ c & a ^ c + (~c & a) * -2) * 2)",
                    "attributes": {
                        "numOps": 58,
                        "nestedExprLevel": 11,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 26.582278481012654,
                        "opsPercentages": {
                            "arithmetic": 32.758620689655174,
                            "mul": 18.96551724137931,
                            "bitwise": 48.275862068965516
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 467,
            "gt": {
                "expr": "(((((a^b)-b)^a)^(-(-b))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "mba": {
                "expr": "(((((((((a - b) - ((a | ~ b) << 1)) - 2) ^ b) - ((~ (((a - b) - ((a | ~ b) << 1)) - 2) & b) + (~ (((a - b) - ((a | ~ b) << 1)) - 2) & b))) | a) - ((((((a - b) - ((a | ~ b) << 1)) - 2) ^ b) - ((~ (((a - b) - ((a | ~ b) << 1)) - 2) & b) + (~ (((a - b) - ((a | ~ b) << 1)) - 2) & b))) & a)) - ~ ((~ b + 1) - 1)) - (((((((((a - b) - ((a | ~ b) << 1)) - 2) ^ b) - ((~ (((a - b) - ((a | ~ b) << 1)) - 2) & b) + (~ (((a - b) - ((a | ~ b) << 1)) - 2) & b))) | a) - ((((((a - b) - ((a | ~ b) << 1)) - 2) ^ b) - ((~ (((a - b) - ((a | ~ b) << 1)) - 2) & b) + (~ (((a - b) - ((a | ~ b) << 1)) - 2) & b))) & a)) | ~ (~ ((~ b + 1) - 1))) + ((((((((a - b) - ((a | ~ b) << 1)) - 2) ^ b) - ((~ (((a - b) - ((a | ~ b) << 1)) - 2) & b) + (~ (((a - b) - ((a | ~ b) << 1)) - 2) & b))) | a) - ((((((a - b) - ((a | ~ b) << 1)) - 2) ^ b) - ((~ (((a - b) - ((a | ~ b) << 1)) - 2) & b) + (~ (((a - b) - ((a | ~ b) << 1)) - 2) & b))) & a)) | ~ (~ ((~ b + 1) - 1))))) - 2",
                "attributes": {
                    "numOps": 179,
                    "nestedExprLevel": 105,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 44.134078212290504,
                        "mul": 0.0,
                        "bitwise": 55.865921787709496
                    },
                    "percentageDAGsCancel": 17.391304347826086
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(((((a - b) + (~b | a) * -2) - 2 ^ b) + ((~b | a) * 2 + ~a + b + 2 & b) * -2 ^ a) - b) + (~b | (((a - b) + (~b | a) * -2) - 2 ^ b) + ((~b | a) * 2 + ~a + b + 2 & b) * -2 ^ a) * -2 + -2",
                    "attributes": {
                        "numOps": 48,
                        "nestedExprLevel": 13,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 73.18435754189943,
                        "opsPercentages": {
                            "arithmetic": 47.91666666666667,
                            "mul": 14.583333333333334,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_O1": {
                    "expr": "(((((a + (~b | a) * -2) - b) - 2 ^ b) + (~((a + (~b | a) * -2) - b) - 2 & b) * -2 | a - (((((a + (~b | a) * -2) - b) - 2 ^ b) + (~((a + (~b | a) * -2) - b) - 2 & b) * -2 | a - (((a + (~b | a) * -2) - b) - 2 ^ b) + (~((a + (~b | a) * -2) - b) - 2 & b) * -2 & a | ~b) * 2 + 2)) - (((a + (~b | a) * -2) - b) - 2 ^ b) + (~((a + (~b | a) * -2) - b) - 2 & b) * -2 & a) - b",
                    "attributes": {
                        "numOps": 92,
                        "nestedExprLevel": 30,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 48.60335195530726,
                        "opsPercentages": {
                            "arithmetic": 48.91304347826087,
                            "mul": 14.130434782608695,
                            "bitwise": 36.95652173913043
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "clang_O3": {
                    "expr": "(a - b) + (~b | a) * -2 + -2",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 95.53072625698324,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 12.5,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ b) - (((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & b ) + ((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & b)) | a) - ((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ b) - (((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & b) + ((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & b )) & a)) - b) - ((((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ b) - (((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & b) + ((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & b )) | a) - ((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ b) - (((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & b) + ((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & b )) & a) | b ^ 0xffffffff) + (((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ b) - (((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & b) + ((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & b) ) | a) - ((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ b) - (((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & b) + ((((a - b) + (a | b ^ 0xffffffff) * -2) - 2 ^ 0xffffffff) & b) ) & a) | b ^ 0xffffffff))) + -2",
                    "attributes": {
                        "numOps": 186,
                        "nestedExprLevel": 85,
                        "numDAGs": 20,
                        "percentDecreaseByOps": -3.910614525139665,
                        "opsPercentages": {
                            "arithmetic": 49.46236559139785,
                            "mul": 9.67741935483871,
                            "bitwise": 40.86021505376344
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "msvc_default": {
                    "expr": "(((((((a - b) + (~b | a) * -2) - 2 ^ b) - ((~(((a - b) + (~b | a) * -2) - 2) & b) + (~(((a - b) + (~b | a) * -2) - 2) & b)) | a) - ((((a - b) + (~b | a) * -2) - 2 ^ b) - ((~(((a - b) + (~b | a) * -2) - 2) & b) + (~(((a - b) + (~b | a) * -2) - 2) & b)) & a)) - b) - ((((((a - b) + (~b | a) * -2) - 2 ^ b) - ((~(((a - b) + (~b | a) * -2) - 2) & b) + (~(((a - b) + (~b | a) * -2) - 2) & b)) | a) - ((((a - b) + (~b | a) * -2) - 2 ^ b) - ((~(((a - b) + (~b | a) * -2) - 2) & b) + (~(((a - b) + (~b | a) * -2) - 2) & b)) & a) | ~b) + (((((a - b) + (~b | a) * -2) - 2 ^ b) - ((~(((a - b) + (~b | a) * -2) - 2) & b) + (~(((a - b) + (~b | a) * -2) - 2) & b)) | a) - ((((a - b) + (~b | a) * -2) - 2 ^ b) - ((~(((a - b) + (~b | a) * -2) - 2) & b) + (~(((a - b) + (~b | a) * -2) - 2) & b)) & a) | ~b))) + -2",
                    "attributes": {
                        "numOps": 186,
                        "nestedExprLevel": 85,
                        "numDAGs": 20,
                        "percentDecreaseByOps": -3.910614525139665,
                        "opsPercentages": {
                            "arithmetic": 49.46236559139785,
                            "mul": 9.67741935483871,
                            "bitwise": 40.86021505376344
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "gcc_O3": {
                    "expr": "(a - b) + (~b | a) * -2 + -2",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 95.53072625698324,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 12.5,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 468,
            "gt": {
                "expr": "(((b+(-b))-(-((a*c)*(c-c)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 71.42857142857143,
                        "mul": 28.57142857142857,
                        "bitwise": 0.0
                    },
                    "percentageDAGsCancel": 71.42857142857143
                }
            },
            "mba": {
                "expr": "((((b ^ ~ (~ (b - 1))) + ((b | ~ (b - 1)) << 1)) + 1) + ~ (~ (((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) & ((c ^ c) - ((~ c & c) << 1))) * (((a & c) * (a | c) + (a & ~ c) * (~ a & c)) | ((c ^ c) - ((~ c & c) << 1))) + (((a & c) * (a | c) + (a & ~ c) * (~ a & c)) & ~ ((c ^ c) - ((~ c & c) << 1))) * (~ ((a & c) * (a | c) + (a & ~ c) * (~ a & c)) & ((c ^ c) - ((~ c & c) << 1)))) - 1))) + 1",
                "attributes": {
                    "numOps": 80,
                    "nestedExprLevel": 36,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 12.5,
                        "bitwise": 67.5
                    },
                    "percentageDAGsCancel": 37.142857142857146
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-b | b) * 2 + (b - 1 ^ b) + 1",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 91.25,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 14.285714285714285,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_O1": {
                    "expr": "(~(b - 1) | b) * 2 + 1 + (b - 1 ^ b)",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 90.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 12.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_O3": {
                    "expr": "(b - 1 ^ b) + (-b | b) * 2 + 1",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 91.25,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 14.285714285714285,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_default": {
                    "expr": "(b ^ b - 1) + (b | b - 1 ^ 0xffffffff) * 2 + ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) & ((c ^ 0xffffffff) & c) * -2) * ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) | ((c ^ 0xffffffff) & c) * -2) + ((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) & (((c ^ 0xffffffff) & c) * -2 ^ 0xffffffff)) * (((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) ^ 0xffffffff) & ((c ^ 0xffffffff) & c) * -2) + 1",
                    "attributes": {
                        "numOps": 70,
                        "nestedExprLevel": 25,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 12.5,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 21.428571428571427,
                            "bitwise": 58.57142857142858
                        },
                        "percentageDAGsCancel": 20.689655172413794
                    }
                },
                "msvc_default": {
                    "expr": "(b - 1 ^ b) + (~(b - 1) | b) * 2 + 1",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 90.0,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 12.5,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "gcc_O3": {
                    "expr": "(b - 1 ^ b) + 1 + (-b | b) * 2",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 91.25,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 14.285714285714285,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                }
            }
        },
        {
            "num": 469,
            "gt": {
                "expr": "((-(a^((~b)&a))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ ((a | (((~ (- b - 1) | a) + (- b - 1)) + 1)) - (a & (((~ (- b - 1) | a) + (- b - 1)) + 1))) + 1",
                "attributes": {
                    "numOps": 21,
                    "nestedExprLevel": 12,
                    "numDAGs": 11,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 0.0,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 36.36363636363637
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b - (b | a)) - 1 ^ a) + 1",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 4,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 76.19047619047619,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_O1": {
                    "expr": "((a | b) - b & a) - ((a | b) - b | a)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 4,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 0.0,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "clang_O3": {
                    "expr": "-(a & b)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 90.47619047619048,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a | (0xffffffff - b ^ 0xffffffff | a) - b) - (a & (0xffffffff - b ^ 0xffffffff | a) - b) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 5,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 38.095238095238095,
                        "opsPercentages": {
                            "arithmetic": 46.15384615384615,
                            "mul": 0.0,
                            "bitwise": 53.84615384615385
                        },
                        "percentageDAGsCancel": 22.22222222222222
                    }
                },
                "msvc_default": {
                    "expr": "~(((~(0xffffffff - b) | a) - b | a) - ((~(0xffffffff - b) | a) - b & a)) + 1",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 7,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 38.095238095238095,
                        "opsPercentages": {
                            "arithmetic": 46.15384615384615,
                            "mul": 0.0,
                            "bitwise": 53.84615384615385
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((b - (b | a)) - 1 ^ a) + 1",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 4,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 76.19047619047619,
                        "opsPercentages": {
                            "arithmetic": 60.0,
                            "mul": 0.0,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 470,
            "gt": {
                "expr": "((~(-((~((e+b)-((c^c)-e)))^(~c)))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 0.0,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "((((((((((c | c) - (c & c)) & ~ e) << 1) - (((c | c) - (c & c)) ^ e)) - ((e ^ b) + ((e & b) << 1))) - 1) - (- c - 1)) - (((((((((c | c) - (c & c)) & ~ e) << 1) - (((c | c) - (c & c)) ^ e)) - ((e ^ b) + ((e & b) << 1))) - 1) | ~ (- c - 1)) << 1)) - 2) - 1",
                "attributes": {
                    "numOps": 45,
                    "nestedExprLevel": 32,
                    "numDAGs": 23,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 0.0,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 30.434782608695656
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((((e & b) * -2 - (e ^ b)) - e) - ~c) + ((((e & b) * -2 - (e ^ b)) - e) - 1 | c) * -2 + -4",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 9,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 53.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 57.14285714285714,
                            "mul": 14.285714285714285,
                            "bitwise": 28.57142857142857
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "msvc_O1": {
                    "expr": "((((c - (((b ^ e) + (b & e) * 2 + e) * -2 - 2 | c * 2)) + (b & e) * -2) - (b ^ e)) - e) + -3",
                    "attributes": {
                        "numOps": 20,
                        "nestedExprLevel": 9,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 55.55555555555556,
                        "opsPercentages": {
                            "arithmetic": 55.00000000000001,
                            "mul": 20.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((e ^ b) + e) + (b & e) * -2 + c + (~((e ^ b) + e) + (b & e) * -2 | c) * -2 + -2",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 53.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 52.38095238095239,
                            "mul": 14.285714285714285,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((-((e ^ b) + (e & b) * 2) - e) - (-1 - c)) + ((-((e ^ b) + (e & b) * 2) - e) - 1 | 0xffffffff - c ^ 0xffffffff) * -2 + -4",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 9,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 46.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 12.5,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "msvc_default": {
                    "expr": "((-((e ^ b) + (e & b) * 2) - e) - (-1 - c)) + ((-((e ^ b) + (e & b) * 2) - e) - 1 | ~(0xffffffff - c)) * -2 + -4",
                    "attributes": {
                        "numOps": 24,
                        "nestedExprLevel": 10,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 46.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 12.5,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(e - ~c) + (e | c) * -2 + -3",
                    "attributes": {
                        "numOps": 8,
                        "nestedExprLevel": 2,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 82.22222222222221,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 12.5,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 12.5
                    }
                }
            }
        },
        {
            "num": 471,
            "gt": {
                "expr": "((a&((-(a|c))-(~a))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 0.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ a | ((~ ((((a + c) + 1) + ((- a - 1) | (- c - 1))) - 1) ^ (- a - 1)) - ((~ (~ ((((a + c) + 1) + ((- a - 1) | (- c - 1))) - 1)) & (- a - 1)) + (~ (~ ((((a + c) + 1) + ((- a - 1) | (- c - 1))) - 1)) & (- a - 1))))) - ~ a",
                "attributes": {
                    "numOps": 47,
                    "nestedExprLevel": 25,
                    "numDAGs": 18,
                    "opsPercentages": {
                        "arithmetic": 70.2127659574468,
                        "mul": 0.0,
                        "bitwise": 29.78723404255319
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c + a + ~(a & c) ^ a) + (~a & c + a + ~(a & c)) * -2 & a",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 68.08510638297872,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 6.666666666666667,
                            "bitwise": 53.333333333333336
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_O1": {
                    "expr": "a + 1 + ((~c + (~c | ~a) + a ^ ~a) + (c + (~c | ~a) + a & ~a) * -2 | ~a)",
                    "attributes": {
                        "numOps": 22,
                        "nestedExprLevel": 5,
                        "numDAGs": 15,
                        "percentDecreaseByOps": 53.191489361702125,
                        "opsPercentages": {
                            "arithmetic": 36.36363636363637,
                            "mul": 4.545454545454546,
                            "bitwise": 59.09090909090909
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "((~c | ~a) + c + a ^ a) + ((~c | ~a) + c + a & ~a) * -2 & a",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 63.829787234042556,
                        "opsPercentages": {
                            "arithmetic": 35.294117647058826,
                            "mul": 5.88235294117647,
                            "bitwise": 58.82352941176471
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "clang_default": {
                    "expr": "(a ^ 0xffffffff | (a + c + (0xffffffff - a | 0xffffffff - c) ^ 0xffffffff ^ 0xffffffff - a) - ((a + c + (0xffffffff - a | 0xffffffff - c) & 0xffffffff - a) + (a + c + (0xffffffff - a | 0xffffffff - c) & 0xffffffff - a))) - (a ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 7,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 40.42553191489361,
                        "opsPercentages": {
                            "arithmetic": 64.28571428571429,
                            "mul": 0.0,
                            "bitwise": 35.714285714285715
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_default": {
                    "expr": "(~a | (~(a + c + (0xffffffff - a | 0xffffffff - c)) ^ 0xffffffff - a) - ((a + c + (0xffffffff - a | 0xffffffff - c) & 0xffffffff - a) + (a + c + (0xffffffff - a | 0xffffffff - c) & 0xffffffff - a))) - ~a",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 8,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 40.42553191489361,
                        "opsPercentages": {
                            "arithmetic": 64.28571428571429,
                            "mul": 0.0,
                            "bitwise": 35.714285714285715
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "gcc_O3": {
                    "expr": "(((a + c) - (a & c)) - 1 ^ a) + (((a + c) - (a & c)) - 1 & ~a) * -2 & a",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 7,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 68.08510638297872,
                        "opsPercentages": {
                            "arithmetic": 53.333333333333336,
                            "mul": 6.666666666666667,
                            "bitwise": 40.0
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 472,
            "gt": {
                "expr": "((-((~(~(~b)))|(~((e&c)^(b+(b+c)))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 0.0,
                        "bitwise": 70.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "~ ((((- (- (- b - 1) - 1) - 1) & ~ (((((~ e | c) + e) + 1) & ((b | ((b ^ c) + ((b & c) + (b & c)))) + (b & ((b ^ c) + ((b & c) + (b & c)))))) + ~ ((((~ e | c) + e) + 1) | ((b | ((b ^ c) + ((b & c) + (b & c)))) + (b & ((b ^ c) + ((b & c) + (b & c)))))))) + (((((~ e | c) + e) + 1) & ((b | ((b ^ c) + ((b & c) + (b & c)))) + (b & ((b ^ c) + ((b & c) + (b & c)))))) + ~ ((((~ e | c) + e) + 1) | ((b | ((b ^ c) + ((b & c) + (b & c)))) + (b & ((b ^ c) + ((b & c) + (b & c)))))))) - 1)",
                "attributes": {
                    "numOps": 87,
                    "nestedExprLevel": 56,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 43.67816091954023,
                        "mul": 0.0,
                        "bitwise": 56.32183908045977
                    },
                    "percentageDAGsCancel": 3.8461538461538463
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(~(b + (b ^ c) + (b & c) * 2 | e + (~e | c) + 1) + (e + (~e | c) + 1 & b + (b ^ c) + (b & c) * 2 ) + (~b & (b + (b ^ c) + (b & c) * 2 ^ e + (~e | c) + 1)))",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 10,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 58.620689655172406,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 8.333333333333332,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "msvc_O1": {
                    "expr": "(((((b ^ c) + (b & c) * 2 | b) + ((b ^ c) + (b & c) * 2 & b) & (~e | c) + e + 1 + ~(((b ^ c) + (b & c) * 2 | b) + ((b ^ c) + (b & c) * 2 & b) | (~e | c) + e + 1) | b) - ((b ^ c) + (b & c) * 2 | b) + ((b ^ c) + (b & c) * 2 & b) & (~e | c) + e + 1) - ~(((b ^ c) + (b & c) * 2 | b) + ((b ^ c) + (b & c) * 2 & b) | (~e | c) + e + 1)) + 1",
                    "attributes": {
                        "numOps": 71,
                        "nestedExprLevel": 23,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 18.39080459770115,
                        "opsPercentages": {
                            "arithmetic": 33.80281690140845,
                            "mul": 11.267605633802818,
                            "bitwise": 54.929577464788736
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_O3": {
                    "expr": "(((~e | c) + e + 1 | (c ^ b) + b + (c & b) * 2) - ((((~e | c) + e + 1 ^ (c ^ b) + b + (c & b) * 2) & ~b) + ((~e | c) + e + 1 & (c ^ b) + b + (c & b) * 2))) + 1",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 11,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 59.77011494252874,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 8.571428571428571,
                            "bitwise": 48.57142857142857
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((0xffffffff - (-1 - (-1 - b)) & (((e ^ 0xffffffff | c) + e + 1 & (b | (b ^ c) + (b & c) + (b & c)) + (b & (b ^ c) + (b & c) + (b & c))) + (((e ^ 0xffffffff | c) + e + 1 | (b | (b ^ c) + (b & c) + (b & c)) + (b & (b ^ c) + (b & c) + (b & c))) ^ 0xffffffff) ^ 0xffffffff)) + ((e ^ 0xffffffff | c) + e + 1 & (b | (b ^ c) + (b & c) + (b & c)) + (b & (b ^ c) + (b & c) + (b & c))) + (((e ^ 0xffffffff | c) + e + 1 | (b | (b ^ c) + (b & c) + (b & c)) + (b & (b ^ c) + (b & c) + (b & c))) ^ 0xffffffff)) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 86,
                        "nestedExprLevel": 28,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 1.1494252873563218,
                        "opsPercentages": {
                            "arithmetic": 43.02325581395349,
                            "mul": 0.0,
                            "bitwise": 56.97674418604651
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "msvc_default": {
                    "expr": "~(((0xffffffff - (-1 - (-1 - b)) & ~(((~e | c) + 1 + e & ((b ^ c) + (b & c) + (b & c) | b) + ((b ^ c) + (b & c) + (b & c) & b)) + ~((~e | c) + 1 + e | ((b ^ c) + (b & c) + (b & c) | b) + ((b ^ c) + (b & c) + (b & c) & b)))) - 1) + ((~e | c) + 1 + e & ((b ^ c) + (b & c) + (b & c) | b) + ((b ^ c) + (b & c) + (b & c) & b)) + ~((~e | c) + 1 + e | ((b ^ c) + (b & c) + (b & c) | b) + ((b ^ c) + (b & c) + (b & c) & b)))",
                    "attributes": {
                        "numOps": 86,
                        "nestedExprLevel": 27,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 1.1494252873563218,
                        "opsPercentages": {
                            "arithmetic": 43.02325581395349,
                            "mul": 0.0,
                            "bitwise": 56.97674418604651
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "gcc_O3": {
                    "expr": "-(~(e + 1 + (~e | c) | (c ^ b) + (b & c) * 2 + b) + (e + 1 + (~e | c) & (c ^ b) + (b & c) * 2 + b) + (~b & (e + 1 + (~e | c) ^ (c ^ b) + (b & c) * 2 + b)))",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 10,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 58.620689655172406,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 8.333333333333332,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 473,
            "gt": {
                "expr": "(((e|e)|(~(~d))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 0.0,
                        "bitwise": 100.0
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "(((e & ~ e) + e) & ~ (- (- d - 1) - 1)) + (- (- d - 1) - 1)",
                "attributes": {
                    "numOps": 14,
                    "nestedExprLevel": 6,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 71.42857142857143,
                        "mul": 0.0,
                        "bitwise": 28.57142857142857
                    },
                    "percentageDAGsCancel": 30.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "d + (~d & e)",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 78.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~d & e) + d",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 78.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~d & e) + d",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 78.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((e & (e ^ 0xffffffff)) + e & (0xffffffff - (-1 - d) ^ 0xffffffff) ) + (-1 - (-1 - d))",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 6,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 7.142857142857142,
                        "opsPercentages": {
                            "arithmetic": 69.23076923076923,
                            "mul": 0.0,
                            "bitwise": 30.76923076923077
                        },
                        "percentageDAGsCancel": 30.0
                    }
                },
                "msvc_default": {
                    "expr": "((e & ~(0xffffffff - (-1 - d))) - 1) - (-1 - d)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 5,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 35.714285714285715,
                        "opsPercentages": {
                            "arithmetic": 77.77777777777779,
                            "mul": 0.0,
                            "bitwise": 22.22222222222222
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~d & e) + d",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 2,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 78.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 0.0,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 66.66666666666666
                    }
                }
            }
        },
        {
            "num": 474,
            "gt": {
                "expr": "((-((e^a)*(d+a))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 25.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ ((((e | a) - (e & a)) & ((d | a) + (d & a))) * (((e | a) - (e & a)) | ((d | a) + (d & a))) + (((e | a) - (e & a)) & ~ ((d | a) + (d & a))) * (~ ((e | a) - (e & a)) & ((d | a) + (d & a)))) + 1",
                "attributes": {
                    "numOps": 35,
                    "nestedExprLevel": 22,
                    "numDAGs": 17,
                    "opsPercentages": {
                        "arithmetic": 28.57142857142857,
                        "mul": 5.714285714285714,
                        "bitwise": 65.71428571428571
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-((a + d & ~(e ^ a)) * ((e ^ a) & ~(a + d)) + (a + d & (e ^ a)) * (e ^ a | a + d))",
                    "attributes": {
                        "numOps": 18,
                        "nestedExprLevel": 7,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 48.57142857142857,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 11.11111111111111,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                },
                "msvc_O1": {
                    "expr": "-((~(a | e) - (a & e) & (a | d) + (a & d)) * (~(a | d) + (a & d) & (a | e) - (a & e)) + ((a | d) + (a & d) | (a | e) - (a & e)) * ((a | d) + (a & d) & (a | e) - (a & e)))",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 14,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 2.857142857142857,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 5.88235294117647,
                            "bitwise": 64.70588235294117
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "-((~e & a) * (~a & e) + (e | a) * (e & a))",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 71.42857142857143,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e | a) - (e & a) & (d | a) + (d & a)) * ((e | a) - (e & a) | (d | a) + (d & a)) + ((e | a) - (e & a) & ((d | a) + (d & a) ^ 0xffffffff)) * (((e | a) - (e & a) ^ 0xffffffff) & (d | a) + (d & a)) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 16,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 5.714285714285714,
                            "bitwise": 65.71428571428571
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "msvc_default": {
                    "expr": "~(((e | a) - (e & a) & (d | a) + (d & a)) * ((e | a) - (e & a) | (d | a) + (d & a)) + ((e | a) - (e & a) & ~((d | a) + (d & a))) * (~((e | a) - (e & a)) & (d | a) + (d & a))) + 1",
                    "attributes": {
                        "numOps": 35,
                        "nestedExprLevel": 16,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 5.714285714285714,
                            "bitwise": 65.71428571428571
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "gcc_O3": {
                    "expr": "-((~a & e) * (~e & a) + (e | a) * (e & a))",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 71.42857142857143,
                        "opsPercentages": {
                            "arithmetic": 20.0,
                            "mul": 20.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 475,
            "gt": {
                "expr": "((-(((a-c)*c)|(~((~a)*a)))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 28.57142857142857,
                        "mul": 28.57142857142857,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (((((((a & ~ c) + (a & ~ c)) - (a ^ c)) & c) * ((((a & ~ c) + (a & ~ c)) - (a ^ c)) | c) + ((((a & ~ c) + (a & ~ c)) - (a ^ c)) & ~ c) * (~ (((a & ~ c) + (a & ~ c)) - (a ^ c)) & c)) & ~ (- (((- a - 1) & a) * ((- a - 1) | a) + ((- a - 1) & ~ a) * (~ (- a - 1) & a)) - 1)) + (- (((- a - 1) & a) * ((- a - 1) | a) + ((- a - 1) & ~ a) * (~ (- a - 1) & a)) - 1)) + 1",
                "attributes": {
                    "numOps": 80,
                    "nestedExprLevel": 33,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 41.25,
                        "mul": 7.5,
                        "bitwise": 51.24999999999999
                    },
                    "percentageDAGsCancel": 16.129032258064516
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~a * a & ~(((a ^ c) + ~((~c & a) * 2) & c) * ((~c & a) * 2 - (a ^ c) & ~c) + ((~c & a) * 2 - (a ^ c) & c) * ((~c & a) * 2 - (a ^ c) | c))) + 1",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 11,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 57.49999999999999,
                        "opsPercentages": {
                            "arithmetic": 17.647058823529413,
                            "mul": 20.588235294117645,
                            "bitwise": 61.76470588235294
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~a * a - ((~(~c & a) * 2 - (a ^ c) & c) * ((~c & a) * 2 - (a ^ c) & ~c) + ((~c & a) * 2 - (a ^ c) | c) * ((~c & a) * 2 - (a ^ c) & c) & ~a * a)) + 1",
                    "attributes": {
                        "numOps": 36,
                        "nestedExprLevel": 11,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 55.00000000000001,
                        "opsPercentages": {
                            "arithmetic": 19.444444444444446,
                            "mul": 22.22222222222222,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 5.0
                    }
                },
                "clang_O3": {
                    "expr": "(~((~(~c & a) * 2 - (c ^ a) & c) * (~c & (~c & a) * 2 - (c ^ a)) + ((~c & a) * 2 - (c ^ a) | c) * ((~c & a) * 2 - (c ^ a) & c)) & ~a * a) + 1",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 11,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 57.49999999999999,
                        "opsPercentages": {
                            "arithmetic": 17.647058823529413,
                            "mul": 20.588235294117645,
                            "bitwise": 61.76470588235294
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((((a & (c ^ 0xffffffff)) + (a & (c ^ 0xffffffff))) - (a ^ c) & c) * (((a & (c ^ 0xffffffff)) + (a & (c ^ 0xffffffff))) - (a ^ c) | c) + (((a & (c ^ 0xffffffff)) + (a & (c ^ 0xffffffff))) - (a ^ c) & (c ^ 0xffffffff)) * ((((a & (c ^ 0xffffffff)) + (a & (c ^ 0xffffffff))) - (a ^ c) ^ 0xffffffff) & c) & (0xffffffff - ((0xffffffff - a & a) * (0xffffffff - a | a) + (0xffffffff - a & (a ^ 0xffffffff)) * ((0xffffffff - a ^ 0xffffffff) & a)) ^ 0xffffffff)) + (-1 - ((0xffffffff - a & a) * (0xffffffff - a | a) + (0xffffffff - a & (a ^ 0xffffffff)) * ((0xffffffff - a ^ 0xffffffff) & a))) ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 71,
                        "nestedExprLevel": 35,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 11.25,
                        "opsPercentages": {
                            "arithmetic": 33.80281690140845,
                            "mul": 8.450704225352112,
                            "bitwise": 57.74647887323944
                        },
                        "percentageDAGsCancel": 12.903225806451612
                    }
                },
                "msvc_default": {
                    "expr": "~((((((~c & a) + (~c & a)) - (a ^ c) & c) * (((~c & a) + (~c & a)) - (a ^ c) | c) + (((~c & a) + (~c & a)) - (a ^ c) & ~c) * (~(((~c & a) + (~c & a)) - (a ^ c)) & c) & ~(0xffffffff - ((0xffffffff - a & a) * (0xffffffff - a | a) + (0xffffffff - a & ~a) * (~(0xffffffff - a) & a)))) - 1) - ((0xffffffff - a & a) * (0xffffffff - a | a) + (0xffffffff - a & ~a) * (~(0xffffffff - a) & a))) + 1",
                    "attributes": {
                        "numOps": 70,
                        "nestedExprLevel": 25,
                        "numDAGs": 30,
                        "percentDecreaseByOps": 12.5,
                        "opsPercentages": {
                            "arithmetic": 32.857142857142854,
                            "mul": 8.571428571428571,
                            "bitwise": 58.57142857142858
                        },
                        "percentageDAGsCancel": 10.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~(((c ^ a) + ~(~c & a) * 2 & c) * (~c & (~c & a) * 2 - (c ^ a)) + ((~c & a) * 2 - (c ^ a) & c) * ((~c & a) * 2 - (c ^ a) | c)) & ~a * a) + 1",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 11,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 57.49999999999999,
                        "opsPercentages": {
                            "arithmetic": 17.647058823529413,
                            "mul": 20.588235294117645,
                            "bitwise": 61.76470588235294
                        },
                        "percentageDAGsCancel": 5.0
                    }
                }
            }
        },
        {
            "num": 476,
            "gt": {
                "expr": "((d+((a*a)+(a^(e|d)))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "mba": {
                "expr": "((d | ((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ (((a - (((e + d) + 1) + ((- e - 1) | (- d - 1)))) - ((a | ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) << 1)) - 2)) + ((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & (((a - (((e + d) + 1) + ((- e - 1) | (- d - 1)))) - ((a | ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) << 1)) - 2)) + (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & (((a - (((e + d) + 1) + ((- e - 1) | (- d - 1)))) - ((a | ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) << 1)) - 2))))) + (d | ((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ (((a - (((e + d) + 1) + ((- e - 1) | (- d - 1)))) - ((a | ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) << 1)) - 2)) + ((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & (((a - (((e + d) + 1) + ((- e - 1) | (- d - 1)))) - ((a | ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) << 1)) - 2)) + (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & (((a - (((e + d) + 1) + ((- e - 1) | (- d - 1)))) - ((a | ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) << 1)) - 2)))))) - (d ^ ((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) ^ (((a - (((e + d) + 1) + ((- e - 1) | (- d - 1)))) - ((a | ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) << 1)) - 2)) + ((((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & (((a - (((e + d) + 1) + ((- e - 1) | (- d - 1)))) - ((a | ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) << 1)) - 2)) + (((a & a) * (a | a) + (a & ~ a) * (~ a & a)) & (((a - (((e + d) + 1) + ((- e - 1) | (- d - 1)))) - ((a | ~ (((e + d) + 1) + ((- e - 1) | (- d - 1)))) << 1)) - 2)))))",
                "attributes": {
                    "numOps": 299,
                    "nestedExprLevel": 164,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 56.85618729096989,
                        "mul": 6.0200668896321075,
                        "bitwise": 37.12374581939799
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((((a - (d + e + 1 + ~(e & d))) + ((e & d) - (d + e + 1) | a) * -2) - 2 & a * a) * 2 + (a * a ^ ((a - (d + e + 1 + ~(e & d))) + ((e & d) - (d + e + 1) | a) * -2) - 2) | d) * 2 - ((((a - (d + e + 1 + ~(e & d))) + ((e & d) - (d + e + 1) | a) * -2) - 2 & a * a) * 2 + (a * a ^ ((a - (d + e + 1 + ~(e & d))) + ((e & d) - (d + e + 1) | a) * -2) - 2) ^ d)",
                    "attributes": {
                        "numOps": 76,
                        "nestedExprLevel": 27,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 74.5819397993311,
                        "opsPercentages": {
                            "arithmetic": 56.57894736842105,
                            "mul": 14.473684210526317,
                            "bitwise": 28.947368421052634
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((((((a + (~(e + 1 + ~(d & e) + d) | a) * -2) - ~(d & e)) - d) - e) - 3 ^ a * a) + (((((a + (~(e + 1 + ~(d & e) + d) | a) * -2) - ~(d & e)) - d) - e) - 3 & a * a) * 2 | d) * 2 - ((((((a + (~(e + 1 + ~(d & e) + d) | a) * -2) - ~(d & e)) - d) - e) - 3 ^ a * a) + (((((a + (~(e + 1 + ~(d & e) + d) | a) * -2) - ~(d & e)) - d) - e) - 3 & a * a) * 2 ^ d)",
                    "attributes": {
                        "numOps": 80,
                        "nestedExprLevel": 35,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 73.24414715719062,
                        "opsPercentages": {
                            "arithmetic": 48.75,
                            "mul": 13.750000000000002,
                            "bitwise": 37.5
                        },
                        "percentageDAGsCancel": 8.695652173913043
                    }
                },
                "clang_O3": {
                    "expr": "((((a - (e | d)) + (~(e | d) | a) * -2) - 2 ^ a * a) + (((a - (e | d)) + (~(e | d) | a) * -2) - 2 & a * a) * 2 | d) * 2 - ((((a - (e | d)) + (~(e | d) | a) * -2) - 2 ^ a * a) + (((a - (e | d)) + (~(e | d) | a) * -2) - 2 & a * a) * 2 ^ d)",
                    "attributes": {
                        "numOps": 52,
                        "nestedExprLevel": 20,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 82.6086956521739,
                        "opsPercentages": {
                            "arithmetic": 36.53846153846153,
                            "mul": 21.153846153846153,
                            "bitwise": 42.30769230769231
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((d | (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (a | e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff) * -2) - 2) + (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (a | e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff) * -2) - 2) + (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (a | e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff) * -2) - 2)) + (d | (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (a | e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff) * -2) - 2) + (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (a | e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff) * -2) - 2) + (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (a | e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff) * -2) - 2))) - (d ^ (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) ^ ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (a | e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff) * -2) - 2) + (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (a | e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff) * -2) - 2) + (a * a + (a & (a ^ 0xffffffff)) * ((a ^ 0xffffffff) & a) & ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (a | e + d + 1 + (0xffffffff - e | 0xffffffff - d) ^ 0xffffffff) * -2) - 2))",
                    "attributes": {
                        "numOps": 254,
                        "nestedExprLevel": 69,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 15.050167224080269,
                        "opsPercentages": {
                            "arithmetic": 56.2992125984252,
                            "mul": 10.62992125984252,
                            "bitwise": 33.07086614173229
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                },
                "msvc_default": {
                    "expr": "(((a * a ^ ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) | a) * -2) - 2) + (a * a & ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) | a) * -2) - 2) + (a * a & ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) | a) * -2) - 2) | d) + ((a * a ^ ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) | a) * -2) - 2) + (a * a & ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) | a) * -2) - 2) + (a * a & ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) | a) * -2) - 2) | d)) - ((a * a ^ ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) | a) * -2) - 2) + (a * a & ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) | a) * -2) - 2) + (a * a & ((a - (e + d + 1 + (0xffffffff - e | 0xffffffff - d))) + (~(e + d + 1 + (0xffffffff - e | 0xffffffff - d)) | a) * -2) - 2) ^ d)",
                    "attributes": {
                        "numOps": 200,
                        "nestedExprLevel": 60,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 33.11036789297659,
                        "opsPercentages": {
                            "arithmetic": 67.0,
                            "mul": 9.0,
                            "bitwise": 24.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "((a * a ^ (((e & d) - d + 1 + e) + a + ((e & d) - d + 1 + e | a) * -2) - 1) + (a * a & (((e & d) - d + 1 + e) + a + ((e & d) - d + 1 + e | a) * -2) - 1) * 2 | d) * 2 - ((a * a ^ (((e & d) - d + 1 + e) + a + ((e & d) - d + 1 + e | a) * -2) - 1) + (a * a & (((e & d) - d + 1 + e) + a + ((e & d) - d + 1 + e | a) * -2) - 1) * 2 ^ d)",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 20,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 75.91973244147158,
                        "opsPercentages": {
                            "arithmetic": 59.72222222222222,
                            "mul": 15.277777777777779,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 477,
            "gt": {
                "expr": "((((b-e)|(a^e))&(((e*a)&b)*e)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 14.285714285714285,
                        "mul": 28.57142857142857,
                        "bitwise": 57.14285714285714
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ (((((b & ~ e) + (b & ~ e)) - (b ^ e)) & ~ (((a - e) - ((a | ~ e) + (a | ~ e))) - 2)) + (((a - e) - ((a | ~ e) + (a | ~ e))) - 2)) | ((((~ ((e & a) * (e | a) + (e & ~ a) * (~ e & a)) | b) - ~ ((e & a) * (e | a) + (e & ~ a) * (~ e & a))) & e) * (((~ ((e & a) * (e | a) + (e & ~ a) * (~ e & a)) | b) - ~ ((e & a) * (e | a) + (e & ~ a) * (~ e & a))) | e) + (((~ ((e & a) * (e | a) + (e & ~ a) * (~ e & a)) | b) - ~ ((e & a) * (e | a) + (e & ~ a) * (~ e & a))) & ~ e) * (~ ((~ ((e & a) * (e | a) + (e & ~ a) * (~ e & a)) | b) - ~ ((e & a) * (e | a) + (e & ~ a) * (~ e & a))) & e))) - ~ (((((b & ~ e) + (b & ~ e)) - (b ^ e)) & ~ (((a - e) - ((a | ~ e) + (a | ~ e))) - 2)) + (((a - e) - ((a | ~ e) + (a | ~ e))) - 2))",
                "attributes": {
                    "numOps": 153,
                    "nestedExprLevel": 65,
                    "numDAGs": 35,
                    "opsPercentages": {
                        "arithmetic": 23.52941176470588,
                        "mul": 11.76470588235294,
                        "bitwise": 64.70588235294117
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(a - e) + (~e | a) * -2 + -2 + ((~e & b) * 2 - (b ^ e) & (~e | a) * 2 + ~a + e + 2) & ((~e & a) * (~a & e) + (e & a) * (e | a) & b & e) * ((~e & a) * (~a & e) + (e & a) * (e | a) & b | e) + (~((~e & a) * (~a & e) + (e & a) * (e | a) & b) & e) * ((~e & a) * (~a & e) + (e & a) * (e | a) & b & ~e)",
                    "attributes": {
                        "numOps": 72,
                        "nestedExprLevel": 17,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 52.94117647058824,
                        "opsPercentages": {
                            "arithmetic": 20.833333333333336,
                            "mul": 18.055555555555554,
                            "bitwise": 61.111111111111114
                        },
                        "percentageDAGsCancel": 5.714285714285714
                    }
                },
                "msvc_O1": {
                    "expr": "a + -1 + ((((~(a | e) * (a & e) + 1 + (~((~a & e) * (~e & a) + (a | e) * (a & e)) | b) + (~a & e) * (~e & a) & e) * ((a | e) * (a & e) + 1 + (~((~a & e) * (~e & a) + (a | e) * (a & e)) | b) + (~a & e) * (~e & a) & ~e) + ((a | e) * (a & e) + 1 + (~((~a & e) * (~e & a) + (a | e) * (a & e)) | b) + (~a & e) * (~e & a) | e) * ((a | e) * (a & e) + 1 + (~((~a & e) * (~e & a) + (a | e) * (a & e)) | b) + (~a & e) * (~e & a) & e) | (((~e | a) * 2 - (~e & b) * 2 - (b ^ e) & ((~e | a) * 2 - a) + e + 1) - a) + 1 + e) + (~e | a) * -2) - e) + (~e & b) * 2 - (b ^ e) & ((~e | a) * 2 - a) + e + 1",
                    "attributes": {
                        "numOps": 139,
                        "nestedExprLevel": 40,
                        "numDAGs": 51,
                        "percentDecreaseByOps": 9.15032679738562,
                        "opsPercentages": {
                            "arithmetic": 25.899280575539567,
                            "mul": 17.26618705035971,
                            "bitwise": 56.83453237410072
                        },
                        "percentageDAGsCancel": 3.9215686274509802
                    }
                },
                "clang_O3": {
                    "expr": "(~(e | a) * (e & a) + (~a & e) * (~e & a) & b & e) * (~e & (e | a) * (e & a) + (~a & e) * (~e & a) & b) + ((e | a) * (e & a) + (~a & e) * (~e & a) & b | e) * ((e | a) * (e & a) + (~a & e) * (~e & a) & b & e) & ((1 - (a - e) + (~e | a) * -2 & (~e & b) * 2 - (e ^ b)) + (a - e) + (~e | a) * -2) - 2",
                    "attributes": {
                        "numOps": 71,
                        "nestedExprLevel": 18,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 53.59477124183007,
                        "opsPercentages": {
                            "arithmetic": 21.12676056338028,
                            "mul": 18.30985915492958,
                            "bitwise": 60.56338028169014
                        },
                        "percentageDAGsCancel": 10.81081081081081
                    }
                },
                "clang_default": {
                    "expr": "((((b & (e ^ 0xffffffff)) + (b & (e ^ 0xffffffff))) - (b ^ e) & (((a - e) - ((a | e ^ 0xffffffff) + (a | e ^ 0xffffffff)) ) - 2 ^ 0xffffffff)) + ((a - e) - ((a | e ^ 0xffffffff) + (a | e ^ 0xffffffff))) + -2 ^ 0xffffffff | (((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) ^ 0xffffffff | b) - ((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) ^ 0xffffffff) & e) * (((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) ^ 0xffffffff | b) - ((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) ^ 0xffffffff) | e) + (((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) ^ 0xffffffff | b) - ((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) ^ 0xffffffff) & (e ^ 0xffffffff)) * ((((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) ^ 0xffffffff | b) - ((e & a) * (e | a) + (e & (a ^ 0xffffffff)) * ((e ^ 0xffffffff) & a) ^ 0xffffffff) ^ 0xffffffff) & e)) - ((((b & (e ^ 0xffffffff)) + (b & (e ^ 0xffffffff))) - (b ^ e) & (((a - e) - ((a | e ^ 0xffffffff) + (a | e ^ 0xffffffff)) ) - 2 ^ 0xffffffff)) + ((a - e) - ((a | e ^ 0xffffffff) + (a | e ^ 0xffffffff))) + -2 ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 155,
                        "nestedExprLevel": 65,
                        "numDAGs": 37,
                        "percentDecreaseByOps": -1.3071895424836601,
                        "opsPercentages": {
                            "arithmetic": 24.516129032258064,
                            "mul": 11.612903225806452,
                            "bitwise": 63.87096774193548
                        },
                        "percentageDAGsCancel": 8.108108108108109
                    }
                },
                "msvc_default": {
                    "expr": "(~(((((~e & b) + (~e & b)) - (b ^ e) & ~(((a - e) - ((~e | a) + (~e | a))) - 2)) - 2) + ((a - e) - ((~e | a) + (~e | a)))) | ((~((e & a) * (e | a) + (~a & e) * (~e & a) ) | b) - ~((e & a) * (e | a) + (~a & e) * (~e & a)) & e) * ((~((e & a) * (e | a) + (~a & e) * (~e & a) ) | b) - ~((e & a) * (e | a) + (~a & e) * (~e & a)) | e) + ((~((e & a) * (e | a) + (~a & e) * (~e & a) ) | b) - ~((e & a) * (e | a) + (~a & e) * (~e & a)) & ~e) * (~((~((e & a) * (e | a) + (~a & e) * (~e & a)) | b) - ~((e & a) * (e | a) + (~a & e) * (~e & a) )) & e)) - ~(((((~e & b) + (~e & b)) - (b ^ e) & ~(((a - e) - ((~e | a) + (~e | a))) - 2)) - 2) + ((a - e) - ((~e | a) + (~e | a))))",
                    "attributes": {
                        "numOps": 153,
                        "nestedExprLevel": 59,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 23.52941176470588,
                            "mul": 11.76470588235294,
                            "bitwise": 64.70588235294117
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "gcc_O3": {
                    "expr": "(((~e & b) * 2 - (b ^ e) & (~e | a) * 2 + 2 + ~a + e) - 2) + (a - e) + (~e | a) * -2 & ((e & a) * (e | a) + (~a & e) * (~e & a) & b | e) * ((e & a) * (e | a) + (~a & e) * (~e & a) & b & e) + (~(e & a) * (e | a) + (~a & e) * (~e & a) & b & e) * (~e & (e & a) * (e | a) + (~a & e) * (~e & a) & b)",
                    "attributes": {
                        "numOps": 71,
                        "nestedExprLevel": 17,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 53.59477124183007,
                        "opsPercentages": {
                            "arithmetic": 19.718309859154928,
                            "mul": 18.30985915492958,
                            "bitwise": 61.97183098591549
                        },
                        "percentageDAGsCancel": 15.384615384615385
                    }
                }
            }
        },
        {
            "num": 478,
            "gt": {
                "expr": "((-((-((e^e)^(e-e)))^(~(~((c^c)*c))))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 11,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 30.0,
                        "mul": 10.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 90.0
                }
            },
            "mba": {
                "expr": "~ (((~ ((((((e | e) - (e & e)) - (((e & ~ e) << 1) - (e ^ e))) - ((((e | e) - (e & e)) | ~ (((e & ~ e) << 1) - (e ^ e))) << 1)) - 2) - 1) | (- (- ((((c | c) - (c & c)) & c) * (((c | c) - (c & c)) | c) + (((c | c) - (c & c)) & ~ c) * (~ ((c | c) - (c & c)) & c)) - 1) - 1)) - (~ ((((((e | e) - (e & e)) - (((e & ~ e) << 1) - (e ^ e))) - ((((e | e) - (e & e)) | ~ (((e & ~ e) << 1) - (e ^ e))) << 1)) - 2) - 1) & (- (- ((((c | c) - (c & c)) & c) * (((c | c) - (c & c)) | c) + (((c | c) - (c & c)) & ~ c) * (~ ((c | c) - (c & c)) & c)) - 1) - 1))) - 1)",
                "attributes": {
                    "numOps": 103,
                    "nestedExprLevel": 67,
                    "numDAGs": 37,
                    "opsPercentages": {
                        "arithmetic": 34.95145631067961,
                        "mul": 3.8834951456310676,
                        "bitwise": 61.165048543689316
                    },
                    "percentageDAGsCancel": 70.27027027027027
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e & (e ^ 0xffffffff)) * -2 + ((e & (e ^ 0xffffffff)) * 2 ^ 0xffffffff) * -2) - 3 ^ 0xffffffff) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 7,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 85.43689320388349,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 20.0,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 25.0
                    }
                },
                "msvc_default": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 479,
            "gt": {
                "expr": "((~((e^d)|((e-d)^e))))",
                "attributes": {
                    "numOps": 5,
                    "nestedExprLevel": 6,
                    "numDAGs": 5,
                    "opsPercentages": {
                        "arithmetic": 20.0,
                        "mul": 0.0,
                        "bitwise": 80.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "- ((((e | d) - (e & d)) & ~ ((((e & ~ d) - (~ e & d)) | e) - (((e & ~ d) - (~ e & d)) & e))) + ((((e & ~ d) - (~ e & d)) | e) - (((e & ~ d) - (~ e & d)) & e))) - 1",
                "attributes": {
                    "numOps": 34,
                    "nestedExprLevel": 19,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 29.411764705882355,
                        "mul": 0.0,
                        "bitwise": 70.58823529411765
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((~d & e) - (~e & d) ^ e) + ((e ^ d) & (d + ~e ^ e)))",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 61.76470588235294,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 0.0,
                            "bitwise": 76.92307692307693
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((~d & e) - (~e & d) & e - ((d | e) - (d & e) & ~((~d & e) - (~e & d) | e - (~d & e) - (~e & d) & e))) - (~d & e) - (~e & d) | e) + -1",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 10,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 0.0,
                            "bitwise": 70.58823529411765
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((~(~d & e) - (~e & d) ^ e & (e ^ d)) + (~d & e) - (~e & d) ^ e)",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 6,
                        "numDAGs": 13,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 17.647058823529413,
                            "mul": 0.0,
                            "bitwise": 82.35294117647058
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - (((e | d) - (e & d) & (((e & (d ^ 0xffffffff)) - ((e ^ 0xffffffff) & d) | e) - ((e & (d ^ 0xffffffff)) - ((e ^ 0xffffffff) & d) & e ) ^ 0xffffffff)) + (((e & (d ^ 0xffffffff)) - ((e ^ 0xffffffff) & d) | e) - ((e & (d ^ 0xffffffff)) - ((e ^ 0xffffffff) & d) & e)))",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 19,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 0.0,
                            "bitwise": 70.58823529411765
                        },
                        "percentageDAGsCancel": 12.5
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (((e | d) - (e & d) & ~(((~d & e) - (~e & d) | e) - ((~d & e) - (~e & d) & e))) + (((~d & e) - (~e & d) | e) - ((~d & e) - (~e & d) & e)))",
                    "attributes": {
                        "numOps": 34,
                        "nestedExprLevel": 14,
                        "numDAGs": 16,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 0.0,
                            "bitwise": 70.58823529411765
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(((~d & e) - (~e & d) ^ e) + ((~e + d ^ e) & (e ^ d)))",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 6,
                        "numDAGs": 12,
                        "percentDecreaseByOps": 61.76470588235294,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 0.0,
                            "bitwise": 76.92307692307693
                        },
                        "percentageDAGsCancel": 8.333333333333332
                    }
                }
            }
        },
        {
            "num": 480,
            "gt": {
                "expr": "((~((~(~(~d)))^((b&e)|b))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 0.0,
                        "bitwise": 100.0
                    },
                    "percentageDAGsCancel": 28.57142857142857
                }
            },
            "mba": {
                "expr": "((- (- (- d - 1) - 1) - 1) & ((((((~ b | e) + b) + 1) + b) + 1) + ((- (((~ b | e) + b) + 1) - 1) | (- b - 1)))) + ~ ((- (- (- d - 1) - 1) - 1) | ((((((~ b | e) + b) + 1) + b) + 1) + ((- (((~ b | e) + b) + 1) - 1) | (- b - 1))))",
                "attributes": {
                    "numOps": 48,
                    "nestedExprLevel": 27,
                    "numDAGs": 22,
                    "opsPercentages": {
                        "arithmetic": 72.91666666666666,
                        "mul": 0.0,
                        "bitwise": 27.083333333333332
                    },
                    "percentageDAGsCancel": 9.090909090909092
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~b | -(b + (~b | e)) - 2) + b * 2 + (~b | e) + 2 ^ d",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 70.83333333333334,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 7.142857142857142,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_O1": {
                    "expr": "~(~d | ((-2 - ~b | e) - b | ~b) + ~b | e + (b + 1) * 2) + (~d & ((-2 - ~b | e) - b | ~b) + ~b | e + (b + 1) * 2)",
                    "attributes": {
                        "numOps": 32,
                        "nestedExprLevel": 7,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 33.33333333333333,
                        "opsPercentages": {
                            "arithmetic": 40.625,
                            "mul": 6.25,
                            "bitwise": 53.125
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(-(e | ~b) + b - 2 | ~b) + (e | ~b) + b + b + 2 ^ d",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 70.83333333333334,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - (-1 - (-1 - d)) & (b ^ 0xffffffff | e) + b * 2 + 2 + (0xffffffff - ((b ^ 0xffffffff | e) + b + 1) | 0xffffffff - b)) + ((0xffffffff - (-1 - (-1 - d)) | (b ^ 0xffffffff | e) + b * 2 + 2 + (0xffffffff - ((b ^ 0xffffffff | e) + b + 1) | 0xffffffff - b)) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 13,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 16.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 5.0,
                            "bitwise": 32.5
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - (-1 - (-1 - d)) & (~b | e) + b * 2 + 2 + (0xffffffff - ((~b | e) + 1 + b) | 0xffffffff - b)) + ~(0xffffffff - (-1 - (-1 - d)) | (~b | e) + b * 2 + 2 + (0xffffffff - ((~b | e) + 1 + b) | 0xffffffff - b))",
                    "attributes": {
                        "numOps": 40,
                        "nestedExprLevel": 12,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 16.666666666666664,
                        "opsPercentages": {
                            "arithmetic": 62.5,
                            "mul": 5.0,
                            "bitwise": 32.5
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "gcc_O3": {
                    "expr": "(e | ~b) + b + 2 + b + (-(e | ~b) + b - 2 | ~b) ^ d",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 70.83333333333334,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 481,
            "gt": {
                "expr": "(((-(((a*c)|a)|(a-(-(b&a)))))^((-b)-b)))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 10.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ (((((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) & ~ a) + a) + ((a ^ ~ (((~ b | a) - ~ b) - 1)) - ((~ a & ~ (((~ b | a) - ~ b) - 1)) + (~ a & ~ (((~ b | a) - ~ b) - 1))))) + 1) + ((- ((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) & ~ a) + a) - 1) | (- ((a ^ ~ (((~ b | a) - ~ b) - 1)) - ((~ a & ~ (((~ b | a) - ~ b) - 1)) + (~ a & ~ (((~ b | a) - ~ b) - 1)))) - 1))) + 1) | ((~ (b - 1) & ~ b) - (~ (~ (b - 1)) & b))) - ((~ (((((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) & ~ a) + a) + ((a ^ ~ (((~ b | a) - ~ b) - 1)) - ((~ a & ~ (((~ b | a) - ~ b) - 1)) + (~ a & ~ (((~ b | a) - ~ b) - 1))))) + 1) + ((- ((((a & c) * (a | c) + (a & ~ c) * (~ a & c)) & ~ a) + a) - 1) | (- ((a ^ ~ (((~ b | a) - ~ b) - 1)) - ((~ a & ~ (((~ b | a) - ~ b) - 1)) + (~ a & ~ (((~ b | a) - ~ b) - 1)))) - 1))) + 1) & ((~ (b - 1) & ~ b) - (~ (~ (b - 1)) & b)))",
                "attributes": {
                    "numOps": 189,
                    "nestedExprLevel": 90,
                    "numDAGs": 39,
                    "opsPercentages": {
                        "arithmetic": 33.33333333333333,
                        "mul": 4.232804232804233,
                        "bitwise": 62.43386243386243
                    },
                    "percentageDAGsCancel": 7.6923076923076925
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-((((-(a & b) & ~a) * 2 - (-(a & b) ^ a)) - 1 | ~(a + ((a & c) * (a | c) + (~a & c) * (~c & a) & ~a))) + (-(a & b) ^ a) + (-(a & b) & ~a) * -2 + ((a & c) * (a | c) + (~a & c) * (~c & a) & ~a ) + a + 1) ^ (-b & ~b) - (b - 1 & b)",
                    "attributes": {
                        "numOps": 57,
                        "nestedExprLevel": 16,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 69.84126984126983,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 10.526315789473683,
                            "bitwise": 56.14035087719298
                        },
                        "percentageDAGsCancel": 2.857142857142857
                    }
                },
                "msvc_O1": {
                    "expr": "(~(b - 1 | b) - (b - 1 & b) | ~((~(~c & a) * (~a & c) + (a | c) * (a & c) & ~a - a | (~((~b | a) + b) & ~a * 2 - ~((~b | a) + b) ^ a) - 1) + ~((~b | a) + b) & ~a * -2 + ~((~b | a) + b) ^ a + (~c & a) * (~a & c) + (a | c) * (a & c) & ~a + a)) - (~(b - 1 | b) - (b - 1 & b) & ~((~(~c & a) * (~a & c) + (a | c) * (a & c) & ~a - a | (~((~b | a) + b) & ~a * 2 - ~((~b | a) + b) ^ a) - 1) + ~((~b | a) + b) & ~a * -2 + ~((~b | a) + b) ^ a + (~c & a) * (~a & c) + (a | c) * (a & c) & ~a + a))",
                    "attributes": {
                        "numOps": 129,
                        "nestedExprLevel": 28,
                        "numDAGs": 42,
                        "percentDecreaseByOps": 31.746031746031743,
                        "opsPercentages": {
                            "arithmetic": 27.131782945736433,
                            "mul": 9.30232558139535,
                            "bitwise": 63.565891472868216
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~b & -b) - (b - 1 & b) ^ -(((~c & a) * (c & ~a) + (c | a) * (c & a) & ~a) + a | (a ^ -(b & a)) + (-(b & a) & ~a) * -2)",
                    "attributes": {
                        "numOps": 31,
                        "nestedExprLevel": 9,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 83.5978835978836,
                        "opsPercentages": {
                            "arithmetic": 32.25806451612903,
                            "mul": 9.67741935483871,
                            "bitwise": 58.06451612903226
                        },
                        "percentageDAGsCancel": 14.814814814814813
                    }
                },
                "clang_default": {
                    "expr": "((((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) & (a ^ 0xffffffff)) + a + ((a ^ ((b ^ 0xffffffff | a) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff) - (((a ^ 0xffffffff) & (((b ^ 0xffffffff | a) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff)) + ((a ^ 0xffffffff) & (((b ^ 0xffffffff | a) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff)))) + 1 + (0xffffffff - (((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) & (a ^ 0xffffffff)) + a) | 0xffffffff - ((a ^ ((b ^ 0xffffffff | a) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff) - (((a ^ 0xffffffff) & (((b ^ 0xffffffff | a) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff)) + ((a ^ 0xffffffff) & (((b ^ 0xffffffff | a) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff))))) ^ 0xffffffff) + 1 | ((b - 1 ^ 0xffffffff) & (b ^ 0xffffffff)) - (b - 1 & b)) - ((((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) & (a ^ 0xffffffff)) + a + ((a ^ ((b ^ 0xffffffff | a) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff) - (((a ^ 0xffffffff) & (((b ^ 0xffffffff | a) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff)) + ((a ^ 0xffffffff) & (((b ^ 0xffffffff | a) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff)))) + 1 + (0xffffffff - (((a & c) * (a | c) + (a & (c ^ 0xffffffff)) * ((a ^ 0xffffffff) & c) & (a ^ 0xffffffff)) + a) | 0xffffffff - ((a ^ ((b ^ 0xffffffff | a) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff) - (((a ^ 0xffffffff) & (((b ^ 0xffffffff | a) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff)) + ((a ^ 0xffffffff) & (((b ^ 0xffffffff | a) - (b ^ 0xffffffff)) - 1 ^ 0xffffffff))))) ^ 0xffffffff) + 1 & ((b - 1 ^ 0xffffffff) & (b ^ 0xffffffff)) - (b - 1 & b))",
                    "attributes": {
                        "numOps": 181,
                        "nestedExprLevel": 86,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 4.232804232804233,
                        "opsPercentages": {
                            "arithmetic": 32.59668508287293,
                            "mul": 4.41988950276243,
                            "bitwise": 62.98342541436463
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(((a & c) * (a | c) + (~c & a) * (~a & c) & ~a) + a + ((~(((~b | a) - ~b) - 1) ^ a) - ((~a & ~(((~b | a) - ~b) - 1)) + (~a & ~(((~b | a) - ~b) - 1)))) + 1 + (0xffffffff - (((a & c) * (a | c) + (~c & a) * (~a & c) & ~a) + a) | 0xffffffff - ((~(((~b | a) - ~b) - 1) ^ a) - ((~a & ~(((~b | a) - ~b) - 1)) + (~a & ~(((~b | a) - ~b) - 1)))))) + 1 | (~(b - 1) & ~b) - (b - 1 & b)) - (~(((a & c) * (a | c) + (~c & a) * (~a & c) & ~a) + a + ((~(((~b | a) - ~b) - 1) ^ a) - ((~a & ~(((~b | a) - ~b) - 1)) + (~a & ~(((~b | a) - ~b) - 1)))) + 1 + (0xffffffff - (((a & c) * (a | c) + (~c & a) * (~a & c) & ~a) + a) | 0xffffffff - ((~(((~b | a) - ~b) - 1) ^ a) - ((~a & ~(((~b | a) - ~b) - 1)) + (~a & ~(((~b | a) - ~b) - 1)))))) + 1 & (~(b - 1) & ~b) - (b - 1 & b))",
                    "attributes": {
                        "numOps": 181,
                        "nestedExprLevel": 69,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 4.232804232804233,
                        "opsPercentages": {
                            "arithmetic": 32.59668508287293,
                            "mul": 4.41988950276243,
                            "bitwise": 62.98342541436463
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "gcc_O3": {
                    "expr": "-(((~c & a) * (~a & c) + (a & c) * (c | a) & ~a) + a + 1 + a + ~a & -(a & b) * -2 + ((~a & -(a & b) * 2 - a) - 1 | ~((~c & a) * (~a & c) + (a & c) * (c | a) & ~a) + a)) ^ (-b & ~b) - (b - 1 & b)",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 11,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 73.01587301587301,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 11.76470588235294,
                            "bitwise": 54.90196078431373
                        },
                        "percentageDAGsCancel": 8.571428571428571
                    }
                }
            }
        },
        {
            "num": 482,
            "gt": {
                "expr": "((~(~(~(b*b)))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 25.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "- (- (- ((b & b) * (b | b) + (b & ~ b) * (~ b & b)) - 1) - 1) - 1",
                "attributes": {
                    "numOps": 15,
                    "nestedExprLevel": 6,
                    "numDAGs": 14,
                    "opsPercentages": {
                        "arithmetic": 46.666666666666664,
                        "mul": 13.333333333333334,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 35.714285714285715
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(b * b)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 86.66666666666667,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 50.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(b * b)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 86.66666666666667,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 50.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~(b * b)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 86.66666666666667,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 50.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "-1 - (-1 - (-1 - (b * b + (b & (b ^ 0xffffffff)) * ((b ^ 0xffffffff) & b))))",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 7,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 13.333333333333334,
                        "opsPercentages": {
                            "arithmetic": 53.84615384615385,
                            "mul": 15.384615384615385,
                            "bitwise": 30.76923076923077
                        },
                        "percentageDAGsCancel": 30.0
                    }
                },
                "msvc_default": {
                    "expr": "-1 - (-1 - (-1 - b * b))",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 53.333333333333336,
                        "opsPercentages": {
                            "arithmetic": 85.71428571428571,
                            "mul": 14.285714285714285,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(b * b)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 86.66666666666667,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 50.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 483,
            "gt": {
                "expr": "((-(b^((d*d)+d))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 25.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ (((b | ((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | d) + (((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & d))) - (b & ((((d & d) * (d | d) + (d & ~ d) * (~ d & d)) | d) + (((d & d) * (d | d) + (d & ~ d) * (~ d & d)) & d)))) - 1)",
                "attributes": {
                    "numOps": 47,
                    "nestedExprLevel": 23,
                    "numDAGs": 16,
                    "opsPercentages": {
                        "arithmetic": 17.02127659574468,
                        "mul": 17.02127659574468,
                        "bitwise": 65.95744680851064
                    },
                    "percentageDAGsCancel": 31.25
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-(d + d * d ^ b)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 91.48936170212765,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 25.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((d * d | d) + (d * d & d) & b) - ((d * d | d) + (d * d & d) | b)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 5,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 72.3404255319149,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 30.76923076923077,
                            "bitwise": 46.15384615384615
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_O3": {
                    "expr": "-(d * d + d ^ b)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 91.48936170212765,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 25.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((b | (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) | d) + (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) & d)) - (b & (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) | d) + (d * d + (d & (d ^ 0xffffffff)) * ((d ^ 0xffffffff) & d) & d))) - 1 ^ 0xffffffff",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 17,
                        "numDAGs": 14,
                        "percentDecreaseByOps": 17.02127659574468,
                        "opsPercentages": {
                            "arithmetic": 20.51282051282051,
                            "mul": 20.51282051282051,
                            "bitwise": 58.97435897435898
                        },
                        "percentageDAGsCancel": 21.428571428571427
                    }
                },
                "msvc_default": {
                    "expr": "~((((d * d | d) + (d * d & d) | b) - ((d * d | d) + (d * d & d) & b)) - 1)",
                    "attributes": {
                        "numOps": 15,
                        "nestedExprLevel": 7,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 68.08510638297872,
                        "opsPercentages": {
                            "arithmetic": 26.666666666666668,
                            "mul": 26.666666666666668,
                            "bitwise": 46.666666666666664
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "-(d + d * d ^ b)",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 91.48936170212765,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 25.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 484,
            "gt": {
                "expr": "((((d+(-(~(-d))))-(b^d))-((b-d)*b)))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 11.11111111111111,
                        "bitwise": 22.22222222222222
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((d | ((~ d + 1) + 1)) + (d & ((~ d + 1) + 1))) ^ ((b | d) - (b & d))) - ((~ ((d | ((~ d + 1) + 1)) + (d & ((~ d + 1) + 1))) & ((b | d) - (b & d))) + (~ ((d | ((~ d + 1) + 1)) + (d & ((~ d + 1) + 1))) & ((b | d) - (b & d))))) & ~ ((((b + ~ d) + 1) & b) * (((b + ~ d) + 1) | b) + (((b + ~ d) + 1) & ~ b) * (~ ((b + ~ d) + 1) & b))) - (~ ((((d | ((~ d + 1) + 1)) + (d & ((~ d + 1) + 1))) ^ ((b | d) - (b & d))) - ((~ ((d | ((~ d + 1) + 1)) + (d & ((~ d + 1) + 1))) & ((b | d) - (b & d))) + (~ ((d | ((~ d + 1) + 1)) + (d & ((~ d + 1) + 1))) & ((b | d) - (b & d))))) & ((((b + ~ d) + 1) & b) * (((b + ~ d) + 1) | b) + (((b + ~ d) + 1) & ~ b) * (~ ((b + ~ d) + 1) & b)))",
                "attributes": {
                    "numOps": 133,
                    "nestedExprLevel": 74,
                    "numDAGs": 30,
                    "opsPercentages": {
                        "arithmetic": 44.3609022556391,
                        "mul": 3.007518796992481,
                        "bitwise": 52.63157894736842
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b ^ d ^ 1) + ((b ^ d) & 0xfffffffe) * -2 & ~(((d - b) - 1 & b) * (b + ~d + 1 & ~b) + (b + ~d + 1 & b) * (b + ~d + 1 | b))) - ((b ^ d ^ 0xfffffffe) + ((b ^ d) & 0xfffffffe) * 2 & ((d - b) - 1 & b) * (b + ~d + 1 & ~b) + (b + ~d + 1 & b) * (b + ~d + 1 | b))",
                    "attributes": {
                        "numOps": 55,
                        "nestedExprLevel": 12,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 58.64661654135338,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 10.909090909090908,
                            "bitwise": 49.09090909090909
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "msvc_O1": {
                    "expr": "(~(b + 1 + ~d | b) * (b + 1 + ~d & b) + (~b & b + 1 + ~d) * (~b + 1 + ~d & b) & ((~d + 2 | d) + (~d + 2 & d) ^ (b | d) - (b & d)) + (~(~d + 2 | d) + (~d + 2 & d) & (b | d) - (b & d)) * -2) - (~((~d + 2 | d) + (~d + 2 & d) ^ (b | d) - (b & d)) + (~(~d + 2 | d) + (~d + 2 & d) & (b | d) - (b & d)) * -2 & (b + 1 + ~d | b) * (b + 1 + ~d & b) + (~b & b + 1 + ~d) * (~b + 1 + ~d & b))",
                    "attributes": {
                        "numOps": 99,
                        "nestedExprLevel": 19,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 25.563909774436087,
                        "opsPercentages": {
                            "arithmetic": 39.39393939393939,
                            "mul": 6.0606060606060606,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 2.857142857142857
                    }
                },
                "clang_O3": {
                    "expr": "(~(~b - d & b) * (~b & b - d) + (b - d | b) * (b - d & b) & (d ^ b ^ 1) - ((d ^ b) * 2 & 0xfffffffc)) - (~(d ^ b ^ 1) - ((d ^ b) * 2 & 0xfffffffc) & (~b - d & b) * (~b & b - d) + (b - d | b) * (b - d & b))",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 10,
                        "numDAGs": 23,
                        "percentDecreaseByOps": 67.66917293233082,
                        "opsPercentages": {
                            "arithmetic": 30.23255813953488,
                            "mul": 13.953488372093023,
                            "bitwise": 55.81395348837209
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((d | (d ^ 0xffffffff) + 2) + (d & (d ^ 0xffffffff) + 2) ^ (b | d) - (b & d)) - ((((d | (d ^ 0xffffffff) + 2) + (d & (d ^ 0xffffffff) + 2) ^ 0xffffffff) & (b | d) - (b & d)) + (((d | (d ^ 0xffffffff) + 2) + (d & (d ^ 0xffffffff) + 2) ^ 0xffffffff) & (b | d) - (b & d))) & ((b + (d ^ 0xffffffff) + 1 & b) * (b + (d ^ 0xffffffff) + 1 | b) + (b + (d ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((b + (d ^ 0xffffffff) + 1 ^ 0xffffffff) & b) ^ 0xffffffff)) - ((((d | (d ^ 0xffffffff) + 2) + (d & (d ^ 0xffffffff) + 2) ^ (b | d) - (b & d)) - ((((d | (d ^ 0xffffffff) + 2) + (d & (d ^ 0xffffffff) + 2) ^ 0xffffffff) & (b | d) - (b & d)) + (((d | (d ^ 0xffffffff) + 2) + (d & (d ^ 0xffffffff) + 2) ^ 0xffffffff) & (b | d) - (b & d))) ^ 0xffffffff) & (b + (d ^ 0xffffffff) + 1 & b) * (b + (d ^ 0xffffffff) + 1 | b) + (b + (d ^ 0xffffffff) + 1 & (b ^ 0xffffffff)) * ((b + (d ^ 0xffffffff) + 1 ^ 0xffffffff) & b))",
                    "attributes": {
                        "numOps": 121,
                        "nestedExprLevel": 48,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 9.022556390977442,
                        "opsPercentages": {
                            "arithmetic": 38.84297520661157,
                            "mul": 3.3057851239669422,
                            "bitwise": 57.85123966942148
                        },
                        "percentageDAGsCancel": 10.344827586206897
                    }
                },
                "msvc_default": {
                    "expr": "(((~d + 2 | d) + (~d + 2 & d) ^ (b | d) - (b & d)) - ((~((~d + 2 | d) + (~d + 2 & d)) & (b | d) - (b & d)) + (~((~d + 2 | d) + (~d + 2 & d)) & (b | d) - (b & d))) & ~((b + 1 + ~d & b) * (b + 1 + ~d | b) + (b + 1 + ~d & ~b) * (~(b + 1 + ~d) & b))) - (~(((~d + 2 | d) + (~d + 2 & d) ^ (b | d) - (b & d)) - ((~((~d + 2 | d) + (~d + 2 & d)) & (b | d) - (b & d)) + (~((~d + 2 | d) + (~d + 2 & d)) & (b | d) - (b & d)))) & (b + 1 + ~d & b) * (b + 1 + ~d | b) + (b + 1 + ~d & ~b) * (~(b + 1 + ~d) & b))",
                    "attributes": {
                        "numOps": 121,
                        "nestedExprLevel": 34,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 9.022556390977442,
                        "opsPercentages": {
                            "arithmetic": 38.84297520661157,
                            "mul": 3.3057851239669422,
                            "bitwise": 57.85123966942148
                        },
                        "percentageDAGsCancel": 3.4482758620689653
                    }
                },
                "gcc_O3": {
                    "expr": "((b ^ d ^ 1) + (b ^ d & 0xfffffffe) * -2 & ~((d - b) - 1 & b) * (~b & b - d) + (b - d & b) * (b - d | b)) - ((b ^ d ^ 0xfffffffe) + (b ^ d & 0xfffffffe) * 2 & ((d - b) - 1 & b) * (~b & b - d) + (b - d & b) * (b - d | b))",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 11,
                        "numDAGs": 27,
                        "percentDecreaseByOps": 67.66917293233082,
                        "opsPercentages": {
                            "arithmetic": 37.2093023255814,
                            "mul": 13.953488372093023,
                            "bitwise": 48.837209302325576
                        },
                        "percentageDAGsCancel": 7.4074074074074066
                    }
                }
            }
        },
        {
            "num": 485,
            "gt": {
                "expr": "((~((-a)*((a^a)*(b-(b&(b-b)))))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 37.5,
                        "mul": 25.0,
                        "bitwise": 37.5
                    },
                    "percentageDAGsCancel": 75.0
                }
            },
            "mba": {
                "expr": "- ((~ (a - 1) & ((((a | a) - (a & a)) & (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))) * (((a | a) - (a & a)) | (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))) + (((a | a) - (a & a)) & ~ (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))) * (~ ((a | a) - (a & a)) & (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))))) * (~ (a - 1) | ((((a | a) - (a & a)) & (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))) * (((a | a) - (a & a)) | (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))) + (((a | a) - (a & a)) & ~ (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))) * (~ ((a | a) - (a & a)) & (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))))) + (~ (a - 1) & ~ ((((a | a) - (a & a)) & (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))) * (((a | a) - (a & a)) | (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))) + (((a | a) - (a & a)) & ~ (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))) * (~ ((a | a) - (a & a)) & (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))))) * (~ (~ (a - 1)) & ((((a | a) - (a & a)) & (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))) * (((a | a) - (a & a)) | (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))) + (((a | a) - (a & a)) & ~ (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)))) * (~ ((a | a) - (a & a)) & (((b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b)) + (b & ~ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))) - (b ^ ((~ b | ((b & ~ b) - (~ b & b))) - ~ b))))))) - 1",
                "attributes": {
                    "numOps": 647,
                    "nestedExprLevel": 331,
                    "numDAGs": 36,
                    "opsPercentages": {
                        "arithmetic": 23.956723338485318,
                        "mul": 1.545595054095827,
                        "bitwise": 74.49768160741885
                    },
                    "percentageDAGsCancel": 63.888888888888886
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "0xffffffff",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "-1",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 99.84544049459042,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "0xffffffff",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "0xffffffff",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "-1",
                    "attributes": {
                        "numOps": 1,
                        "nestedExprLevel": 1,
                        "numDAGs": 1,
                        "percentDecreaseByOps": 99.84544049459042,
                        "opsPercentages": {
                            "arithmetic": 100.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "0xffffffff",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 486,
            "gt": {
                "expr": "(((-(a&(-c)))^((-(c&(a|b)))*(b+c))))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 9,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 11.11111111111111,
                        "bitwise": 44.44444444444444
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ ((~ a | ~ (c - 1)) - ~ a) + 1) | ((~ ((((~ c | ((a & ~ b) + b)) + c) + 1) - 1) & ((b | c) + (b & c))) * (~ ((((~ c | ((a & ~ b) + b)) + c) + 1) - 1) | ((b | c) + (b & c))) + (~ ((((~ c | ((a & ~ b) + b)) + c) + 1) - 1) & ~ ((b | c) + (b & c))) * (~ (~ ((((~ c | ((a & ~ b) + b)) + c) + 1) - 1)) & ((b | c) + (b & c))))) - ((~ ((~ a | ~ (c - 1)) - ~ a) + 1) & ((~ ((((~ c | ((a & ~ b) + b)) + c) + 1) - 1) & ((b | c) + (b & c))) * (~ ((((~ c | ((a & ~ b) + b)) + c) + 1) - 1) | ((b | c) + (b & c))) + (~ ((((~ c | ((a & ~ b) + b)) + c) + 1) - 1) & ~ ((b | c) + (b & c))) * (~ (~ ((((~ c | ((a & ~ b) + b)) + c) + 1) - 1)) & ((b | c) + (b & c)))))",
                "attributes": {
                    "numOps": 133,
                    "nestedExprLevel": 77,
                    "numDAGs": 31,
                    "opsPercentages": {
                        "arithmetic": 36.84210526315789,
                        "mul": 3.007518796992481,
                        "bitwise": 60.150375939849624
                    },
                    "percentageDAGsCancel": 9.67741935483871
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(c + b & (~c | b + (~b & a)) + c) * ~(c + b | (~c | b + (~b & a)) + c) + (~(c + (~c | b + (~b & a))) & c + b) * (c + b | ~(c + (~c | b + (~b & a)))) ^ -(-c & a)",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 12,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 68.42105263157895,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 4.761904761904762,
                            "bitwise": 59.523809523809526
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "((~(~c | (~b & a) + b) + c & (b | c) + (b & c)) * (~(~c | (~b & a) + b) + c | (b | c) + (b & c)) + (~(b | c) + (b & c) & ~(~c | (~b & a) + b) + c) * ((~c | (~b & a) + b) + c & (b | c) + (b & c)) | ~((~a | -c) + a)) - ((~(~c | (~b & a) + b) + c & (b | c) + (b & c)) * (~(~c | (~b & a) + b) + c | (b | c) + (b & c)) + (~(b | c) + (b & c) & ~(~c | (~b & a) + b) + c) * ((~c | (~b & a) + b) + c & (b | c) + (b & c)) & ~((~a | -c) + a))",
                    "attributes": {
                        "numOps": 107,
                        "nestedExprLevel": 30,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 19.548872180451127,
                        "opsPercentages": {
                            "arithmetic": 28.971962616822427,
                            "mul": 3.7383177570093453,
                            "bitwise": 67.28971962616822
                        },
                        "percentageDAGsCancel": 7.142857142857142
                    }
                },
                "clang_O3": {
                    "expr": "(~b & ~((~b & a) + b | ~c) + c) * (((~b & a) + b | ~c) + c & b) + (b | ~((~b & a) + b | ~c) + c) * (b & ~((~b & a) + b | ~c) + c) ^ -(-c & a)",
                    "attributes": {
                        "numOps": 39,
                        "nestedExprLevel": 10,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 70.67669172932331,
                        "opsPercentages": {
                            "arithmetic": 28.205128205128204,
                            "mul": 5.128205128205128,
                            "bitwise": 66.66666666666666
                        },
                        "percentageDAGsCancel": 5.263157894736842
                    }
                },
                "clang_default": {
                    "expr": "(((a ^ 0xffffffff | c - 1 ^ 0xffffffff) - (a ^ 0xffffffff) ^ 0xffffffff) + 1 | (((c ^ 0xffffffff | (a & (b ^ 0xffffffff)) + b) + c ^ 0xffffffff ) & (b | c) + (b & c)) * ((c ^ 0xffffffff | (a & (b ^ 0xffffffff)) + b) + c ^ 0xffffffff | (b | c) + (b & c)) + (((c ^ 0xffffffff | (a & (b ^ 0xffffffff)) + b) + c ^ 0xffffffff ) & ((b | c) + (b & c) ^ 0xffffffff)) * ((c ^ 0xffffffff | (a & (b ^ 0xffffffff)) + b) + c & (b | c) + (b & c))) - (((a ^ 0xffffffff | c - 1 ^ 0xffffffff) - (a ^ 0xffffffff) ^ 0xffffffff) + 1 & (((c ^ 0xffffffff | (a & (b ^ 0xffffffff)) + b) + c ^ 0xffffffff ) & (b | c) + (b & c)) * ((c ^ 0xffffffff | (a & (b ^ 0xffffffff)) + b) + c ^ 0xffffffff | (b | c) + (b & c)) + (((c ^ 0xffffffff | (a & (b ^ 0xffffffff)) + b) + c ^ 0xffffffff ) & ((b | c) + (b & c) ^ 0xffffffff)) * ((c ^ 0xffffffff | (a & (b ^ 0xffffffff)) + b) + c & (b | c) + (b & c)))",
                    "attributes": {
                        "numOps": 113,
                        "nestedExprLevel": 46,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 15.037593984962406,
                        "opsPercentages": {
                            "arithmetic": 29.20353982300885,
                            "mul": 3.5398230088495577,
                            "bitwise": 67.2566371681416
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                },
                "msvc_default": {
                    "expr": "(~((~a | ~(c - 1)) - ~a) + 1 | (~((~c | (~b & a) + b) + c) & (b | c) + (b & c)) * (~((~c | (~b & a) + b) + c) | (b | c) + (b & c)) + (~((~c | (~b & a) + b) + c) & ~((b | c) + (b & c))) * ((~c | (~b & a) + b) + c & (b | c) + (b & c))) - (~((~a | ~(c - 1)) - ~a) + 1 & (~((~c | (~b & a) + b) + c) & (b | c) + (b & c)) * (~((~c | (~b & a) + b) + c) | (b | c) + (b & c)) + (~((~c | (~b & a) + b) + c) & ~((b | c) + (b & c))) * ((~c | (~b & a) + b) + c & (b | c) + (b & c)))",
                    "attributes": {
                        "numOps": 113,
                        "nestedExprLevel": 40,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 15.037593984962406,
                        "opsPercentages": {
                            "arithmetic": 29.20353982300885,
                            "mul": 3.5398230088495577,
                            "bitwise": 67.2566371681416
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(((~b & a) + b | ~c) + c | b + c) * (((~b & a) + b | ~c) + c & b + c) + (~((~b & a) + b | ~c) + c & b + c) * (~((~b & a) + b | ~c) + c | b + c) ^ -(-c & a)",
                    "attributes": {
                        "numOps": 42,
                        "nestedExprLevel": 10,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 68.42105263157895,
                        "opsPercentages": {
                            "arithmetic": 35.714285714285715,
                            "mul": 4.761904761904762,
                            "bitwise": 59.523809523809526
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 487,
            "gt": {
                "expr": "((((~d)|(-(~(~d))))^(b&b)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 14.285714285714285,
                        "mul": 0.0,
                        "bitwise": 85.71428571428571
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "((((- d - 1) & ~ ((- d - 1) + 1)) + ((- d - 1) + 1)) | ((~ b | b) - ~ b)) - ((((- d - 1) & ~ ((- d - 1) + 1)) + ((- d - 1) + 1)) & ((~ b | b) - ~ b))",
                "attributes": {
                    "numOps": 33,
                    "nestedExprLevel": 14,
                    "numDAGs": 12,
                    "opsPercentages": {
                        "arithmetic": 63.63636363636363,
                        "mul": 0.0,
                        "bitwise": 36.36363636363637
                    },
                    "percentageDAGsCancel": 16.666666666666664
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(d - 1 & ~d) - d ^ b",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 84.84848484848484,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 0.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "msvc_O1": {
                    "expr": "((d - 1 & ~d) - d | b) - ((d - 1 & ~d) - d & b)",
                    "attributes": {
                        "numOps": 11,
                        "nestedExprLevel": 4,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 45.45454545454545,
                            "mul": 0.0,
                            "bitwise": 54.54545454545454
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_O3": {
                    "expr": "(d - 1 & ~d) - d ^ b",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 84.84848484848484,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 0.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "clang_default": {
                    "expr": "((0xffffffff - d & (-d ^ 0xffffffff)) - d | (b ^ 0xffffffff | b) - (b ^ 0xffffffff)) - ((0xffffffff - d & (-d ^ 0xffffffff)) - d & (b ^ 0xffffffff | b) - (b ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 21,
                        "nestedExprLevel": 8,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 36.36363636363637,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 0.0,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_default": {
                    "expr": "((0xffffffff - d & ~-d) - d | -~b - 1) - ((0xffffffff - d & ~-d) - d & -~b - 1)",
                    "attributes": {
                        "numOps": 19,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 42.42424242424242,
                        "opsPercentages": {
                            "arithmetic": 57.89473684210527,
                            "mul": 0.0,
                            "bitwise": 42.10526315789473
                        },
                        "percentageDAGsCancel": 18.181818181818183
                    }
                },
                "gcc_O3": {
                    "expr": "(~d & d - 1) - d ^ b",
                    "attributes": {
                        "numOps": 5,
                        "nestedExprLevel": 2,
                        "numDAGs": 5,
                        "percentDecreaseByOps": 84.84848484848484,
                        "opsPercentages": {
                            "arithmetic": 40.0,
                            "mul": 0.0,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 488,
            "gt": {
                "expr": "(((c|(((-b)+c)|(~b)))+(-b)))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 8,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 57.14285714285714,
                        "mul": 0.0,
                        "bitwise": 42.857142857142854
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((((c + (((((~ (b - 1) | c) + (~ (b - 1) | c)) - (~ (b - 1) ^ c)) & ~ (- b - 1)) + (- b - 1))) + 1) + ((- c - 1) | (- (((((~ (b - 1) | c) + (~ (b - 1) | c)) - (~ (b - 1) ^ c)) & ~ (- b - 1)) + (- b - 1)) - 1))) ^ ~ (~ b + 1)) + (((((c + (((((~ (b - 1) | c) + (~ (b - 1) | c)) - (~ (b - 1) ^ c)) & ~ (- b - 1)) + (- b - 1))) + 1) + ((- c - 1) | (- (((((~ (b - 1) | c) + (~ (b - 1) | c)) - (~ (b - 1) ^ c)) & ~ (- b - 1)) + (- b - 1)) - 1))) | (~ b + 1)) << 1)) + 1",
                "attributes": {
                    "numOps": 98,
                    "nestedExprLevel": 49,
                    "numDAGs": 27,
                    "opsPercentages": {
                        "arithmetic": 59.183673469387756,
                        "mul": 0.0,
                        "bitwise": 40.816326530612244
                    },
                    "percentageDAGsCancel": 14.814814814814813
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(-b | c + ((-b | c) * 2 - (-b ^ c) & b) + ~b + 1 + ((-b ^ c) + ~((-b | c) * 2) & b | ~c)) * 2 + (c + ((-b | c) * 2 - (-b ^ c) & b) + ~b + 1 + ((-b ^ c) + ~((-b | c) * 2) & b | ~c) ^ b - 1) + 1",
                    "attributes": {
                        "numOps": 51,
                        "nestedExprLevel": 12,
                        "numDAGs": 22,
                        "percentDecreaseByOps": 47.95918367346938,
                        "opsPercentages": {
                            "arithmetic": 47.05882352941176,
                            "mul": 9.803921568627452,
                            "bitwise": 43.13725490196079
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~b + 1) ^ ((~c | b - (~(b - 1) | c) * 2 - (~(b - 1) ^ c) & b) - b) + (~(b - 1) | c) * 2 - (~(b - 1) ^ c) & b + c) + 1 + (((-1 - c) * 2 | b - (~(b - 1) | c) * 2 - (~(b - 1) ^ c) & b * 2) + ((~(b - 1) | c) * 2 - (~(b - 1) ^ c) * 2 & b * 2) + (c - b) * 2 | ~b * 2 + 2)",
                    "attributes": {
                        "numOps": 64,
                        "nestedExprLevel": 16,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 34.69387755102041,
                        "opsPercentages": {
                            "arithmetic": 40.625,
                            "mul": 15.625,
                            "bitwise": 43.75
                        },
                        "percentageDAGsCancel": 2.7027027027027026
                    }
                },
                "clang_O3": {
                    "expr": "(b - 1 ^ (c - b) + (-b | c) * 2 - (-b ^ c) & b + (b - (-b | c) * 2 - (-b ^ c) & b | ~c)) + ((c - b) + (-b | c) * 2 - (-b ^ c) & b + (b - (-b | c) * 2 - (-b ^ c) & b | ~c) | -b) * 2 + 1",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 9,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 52.04081632653062,
                        "opsPercentages": {
                            "arithmetic": 51.06382978723404,
                            "mul": 10.638297872340425,
                            "bitwise": 38.297872340425535
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(c + ((((b - 1 ^ 0xffffffff | c) + (b - 1 ^ 0xffffffff | c)) - (b - 1 ^ 0xffffffff ^ c) & (0xffffffff - b ^ 0xffffffff)) - b) + (0xffffffff - c | 0xffffffff - ((((b - 1 ^ 0xffffffff | c) + (b - 1 ^ 0xffffffff | c)) - (b - 1 ^ 0xffffffff ^ c) & (0xffffffff - b ^ 0xffffffff)) + (-1 - b) )) ^ (b ^ 0xffffffff) + 1 ^ 0xffffffff) + (c + ((((b - 1 ^ 0xffffffff | c) + (b - 1 ^ 0xffffffff | c)) - (b - 1 ^ 0xffffffff ^ c) & (0xffffffff - b ^ 0xffffffff)) - b) + (0xffffffff - c | 0xffffffff - ((((b - 1 ^ 0xffffffff | c) + (b - 1 ^ 0xffffffff | c)) - (b - 1 ^ 0xffffffff ^ c) & (0xffffffff - b ^ 0xffffffff)) + (-1 - b) )) | (b ^ 0xffffffff) + 1) * 2 + 1",
                    "attributes": {
                        "numOps": 84,
                        "nestedExprLevel": 27,
                        "numDAGs": 26,
                        "percentDecreaseByOps": 14.285714285714285,
                        "opsPercentages": {
                            "arithmetic": 52.38095238095239,
                            "mul": 1.1904761904761905,
                            "bitwise": 46.42857142857143
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "msvc_default": {
                    "expr": "((c - b) + (((~(b - 1) | c) + (~(b - 1) | c)) - (~(b - 1) ^ c) & ~(0xffffffff - b)) + (0xffffffff - c | 0xffffffff - (((((~(b - 1) | c) + (~(b - 1) | c)) - (~(b - 1) ^ c) & ~(0xffffffff - b)) - 1) - b)) ^ ~(~b + 1)) + 1 + ((c - b) + (((~(b - 1) | c) + (~(b - 1) | c)) - (~(b - 1) ^ c) & ~(0xffffffff - b)) + (0xffffffff - c | 0xffffffff - (((((~(b - 1) | c) + (~(b - 1) | c)) - (~(b - 1) ^ c) & ~(0xffffffff - b)) - 1) - b)) | ~b + 1) * 2",
                    "attributes": {
                        "numOps": 82,
                        "nestedExprLevel": 33,
                        "numDAGs": 25,
                        "percentDecreaseByOps": 16.3265306122449,
                        "opsPercentages": {
                            "arithmetic": 51.21951219512195,
                            "mul": 1.2195121951219512,
                            "bitwise": 47.5609756097561
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(b - 1 ^ ((-b | c) * 2 - (-b ^ c) & b) + (c - b) + (~(-b | c) * 2 + (-b ^ c) & b | ~c)) + 1 + (-b | ((-b | c) * 2 - (-b ^ c) & b) + (c - b) + (~(-b | c) * 2 + (-b ^ c) & b | ~c)) * 2",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 11,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 52.04081632653062,
                        "opsPercentages": {
                            "arithmetic": 46.808510638297875,
                            "mul": 10.638297872340425,
                            "bitwise": 42.5531914893617
                        },
                        "percentageDAGsCancel": 4.761904761904762
                    }
                }
            }
        },
        {
            "num": 489,
            "gt": {
                "expr": "(((~((d-c)+c))&((~c)^(c|d))))",
                "attributes": {
                    "numOps": 7,
                    "nestedExprLevel": 7,
                    "numDAGs": 7,
                    "opsPercentages": {
                        "arithmetic": 28.57142857142857,
                        "mul": 0.0,
                        "bitwise": 71.42857142857143
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "mba": {
                "expr": "(~ (- ((((d ^ c) - ((~ d & c) << 1)) | c) + (((d ^ c) - ((~ d & c) << 1)) & c)) - 1) | (((- c - 1) | ((c & ~ d) + d)) - ((- c - 1) & ((c & ~ d) + d)))) - ~ (- ((((d ^ c) - ((~ d & c) << 1)) | c) + (((d ^ c) - ((~ d & c) << 1)) & c)) - 1)",
                "attributes": {
                    "numOps": 47,
                    "nestedExprLevel": 24,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 38.297872340425535,
                        "mul": 0.0,
                        "bitwise": 61.702127659574465
                    },
                    "percentageDAGsCancel": 20.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(c + (d ^ c) + (~d & c) * -2 | d + (~d & c) ^ c)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 72.3404255319149,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 7.6923076923076925,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 18.181818181818183
                    }
                },
                "msvc_O1": {
                    "expr": "(((~c | (~d & c) + d) - (~c & (~d & c) + d) | ~(~(c ^ d) + (~d & c) * -2 | c - (c ^ d) + (~d & c) * -2 & c)) - (c ^ d) + (~d & c) * -2 & c) - (c ^ d) + (~d & c) * -2 | c",
                    "attributes": {
                        "numOps": 45,
                        "nestedExprLevel": 10,
                        "numDAGs": 24,
                        "percentDecreaseByOps": 4.25531914893617,
                        "opsPercentages": {
                            "arithmetic": 31.11111111111111,
                            "mul": 8.88888888888889,
                            "bitwise": 60.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~((~d & c) + d ^ c | (d ^ c) + c + (~d & c) * -2)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 72.3404255319149,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 7.6923076923076925,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 18.181818181818183
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - (((d ^ c) + ((d ^ 0xffffffff) & c) * -2 | c) + ((d ^ c) + ((d ^ 0xffffffff) & c) * -2 & c)) ^ 0xffffffff | (0xffffffff - c | (c & (d ^ 0xffffffff)) + d) - (0xffffffff - c & (c & (d ^ 0xffffffff)) + d)) - (0xffffffff - (((d ^ c) + ((d ^ 0xffffffff) & c) * -2 | c) + ((d ^ c) + ((d ^ 0xffffffff) & c) * -2 & c)) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 18,
                        "numDAGs": 19,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 38.297872340425535,
                            "mul": 8.51063829787234,
                            "bitwise": 53.191489361702125
                        },
                        "percentageDAGsCancel": 10.526315789473683
                    }
                },
                "msvc_default": {
                    "expr": "(~(0xffffffff - (((d ^ c) + (~d & c) * -2 | c) + ((d ^ c) + (~d & c) * -2 & c))) | (0xffffffff - c | (~d & c) + d) - (0xffffffff - c & (~d & c) + d)) - ~(0xffffffff - (((d ^ c) + (~d & c) * -2 | c) + ((d ^ c) + (~d & c) * -2 & c)))",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 16,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 38.297872340425535,
                            "mul": 8.51063829787234,
                            "bitwise": 53.191489361702125
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                },
                "gcc_O3": {
                    "expr": "~((d ^ c) + (~d & c) * -2 + c | (~d & c) + d ^ c)",
                    "attributes": {
                        "numOps": 13,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 72.3404255319149,
                        "opsPercentages": {
                            "arithmetic": 30.76923076923077,
                            "mul": 7.6923076923076925,
                            "bitwise": 61.53846153846154
                        },
                        "percentageDAGsCancel": 27.27272727272727
                    }
                }
            }
        },
        {
            "num": 490,
            "gt": {
                "expr": "((((b|d)&(d*(a*b)))^(((d^b)+b)*(d^(b^a)))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 9,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 10.0,
                        "mul": 30.0,
                        "bitwise": 60.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((((~ ((b & ~ d) + d) | ((d & ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) * (d | ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + (d & ~ ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) * (~ d & ((a & b) * (a | b) + (a & ~ b) * (~ a & b))))) + ((b & ~ d) + d)) + 1) | (((((((d | b) - (d & b)) ^ ~ b) + ((((d | b) - (d & b)) | b) + (((d | b) - (d & b)) | b))) + 1) & ((d | ((b | a) - (b & a))) - (d & ((b | a) - (b & a))))) * ((((((d | b) - (d & b)) ^ ~ b) + ((((d | b) - (d & b)) | b) + (((d | b) - (d & b)) | b))) + 1) | ((d | ((b | a) - (b & a))) - (d & ((b | a) - (b & a))))) + ((((((d | b) - (d & b)) ^ ~ b) + ((((d | b) - (d & b)) | b) + (((d | b) - (d & b)) | b))) + 1) & ~ ((d | ((b | a) - (b & a))) - (d & ((b | a) - (b & a))))) * (~ (((((d | b) - (d & b)) ^ ~ b) + ((((d | b) - (d & b)) | b) + (((d | b) - (d & b)) | b))) + 1) & ((d | ((b | a) - (b & a))) - (d & ((b | a) - (b & a))))))) - ((((~ ((b & ~ d) + d) | ((d & ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) * (d | ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) + (d & ~ ((a & b) * (a | b) + (a & ~ b) * (~ a & b))) * (~ d & ((a & b) * (a | b) + (a & ~ b) * (~ a & b))))) + ((b & ~ d) + d)) + 1) & (((((((d | b) - (d & b)) ^ ~ b) + ((((d | b) - (d & b)) | b) + (((d | b) - (d & b)) | b))) + 1) & ((d | ((b | a) - (b & a))) - (d & ((b | a) - (b & a))))) * ((((((d | b) - (d & b)) ^ ~ b) + ((((d | b) - (d & b)) | b) + (((d | b) - (d & b)) | b))) + 1) | ((d | ((b | a) - (b & a))) - (d & ((b | a) - (b & a))))) + ((((((d | b) - (d & b)) ^ ~ b) + ((((d | b) - (d & b)) | b) + (((d | b) - (d & b)) | b))) + 1) & ~ ((d | ((b | a) - (b & a))) - (d & ((b | a) - (b & a))))) * (~ (((((d | b) - (d & b)) ^ ~ b) + ((((d | b) - (d & b)) | b) + (((d | b) - (d & b)) | b))) + 1) & ((d | ((b | a) - (b & a))) - (d & ((b | a) - (b & a)))))))",
                "attributes": {
                    "numOps": 331,
                    "nestedExprLevel": 209,
                    "numDAGs": 50,
                    "opsPercentages": {
                        "arithmetic": 28.09667673716012,
                        "mul": 7.250755287009064,
                        "bitwise": 64.6525679758308
                    },
                    "percentageDAGsCancel": 12.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b ^ a ^ d) & (d + (b | d) * -2) - 1) * ((b | d) * 2 + ~d + 1 & ~(b ^ a ^ d)) + ((b | d) * 2 + ~d + 1 & (b ^ a ^ d)) * (b ^ a ^ d | (b | d) * 2 + ~d + 1) ^ d + (~d & b) + (~(d + (~d & b)) | ((~a & b) * (~b & a) + (a & b) * (a | b) & ~d ) * (~((~a & b) * (~b & a) + (a & b) * (a | b)) & d) + ((~a & b) * (~b & a) + (a & b) * (a | b) & d) * ((~a & b) * (~b & a) + (a & b) * (a | b) | d)) + 1",
                    "attributes": {
                        "numOps": 92,
                        "nestedExprLevel": 24,
                        "numDAGs": 43,
                        "percentDecreaseByOps": 72.20543806646525,
                        "opsPercentages": {
                            "arithmetic": 20.652173913043477,
                            "mul": 17.391304347826086,
                            "bitwise": 61.95652173913043
                        },
                        "percentageDAGsCancel": 6.976744186046512
                    }
                },
                "msvc_O1": {
                    "expr": "(d + 1 + ((~(~a & b) * (~b & a) + (a & b) * (a | b) & d) * ((~a & b) * (~b & a) + (a & b) * (a | b) & ~d) + ((~a & b) * (~b & a) + (a & b) * (a | b) | d) * ((~a & b) * (~b & a) + (a & b) * (a | b) & d) | ~(~d & b + d)) + ~d & b | (((a | b) - (a & b) | d) - ((a | b) - (a & b) & d) | (~b ^ (b | d) - (b & d)) + 1 + ((b | d) - (b & d) | b) * 2) * (((a | b) - (a & b) | d) - ((a | b) - (a & b) & d) & (~b ^ (b | d) - (b & d)) + 1 + ((b | d) - (b & d) | b) * 2) + (~(~b ^ (b | d) - (b & d)) + 1 + ((b | d) - (b & d) | b) * 2 & ((a | b) - (a & b) | d) - ((a | b) - (a & b) & d)) * (~((a | b) - (a & b) | d) - ((a | b) - (a & b) & d) & (~b ^ (b | d) - (b & d)) + 1 + ((b | d) - (b & d) | b) * 2)) - (d + 1 + ((~(~a & b) * (~b & a) + (a & b) * (a | b) & d) * ((~a & b) * (~b & a) + (a & b) * (a | b) & ~d) + ((~a & b) * (~b & a) + (a & b) * (a | b) | d) * ((~a & b) * (~b & a) + (a & b) * (a | b) & d) | ~(~d & b + d)) + ~d & b & (((a | b) - (a & b) | d) - ((a | b) - (a & b) & d) | (~b ^ (b | d) - (b & d)) + 1 + ((b | d) - (b & d) | b) * 2) * (((a | b) - (a & b) | d) - ((a | b) - (a & b) & d) & (~b ^ (b | d) - (b & d)) + 1 + ((b | d) - (b & d) | b) * 2) + (~(~b ^ (b | d) - (b & d)) + 1 + ((b | d) - (b & d) | b) * 2 & ((a | b) - (a & b) | d) - ((a | b) - (a & b) & d)) * (~((a | b) - (a & b) | d) - ((a | b) - (a & b) & d) & (~b ^ (b | d) - (b & d)) + 1 + ((b | d) - (b & d) | b) * 2))",
                    "attributes": {
                        "numOps": 299,
                        "nestedExprLevel": 101,
                        "numDAGs": 55,
                        "percentDecreaseByOps": 9.667673716012084,
                        "opsPercentages": {
                            "arithmetic": 25.75250836120401,
                            "mul": 10.702341137123746,
                            "bitwise": 63.54515050167224
                        },
                        "percentageDAGsCancel": 7.2727272727272725
                    }
                },
                "clang_O3": {
                    "expr": "(~(d | b) * 2 - d & d ^ b ^ a) * (~d ^ b ^ a & (d | b) * 2 - d) + ((d | b) * 2 - d | d ^ b ^ a) * ((d | b) * 2 - d & d ^ b ^ a) ^ (~d & b) + d + (((~a & b) * (~b & a) + (b | a) * (b & a) & ~d) * (~(~a & b) * (~b & a) + (b | a) * (b & a) & d) + ((~a & b) * (~b & a) + (b | a) * (b & a) | d) * ((~a & b) * (~b & a) + (b | a) * (b & a) & d) | ~(~d & b) + d) + 1",
                    "attributes": {
                        "numOps": 85,
                        "nestedExprLevel": 20,
                        "numDAGs": 49,
                        "percentDecreaseByOps": 74.32024169184291,
                        "opsPercentages": {
                            "arithmetic": 16.470588235294116,
                            "mul": 18.823529411764707,
                            "bitwise": 64.70588235294117
                        },
                        "percentageDAGsCancel": 2.0408163265306123
                    }
                },
                "clang_default": {
                    "expr": "(((b & (d ^ 0xffffffff)) + d ^ 0xffffffff | (d & (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) * (d | (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) + (d & ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) ^ 0xffffffff)) * ((d ^ 0xffffffff) & (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b))) + (b & (d ^ 0xffffffff)) + d + 1 | (((d | b) - (d & b) ^ b ^ 0xffffffff) + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) + 1 & (d | (b | a) - (b & a)) - (d & (b | a) - (b & a))) * (((d | b) - (d & b) ^ b ^ 0xffffffff) + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) + 1 | (d | (b | a) - (b & a)) - (d & (b | a) - (b & a))) + (((d | b) - (d & b) ^ b ^ 0xffffffff) + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) + 1 & ((d | (b | a) - (b & a)) - (d & (b | a) - (b & a)) ^ 0xffffffff)) * ((((d | b) - (d & b) ^ b ^ 0xffffffff) + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) + 1 ^ 0xffffffff) & (d | (b | a) - (b & a)) - (d & (b | a) - (b & a)))) - (((b & (d ^ 0xffffffff)) + d ^ 0xffffffff | (d & (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) * (d | (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) + (d & ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b) ^ 0xffffffff)) * ((d ^ 0xffffffff) & (a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b))) + (b & (d ^ 0xffffffff)) + d + 1 & (((d | b) - (d & b) ^ b ^ 0xffffffff) + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) + 1 & (d | (b | a) - (b & a)) - (d & (b | a) - (b & a))) * (((d | b) - (d & b) ^ b ^ 0xffffffff) + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) + 1 | (d | (b | a) - (b & a)) - (d & (b | a) - (b & a))) + (((d | b) - (d & b) ^ b ^ 0xffffffff) + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) + 1 & ((d | (b | a) - (b & a)) - (d & (b | a) - (b & a)) ^ 0xffffffff)) * ((((d | b) - (d & b) ^ b ^ 0xffffffff) + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) + 1 ^ 0xffffffff) & (d | (b | a) - (b & a)) - (d & (b | a) - (b & a))))",
                    "attributes": {
                        "numOps": 331,
                        "nestedExprLevel": 135,
                        "numDAGs": 52,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 28.09667673716012,
                            "mul": 7.250755287009064,
                            "bitwise": 64.6525679758308
                        },
                        "percentageDAGsCancel": 7.6923076923076925
                    }
                },
                "msvc_default": {
                    "expr": "((~d & b) + 1 + (~((~d & b) + d) | ((a & b) * (a | b) + (~b & a) * (~a & b) & d) * ((a & b) * (a | b) + (~b & a) * (~a & b) | d) + (~((a & b) * (a | b) + (~b & a) * (~a & b) ) & d) * (~d & (a & b) * (a | b) + (~b & a) * (~a & b))) + d | (((d | b) - (d & b) ^ ~b) + 1 + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) & ((b | a) - (b & a) | d) - ((b | a) - (b & a) & d)) * (((d | b) - (d & b) ^ ~b) + 1 + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) | ((b | a) - (b & a) | d) - ((b | a) - (b & a) & d)) + (((d | b) - (d & b) ^ ~b) + 1 + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) & ~(((b | a) - (b & a) | d) - ((b | a) - (b & a) & d))) * (~(((d | b) - (d & b) ^ ~b) + 1 + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b)) & ((b | a) - (b & a) | d) - ((b | a) - (b & a) & d))) - ((~d & b) + 1 + (~((~d & b) + d) | ((a & b) * (a | b) + (~b & a) * (~a & b) & d) * ((a & b) * (a | b) + (~b & a) * (~a & b) | d) + (~((a & b) * (a | b) + (~b & a) * (~a & b) ) & d) * (~d & (a & b) * (a | b) + (~b & a) * (~a & b))) + d & (((d | b) - (d & b) ^ ~b) + 1 + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) & ((b | a) - (b & a) | d) - ((b | a) - (b & a) & d)) * (((d | b) - (d & b) ^ ~b) + 1 + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) | ((b | a) - (b & a) | d) - ((b | a) - (b & a) & d)) + (((d | b) - (d & b) ^ ~b) + 1 + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b) & ~(((b | a) - (b & a) | d) - ((b | a) - (b & a) & d))) * (~(((d | b) - (d & b) ^ ~b) + 1 + ((d | b) - (d & b) | b) + ((d | b) - (d & b) | b)) & ((b | a) - (b & a) | d) - ((b | a) - (b & a) & d)))",
                    "attributes": {
                        "numOps": 331,
                        "nestedExprLevel": 125,
                        "numDAGs": 51,
                        "percentDecreaseByOps": 0.0,
                        "opsPercentages": {
                            "arithmetic": 28.09667673716012,
                            "mul": 7.250755287009064,
                            "bitwise": 64.6525679758308
                        },
                        "percentageDAGsCancel": 9.803921568627452
                    }
                },
                "gcc_O3": {
                    "expr": "(~d & b) + d + 1 + (((~b & a) * (~a & b) + (b & a) * (b | a) | d) * ((~b & a) * (~a & b) + (b & a) * (b | a) & d) + (~(~b & a) * (~a & b) + (b & a) * (b | a) & d) * (~d & (~b & a) * (~a & b) + (b & a) * (b | a)) | ~(~d & b) + d) ^ ((d + (d | b) * -2) - 1 & b ^ a ^ d) * (~b ^ a ^ d & ~d + 1 + (d | b) * 2) + (~d + 1 + (d | b) * 2 & b ^ a ^ d) * (~d + 1 + (d | b) * 2 | b ^ a ^ d)",
                    "attributes": {
                        "numOps": 92,
                        "nestedExprLevel": 20,
                        "numDAGs": 51,
                        "percentDecreaseByOps": 72.20543806646525,
                        "opsPercentages": {
                            "arithmetic": 20.652173913043477,
                            "mul": 17.391304347826086,
                            "bitwise": 61.95652173913043
                        },
                        "percentageDAGsCancel": 1.9607843137254901
                    }
                }
            }
        },
        {
            "num": 491,
            "gt": {
                "expr": "((-(-(~(a+a)))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 6,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 0.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "~ ((((a ^ ~ a) + ((a | a) << 1)) + 1) + 1) + 1",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 6,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 44.44444444444444,
                        "mul": 0.0,
                        "bitwise": 55.55555555555556
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(a * 2)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 77.77777777777779,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 50.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "~(a * 2)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 77.77777777777779,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 50.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "~a * 2 + 1",
                    "attributes": {
                        "numOps": 3,
                        "nestedExprLevel": 1,
                        "numDAGs": 3,
                        "percentDecreaseByOps": 66.66666666666666,
                        "opsPercentages": {
                            "arithmetic": 33.33333333333333,
                            "mul": 33.33333333333333,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((a ^ a ^ 0xffffffff) + a * 2 + 2 ^ 0xffffffff) + 1",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 22.22222222222222,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 14.285714285714285,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "msvc_default": {
                    "expr": "~(a * 2 + 1) + 1",
                    "attributes": {
                        "numOps": 4,
                        "nestedExprLevel": 2,
                        "numDAGs": 4,
                        "percentDecreaseByOps": 55.55555555555556,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 25.0,
                            "bitwise": 25.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~(a * 2)",
                    "attributes": {
                        "numOps": 2,
                        "nestedExprLevel": 2,
                        "numDAGs": 2,
                        "percentDecreaseByOps": 77.77777777777779,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 50.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 492,
            "gt": {
                "expr": "(((d-(d+d))&((a+d)+(~((a|d)|a)))))",
                "attributes": {
                    "numOps": 8,
                    "nestedExprLevel": 8,
                    "numDAGs": 8,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 0.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(~ ((d ^ ((d - ~ d) - 1)) - ((~ d & ((d - ~ d) - 1)) + (~ d & ((d - ~ d) - 1)))) | ((((a | d) + (a & d)) ^ (- ((((((a + d) + 1) + ((- a - 1) | (- d - 1))) + a) + 1) + ((- (((a + d) + 1) + ((- a - 1) | (- d - 1))) - 1) | (- a - 1))) - 1)) + ((((a | d) + (a & d)) & (- ((((((a + d) + 1) + ((- a - 1) | (- d - 1))) + a) + 1) + ((- (((a + d) + 1) + ((- a - 1) | (- d - 1))) - 1) | (- a - 1))) - 1)) << 1))) - ~ ((d ^ ((d - ~ d) - 1)) - ((~ d & ((d - ~ d) - 1)) + (~ d & ((d - ~ d) - 1))))",
                "attributes": {
                    "numOps": 98,
                    "nestedExprLevel": 55,
                    "numDAGs": 33,
                    "opsPercentages": {
                        "arithmetic": 67.3469387755102,
                        "mul": 0.0,
                        "bitwise": 32.6530612244898
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~(((d - ~d) - 1 & ~d) * 2 + (~d * 2 + 1 ^ d)) & ~(d + a ^ d + a * 2 + ~(a & d) + 2 + (~a | (a & d) - (d + a + 1))) + (~((~a | (a & d) - (d + a + 1)) + d + a * 2 + ~(a & d) + 2) & a + d) * 2",
                    "attributes": {
                        "numOps": 47,
                        "nestedExprLevel": 12,
                        "numDAGs": 34,
                        "percentDecreaseByOps": 52.04081632653062,
                        "opsPercentages": {
                            "arithmetic": 44.680851063829785,
                            "mul": 10.638297872340425,
                            "bitwise": 44.680851063829785
                        },
                        "percentageDAGsCancel": 2.941176470588235
                    }
                },
                "msvc_O1": {
                    "expr": "d * 2 ^ d + 1 + (((((a * -2 - (((-2 - ~a | ~d) - a) - d | ~a)) - ~a | ~d) - d) - 3 * 2 & (a | d) + (a & d) * 2) + ((((a * -2 - (((-2 - ~a | ~d) - a) - d | ~a)) - ~a | ~d) - d) - 3 ^ (a | d) + (a & d)) | ~(d * 2 ^ d + ~d & d * 2 * -2)) + ~d & d * 2 * -2",
                    "attributes": {
                        "numOps": 67,
                        "nestedExprLevel": 17,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 31.63265306122449,
                        "opsPercentages": {
                            "arithmetic": 40.298507462686565,
                            "mul": 14.925373134328357,
                            "bitwise": 44.776119402985074
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~((d | a) + a) + a ^ d + a) + (~((d | a) + a) + a & d + a) * 2 & (d * 2 ^ d) + (d * 2 & ~d) * -2",
                    "attributes": {
                        "numOps": 23,
                        "nestedExprLevel": 7,
                        "numDAGs": 17,
                        "percentDecreaseByOps": 76.53061224489795,
                        "opsPercentages": {
                            "arithmetic": 39.130434782608695,
                            "mul": 17.391304347826086,
                            "bitwise": 43.47826086956522
                        },
                        "percentageDAGsCancel": 5.88235294117647
                    }
                },
                "clang_default": {
                    "expr": "((d ^ (d - (d ^ 0xffffffff)) - 1) - (((d ^ 0xffffffff) & (d - (d ^ 0xffffffff)) - 1) + ((d ^ 0xffffffff) & (d - (d ^ 0xffffffff)) - 1)) ^ 0xffffffff | ((a | d) + (a & d) ^ 0xffffffff - (a * 2 + d + (0xffffffff - a | 0xffffffff - d) + 2 + (0xffffffff - (a + d + 1 + (0xffffffff - a | 0xffffffff - d)) | 0xffffffff - a))) + ((a | d) + (a & d) & 0xffffffff - (a * 2 + d + (0xffffffff - a | 0xffffffff - d) + 2 + (0xffffffff - (a + d + 1 + (0xffffffff - a | 0xffffffff - d)) | 0xffffffff - a))) * 2) - ((d ^ (d - (d ^ 0xffffffff)) - 1) - (((d ^ 0xffffffff) & (d - (d ^ 0xffffffff)) - 1) + ((d ^ 0xffffffff) & (d - (d ^ 0xffffffff)) - 1)) ^ 0xffffffff)",
                    "attributes": {
                        "numOps": 82,
                        "nestedExprLevel": 28,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 16.3265306122449,
                        "opsPercentages": {
                            "arithmetic": 58.536585365853654,
                            "mul": 3.6585365853658534,
                            "bitwise": 37.80487804878049
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(((d - ~d) - 1 ^ d) - ((~d & (d - ~d) - 1) + (~d & (d - ~d) - 1))) | ((a | d) + (a & d) ^ 0xffffffff - ((0xffffffff - a | 0xffffffff - d) + a * 2 + d + 2 + (0xffffffff - (a + d + 1 + (0xffffffff - a | 0xffffffff - d)) | 0xffffffff - a))) + ((a | d) + (a & d) & 0xffffffff - ((0xffffffff - a | 0xffffffff - d) + a * 2 + d + 2 + (0xffffffff - (a + d + 1 + (0xffffffff - a | 0xffffffff - d)) | 0xffffffff - a))) * 2) - ~(((d - ~d) - 1 ^ d) - ((~d & (d - ~d) - 1) + (~d & (d - ~d) - 1)))",
                    "attributes": {
                        "numOps": 82,
                        "nestedExprLevel": 23,
                        "numDAGs": 31,
                        "percentDecreaseByOps": 16.3265306122449,
                        "opsPercentages": {
                            "arithmetic": 58.536585365853654,
                            "mul": 3.6585365853658534,
                            "bitwise": 37.80487804878049
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "~((~d * 2 + 1 ^ d) + (d * 2 & ~d) * 2) & ~(a + d ^ a + 1 + (a + d - (a & d)) + ((a & d) - (a + d + 1) | ~a)) + (~a + 1 + (a + d - (a & d)) + ((a & d) - (a + d + 1) | ~a) & a + d) * 2",
                    "attributes": {
                        "numOps": 43,
                        "nestedExprLevel": 11,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 56.12244897959183,
                        "opsPercentages": {
                            "arithmetic": 48.837209302325576,
                            "mul": 9.30232558139535,
                            "bitwise": 41.86046511627907
                        },
                        "percentageDAGsCancel": 3.571428571428571
                    }
                }
            }
        },
        {
            "num": 493,
            "gt": {
                "expr": "(((~((b+(e*e))*(a&a)))*((~(a*b))-a)))",
                "attributes": {
                    "numOps": 9,
                    "nestedExprLevel": 10,
                    "numDAGs": 9,
                    "opsPercentages": {
                        "arithmetic": 22.22222222222222,
                        "mul": 44.44444444444444,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 11.11111111111111
                }
            },
            "mba": {
                "expr": "((- ((((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) & (((~ a | a) + a) + 1)) * (((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) | (((~ a | a) + a) + 1)) + (((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) & ~ (((~ a | a) + a) + 1)) * (~ ((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) & (((~ a | a) + a) + 1))) - 1) & (((- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1) & ~ a) - (~ (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1) & a))) * ((- ((((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) & (((~ a | a) + a) + 1)) * (((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) | (((~ a | a) + a) + 1)) + (((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) & ~ (((~ a | a) + a) + 1)) * (~ ((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) & (((~ a | a) + a) + 1))) - 1) | (((- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1) & ~ a) - (~ (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1) & a))) + ((- ((((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) & (((~ a | a) + a) + 1)) * (((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) | (((~ a | a) + a) + 1)) + (((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) & ~ (((~ a | a) + a) + 1)) * (~ ((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) & (((~ a | a) + a) + 1))) - 1) & ~ (((- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1) & ~ a) - (~ (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1) & a))) * (~ (- ((((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) & (((~ a | a) + a) + 1)) * (((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) | (((~ a | a) + a) + 1)) + (((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) & ~ (((~ a | a) + a) + 1)) * (~ ((b | ((e & e) * (e | e) + (e & ~ e) * (~ e & e))) + (b & ((e & e) * (e | e) + (e & ~ e) * (~ e & e)))) & (((~ a | a) + a) + 1))) - 1) & (((- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1) & ~ a) - (~ (- ((a & b) * (a | b) + (a & ~ b) * (~ a & b)) - 1) & a)))",
                "attributes": {
                    "numOps": 561,
                    "nestedExprLevel": 249,
                    "numDAGs": 49,
                    "opsPercentages": {
                        "arithmetic": 21.568627450980394,
                        "mul": 16.0427807486631,
                        "bitwise": 62.38859180035651
                    },
                    "percentageDAGsCancel": 14.285714285714285
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b + e * e & a) * (b + e * e | a) + (~(b + e * e) & a) * (e * e + b & ~a) & ~((~a & b) * (~b & a) + (a & b) * (a | b) | a) - ((~a & b) * (~b & a) + (a & b) * (a | b) & a )) * (~((~(b + e * e) & a) * (e * e + b & ~a) + (b + e * e & a) * (b + e * e | a)) & a + (a & b) * (a | b) + (~a & b) * (~b & a)) + (~((~(b + e * e) & a) * (e * e + b & ~a) + (b + e * e & a) * (b + e * e | a)) & ~((~a & b) * (~b & a) + (a & b) * (a | b) | a) - ((~a & b) * (~b & a) + (a & b) * (a | b) & a )) * (~((~(b + e * e) & a) * (e * e + b & ~a) + (b + e * e & a) * (b + e * e | a)) | ~((~a & b) * (~b & a) + (a & b) * (a | b) | a) - ((~a & b) * (~b & a) + (a & b) * (a | b) & a))",
                    "attributes": {
                        "numOps": 154,
                        "nestedExprLevel": 40,
                        "numDAGs": 35,
                        "percentDecreaseByOps": 72.54901960784314,
                        "opsPercentages": {
                            "arithmetic": 20.77922077922078,
                            "mul": 25.97402597402597,
                            "bitwise": 53.246753246753244
                        },
                        "percentageDAGsCancel": 11.428571428571429
                    }
                },
                "msvc_O1": {
                    "expr": "(~~((~(e * e & b) + (e * e | b) & a) * ((e * e & b) + (e * e | b) & ~a)) - ((e * e & b) + (e * e | b) | a) * ((e * e & b) + (e * e | b) & a) & (~((~b & a) * (~a & b)) - (a | b) * (a & b) & ~a) - (~~((~b & a) * (~a & b)) - (a | b) * (a & b) & a)) * (~(~((~b & a) * (~a & b)) - (a | b) * (a & b) & ~a) - (~~((~b & a) * (~a & b)) - (a | b) * (a & b) & a) & ~((~(e * e & b) + (e * e | b) & a) * ((e * e & b) + (e * e | b) & ~a)) - ((e * e & b) + (e * e | b) | a) * ((e * e & b) + (e * e | b) & a)) + ((~((~b & a) * (~a & b)) - (a | b) * (a & b) & ~a) - (~~((~b & a) * (~a & b)) - (a | b) * (a & b) & a) | ~((~(e * e & b) + (e * e | b) & a) * ((e * e & b) + (e * e | b) & ~a)) - ((e * e & b) + (e * e | b) | a) * ((e * e & b) + (e * e | b) & a)) * ((~((~b & a) * (~a & b)) - (a | b) * (a & b) & ~a) - (~~((~b & a) * (~a & b)) - (a | b) * (a & b) & a) & ~((~(e * e & b) + (e * e | b) & a) * ((e * e & b) + (e * e | b) & ~a)) - ((e * e & b) + (e * e | b) | a) * ((e * e & b) + (e * e | b) & a))",
                    "attributes": {
                        "numOps": 229,
                        "nestedExprLevel": 73,
                        "numDAGs": 40,
                        "percentDecreaseByOps": 59.180035650623886,
                        "opsPercentages": {
                            "arithmetic": 14.41048034934498,
                            "mul": 25.327510917030565,
                            "bitwise": 60.26200873362445
                        },
                        "percentageDAGsCancel": 2.5
                    }
                },
                "clang_O3": {
                    "expr": "(~(~(~b & a) * (~a & b) + (b | a) * (b & a) & ~a) - ((~b & a) * (~a & b) + (b | a) * (b & a) & a) & ~(~e * e + b & a) * (e * e + b & ~a) + (e * e + b | a) * (e * e + b & a)) * ((~e * e + b & a) * (e * e + b & ~a) + (e * e + b | a) * (e * e + b & a) & (~(~b & a) * (~a & b) + (b | a) * (b & a) & ~a) - ((~b & a) * (~a & b) + (b | a) * (b & a) & a)) + ((~(~b & a) * (~a & b) + (b | a) * (b & a) & ~a) - ((~b & a) * (~a & b) + (b | a) * (b & a) & a) | ~(~e * e + b & a) * (e * e + b & ~a) + (e * e + b | a) * (e * e + b & a)) * ((~(~b & a) * (~a & b) + (b | a) * (b & a) & ~a) - ((~b & a) * (~a & b) + (b | a) * (b & a) & a) & ~(~e * e + b & a) * (e * e + b & ~a) + (e * e + b | a) * (e * e + b & a))",
                    "attributes": {
                        "numOps": 171,
                        "nestedExprLevel": 37,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 69.5187165775401,
                        "opsPercentages": {
                            "arithmetic": 19.298245614035086,
                            "mul": 24.561403508771928,
                            "bitwise": 56.14035087719298
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - (((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) & (a ^ 0xffffffff | a) + a + 1) * ((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) | (a ^ 0xffffffff | a) + a + 1) + ((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) & ((a ^ 0xffffffff | a) + a + 1 ^ 0xffffffff)) * (((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) ^ 0xffffffff) & (a ^ 0xffffffff | a) + a + 1)) & (0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) & (a ^ 0xffffffff)) - ((0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) ^ 0xffffffff) & a)) * (0xffffffff - (((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) & (a ^ 0xffffffff | a) + a + 1) * ((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) | (a ^ 0xffffffff | a) + a + 1) + ((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) & ((a ^ 0xffffffff | a) + a + 1 ^ 0xffffffff)) * (((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) ^ 0xffffffff) & (a ^ 0xffffffff | a) + a + 1)) | (0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) & (a ^ 0xffffffff)) - ((0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) ^ 0xffffffff) & a)) + (0xffffffff - (((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) & (a ^ 0xffffffff | a) + a + 1) * ((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) | (a ^ 0xffffffff | a) + a + 1) + ((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) & ((a ^ 0xffffffff | a) + a + 1 ^ 0xffffffff)) * (((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) ^ 0xffffffff) & (a ^ 0xffffffff | a) + a + 1)) & ((0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) & (a ^ 0xffffffff)) - ((0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) ^ 0xffffffff) & a) ^ 0xffffffff)) * ((0xffffffff - (((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) & (a ^ 0xffffffff | a) + a + 1) * ((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) | (a ^ 0xffffffff | a) + a + 1) + ((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) & ((a ^ 0xffffffff | a) + a + 1 ^ 0xffffffff)) * (((b | e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) + (b & e * e + (e & (e ^ 0xffffffff)) * ((e ^ 0xffffffff) & e)) ^ 0xffffffff) & (a ^ 0xffffffff | a) + a + 1)) ^ 0xffffffff) & (0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) & (a ^ 0xffffffff)) - ((0xffffffff - ((a & b) * (a | b) + (a & (b ^ 0xffffffff)) * ((a ^ 0xffffffff) & b)) ^ 0xffffffff) & a))",
                    "attributes": {
                        "numOps": 485,
                        "nestedExprLevel": 192,
                        "numDAGs": 45,
                        "percentDecreaseByOps": 13.547237076648841,
                        "opsPercentages": {
                            "arithmetic": 22.474226804123713,
                            "mul": 18.556701030927837,
                            "bitwise": 58.96907216494846
                        },
                        "percentageDAGsCancel": 6.666666666666667
                    }
                },
                "msvc_default": {
                    "expr": "(0xffffffff - (((e * e | b) + (e * e & b) & a) * ((e * e | b) + (e * e & b) | a) + ((e * e | b) + (e * e & b) & ~a) * (~((e * e | b) + (e * e & b)) & a)) & ~((0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b) ) & ~a) - (~(0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b) )) & a))) * (~(0xffffffff - (((e * e | b) + (e * e & b) & a) * ((e * e | b) + (e * e & b) | a) + ((e * e | b) + (e * e & b) & ~a) * (~((e * e | b) + (e * e & b)) & a))) & (0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)) & ~a) - (~(0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)) ) & a)) + (0xffffffff - (((e * e | b) + (e * e & b) & a) * ((e * e | b) + (e * e & b) | a) + ((e * e | b) + (e * e & b) & ~a) * (~((e * e | b) + (e * e & b)) & a)) & (0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)) & ~a) - (~(0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)) ) & a)) * (0xffffffff - (((e * e | b) + (e * e & b) & a) * ((e * e | b) + (e * e & b) | a) + ((e * e | b) + (e * e & b) & ~a) * (~((e * e | b) + (e * e & b)) & a)) | (0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)) & ~a) - (~(0xffffffff - ((a & b) * (a | b) + (~b & a) * (~a & b)) ) & a))",
                    "attributes": {
                        "numOps": 229,
                        "nestedExprLevel": 83,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 59.180035650623886,
                        "opsPercentages": {
                            "arithmetic": 19.65065502183406,
                            "mul": 25.327510917030565,
                            "bitwise": 55.021834061135365
                        },
                        "percentageDAGsCancel": 2.7777777777777777
                    }
                },
                "gcc_O3": {
                    "expr": "((~b & a) * (~a & b) + (b & a) * (b | a) + a & ~(~e * e + b & a) * (e * e + b & ~a) + (e * e + b | a) * (e * e + b & a)) * ((~e * e + b & a) * (e * e + b & ~a) + (e * e + b | a) * (e * e + b & a) & ~((~b & a) * (~a & b) + (b & a) * (b | a) | a) - ((~b & a) * (~a & b) + (b & a) * (b | a) & a)) + (~(~e * e + b & a) * (e * e + b & ~a) + (e * e + b | a) * (e * e + b & a) | ~((~b & a) * (~a & b) + (b & a) * (b | a) | a) - ((~b & a) * (~a & b) + (b & a) * (b | a) & a)) * (~(~e * e + b & a) * (e * e + b & ~a) + (e * e + b | a) * (e * e + b & a) & ~((~b & a) * (~a & b) + (b & a) * (b | a) | a) - ((~b & a) * (~a & b) + (b & a) * (b | a) & a))",
                    "attributes": {
                        "numOps": 154,
                        "nestedExprLevel": 33,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 72.54901960784314,
                        "opsPercentages": {
                            "arithmetic": 20.77922077922078,
                            "mul": 25.97402597402597,
                            "bitwise": 53.246753246753244
                        },
                        "percentageDAGsCancel": 5.555555555555555
                    }
                }
            }
        },
        {
            "num": 494,
            "gt": {
                "expr": "(((b*((b-(a^d))-((~b)|(a+d))))&((b*a)-a)))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 40.0,
                        "mul": 20.0,
                        "bitwise": 40.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "((~ ((b & ((((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & ~ (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))) - (~ ((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))))) * (b | ((((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & ~ (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))) - (~ ((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))))) + (b & ~ ((((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & ~ (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))) - (~ ((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))))) * (~ b & ((((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & ~ (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))) - (~ ((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d)))))))) | (((((b & a) * (b | a) + (b & ~ a) * (~ b & a)) & ~ a) << 1) - (((b & a) * (b | a) + (b & ~ a) * (~ b & a)) ^ a))) + ((b & ((((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & ~ (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))) - (~ ((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))))) * (b | ((((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & ~ (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))) - (~ ((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))))) + (b & ~ ((((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & ~ (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))) - (~ ((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))))) * (~ b & ((((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & ~ (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))) - (~ ((b + ~ (((a - d) - ((a | ~ d) + (a | ~ d))) - 2)) + 1) & (((- b - 1) & ~ ((a ^ d) + ((a & d) + (a & d)))) + ((a ^ d) + ((a & d) + (a & d))))))))) + 1",
                "attributes": {
                    "numOps": 501,
                    "nestedExprLevel": 271,
                    "numDAGs": 48,
                    "opsPercentages": {
                        "arithmetic": 44.510978043912175,
                        "mul": 1.5968063872255487,
                        "bitwise": 53.89221556886228
                    },
                    "percentageDAGsCancel": 4.166666666666666
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((b + (~d | a) * 2 + ~a + d + 3 & ~((a & d) * 2 + (a ^ d)) & b) - (-(b + (~d | a) * 2 + ~a + d + 2) - 2 & (a & d) * 2 + (a ^ d) + ~((a & d) * 2 + (a ^ d) | b)) & ~b) * (((a & d) * 2 + (a ^ d) + ~((a & d) * 2 + (a ^ d) | b) & -(b + (~d | a) * 2 + ~a + d + 2) - 2) + ~(~((a & d) * 2 + (a ^ d)) & b & b + (~d | a) * 2 + ~a + d + 3) & b) + ((b + (~d | a) * 2 + ~a + d + 3 & ~((a & d) * 2 + (a ^ d)) & b) - (-(b + (~d | a) * 2 + ~a + d + 2) - 2 & (a & d) * 2 + (a ^ d) + ~((a & d) * 2 + (a ^ d) | b)) & b) * ((b + (~d | a) * 2 + ~a + d + 3 & ~((a & d) * 2 + (a ^ d)) & b) - (-(b + (~d | a) * 2 + ~a + d + 2) - 2 & (a & d) * 2 + (a ^ d) + ~((a & d) * 2 + (a ^ d) | b)) | b) + (~(((b + (~d | a) * 2 + ~a + d + 3 & ~((a & d) * 2 + (a ^ d)) & b) - (-(b + (~d | a) * 2 + ~a + d + 2) - 2 & (a & d) * 2 + (a ^ d) + ~((a & d) * 2 + (a ^ d) | b)) & ~b) * (((a & d) * 2 + (a ^ d) + ~((a & d) * 2 + (a ^ d) | b) & -(b + (~d | a) * 2 + ~a + d + 2) - 2) + ~(~((a & d) * 2 + (a ^ d)) & b & b + (~d | a) * 2 + ~a + d + 3) & b) + ((b + (~d | a) * 2 + ~a + d + 3 & ~((a & d) * 2 + (a ^ d)) & b) - (-(b + (~d | a) * 2 + ~a + d + 2) - 2 & (a & d) * 2 + (a ^ d) + ~((a & d) * 2 + (a ^ d) | b)) & b) * ((b + (~d | a) * 2 + ~a + d + 3 & ~((a & d) * 2 + (a ^ d)) & b) - (-(b + (~d | a) * 2 + ~a + d + 2) - 2 & (a & d) * 2 + (a ^ d) + ~((a & d) * 2 + (a ^ d) | b)) | b)) | (~a & (b & a) * (b | a) + (~b & a) * (~a & b)) * 2 - ((~b & a) * (~a & b) + (b & a) * (b | a) ^ a)) + 1",
                    "attributes": {
                        "numOps": 349,
                        "nestedExprLevel": 81,
                        "numDAGs": 52,
                        "percentDecreaseByOps": 30.33932135728543,
                        "opsPercentages": {
                            "arithmetic": 36.38968481375358,
                            "mul": 14.040114613180515,
                            "bitwise": 49.570200573065904
                        },
                        "percentageDAGsCancel": 3.8461538461538463
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~(a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2 & (((~d | a) * 2 + 2) - a) + b + d) - (~(((~d | a) * 2 + 2) - a) + b + d & (a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2) & b) * ((~(a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2 & (((~d | a) * 2 + 2) - a) + b + d) - (~(((~d | a) * 2 + 2) - a) + b + d & (a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2) & ~b) + 1 + (((a | b) * (a & b) + (~a & b) * (~b & a) * 2 & ~a * 2) - ((a | b) * (a & b) + (~a & b) * (~b & a) ^ a) | ~(((~(a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2 & (((~d | a) * 2 + 2) - a) + b + d) - (~(((~d | a) * 2 + 2) - a) + b + d & (a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2) | b) * ((~(a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2 & (((~d | a) * 2 + 2) - a) + b + d) - (~(((~d | a) * 2 + 2) - a) + b + d & (a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2) & b) + (~(~(a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2 & (((~d | a) * 2 + 2) - a) + b + d) - (~(((~d | a) * 2 + 2) - a) + b + d & (a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2) & b) * ((~(a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2 & (((~d | a) * 2 + 2) - a) + b + d) - (~(((~d | a) * 2 + 2) - a) + b + d & (a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2) & ~b))) + ((~(a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2 & (((~d | a) * 2 + 2) - a) + b + d) - (~(((~d | a) * 2 + 2) - a) + b + d & (a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2) | b) * ((~(a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2 & (((~d | a) * 2 + 2) - a) + b + d) - (~(((~d | a) * 2 + 2) - a) + b + d & (a ^ d) + ~((a ^ d) + (a & d) * 2 | b) + (a & d) * 2) & b)",
                    "attributes": {
                        "numOps": 374,
                        "nestedExprLevel": 106,
                        "numDAGs": 53,
                        "percentDecreaseByOps": 25.349301397205586,
                        "opsPercentages": {
                            "arithmetic": 33.9572192513369,
                            "mul": 15.508021390374333,
                            "bitwise": 50.534759358288774
                        },
                        "percentageDAGsCancel": 3.7735849056603774
                    }
                },
                "clang_O3": {
                    "expr": "((((d ^ a) + (d & a) * 2 | b) - (d ^ a) + (d & a) * 2 & (b - a) + d + (~d | a) * 2 + 2) - (-((b - a) + d + (~d | a) * 2) - 3 & ~((d ^ a) + (d & a) * 2 | b) + (d ^ a) + (d & a) * 2) & ~b) * (~(((d ^ a) + (d & a) * 2 | b) - (d ^ a) + (d & a) * 2 & (b - a) + d + (~d | a) * 2 + 2) - (-((b - a) + d + (~d | a) * 2) - 3 & ~((d ^ a) + (d & a) * 2 | b) + (d ^ a) + (d & a) * 2) & b) + ((((d ^ a) + (d & a) * 2 | b) - (d ^ a) + (d & a) * 2 & (b - a) + d + (~d | a) * 2 + 2) - (-((b - a) + d + (~d | a) * 2) - 3 & ~((d ^ a) + (d & a) * 2 | b) + (d ^ a) + (d & a) * 2) | b) * ((((d ^ a) + (d & a) * 2 | b) - (d ^ a) + (d & a) * 2 & (b - a) + d + (~d | a) * 2 + 2) - (-((b - a) + d + (~d | a) * 2) - 3 & ~((d ^ a) + (d & a) * 2 | b) + (d ^ a) + (d & a) * 2) & b) + ((~a & (~b & a) * (b & ~a) + (b | a) * (b & a)) * 2 - ((~b & a) * (b & ~a) + (b | a) * (b & a) ^ a) | ~((((d ^ a) + (d & a) * 2 | b) - (d ^ a) + (d & a) * 2 & (b - a) + d + (~d | a) * 2 + 2) - (-((b - a) + d + (~d | a) * 2) - 3 & ~((d ^ a) + (d & a) * 2 | b) + (d ^ a) + (d & a) * 2) & ~b) * (~(((d ^ a) + (d & a) * 2 | b) - (d ^ a) + (d & a) * 2 & (b - a) + d + (~d | a) * 2 + 2) - (-((b - a) + d + (~d | a) * 2) - 3 & ~((d ^ a) + (d & a) * 2 | b) + (d ^ a) + (d & a) * 2) & b) + ((((d ^ a) + (d & a) * 2 | b) - (d ^ a) + (d & a) * 2 & (b - a) + d + (~d | a) * 2 + 2) - (-((b - a) + d + (~d | a) * 2) - 3 & ~((d ^ a) + (d & a) * 2 | b) + (d ^ a) + (d & a) * 2) | b) * ((((d ^ a) + (d & a) * 2 | b) - (d ^ a) + (d & a) * 2 & (b - a) + d + (~d | a) * 2 + 2) - (-((b - a) + d + (~d | a) * 2) - 3 & ~((d ^ a) + (d & a) * 2 | b) + (d ^ a) + (d & a) * 2) & b)) + 1",
                    "attributes": {
                        "numOps": 357,
                        "nestedExprLevel": 104,
                        "numDAGs": 50,
                        "percentDecreaseByOps": 28.74251497005988,
                        "opsPercentages": {
                            "arithmetic": 37.81512605042017,
                            "mul": 15.966386554621847,
                            "bitwise": 46.21848739495798
                        },
                        "percentageDAGsCancel": 2.0
                    }
                },
                "clang_default": {
                    "expr": "((b & (b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 & ((0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) - ((b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 ^ 0xffffffff) & (0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d))) * (b | (b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 & ((0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) - ((b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 ^ 0xffffffff) & (0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d))) + (b & ((b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 & ((0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) - ((b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff)) ) - 2 ^ 0xffffffff) + 1 ^ 0xffffffff) & (0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d)) ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 & ((0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) - ((b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 ^ 0xffffffff) & (0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d))) ^ 0xffffffff | ((b & a) * (b | a) + (b & (a ^ 0xffffffff)) * ((b ^ 0xffffffff) & a) & (a ^ 0xffffffff)) * 2 - ((b & a) * (b | a) + (b & (a ^ 0xffffffff)) * ((b ^ 0xffffffff) & a) ^ a)) + (b & (b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 & ((0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) - ((b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 ^ 0xffffffff) & (0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d))) * (b | (b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 & ((0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) - ((b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 ^ 0xffffffff) & (0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d))) + (b & ((b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 & ((0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) - ((b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 ^ 0xffffffff) & (0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d)) ^ 0xffffffff)) * ((b ^ 0xffffffff) & (b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 & ((0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) - ((b + (((a - d) - ((a | d ^ 0xffffffff) + (a | d ^ 0xffffffff))) - 2 ^ 0xffffffff) + 1 ^ 0xffffffff) & (0xffffffff - b & ((a ^ d) + (a & d) + (a & d) ^ 0xffffffff)) + (a ^ d) + (a & d) + (a & d))) + 1",
                    "attributes": {
                        "numOps": 485,
                        "nestedExprLevel": 197,
                        "numDAGs": 50,
                        "percentDecreaseByOps": 3.1936127744510974,
                        "opsPercentages": {
                            "arithmetic": 42.68041237113402,
                            "mul": 1.8556701030927836,
                            "bitwise": 55.4639175257732
                        },
                        "percentageDAGsCancel": 4.0
                    }
                },
                "msvc_default": {
                    "expr": "(~(((b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2) & ~((0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d))) - (~(b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2)) & (0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d)) & b) * ((b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2) & ~((0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d))) - (~(b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2)) & (0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d)) | b) + (~((b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2) & ~((0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d))) - (~(b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2)) & (0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d))) & b) * (~b & (b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2) & ~((0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d))) - (~(b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2)) & (0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d)))) | ((b & a) * (b | a) + (~a & b) * (~b & a) & ~a) * 2 - ((b & a) * (b | a) + (~a & b) * (~b & a) ^ a)) + 1 + ((b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2) & ~((0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d))) - (~(b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2)) & (0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d)) & b) * ((b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2) & ~((0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d))) - (~(b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2)) & (0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d)) | b) + (~((b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2) & ~((0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d))) - (~(b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2)) & (0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d))) & b) * (~b & (b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2) & ~((0xffffffff - b & ~((a ^ d) + (a & d) + (a & d))) + (a ^ d) + (a & d) + (a & d))) - (~(b + 1 + ~(((a - d) - ((~d | a) + (~d | a))) - 2)) & (0xffffffff - b & ~((a ^ d) + (a & d) + (a & d)) ) + (a ^ d) + (a & d) + (a & d)))",
                    "attributes": {
                        "numOps": 485,
                        "nestedExprLevel": 195,
                        "numDAGs": 50,
                        "percentDecreaseByOps": 3.1936127744510974,
                        "opsPercentages": {
                            "arithmetic": 42.68041237113402,
                            "mul": 1.8556701030927836,
                            "bitwise": 55.4639175257732
                        },
                        "percentageDAGsCancel": 6.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~((d ^ a) + (a & d) * 2 | b) + (d ^ a) + (a & d) * 2 & -~a + d + 2 + (~d | a) * 2 + b - 2 + ~~(d ^ a) + (a & d) * 2 & b & ~a + d + 2 + (~d | a) * 2 + b + 1 & b) * (~(d ^ a) + (a & d) * 2 & b & ~a + d + 2 + (~d | a) * 2 + b + 1 - ~((d ^ a) + (a & d) * 2 | b) + (d ^ a) + (a & d) * 2 & -~a + d + 2 + (~d | a) * 2 + b - 2 & ~b) + (~(d ^ a) + (a & d) * 2 & b & ~a + d + 2 + (~d | a) * 2 + b + 1 - ~((d ^ a) + (a & d) * 2 | b) + (d ^ a) + (a & d) * 2 & -~a + d + 2 + (~d | a) * 2 + b - 2 & b) * (~(d ^ a) + (a & d) * 2 & b & ~a + d + 2 + (~d | a) * 2 + b + 1 - ~((d ^ a) + (a & d) * 2 | b) + (d ^ a) + (a & d) * 2 & -~a + d + 2 + (~d | a) * 2 + b - 2 | b) + 1 + ((~a & (a & b) * (a | b) + (b & ~a) * (~b & a)) * 2 - ((a & b) * (a | b) + (b & ~a) * (~b & a) ^ a) | ~(~((d ^ a) + (a & d) * 2 | b) + (d ^ a) + (a & d) * 2 & -~a + d + 2 + (~d | a) * 2 + b - 2 + ~~(d ^ a) + (a & d) * 2 & b & ~a + d + 2 + (~d | a) * 2 + b + 1 & b) * (~(d ^ a) + (a & d) * 2 & b & ~a + d + 2 + (~d | a) * 2 + b + 1 - ~((d ^ a) + (a & d) * 2 | b) + (d ^ a) + (a & d) * 2 & -~a + d + 2 + (~d | a) * 2 + b - 2 & ~b) + (~(d ^ a) + (a & d) * 2 & b & ~a + d + 2 + (~d | a) * 2 + b + 1 - ~((d ^ a) + (a & d) * 2 | b) + (d ^ a) + (a & d) * 2 & -~a + d + 2 + (~d | a) * 2 + b - 2 & b) * (~(d ^ a) + (a & d) * 2 & b & ~a + d + 2 + (~d | a) * 2 + b + 1 - ~((d ^ a) + (a & d) * 2 | b) + (d ^ a) + (a & d) * 2 & -~a + d + 2 + (~d | a) * 2 + b - 2 | b))",
                    "attributes": {
                        "numOps": 357,
                        "nestedExprLevel": 51,
                        "numDAGs": 62,
                        "percentDecreaseByOps": 28.74251497005988,
                        "opsPercentages": {
                            "arithmetic": 37.81512605042017,
                            "mul": 13.725490196078432,
                            "bitwise": 48.4593837535014
                        },
                        "percentageDAGsCancel": 20.967741935483872
                    }
                }
            }
        },
        {
            "num": 495,
            "gt": {
                "expr": "(((~b)&(a&(c&b))))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 0.0,
                        "bitwise": 100.0
                    },
                    "percentageDAGsCancel": 50.0
                }
            },
            "mba": {
                "expr": "((~ (- b - 1) | (((~ a | ((~ c | b) - ~ c)) + a) + 1)) + (- b - 1)) + 1",
                "attributes": {
                    "numOps": 16,
                    "nestedExprLevel": 8,
                    "numDAGs": 13,
                    "opsPercentages": {
                        "arithmetic": 56.25,
                        "mul": 0.0,
                        "bitwise": 43.75
                    },
                    "percentageDAGsCancel": 23.076923076923077
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "~b + (a + (~a | b & c) + 1 | b) + 1",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 3,
                        "numDAGs": 9,
                        "percentDecreaseByOps": 43.75,
                        "opsPercentages": {
                            "arithmetic": 44.44444444444444,
                            "mul": 0.0,
                            "bitwise": 55.55555555555556
                        },
                        "percentageDAGsCancel": 33.33333333333333
                    }
                },
                "msvc_O1": {
                    "expr": "(a + 1 + (c + 1 + (~c | b) | ~a) | b) - b",
                    "attributes": {
                        "numOps": 10,
                        "nestedExprLevel": 4,
                        "numDAGs": 10,
                        "percentDecreaseByOps": 37.5,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 20.0
                    }
                },
                "clang_O3": {
                    "expr": "a + (c & b | ~a) + 1 & ~b",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 56.25,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 0.0,
                            "bitwise": 71.42857142857143
                        },
                        "percentageDAGsCancel": 14.285714285714285
                    }
                },
                "clang_default": {
                    "expr": "(0xffffffff - b ^ 0xffffffff | (a ^ 0xffffffff | (c ^ 0xffffffff | b) - (c ^ 0xffffffff)) + a + 1 ) - b",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 25.0,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 0.0,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_default": {
                    "expr": "(~(0xffffffff - b) | (~a | (~c | b) - ~c) + 1 + a) - b",
                    "attributes": {
                        "numOps": 12,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 25.0,
                        "opsPercentages": {
                            "arithmetic": 41.66666666666667,
                            "mul": 0.0,
                            "bitwise": 58.333333333333336
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(a + 1 + (~a | c & b) | b) - b",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 3,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 56.25,
                        "opsPercentages": {
                            "arithmetic": 42.857142857142854,
                            "mul": 0.0,
                            "bitwise": 57.14285714285714
                        },
                        "percentageDAGsCancel": 42.857142857142854
                    }
                }
            }
        },
        {
            "num": 496,
            "gt": {
                "expr": "(((d*c)*((c|c)^c)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 0.0,
                        "mul": 50.0,
                        "bitwise": 50.0
                    },
                    "percentageDAGsCancel": 75.0
                }
            },
            "mba": {
                "expr": "(((d & c) * (d | c) + (d & ~ c) * (~ d & c)) & ((((((c + c) + 1) + ((- c - 1) | (- c - 1))) - c) - (((((c + c) + 1) + ((- c - 1) | (- c - 1))) | ~ c) + ((((c + c) + 1) + ((- c - 1) | (- c - 1))) | ~ c))) - 2)) * (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) | ((((((c + c) + 1) + ((- c - 1) | (- c - 1))) - c) - (((((c + c) + 1) + ((- c - 1) | (- c - 1))) | ~ c) + ((((c + c) + 1) + ((- c - 1) | (- c - 1))) | ~ c))) - 2)) + (((d & c) * (d | c) + (d & ~ c) * (~ d & c)) & ~ ((((((c + c) + 1) + ((- c - 1) | (- c - 1))) - c) - (((((c + c) + 1) + ((- c - 1) | (- c - 1))) | ~ c) + ((((c + c) + 1) + ((- c - 1) | (- c - 1))) | ~ c))) - 2)) * (~ ((d & c) * (d | c) + (d & ~ c) * (~ d & c)) & ((((((c + c) + 1) + ((- c - 1) | (- c - 1))) - c) - (((((c + c) + 1) + ((- c - 1) | (- c - 1))) | ~ c) + ((((c + c) + 1) + ((- c - 1) | (- c - 1))) | ~ c))) - 2))",
                "attributes": {
                    "numOps": 173,
                    "nestedExprLevel": 89,
                    "numDAGs": 29,
                    "opsPercentages": {
                        "arithmetic": 60.69364161849711,
                        "mul": 5.780346820809249,
                        "bitwise": 33.52601156069364
                    },
                    "percentageDAGsCancel": 27.586206896551722
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((~c + c + (~c | c * 2 + 1 + ~c) * -2) - 1 & ~((~d & c) * (~c & d) + (d & c) * (d | c))) * ((d & c) * (d | c) + (~d & c) * (~c & d) & (~c | c * 2 + 1 + ~c) * 2 + 1) + ((d & c) * (d | c) + (~d & c) * (~c & d) & (~c + c + (~c | c * 2 + 1 + ~c) * -2) - 1) * ((~c + c + (~c | c * 2 + 1 + ~c) * -2) - 1 | (d & c) * (d | c) + (~d & c) * (~c & d))",
                    "attributes": {
                        "numOps": 88,
                        "nestedExprLevel": 18,
                        "numDAGs": 29,
                        "percentDecreaseByOps": 49.13294797687861,
                        "opsPercentages": {
                            "arithmetic": 29.545454545454547,
                            "mul": 20.454545454545457,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 31.03448275862069
                    }
                },
                "msvc_O1": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "0",
                    "attributes": {
                        "numOps": 0,
                        "nestedExprLevel": 1,
                        "numDAGs": 0,
                        "percentDecreaseByOps": 100.0,
                        "opsPercentages": {
                            "arithmetic": 0.0,
                            "mul": 0.0,
                            "bitwise": 0.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) & ((c + (0xffffffff - c | 0xffffffff - c)) - ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | c ^ 0xffffffff) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | c ^ 0xffffffff))) - 1) * ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) | ((c + (0xffffffff - c | 0xffffffff - c)) - ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | c ^ 0xffffffff) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | c ^ 0xffffffff))) - 1) + ((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) & (((c + (0xffffffff - c | 0xffffffff - c)) - ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | c ^ 0xffffffff) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | c ^ 0xffffffff ))) - 1 ^ 0xffffffff)) * (((d & c) * (d | c) + (d & (c ^ 0xffffffff)) * ((d ^ 0xffffffff) & c) ^ 0xffffffff ) & ((c + (0xffffffff - c | 0xffffffff - c)) - ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | c ^ 0xffffffff) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | c ^ 0xffffffff))) - 1)",
                    "attributes": {
                        "numOps": 137,
                        "nestedExprLevel": 40,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 20.809248554913296,
                        "opsPercentages": {
                            "arithmetic": 44.52554744525548,
                            "mul": 13.138686131386862,
                            "bitwise": 42.33576642335766
                        },
                        "percentageDAGsCancel": 21.428571428571427
                    }
                },
                "msvc_default": {
                    "expr": "((d & c) * (d | c) + (~c & d) * (~d & c) & ~(((c + (0xffffffff - c | 0xffffffff - c)) - ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | ~c) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | ~c))) - 1)) * (~((d & c) * (d | c) + (~c & d) * (~d & c)) & ((c + (0xffffffff - c | 0xffffffff - c)) - ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | ~c) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | ~c))) - 1) + ((d & c) * (d | c) + (~c & d) * (~d & c) & ((c + (0xffffffff - c | 0xffffffff - c)) - ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | ~c) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | ~c))) - 1) * ((d & c) * (d | c) + (~c & d) * (~d & c) | ((c + (0xffffffff - c | 0xffffffff - c)) - ((c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | ~c) + (c * 2 + 1 + (0xffffffff - c | 0xffffffff - c) | ~c))) - 1)",
                    "attributes": {
                        "numOps": 137,
                        "nestedExprLevel": 36,
                        "numDAGs": 28,
                        "percentDecreaseByOps": 20.809248554913296,
                        "opsPercentages": {
                            "arithmetic": 44.52554744525548,
                            "mul": 13.138686131386862,
                            "bitwise": 42.33576642335766
                        },
                        "percentageDAGsCancel": 17.857142857142858
                    }
                },
                "gcc_O3": {
                    "expr": "(~c | ~c + c * 2 + 1 * 2 + 2 + (c * 2 - c * 2 + 1) & (~d & c) * (~c & d) + (d | c) * (d & c)) * (~(~d & c) * (~c & d) + (d | c) * (d & c) & ((~c + c * 2 + 1 - c) + ~c | ~c + c * 2 + 1 * -2) - 2) + ((~d & c) * (~c & d) + (d | c) * (d & c) | ((~c + c * 2 + 1 - c) + ~c | ~c + c * 2 + 1 * -2) - 2) * ((~d & c) * (~c & d) + (d | c) * (d & c) & ((~c + c * 2 + 1 - c) + ~c | ~c + c * 2 + 1 * -2) - 2)",
                    "attributes": {
                        "numOps": 102,
                        "nestedExprLevel": 17,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 41.040462427745666,
                        "opsPercentages": {
                            "arithmetic": 34.31372549019608,
                            "mul": 22.54901960784314,
                            "bitwise": 43.13725490196079
                        },
                        "percentageDAGsCancel": 11.11111111111111
                    }
                }
            }
        },
        {
            "num": 497,
            "gt": {
                "expr": "(((-a)&(((e&e)-e)+(a-e))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 6,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 66.66666666666666,
                        "mul": 0.0,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "(~ (~ (a - 1)) | (((((((~ e | e) - ~ e) & ~ e) << 1) - (((~ e | e) - ~ e) ^ e)) ^ ((a & ~ e) - (~ a & e))) + (((((((~ e | e) - ~ e) & ~ e) << 1) - (((~ e | e) - ~ e) ^ e)) & ((a & ~ e) - (~ a & e))) << 1))) - ~ (~ (a - 1))",
                "attributes": {
                    "numOps": 48,
                    "nestedExprLevel": 25,
                    "numDAGs": 20,
                    "opsPercentages": {
                        "arithmetic": 25.0,
                        "mul": 0.0,
                        "bitwise": 75.0
                    },
                    "percentageDAGsCancel": 40.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "-a & (~e & a) - (~a & e)",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 85.41666666666666,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 0.0,
                            "bitwise": 71.42857142857143
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(((e * 2 & ~e * 2 ^ (~e & a) - (~a & e)) + ((~e & a) - (~a & e) * 2 & ~e << 2 & e << 2) | a - 1) - a) + 1",
                    "attributes": {
                        "numOps": 26,
                        "nestedExprLevel": 7,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 45.83333333333333,
                        "opsPercentages": {
                            "arithmetic": 23.076923076923077,
                            "mul": 11.538461538461538,
                            "bitwise": 65.38461538461539
                        },
                        "percentageDAGsCancel": 15.0
                    }
                },
                "clang_O3": {
                    "expr": "(~e & a) - (~a & e) & -a",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 85.41666666666666,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 0.0,
                            "bitwise": 71.42857142857143
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(a - 1 | (((e ^ 0xffffffff | e) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) * 2 - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff) ^ e) ^ (a & (e ^ 0xffffffff)) - ((a ^ 0xffffffff) & e)) + (((e ^ 0xffffffff | e) - (e ^ 0xffffffff) & (e ^ 0xffffffff)) * 2 - ((e ^ 0xffffffff | e) - (e ^ 0xffffffff) ^ e) & (a & (e ^ 0xffffffff)) - ((a ^ 0xffffffff) & e)) * 2) - (a - 1)",
                    "attributes": {
                        "numOps": 44,
                        "nestedExprLevel": 17,
                        "numDAGs": 18,
                        "percentDecreaseByOps": 8.333333333333332,
                        "opsPercentages": {
                            "arithmetic": 27.27272727272727,
                            "mul": 6.8181818181818175,
                            "bitwise": 65.9090909090909
                        },
                        "percentageDAGsCancel": 38.88888888888889
                    }
                },
                "msvc_default": {
                    "expr": "(a - 1 | ((-~e - 1 & ~e) * 2 - (-~e - 1 ^ e) ^ (~e & a) - (~a & e)) + ((-~e - 1 & ~e) * 2 - (-~e - 1 ^ e) & (~e & a) - (~a & e)) * 2) - (a + -1)",
                    "attributes": {
                        "numOps": 41,
                        "nestedExprLevel": 9,
                        "numDAGs": 20,
                        "percentDecreaseByOps": 14.583333333333334,
                        "opsPercentages": {
                            "arithmetic": 41.46341463414634,
                            "mul": 7.317073170731707,
                            "bitwise": 51.21951219512195
                        },
                        "percentageDAGsCancel": 35.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~e & a) - (~a & e) & -a",
                    "attributes": {
                        "numOps": 7,
                        "nestedExprLevel": 2,
                        "numDAGs": 7,
                        "percentDecreaseByOps": 85.41666666666666,
                        "opsPercentages": {
                            "arithmetic": 28.57142857142857,
                            "mul": 0.0,
                            "bitwise": 71.42857142857143
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 498,
            "gt": {
                "expr": "((-(~((c+c)*(c|(b-b))))))",
                "attributes": {
                    "numOps": 6,
                    "nestedExprLevel": 7,
                    "numDAGs": 6,
                    "opsPercentages": {
                        "arithmetic": 50.0,
                        "mul": 16.666666666666664,
                        "bitwise": 33.33333333333333
                    },
                    "percentageDAGsCancel": 33.33333333333333
                }
            },
            "mba": {
                "expr": "(((((c | c) + (c | c)) - (c ^ c)) & (((c + ((b & ~ b) - (~ b & b))) + 1) + ((- c - 1) | (- ((b & ~ b) - (~ b & b)) - 1)))) * ((((c | c) + (c | c)) - (c ^ c)) | (((c + ((b & ~ b) - (~ b & b))) + 1) + ((- c - 1) | (- ((b & ~ b) - (~ b & b)) - 1)))) + ((((c | c) + (c | c)) - (c ^ c)) & ~ (((c + ((b & ~ b) - (~ b & b))) + 1) + ((- c - 1) | (- ((b & ~ b) - (~ b & b)) - 1)))) * (~ (((c | c) + (c | c)) - (c ^ c)) & (((c + ((b & ~ b) - (~ b & b))) + 1) + ((- c - 1) | (- ((b & ~ b) - (~ b & b)) - 1))))) + 1",
                "attributes": {
                    "numOps": 102,
                    "nestedExprLevel": 54,
                    "numDAGs": 26,
                    "opsPercentages": {
                        "arithmetic": 45.09803921568628,
                        "mul": 1.9607843137254901,
                        "bitwise": 52.94117647058824
                    },
                    "percentageDAGsCancel": 30.76923076923077
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(~(c * 2) & c) * (c * 2 & ~c) + (c * 2 & c) * (c * 2 | c) + 1",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 86.27450980392157,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 42.857142857142854,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                },
                "msvc_O1": {
                    "expr": "(c * 2 | c) * (c * 2 & c) + 1 + (~c & c * 2) * (~c * 2 & c)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 86.27450980392157,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 42.857142857142854,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(~c * 2 & c) * (~c & c * 2) + (c * 2 | c) * (c * 2 & c) + 1",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 86.27450980392157,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 42.857142857142854,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(c * 2 & c + ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + 1 + (0xffffffff - c | 0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)))) * (c * 2 | c + ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + 1 + (0xffffffff - c | 0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)))) + (c * 2 & (c + ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + 1 + (0xffffffff - c | 0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b))) ^ 0xffffffff)) * ((c * 2 ^ 0xffffffff) & c + ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)) + 1 + (0xffffffff - c | 0xffffffff - ((b & (b ^ 0xffffffff)) - ((b ^ 0xffffffff) & b)))) + 1",
                    "attributes": {
                        "numOps": 78,
                        "nestedExprLevel": 35,
                        "numDAGs": 21,
                        "percentDecreaseByOps": 23.52941176470588,
                        "opsPercentages": {
                            "arithmetic": 38.46153846153847,
                            "mul": 7.6923076923076925,
                            "bitwise": 53.84615384615385
                        },
                        "percentageDAGsCancel": 19.047619047619047
                    }
                },
                "msvc_default": {
                    "expr": "(c * 2 & c) * (c * 2 | c) + 1 + (c * 2 & ~c) * (~(c * 2) & c)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 4,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 86.27450980392157,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 42.857142857142854,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(~c & c * 2) * (~c * 2 & c) + 1 + (c * 2 | c) * (c * 2 & c)",
                    "attributes": {
                        "numOps": 14,
                        "nestedExprLevel": 3,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 86.27450980392157,
                        "opsPercentages": {
                            "arithmetic": 14.285714285714285,
                            "mul": 42.857142857142854,
                            "bitwise": 42.857142857142854
                        },
                        "percentageDAGsCancel": 9.090909090909092
                    }
                }
            }
        },
        {
            "num": 499,
            "gt": {
                "expr": "(((-e)-((~e)+a)))",
                "attributes": {
                    "numOps": 4,
                    "nestedExprLevel": 5,
                    "numDAGs": 4,
                    "opsPercentages": {
                        "arithmetic": 75.0,
                        "mul": 0.0,
                        "bitwise": 25.0
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "mba": {
                "expr": "(((~ e + 1) & ~ (((- e - 1) | a) + ((- e - 1) & a))) + ((~ e + 1) & ~ (((- e - 1) | a) + ((- e - 1) & a)))) - ((~ e + 1) ^ (((- e - 1) | a) + ((- e - 1) & a)))",
                "attributes": {
                    "numOps": 34,
                    "nestedExprLevel": 15,
                    "numDAGs": 12,
                    "opsPercentages": {
                        "arithmetic": 58.82352941176471,
                        "mul": 0.0,
                        "bitwise": 41.17647058823529
                    },
                    "percentageDAGsCancel": 0.0
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "(e - a & -e) * 2 - (-e ^ a + ~e)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 2,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 73.52941176470588,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 11.11111111111111,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_O1": {
                    "expr": "(~(~e & a) + (~e | a) & -e) * 2 - (-e ^ (~e & a) + (~e | a))",
                    "attributes": {
                        "numOps": 17,
                        "nestedExprLevel": 5,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 50.0,
                        "opsPercentages": {
                            "arithmetic": 29.411764705882355,
                            "mul": 5.88235294117647,
                            "bitwise": 64.70588235294117
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_O3": {
                    "expr": "(e - a & -e) * 2 - (~e + a ^ -e)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 2,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 73.52941176470588,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 11.11111111111111,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "clang_default": {
                    "expr": "(((e ^ 0xffffffff) + 1 & ((0xffffffff - e | a) + (0xffffffff - e & a) ^ 0xffffffff)) + ((e ^ 0xffffffff) + 1 & ((0xffffffff - e | a) + (0xffffffff - e & a) ^ 0xffffffff))) - ((e ^ 0xffffffff) + 1 ^ (0xffffffff - e | a) + (0xffffffff - e & a))",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 11,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 17.647058823529413,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "msvc_default": {
                    "expr": "((~e + 1 & ~((0xffffffff - e | a) + (0xffffffff - e & a))) + (~e + 1 & ~((0xffffffff - e | a) + (0xffffffff - e & a)) )) - (~e + 1 ^ (0xffffffff - e | a) + (0xffffffff - e & a))",
                    "attributes": {
                        "numOps": 28,
                        "nestedExprLevel": 10,
                        "numDAGs": 11,
                        "percentDecreaseByOps": 17.647058823529413,
                        "opsPercentages": {
                            "arithmetic": 50.0,
                            "mul": 0.0,
                            "bitwise": 50.0
                        },
                        "percentageDAGsCancel": 0.0
                    }
                },
                "gcc_O3": {
                    "expr": "(e - a & -e) * 2 - (~e + a ^ -e)",
                    "attributes": {
                        "numOps": 9,
                        "nestedExprLevel": 2,
                        "numDAGs": 8,
                        "percentDecreaseByOps": 73.52941176470588,
                        "opsPercentages": {
                            "arithmetic": 55.55555555555556,
                            "mul": 11.11111111111111,
                            "bitwise": 33.33333333333333
                        },
                        "percentageDAGsCancel": 0.0
                    }
                }
            }
        },
        {
            "num": 500,
            "gt": {
                "expr": "(((-((-(a+b))-(c&a)))*((a+(a|c))&(c+b))))",
                "attributes": {
                    "numOps": 10,
                    "nestedExprLevel": 10,
                    "numDAGs": 10,
                    "opsPercentages": {
                        "arithmetic": 60.0,
                        "mul": 10.0,
                        "bitwise": 30.0
                    },
                    "percentageDAGsCancel": 10.0
                }
            },
            "mba": {
                "expr": "(~ (((~ ((((a ^ ~ b) + ((a | b) + (a | b))) + 1) - 1) & ~ ((~ c | a) - ~ c)) - (~ (~ ((((a ^ ~ b) + ((a | b) + (a | b))) + 1) - 1)) & ((~ c | a) - ~ c))) - 1) & ((~ (((a | ((a & ~ c) + c)) + (a | ((a & ~ c) + c))) - (a ^ ((a & ~ c) + c))) | (((c ^ ~ b) + ((c | b) << 1)) + 1)) - ~ (((a | ((a & ~ c) + c)) + (a | ((a & ~ c) + c))) - (a ^ ((a & ~ c) + c))))) * (~ (((~ ((((a ^ ~ b) + ((a | b) + (a | b))) + 1) - 1) & ~ ((~ c | a) - ~ c)) - (~ (~ ((((a ^ ~ b) + ((a | b) + (a | b))) + 1) - 1)) & ((~ c | a) - ~ c))) - 1) | ((~ (((a | ((a & ~ c) + c)) + (a | ((a & ~ c) + c))) - (a ^ ((a & ~ c) + c))) | (((c ^ ~ b) + ((c | b) << 1)) + 1)) - ~ (((a | ((a & ~ c) + c)) + (a | ((a & ~ c) + c))) - (a ^ ((a & ~ c) + c))))) + (~ (((~ ((((a ^ ~ b) + ((a | b) + (a | b))) + 1) - 1) & ~ ((~ c | a) - ~ c)) - (~ (~ ((((a ^ ~ b) + ((a | b) + (a | b))) + 1) - 1)) & ((~ c | a) - ~ c))) - 1) & ~ ((~ (((a | ((a & ~ c) + c)) + (a | ((a & ~ c) + c))) - (a ^ ((a & ~ c) + c))) | (((c ^ ~ b) + ((c | b) << 1)) + 1)) - ~ (((a | ((a & ~ c) + c)) + (a | ((a & ~ c) + c))) - (a ^ ((a & ~ c) + c))))) * (~ (~ (((~ ((((a ^ ~ b) + ((a | b) + (a | b))) + 1) - 1) & ~ ((~ c | a) - ~ c)) - (~ (~ ((((a ^ ~ b) + ((a | b) + (a | b))) + 1) - 1)) & ((~ c | a) - ~ c))) - 1)) & ((~ (((a | ((a & ~ c) + c)) + (a | ((a & ~ c) + c))) - (a ^ ((a & ~ c) + c))) | (((c ^ ~ b) + ((c | b) << 1)) + 1)) - ~ (((a | ((a & ~ c) + c)) + (a | ((a & ~ c) + c))) - (a ^ ((a & ~ c) + c)))))",
                "attributes": {
                    "numOps": 293,
                    "nestedExprLevel": 159,
                    "numDAGs": 41,
                    "opsPercentages": {
                        "arithmetic": 34.470989761092156,
                        "mul": 0.6825938566552902,
                        "bitwise": 64.84641638225256
                    },
                    "percentageDAGsCancel": 4.878048780487805
                }
            },
            "compiled_mba": {
                "gcc_default": {
                    "expr": "((c | b) * 2 + ~(b ^ c) + 1 & (c + (~c & a) | a) * 2 - (c + (~c & a) ^ a) & -((a & c & ~(b ^ a) + (a | b) * 2) + (a & c | (a | b) * 2 + ~(b ^ a))) - 2) * ((a & c & ~(b ^ a) + (a | b) * 2) + (a & c | (a | b) * 2 + ~(b ^ a)) + 1 & ~((c | b) * 2 + ~(b ^ c) + 1 & (c + (~c & a) | a) * 2 - (c + (~c & a) ^ a))) + ((a & c & ~(b ^ a) + (a | b) * 2) + (a & c | (a | b) * 2 + ~(b ^ a)) + 1 & (c | b) * 2 + ~(b ^ c) + 1 & (c + (~c & a) | a) * 2 - (c + (~c & a) ^ a)) * ((c | b) * 2 + ~(b ^ c) + 1 & (c + (~c & a) | a) * 2 - (c + (~c & a) ^ a) | (a & c & ~(b ^ a) + (a | b) * 2) + (a & c | (a | b) * 2 + ~(b ^ a)) + 1)",
                    "attributes": {
                        "numOps": 141,
                        "nestedExprLevel": 35,
                        "numDAGs": 36,
                        "percentDecreaseByOps": 51.877133105802045,
                        "opsPercentages": {
                            "arithmetic": 26.95035460992908,
                            "mul": 12.76595744680851,
                            "bitwise": 60.28368794326241
                        },
                        "percentageDAGsCancel": 2.7777777777777777
                    }
                },
                "msvc_O1": {
                    "expr": "((~(c + 1 + (~c | a) | (~b ^ a) + (a | b) * 2) - (c + 1 + (~c | a) & (~b ^ a) + (a | b) * 2)) - 1 & ((~c & a) + c | a) * 2 + 1 + (((b | c) * 2 + 1 + (~b ^ c) | ~(((~c & a) + c | a) * 2 - (~c & a) + c ^ a)) - (~c & a) + c ^ a)) * (~((~c & a) + c | a) * 2 + 1 + (((b | c) * 2 + 1 + (~b ^ c) | ~(((~c & a) + c | a) * 2 - (~c & a) + c ^ a)) - (~c & a) + c ^ a) & ~(~(c + 1 + (~c | a) | (~b ^ a) + (a | b) * 2) - (c + 1 + (~c | a) & (~b ^ a) + (a | b) * 2)) - 1) + (~(~(c + 1 + (~c | a) | (~b ^ a) + (a | b) * 2) - (c + 1 + (~c | a) & (~b ^ a) + (a | b) * 2)) - 1 | ((~c & a) + c | a) * 2 + 1 + (((b | c) * 2 + 1 + (~b ^ c) | ~(((~c & a) + c | a) * 2 - (~c & a) + c ^ a)) - (~c & a) + c ^ a)) * (~(~(c + 1 + (~c | a) | (~b ^ a) + (a | b) * 2) - (c + 1 + (~c | a) & (~b ^ a) + (a | b) * 2)) - 1 & ((~c & a) + c | a) * 2 + 1 + (((b | c) * 2 + 1 + (~b ^ c) | ~(((~c & a) + c | a) * 2 - (~c & a) + c ^ a)) - (~c & a) + c ^ a))",
                    "attributes": {
                        "numOps": 223,
                        "nestedExprLevel": 54,
                        "numDAGs": 46,
                        "percentDecreaseByOps": 23.890784982935152,
                        "opsPercentages": {
                            "arithmetic": 32.73542600896861,
                            "mul": 9.865470852017937,
                            "bitwise": 57.399103139013455
                        },
                        "percentageDAGsCancel": 6.521739130434782
                    }
                },
                "clang_O3": {
                    "expr": "((~b ^ c) + (c | b) * 2 + 1 & ((~c & a) + c | a) * 2 - ((~c & a) + c ^ a) & ~c & a & (~b ^ a) + (b | a) * 2 + ~((~b ^ a) + (b | a) * 2 | c & a)) * (~(~b ^ c) + (c | b) * 2 + 1 & ((~c & a) + c | a) * 2 - ((~c & a) + c ^ a) & c & a & (~b ^ a) + (b | a) * 2 - ~((~b ^ a) + (b | a) * 2 | c & a)) + ((~b ^ c) + (c | b) * 2 + 1 & ((~c & a) + c | a) * 2 - ((~c & a) + c ^ a) | c & a & (~b ^ a) + (b | a) * 2 - ~((~b ^ a) + (b | a) * 2 | c & a)) * ((~b ^ c) + (c | b) * 2 + 1 & ((~c & a) + c | a) * 2 - ((~c & a) + c ^ a) & c & a & (~b ^ a) + (b | a) * 2 - ~((~b ^ a) + (b | a) * 2 | c & a))",
                    "attributes": {
                        "numOps": 141,
                        "nestedExprLevel": 29,
                        "numDAGs": 41,
                        "percentDecreaseByOps": 51.877133105802045,
                        "opsPercentages": {
                            "arithmetic": 23.404255319148938,
                            "mul": 12.76595744680851,
                            "bitwise": 63.829787234042556
                        },
                        "percentageDAGsCancel": 9.75609756097561
                    }
                },
                "clang_default": {
                    "expr": "((((((a ^ b ^ 0xffffffff) + (a | b) + (a | b) ^ 0xffffffff) & ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ 0xffffffff)) - ((a ^ b ^ 0xffffffff) + (a | b) + (a | b) & (c ^ 0xffffffff | a) - (c ^ 0xffffffff))) - 1 ^ 0xffffffff) & (((a | (a & (c ^ 0xffffffff)) + c) + (a | (a & (c ^ 0xffffffff)) + c)) - (a ^ (a & (c ^ 0xffffffff)) + c) ^ 0xffffffff | (c ^ b ^ 0xffffffff) + (c | b) * 2 + 1) - (((a | (a & (c ^ 0xffffffff)) + c) + (a | (a & (c ^ 0xffffffff)) + c)) - (a ^ (a & (c ^ 0xffffffff)) + c) ^ 0xffffffff)) * (((((a ^ b ^ 0xffffffff) + (a | b) + (a | b) ^ 0xffffffff) & ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ 0xffffffff)) - ((a ^ b ^ 0xffffffff) + (a | b) + (a | b) & (c ^ 0xffffffff | a) - (c ^ 0xffffffff))) - 1 ^ 0xffffffff | (((a | (a & (c ^ 0xffffffff)) + c) + (a | (a & (c ^ 0xffffffff)) + c)) - (a ^ (a & (c ^ 0xffffffff)) + c) ^ 0xffffffff | (c ^ b ^ 0xffffffff) + (c | b) * 2 + 1) - (((a | (a & (c ^ 0xffffffff)) + c) + (a | (a & (c ^ 0xffffffff)) + c)) - (a ^ (a & (c ^ 0xffffffff)) + c) ^ 0xffffffff)) + ((((((a ^ b ^ 0xffffffff) + (a | b) + (a | b) ^ 0xffffffff) & ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ 0xffffffff)) - ((a ^ b ^ 0xffffffff) + (a | b) + (a | b) & (c ^ 0xffffffff | a) - (c ^ 0xffffffff))) - 1 ^ 0xffffffff) & ((((a | (a & (c ^ 0xffffffff)) + c) + (a | (a & (c ^ 0xffffffff)) + c)) - (a ^ (a & (c ^ 0xffffffff)) + c) ^ 0xffffffff | (c ^ b ^ 0xffffffff) + (c | b) * 2 + 1) - (((a | (a & (c ^ 0xffffffff)) + c) + (a | (a & (c ^ 0xffffffff)) + c)) - (a ^ (a & (c ^ 0xffffffff)) + c) ^ 0xffffffff) ^ 0xffffffff)) * (((((a ^ b ^ 0xffffffff) + (a | b) + (a | b) ^ 0xffffffff) & ((c ^ 0xffffffff | a) - (c ^ 0xffffffff) ^ 0xffffffff)) - ((a ^ b ^ 0xffffffff) + (a | b) + (a | b) & (c ^ 0xffffffff | a) - (c ^ 0xffffffff))) - 1 & (((a | (a & (c ^ 0xffffffff)) + c) + (a | (a & (c ^ 0xffffffff)) + c)) - (a ^ (a & (c ^ 0xffffffff)) + c) ^ 0xffffffff | (c ^ b ^ 0xffffffff) + (c | b) * 2 + 1) - (((a | (a & (c ^ 0xffffffff)) + c) + (a | (a & (c ^ 0xffffffff)) + c)) - (a ^ (a & (c ^ 0xffffffff)) + c) ^ 0xffffffff))",
                    "attributes": {
                        "numOps": 267,
                        "nestedExprLevel": 113,
                        "numDAGs": 38,
                        "percentDecreaseByOps": 8.873720136518772,
                        "opsPercentages": {
                            "arithmetic": 31.835205992509362,
                            "mul": 2.247191011235955,
                            "bitwise": 65.91760299625467
                        },
                        "percentageDAGsCancel": 7.894736842105263
                    }
                },
                "msvc_default": {
                    "expr": "(~(((~((~b ^ a) + (a | b) + (a | b)) & ~((~c | a) - ~c)) - ((~b ^ a) + (a | b) + (a | b) & (~c | a) - ~c)) - 1) & (~((((~c & a) + c | a) + ((~c & a) + c | a) ) - ((~c & a) + c ^ a)) | (~b ^ c) + 1 + (c | b) * 2) - ~((((~c & a) + c | a) + ((~c & a) + c | a)) - ((~c & a) + c ^ a))) * (~(((~((~b ^ a) + (a | b) + (a | b)) & ~((~c | a) - ~c)) - ((~b ^ a) + (a | b) + (a | b) & (~c | a) - ~c)) - 1) | (~((((~c & a) + c | a) + ((~c & a) + c | a) ) - ((~c & a) + c ^ a)) | (~b ^ c) + 1 + (c | b) * 2) - ~((((~c & a) + c | a) + ((~c & a) + c | a)) - ((~c & a) + c ^ a))) + (~(((~((~b ^ a) + (a | b) + (a | b)) & ~((~c | a) - ~c)) - ((~b ^ a) + (a | b) + (a | b) & (~c | a) - ~c)) - 1) & ~((~((((~c & a) + c | a) + ((~c & a) + c | a)) - ((~c & a) + c ^ a)) | (~b ^ c) + 1 + (c | b) * 2) - ~((((~c & a) + c | a) + ((~c & a) + c | a) ) - ((~c & a) + c ^ a)))) * (((~((~b ^ a) + (a | b) + (a | b)) & ~((~c | a) - ~c)) - ((~b ^ a) + (a | b) + (a | b) & (~c | a) - ~c)) - 1 & (~((((~c & a) + c | a) + ((~c & a) + c | a) ) - ((~c & a) + c ^ a)) | (~b ^ c) + 1 + (c | b) * 2) - ~((((~c & a) + c | a) + ((~c & a) + c | a)) - ((~c & a) + c ^ a)))",
                    "attributes": {
                        "numOps": 267,
                        "nestedExprLevel": 90,
                        "numDAGs": 37,
                        "percentDecreaseByOps": 8.873720136518772,
                        "opsPercentages": {
                            "arithmetic": 31.835205992509362,
                            "mul": 2.247191011235955,
                            "bitwise": 65.91760299625467
                        },
                        "percentageDAGsCancel": 5.405405405405405
                    }
                },
                "gcc_O3": {
                    "expr": "(~((~c & a) + c | a) * 2 - ((~c & a) + c ^ a) & ~(c ^ b) + 1 + (c | b) * 2 & ~(a ^ b) + (a | b) * 2 + (a & c) + 1) * (-~(a ^ b) + (a | b) * 2 + (a & c) - 2 & ((~c & a) + c | a) * 2 - ((~c & a) + c ^ a) & ~(c ^ b) + 1 + (c | b) * 2) + (~(a ^ b) + (a | b) * 2 + (a & c) + 1 & ((~c & a) + c | a) * 2 - ((~c & a) + c ^ a) & ~(c ^ b) + 1 + (c | b) * 2) * (~(a ^ b) + (a | b) * 2 + (a & c) + 1 | ((~c & a) + c | a) * 2 - ((~c & a) + c ^ a) & ~(c ^ b) + 1 + (c | b) * 2)",
                    "attributes": {
                        "numOps": 109,
                        "nestedExprLevel": 23,
                        "numDAGs": 39,
                        "percentDecreaseByOps": 62.79863481228669,
                        "opsPercentages": {
                            "arithmetic": 31.19266055045872,
                            "mul": 12.844036697247708,
                            "bitwise": 55.96330275229357
                        },
                        "percentageDAGsCancel": 5.128205128205128
                    }
                }
            }
        }
    ],
    "attrs": {
        "numChangedInfo": {
            "gcc_default": {
                "numUnchanged": 2,
                "numReduced": 496,
                "numLargerThanMBA": 2,
                "numSmallerThanGT": 55,
                "numFullySimplified": 8,
                "numDAGsSameAsMBA": 18,
                "numDAGsLargerThanMBA": 49,
                "numDAGsSmallerThanGT": 58,
                "numDagsReduced": 433
            },
            "msvc_O1": {
                "numUnchanged": 7,
                "numReduced": 485,
                "numLargerThanMBA": 8,
                "numSmallerThanGT": 44,
                "numFullySimplified": 7,
                "numDAGsSameAsMBA": 25,
                "numDAGsLargerThanMBA": 151,
                "numDAGsSmallerThanGT": 47,
                "numDagsReduced": 324
            },
            "clang_O3": {
                "numUnchanged": 2,
                "numReduced": 496,
                "numLargerThanMBA": 2,
                "numSmallerThanGT": 88,
                "numFullySimplified": 20,
                "numDAGsSameAsMBA": 12,
                "numDAGsLargerThanMBA": 29,
                "numDAGsSmallerThanGT": 91,
                "numDagsReduced": 459
            },
            "clang_default": {
                "numUnchanged": 60,
                "numReduced": 416,
                "numLargerThanMBA": 24,
                "numSmallerThanGT": 3,
                "numFullySimplified": 1,
                "numDAGsSameAsMBA": 81,
                "numDAGsLargerThanMBA": 76,
                "numDAGsSmallerThanGT": 3,
                "numDagsReduced": 343
            },
            "msvc_default": {
                "numUnchanged": 38,
                "numReduced": 441,
                "numLargerThanMBA": 21,
                "numSmallerThanGT": 11,
                "numFullySimplified": 3,
                "numDAGsSameAsMBA": 60,
                "numDAGsLargerThanMBA": 52,
                "numDAGsSmallerThanGT": 14,
                "numDagsReduced": 388
            },
            "gcc_O3": {
                "numUnchanged": 1,
                "numReduced": 497,
                "numLargerThanMBA": 2,
                "numSmallerThanGT": 73,
                "numFullySimplified": 10,
                "numDAGsSameAsMBA": 17,
                "numDAGsLargerThanMBA": 65,
                "numDAGsSmallerThanGT": 74,
                "numDagsReduced": 418
            }
        },
        "avgDecreaseByOps": {
            "gcc_default_avgPercentDecreaseByOps": 59.19435585752553,
            "msvc_O1_avgPercentDecreaseByOps": 45.89442867837332,
            "clang_O3_avgPercentDecreaseByOps": 65.11681195094425,
            "clang_default_avgPercentDecreaseByOps": 13.058892835886997,
            "msvc_default_avgPercentDecreaseByOps": 26.285742519634663,
            "gcc_O3_avgPercentDecreaseByOps": 62.61402524048273
        },
        "avgOpPercentage": {
            "mba_avgArithPercentage": 42.6819762041912,
            "mba_avgMulPercent": 4.120728309459035,
            "mba_avgBitwisePercent": 53.19729548634981,
            "gt_avgArithPercentage": 38.55626984126986,
            "gt_avgMulPercent": 12.138571428571439,
            "gt_avgBitwisePercent": 49.30515873015874,
            "gcc_default_avgArithPercentage": 37.19349658857812,
            "gcc_default_avgMulPercent": 13.1393542955075,
            "gcc_default_avgBitwisePercent": 46.26714911591437,
            "msvc_O1_avgArithPercentage": 36.44192493510006,
            "msvc_O1_avgMulPercent": 13.500460070166838,
            "msvc_O1_avgBitwisePercent": 47.45761499473305,
            "clang_O3_avgArithPercentage": 33.56922929146339,
            "clang_O3_avgMulPercent": 14.716407729423741,
            "clang_O3_avgBitwisePercent": 47.914362979112845,
            "clang_default_avgArithPercentage": 39.90134108413424,
            "clang_default_avgMulPercent": 8.002330825609729,
            "clang_default_avgBitwisePercent": 51.89632809025605,
            "msvc_default_avgArithPercentage": 42.23667469325765,
            "msvc_default_avgMulPercent": 8.349122860347645,
            "msvc_default_avgBitwisePercent": 48.41420244639472,
            "gcc_O3_avgArithPercentage": 37.343757287624996,
            "gcc_O3_avgMulPercent": 13.893436747078345,
            "gcc_O3_avgBitwisePercent": 45.36280596529658
        },
        "avgPercentDAGsCancel": {
            "mba_percentCancels": 15.670919146113532,
            "gt_percentCancels": 16.411825396825414,
            "gcc_defaultpercentageDAGsCancel": 5.840089171359499,
            "msvc_O1percentageDAGsCancel": 5.450381453587911,
            "clang_O3percentageDAGsCancel": 4.422066633361124,
            "clang_defaultpercentageDAGsCancel": 9.762508610345774,
            "msvc_defaultpercentageDAGsCancel": 6.53700645488775,
            "gcc_O3percentageDAGsCancel": 4.989414187836498
        },
        "avgUniqueProportion": {
            "mba_avgProportionUnique": 34.633864809154566,
            "gcc_default_avgProportionUnique": 60.62415042219762,
            "msvc_O1_avgProportionUnique": 54.25722568284015,
            "clang_O3_avgProportionUnique": 65.7121701488237,
            "clang_default_avgProportionUnique": 37.27383210156027,
            "msvc_default_avgProportionUnique": 41.17915468606846,
            "gcc_O3_avgProportionUnique": 64.48428771509154
        },
        "condensed_compiled_op_types": {
            "overall_avg_arith": 35.78497050472948,
            "overall_avg_mul": 14.036768182222977,
            "overall_bitwise": 46.91159464638082
        }
    },
    "saveFilePath": "../../dataset/paper_dataset/qsynth.json"
}